<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/freeBSD_res/_cppstats/freebsd-src/cddl/contrib/opensolaris/lib/libdtrace/common/dt_inttab.h"><cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>ident</name> <cpp:literal>"%Z%%M% %I% %E% SMI"</cpp:literal></cpp:pragma>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dtrace.h&gt;</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<typedef>typedef <type><struct>struct <name>dt_inthash</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>dt_inthash</name></name> <modifier>*</modifier></type><name>inh_hash</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>dt_inthash</name></name> <modifier>*</modifier></type><name>inh_next</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>inh_value</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint_t</name></type> <name>inh_index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint_t</name></type> <name>inh_flags</name></decl>;</decl_stmt>
}</block></struct></type> <name>dt_inthash_t</name>;</typedef>
<typedef>typedef <type><struct>struct <name>dt_inttab</name> <block>{
<decl_stmt><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type><name>int_hdl</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dt_inthash_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>int_hash</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint_t</name></type> <name>int_hashlen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint_t</name></type> <name>int_nelems</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dt_inthash_t</name> <modifier>*</modifier></type><name>int_head</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dt_inthash_t</name> <modifier>*</modifier></type><name>int_tail</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint_t</name></type> <name>int_index</name></decl>;</decl_stmt>
}</block></struct></type> <name>dt_inttab_t</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_INT_PRIVATE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DT_INT_SHARED</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<function_decl><type><specifier>extern</specifier> <name>dt_inttab_t</name> <modifier>*</modifier></type><name>dt_inttab_create</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>dt_inttab_destroy</name><parameter_list>(<parameter><decl><type><name>dt_inttab_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dt_inttab_insert</name><parameter_list>(<parameter><decl><type><name>dt_inttab_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>uint_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>uint_t</name></type> <name>dt_inttab_size</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>dt_inttab_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>dt_inttab_write</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>dt_inttab_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
