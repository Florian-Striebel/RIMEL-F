<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/freeBSD_res/_cppstats/freebsd-src/cddl/contrib/opensolaris/lib/libdtrace/common/dt_program.h"><cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>ident</name> <cpp:literal>"%Z%%M% %I% %E% SMI"</cpp:literal></cpp:pragma>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dtrace.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dt_list.h&gt;</cpp:file></cpp:include>
<typedef>typedef <type><struct>struct <name>dt_stmt</name> <block>{
<decl_stmt><decl><type><name>dt_list_t</name></type> <name>ds_list</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dtrace_stmtdesc_t</name> <modifier>*</modifier></type><name>ds_desc</name></decl>;</decl_stmt>
}</block></struct></type> <name>dt_stmt_t</name>;</typedef>
<struct>struct <name>dtrace_prog</name> <block>{
<decl_stmt><decl><type><name>dt_list_t</name></type> <name>dp_list</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dt_list_t</name></type> <name>dp_stmts</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ulong_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>dp_xrefs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint_t</name></type> <name>dp_xrefslen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>dp_dofversion</name></decl>;</decl_stmt>
}</block>;</struct>
<function_decl><type><specifier>extern</specifier> <name>dtrace_prog_t</name> <modifier>*</modifier></type><name>dt_program_create</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>dt_program_destroy</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_prog_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>dtrace_ecbdesc_t</name> <modifier>*</modifier></type><name>dt_ecbdesc_create</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>dtrace_probedesc_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>dt_ecbdesc_release</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_ecbdesc_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
