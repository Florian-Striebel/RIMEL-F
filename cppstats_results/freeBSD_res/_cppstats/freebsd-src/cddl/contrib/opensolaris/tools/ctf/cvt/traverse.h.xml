<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/freeBSD_res/_cppstats/freebsd-src/cddl/contrib/opensolaris/tools/ctf/cvt/traverse.h"><cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>ident</name> <cpp:literal>"%Z%%M% %I% %E% SMI"</cpp:literal></cpp:pragma>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ctftools.h"</cpp:file></cpp:include>
<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>tdtrav_cb_f</name>)<parameter_list>(<parameter><decl><type><name>tdesc_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>tdesc_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <type><struct>struct <name>tdtrav_data</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>vgen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>tdtrav_cb_f</name> <modifier>*</modifier></type><name>firstops</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>tdtrav_cb_f</name> <modifier>*</modifier></type><name>preops</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>tdtrav_cb_f</name> <modifier>*</modifier></type><name>postops</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>private</name></decl>;</decl_stmt>
}</block></struct></type> <name>tdtrav_data_t</name>;</typedef>
<function_decl><type><name>void</name></type> <name>tdtrav_init</name><parameter_list>(<parameter><decl><type><name>tdtrav_data_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>tdtrav_cb_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>tdtrav_cb_f</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>tdtrav_cb_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>tdtraverse</name><parameter_list>(<parameter><decl><type><name>tdesc_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>tdesc_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>tdtrav_data_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>iitraverse</name><parameter_list>(<parameter><decl><type><name>iidesc_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>tdtrav_cb_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>tdtrav_cb_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>tdtrav_cb_f</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>iitraverse_hash</name><parameter_list>(<parameter><decl><type><name>hash_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>tdtrav_cb_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>tdtrav_cb_f</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>tdtrav_cb_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>iitraverse_td</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>tdtrav_assert</name><parameter_list>(<parameter><decl><type><name>tdesc_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>tdesc_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
