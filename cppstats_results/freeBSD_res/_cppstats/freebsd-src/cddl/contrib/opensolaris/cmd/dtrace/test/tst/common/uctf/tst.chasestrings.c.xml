<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/freeBSD_res/_cppstats/freebsd-src/cddl/contrib/opensolaris/cmd/dtrace/test/tst/common/uctf/tst.chasestrings.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unistd.h&gt;</cpp:file></cpp:include>
<typedef>typedef <type><struct>struct <name>zelda_info</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>zi_gamename</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>zi_ndungeons</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>zi_villain</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>zi_haszelda</name></decl>;</decl_stmt>
}</block></struct></type> <name>zelda_info_t</name>;</typedef>
<function><type><specifier>static</specifier> <name>int</name></type>
<name>has_princess</name><parameter_list>(<parameter><decl><type><name>zelda_info_t</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name><name>z</name><operator>-&gt;</operator><name>zi_haszelda</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>int</name></type>
<name>has_dungeons</name><parameter_list>(<parameter><decl><type><name>zelda_info_t</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name><name>z</name><operator>-&gt;</operator><name>zi_ndungeons</name></name> <operator>!=</operator> <literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>
<name>has_villain</name><parameter_list>(<parameter><decl><type><name>zelda_info_t</name> <modifier>*</modifier></type><name>z</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name><name>z</name><operator>-&gt;</operator><name>zi_villain</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></function>
<function><type><name>int</name></type>
<name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>zelda_info_t</name></type> <name>oot</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>zelda_info_t</name></type> <name>la</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>zelda_info_t</name></type> <name>lttp</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>oot</name><operator>.</operator><name>zi_gamename</name></name> <operator>=</operator> <literal type="string">"Ocarina of Time"</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>oot</name><operator>.</operator><name>zi_ndungeons</name></name> <operator>=</operator> <literal type="number">10</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>oot</name><operator>.</operator><name>zi_villain</name></name> <operator>=</operator> <literal type="string">"Ganondorf"</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>oot</name><operator>.</operator><name>zi_haszelda</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>la</name><operator>.</operator><name>zi_gamename</name></name> <operator>=</operator> <literal type="string">"Link's Awakening"</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>la</name><operator>.</operator><name>zi_ndungeons</name></name> <operator>=</operator> <literal type="number">9</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>la</name><operator>.</operator><name>zi_villain</name></name> <operator>=</operator> <literal type="string">"Nightmare"</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>la</name><operator>.</operator><name>zi_haszelda</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>lttp</name><operator>.</operator><name>zi_gamename</name></name> <operator>=</operator> <literal type="string">"A Link to the Past"</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>lttp</name><operator>.</operator><name>zi_ndungeons</name></name> <operator>=</operator> <literal type="number">12</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>lttp</name><operator>.</operator><name>zi_villain</name></name> <operator>=</operator> <literal type="string">"Ganon"</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>lttp</name><operator>.</operator><name>zi_haszelda</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<for>for <control>(<init>;</init><condition>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>has_princess</name><argument_list>(<argument><expr><operator>&amp;</operator><name>oot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>has_dungeons</name><argument_list>(<argument><expr><operator>&amp;</operator><name>la</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>has_villain</name><argument_list>(<argument><expr><operator>&amp;</operator><name>lttp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>sleep</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>
</unit>
