<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/freeBSD_res/_cppstats/freebsd-src/cddl/contrib/opensolaris/cmd/dtrace/test/tst/common/uctf/tst.printtype.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unistd.h&gt;</cpp:file></cpp:include>
<typedef>typedef <type><struct>struct <name>final_fantasy_info</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>ff_gameid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ff_partysize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>ff_hassummons</name></decl>;</decl_stmt>
}</block></struct></type> <name>final_fantasy_info_t</name>;</typedef>
<function><type><specifier>static</specifier> <name>int</name></type>
<name>ff_getgameid</name><parameter_list>(<parameter><decl><type><name>final_fantasy_info_t</name> <modifier>*</modifier><name>f</name></type> <name>__unused</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>int</name></type>
<name>ff_getpartysize</name><parameter_list>(<parameter><decl><type><name>final_fantasy_info_t</name> <modifier>*</modifier><name>f</name></type> <name>__unused</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>int</name></type>
<name>ff_getsummons</name><parameter_list>(<parameter><decl><type><name>final_fantasy_info_t</name> <modifier>*</modifier><name>f</name></type> <name>__unused</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>
<function><type><name>int</name></type>
<name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>final_fantasy_info_t</name></type> <name>ffiii</name></decl>, <decl><type ref="prev"/><name>ffx</name></decl>, <decl><type ref="prev"/><name>ffi</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>ffi</name><operator>.</operator><name>ff_gameid</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ffi</name><operator>.</operator><name>ff_partysize</name></name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ffi</name><operator>.</operator><name>ff_hassummons</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ffiii</name><operator>.</operator><name>ff_gameid</name></name> <operator>=</operator> <literal type="number">6</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ffiii</name><operator>.</operator><name>ff_partysize</name></name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ffiii</name><operator>.</operator><name>ff_hassummons</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ffx</name><operator>.</operator><name>ff_gameid</name></name> <operator>=</operator> <literal type="number">10</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ffx</name><operator>.</operator><name>ff_partysize</name></name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ffx</name><operator>.</operator><name>ff_hassummons</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<for>for <control>(<init>;</init><condition>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>ff_getgameid</name><argument_list>(<argument><expr><operator>&amp;</operator><name>ffi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_getpartysize</name><argument_list>(<argument><expr><operator>&amp;</operator><name>ffx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ff_getsummons</name><argument_list>(<argument><expr><operator>&amp;</operator><name>ffiii</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>sleep</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>
</unit>
