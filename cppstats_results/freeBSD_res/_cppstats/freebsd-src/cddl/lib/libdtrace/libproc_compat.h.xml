<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/freeBSD_res/_cppstats/freebsd-src/cddl/lib/libdtrace/libproc_compat.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PR_LMID_EVERY</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PGRAB_RDONLY</name></cpp:macro> <cpp:value>PATTACH_RDONLY</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PGRAB_FORCE</name></cpp:macro> <cpp:value>PATTACH_FORCE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Psetrun</name><parameter_list>(<parameter><type><name>p</name></type></parameter>, <parameter><type><name>a1</name></type></parameter>, <parameter><type><name>a2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>proc_continue((p))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Pxlookup_by_addr</name><parameter_list>(<parameter><type><name>p</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>n</name></type></parameter>, <parameter><type><name>s</name></type></parameter>, <parameter><type><name>sym</name></type></parameter>, <parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>proc_addr2sym(p, a, n, s, sym)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Pxlookup_by_name</name><parameter_list>(<parameter><type><name>p</name></type></parameter>, <parameter><type><name>l</name></type></parameter>, <parameter><type><name>s1</name></type></parameter>, <parameter><type><name>s2</name></type></parameter>, <parameter><type><name>sym</name></type></parameter>, <parameter><type><name>a</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>proc_name2sym(p, s1, s2, sym, a)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Paddr_to_map</name></cpp:macro> <cpp:value>proc_addr2map</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Pcreate_error</name></cpp:macro> <cpp:value>strerror</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Pdelbkpt</name></cpp:macro> <cpp:value>proc_bkptdel</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Pgrab_error</name></cpp:macro> <cpp:value>strerror</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Plmid</name><parameter_list>(<parameter><type><name>p</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>l</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(-1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Plmid_to_map</name><parameter_list>(<parameter><type><name>p</name></type></parameter>, <parameter><type><name>l</name></type></parameter>, <parameter><type><name>o</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>proc_name2map(p, o)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Plookup_by_addr</name></cpp:macro> <cpp:value>proc_addr2sym</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Pname_to_ctf</name><parameter_list>(<parameter><type><name>p</name></type></parameter>, <parameter><type><name>obj</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(ctf_file_t *)proc_name2ctf(p, obj)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Pname_to_map</name></cpp:macro> <cpp:value>proc_name2map</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Pobject_iter</name></cpp:macro> <cpp:value>proc_iter_objs</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Pobject_iter_resolved</name><parameter_list>(<parameter><type><name>p</name></type></parameter>, <parameter><type><name>f</name></type></parameter>, <parameter><type><name>arg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>proc_iter_objs(p, f, arg)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Pobjname</name></cpp:macro> <cpp:value>proc_objname</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Pread</name></cpp:macro> <cpp:value>proc_read</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Prd_agent</name></cpp:macro> <cpp:value>proc_rdagent</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Prelease</name></cpp:macro> <cpp:value>proc_detach</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Psetbkpt</name></cpp:macro> <cpp:value>proc_bkptset</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Psetflags</name></cpp:macro> <cpp:value>proc_setflags</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Pstate</name></cpp:macro> <cpp:value>proc_state</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Psymbol_iter_by_addr</name></cpp:macro> <cpp:value>proc_iter_symbyaddr</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Punsetflags</name></cpp:macro> <cpp:value>proc_clearflags</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Pupdate_maps</name></cpp:macro> <cpp:value>proc_rdagent</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Pupdate_syms</name></cpp:macro> <cpp:value>proc_updatesyms</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Pxecbkpt</name></cpp:macro> <cpp:value>proc_bkptexec</cpp:value></cpp:define>
</unit>
