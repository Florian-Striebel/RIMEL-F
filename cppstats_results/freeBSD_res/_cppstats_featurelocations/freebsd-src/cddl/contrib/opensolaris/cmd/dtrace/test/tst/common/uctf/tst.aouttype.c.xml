<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/cddl/contrib/opensolaris/cmd/dtrace/test/tst/common/uctf/tst.aouttype.c">



















<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;unistd.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><struct>struct <name>season_7_lisa_the_vegetarian</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>fr_salad</name></decl>;</decl_stmt>
}</block></struct></type> <name>season_7_lisa_the_vegetarian_t</name>;</typedef>

<function_decl><type><name>int</name></type> <name>sleeper</name><parameter_list>(<parameter><decl><type><name>season_7_lisa_the_vegetarian_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function><type><name>int</name></type>
<name>sleeper</name><parameter_list>(<parameter><decl><type><name>season_7_lisa_the_vegetarian_t</name> <modifier>*</modifier></type><name>lp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<for>for <control>(<init>;</init><condition>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>sleep</name><argument_list>(<argument><expr><name><name>lp</name><operator>-&gt;</operator><name>fr_salad</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type>
<name>main</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>season_7_lisa_the_vegetarian_t</name></type> <name>l</name></decl>;</decl_stmt>
<expr_stmt><expr><name><name>l</name><operator>.</operator><name>fr_salad</name></name> <operator>=</operator> <literal type="number">100</literal></expr>;</expr_stmt>

<expr_stmt><expr><call><name>sleeper</name><argument_list>(<argument><expr><operator>&amp;</operator><name>l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>
</unit>
