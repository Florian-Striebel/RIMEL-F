<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/cddl/contrib/opensolaris/lib/libdtrace/common/dtrace.h">






























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_DTRACE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_DTRACE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/dtrace.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdarg.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;gelf.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libproc.h&gt;</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>illumos</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;rtld_db.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>












<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_VERSION</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<struct_decl>struct <name>ps_prochandle</name>;</struct_decl>
<struct_decl>struct <name>dt_node</name>;</struct_decl>
<typedef>typedef <type><name><name>struct</name> <name>dtrace_hdl</name></name></type> <name>dtrace_hdl_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>dtrace_prog</name></name></type> <name>dtrace_prog_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>dtrace_vector</name></name></type> <name>dtrace_vector_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>dtrace_aggdata</name></name></type> <name>dtrace_aggdata_t</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_O_NODEV</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_O_NOSYS</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_O_LP64</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_O_ILP32</name></cpp:macro> <cpp:value>0x08</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_O_MASK</name></cpp:macro> <cpp:value>0x0f</cpp:value></cpp:define>

<function_decl><type><specifier>extern</specifier> <name>dtrace_hdl_t</name> <modifier>*</modifier></type><name>dtrace_open</name><parameter_list>(<parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>dtrace_hdl_t</name> <modifier>*</modifier></type><name>dtrace_vopen</name><parameter_list>(<parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>dtrace_vector_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_go</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_stop</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>dtrace_sleep</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>dtrace_close</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_errno</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dtrace_errmsg</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dtrace_faultstr</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dtrace_subrstr</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_setopt</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_getopt</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_optval_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>dtrace_update</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_ctlfd</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>










<typedef>typedef <type><struct>struct <name>dtrace_proginfo</name> <block>{
<decl_stmt><decl><type><name>dtrace_attribute_t</name></type> <name>dpi_descattr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dtrace_attribute_t</name></type> <name>dpi_stmtattr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint_t</name></type> <name>dpi_aggregates</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint_t</name></type> <name>dpi_recgens</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint_t</name></type> <name>dpi_matches</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint_t</name></type> <name>dpi_speculations</name></decl>;</decl_stmt>
}</block></struct></type> <name>dtrace_proginfo_t</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_C_DIFV</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_C_EMPTY</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_C_ZDEFS</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_C_EATTR</name></cpp:macro> <cpp:value>0x0008</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_C_CPP</name></cpp:macro> <cpp:value>0x0010</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_C_KNODEF</name></cpp:macro> <cpp:value>0x0020</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_C_UNODEF</name></cpp:macro> <cpp:value>0x0040</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_C_PSPEC</name></cpp:macro> <cpp:value>0x0080</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_C_ETAGS</name></cpp:macro> <cpp:value>0x0100</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_C_ARGREF</name></cpp:macro> <cpp:value>0x0200</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_C_DEFARG</name></cpp:macro> <cpp:value>0x0800</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_C_NOLIBS</name></cpp:macro> <cpp:value>0x1000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_C_CTL</name></cpp:macro> <cpp:value>0x2000</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_C_MASK</name></cpp:macro> <cpp:value>0x3bff</cpp:value></cpp:define>

<function_decl><type><specifier>extern</specifier> <name>dtrace_prog_t</name> <modifier>*</modifier></type><name>dtrace_program_strcompile</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_probespec_t</name></type></decl></parameter>, <parameter><decl><type><name>uint_t</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><specifier>const</specifier> []</type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>dtrace_prog_t</name> <modifier>*</modifier></type><name>dtrace_program_fcompile</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint_t</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><specifier>const</specifier> []</type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_program_exec</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_prog_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_proginfo_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>dtrace_program_info</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_prog_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_proginfo_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_D_STRIP</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_D_PROBES</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_D_MASK</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_program_link</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_prog_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>uint_t</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><specifier>const</specifier> []</type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_program_header</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name> <modifier>*</modifier></type><name>dtrace_dof_create</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_prog_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>dtrace_dof_destroy</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>void</name> <modifier>*</modifier></type><name>dtrace_getopt_dof</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name> <modifier>*</modifier></type><name>dtrace_geterr_dof</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct <name>dtrace_stmtdesc</name> <block>{
<decl_stmt><decl><type><name>dtrace_ecbdesc_t</name> <modifier>*</modifier></type><name>dtsd_ecbdesc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dtrace_actdesc_t</name> <modifier>*</modifier></type><name>dtsd_action</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dtrace_actdesc_t</name> <modifier>*</modifier></type><name>dtsd_action_last</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>dtsd_aggdata</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>dtsd_fmtdata</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>dtsd_strdata</name></decl>;</decl_stmt>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>dtsd_callback</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>dtsd_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dtrace_attribute_t</name></type> <name>dtsd_descattr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dtrace_attribute_t</name></type> <name>dtsd_stmtattr</name></decl>;</decl_stmt>
}</block></struct></type> <name>dtrace_stmtdesc_t</name>;</typedef>

<typedef>typedef <function_decl><type><name>int</name></type> <name>dtrace_stmt_f</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_prog_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_stmtdesc_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><specifier>extern</specifier> <name>dtrace_stmtdesc_t</name> <modifier>*</modifier></type><name>dtrace_stmt_create</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_ecbdesc_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>dtrace_actdesc_t</name> <modifier>*</modifier></type><name>dtrace_stmt_action</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_stmtdesc_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_stmt_add</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_prog_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_stmtdesc_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_stmt_iter</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_prog_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_stmt_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>dtrace_stmt_destroy</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_stmtdesc_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>




<typedef>typedef <type><enum>enum <block>{
<decl><name>DTRACEFLOW_ENTRY</name></decl>,
<decl><name>DTRACEFLOW_RETURN</name></decl>,
<decl><name>DTRACEFLOW_NONE</name></decl>
}</block></enum></type> <name>dtrace_flowkind_t</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_CONSUME_ERROR</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_CONSUME_THIS</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_CONSUME_NEXT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_CONSUME_ABORT</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>dtrace_probedata</name> <block>{
<decl_stmt><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type><name>dtpda_handle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dtrace_eprobedesc_t</name> <modifier>*</modifier></type><name>dtpda_edesc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dtrace_probedesc_t</name> <modifier>*</modifier></type><name>dtpda_pdesc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>processorid_t</name></type> <name>dtpda_cpu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>caddr_t</name></type> <name>dtpda_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dtrace_flowkind_t</name></type> <name>dtpda_flow</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dtpda_prefix</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dtpda_indent</name></decl>;</decl_stmt>
}</block></struct></type> <name>dtrace_probedata_t</name>;</typedef>

<typedef>typedef <function_decl><type><name>int</name></type> <name>dtrace_consume_probe_f</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>dtrace_probedata_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>int</name></type> <name>dtrace_consume_rec_f</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>dtrace_probedata_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>dtrace_recdesc_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_consume</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_consume_probe_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_consume_rec_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_STATUS_NONE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_STATUS_OKAY</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_STATUS_EXITED</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_STATUS_FILLED</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_STATUS_STOPPED</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_status</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><specifier>extern</specifier> <name>void</name> <modifier>*</modifier></type><name>dtrace_printf_create</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name> <modifier>*</modifier></type><name>dtrace_printa_create</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>size_t</name></type> <name>dtrace_printf_format</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_fprintf</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>dtrace_probedata_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>dtrace_recdesc_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint_t</name></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_fprinta</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>dtrace_probedata_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>dtrace_recdesc_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint_t</name></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_system</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>dtrace_probedata_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>dtrace_recdesc_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint_t</name></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_freopen</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>dtrace_probedata_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>dtrace_recdesc_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint_t</name></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_print</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>caddr_t</name></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>




<typedef>typedef <type><enum>enum <block>{
<decl><name>DTRACE_WORKSTATUS_ERROR</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>,
<decl><name>DTRACE_WORKSTATUS_OKAY</name></decl>,
<decl><name>DTRACE_WORKSTATUS_DONE</name></decl>
}</block></enum></type> <name>dtrace_workstatus_t</name>;</typedef>

<function_decl><type><specifier>extern</specifier> <name>dtrace_workstatus_t</name></type> <name>dtrace_work</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_consume_probe_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_consume_rec_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_HANDLE_ABORT</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_HANDLE_OK</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>dtrace_errdata</name> <block>{
<decl_stmt><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type><name>dteda_handle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dtrace_eprobedesc_t</name> <modifier>*</modifier></type><name>dteda_edesc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dtrace_probedesc_t</name> <modifier>*</modifier></type><name>dteda_pdesc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>processorid_t</name></type> <name>dteda_cpu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dteda_action</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dteda_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dteda_fault</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>dteda_addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dteda_msg</name></decl>;</decl_stmt>
}</block></struct></type> <name>dtrace_errdata_t</name>;</typedef>

<typedef>typedef <function_decl><type><name>int</name></type> <name>dtrace_handle_err_f</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>dtrace_errdata_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_handle_err</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_handle_err_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><enum>enum <block>{
<decl><name>DTRACEDROP_PRINCIPAL</name></decl>,
<decl><name>DTRACEDROP_AGGREGATION</name></decl>,
<decl><name>DTRACEDROP_DYNAMIC</name></decl>,
<decl><name>DTRACEDROP_DYNRINSE</name></decl>,
<decl><name>DTRACEDROP_DYNDIRTY</name></decl>,
<decl><name>DTRACEDROP_SPEC</name></decl>,
<decl><name>DTRACEDROP_SPECBUSY</name></decl>,
<decl><name>DTRACEDROP_SPECUNAVAIL</name></decl>,
<decl><name>DTRACEDROP_STKSTROVERFLOW</name></decl>,
<decl><name>DTRACEDROP_DBLERROR</name></decl>
}</block></enum></type> <name>dtrace_dropkind_t</name>;</typedef>

<typedef>typedef <type><struct>struct <name>dtrace_dropdata</name> <block>{
<decl_stmt><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type><name>dtdda_handle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>processorid_t</name></type> <name>dtdda_cpu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dtrace_dropkind_t</name></type> <name>dtdda_kind</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>dtdda_drops</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>dtdda_total</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dtdda_msg</name></decl>;</decl_stmt>
}</block></struct></type> <name>dtrace_dropdata_t</name>;</typedef>

<typedef>typedef <function_decl><type><name>int</name></type> <name>dtrace_handle_drop_f</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>dtrace_dropdata_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_handle_drop</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_handle_drop_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>void</name></type> <name>dtrace_handle_proc_f</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>ps_prochandle</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_handle_proc</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_handle_proc_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_BUFDATA_AGGKEY</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_BUFDATA_AGGVAL</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_BUFDATA_AGGFORMAT</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_BUFDATA_AGGLAST</name></cpp:macro> <cpp:value>0x0008</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>dtrace_bufdata</name> <block>{
<decl_stmt><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type><name>dtbda_handle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dtbda_buffered</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dtrace_probedata_t</name> <modifier>*</modifier></type><name>dtbda_probe</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>dtrace_recdesc_t</name> <modifier>*</modifier></type><name>dtbda_recdesc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>dtrace_aggdata_t</name> <modifier>*</modifier></type><name>dtbda_aggdata</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>dtbda_flags</name></decl>;</decl_stmt>
}</block></struct></type> <name>dtrace_bufdata_t</name>;</typedef>

<typedef>typedef <function_decl><type><name>int</name></type> <name>dtrace_handle_buffered_f</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>dtrace_bufdata_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_handle_buffered</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_handle_buffered_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct <name>dtrace_setoptdata</name> <block>{
<decl_stmt><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type><name>dtsda_handle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>dtrace_probedata_t</name> <modifier>*</modifier></type><name>dtsda_probe</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dtsda_option</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dtrace_optval_t</name></type> <name>dtsda_oldval</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dtrace_optval_t</name></type> <name>dtsda_newval</name></decl>;</decl_stmt>
}</block></struct></type> <name>dtrace_setoptdata_t</name>;</typedef>

<typedef>typedef <function_decl><type><name>int</name></type> <name>dtrace_handle_setopt_f</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>dtrace_setoptdata_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_handle_setopt</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_handle_setopt_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_A_PERCPU</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_A_KEEPDELTA</name></cpp:macro> <cpp:value>0x0002</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_A_ANONYMOUS</name></cpp:macro> <cpp:value>0x0004</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_A_TOTAL</name></cpp:macro> <cpp:value>0x0008</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_A_MINMAXBIN</name></cpp:macro> <cpp:value>0x0010</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_A_HASNEGATIVES</name></cpp:macro> <cpp:value>0x0020</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_A_HASPOSITIVES</name></cpp:macro> <cpp:value>0x0040</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_AGGZOOM_MAX</name></cpp:macro> <cpp:value>0.95</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_AGGWALK_ERROR</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_AGGWALK_NEXT</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_AGGWALK_ABORT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_AGGWALK_CLEAR</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_AGGWALK_NORMALIZE</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_AGGWALK_DENORMALIZE</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_AGGWALK_REMOVE</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>

<struct>struct <name>dtrace_aggdata</name> <block>{
<decl_stmt><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type><name>dtada_handle</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dtrace_aggdesc_t</name> <modifier>*</modifier></type><name>dtada_desc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dtrace_eprobedesc_t</name> <modifier>*</modifier></type><name>dtada_edesc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dtrace_probedesc_t</name> <modifier>*</modifier></type><name>dtada_pdesc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>caddr_t</name></type> <name>dtada_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>dtada_normal</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>dtada_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>caddr_t</name></type> <name>dtada_delta</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>caddr_t</name> <modifier>*</modifier></type><name>dtada_percpu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>caddr_t</name> <modifier>*</modifier></type><name>dtada_percpu_delta</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>dtada_total</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>dtada_minbin</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>dtada_maxbin</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>dtada_flags</name></decl>;</decl_stmt>
}</block>;</struct>

<typedef>typedef <function_decl><type><name>int</name></type> <name>dtrace_aggregate_f</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>dtrace_aggdata_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>int</name></type> <name>dtrace_aggregate_walk_f</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_aggregate_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>int</name></type> <name>dtrace_aggregate_walk_joined_f</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>dtrace_aggdata_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int</name></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>dtrace_aggregate_clear</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_aggregate_snap</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_aggregate_print</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_aggregate_walk_f</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_aggregate_walk</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_aggregate_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_aggregate_walk_joined</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_aggvarid_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>dtrace_aggregate_walk_joined_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_aggregate_walk_sorted</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_aggregate_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_aggregate_walk_keysorted</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_aggregate_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_aggregate_walk_valsorted</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_aggregate_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_aggregate_walk_keyvarsorted</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_aggregate_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_aggregate_walk_valvarsorted</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_aggregate_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_aggregate_walk_keyrevsorted</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_aggregate_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_aggregate_walk_valrevsorted</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_aggregate_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_aggregate_walk_keyvarrevsorted</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_aggregate_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_aggregate_walk_valvarrevsorted</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_aggregate_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_AGD_PRINTED</name></cpp:macro> <cpp:value>0x1</cpp:value></cpp:define>









<function_decl><type><specifier>extern</specifier> <name><name>struct</name> <name>ps_prochandle</name></name> <modifier>*</modifier></type><name>dtrace_proc_create</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>proc_child_func</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name><name>struct</name> <name>ps_prochandle</name></name> <modifier>*</modifier></type><name>dtrace_proc_grab</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>pid_t</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>dtrace_proc_release</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>ps_prochandle</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>void</name></type> <name>dtrace_proc_continue</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>ps_prochandle</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>













<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_OBJ_EXEC</name></cpp:macro> <cpp:value>((const char *)0L)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_OBJ_RTLD</name></cpp:macro> <cpp:value>((const char *)1L)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_OBJ_CDEFS</name></cpp:macro> <cpp:value>((const char *)2L)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_OBJ_DDEFS</name></cpp:macro> <cpp:value>((const char *)3L)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_OBJ_EVERY</name></cpp:macro> <cpp:value>((const char *)-1L)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_OBJ_KMODS</name></cpp:macro> <cpp:value>((const char *)-2L)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_OBJ_UMODS</name></cpp:macro> <cpp:value>((const char *)-3L)</cpp:value></cpp:define>

<typedef>typedef <type><struct>struct <name>dtrace_objinfo</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dto_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dto_file</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dto_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint_t</name></type> <name>dto_flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GElf_Addr</name></type> <name>dto_text_va</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GElf_Xword</name></type> <name>dto_text_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GElf_Addr</name></type> <name>dto_data_va</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GElf_Xword</name></type> <name>dto_data_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GElf_Addr</name></type> <name>dto_bss_va</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GElf_Xword</name></type> <name>dto_bss_size</name></decl>;</decl_stmt>
}</block></struct></type> <name>dtrace_objinfo_t</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_OBJ_F_KERNEL</name></cpp:macro> <cpp:value>0x1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_OBJ_F_PRIMARY</name></cpp:macro> <cpp:value>0x2</cpp:value></cpp:define>

<typedef>typedef <function_decl><type><name>int</name></type> <name>dtrace_obj_f</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>dtrace_objinfo_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_object_iter</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_obj_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_object_info</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_objinfo_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct <name>dtrace_syminfo</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dts_object</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dts_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ulong_t</name></type> <name>dts_id</name></decl>;</decl_stmt>
}</block></struct></type> <name>dtrace_syminfo_t</name>;</typedef>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_lookup_by_name</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>GElf_Sym</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_syminfo_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_lookup_by_addr</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>GElf_Addr</name></type> <name>addr</name></decl></parameter>,
<parameter><decl><type><name>GElf_Sym</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_syminfo_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct <name>dtrace_typeinfo</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dtt_object</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ctf_file_t</name> <modifier>*</modifier></type><name>dtt_ctfp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ctf_id_t</name></type> <name>dtt_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint_t</name></type> <name>dtt_flags</name></decl>;</decl_stmt>
}</block></struct></type> <name>dtrace_typeinfo_t</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTT_FL_USER</name></cpp:macro> <cpp:value>0x1</cpp:value></cpp:define>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_lookup_by_type</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_typeinfo_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_symbol_type</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>GElf_Sym</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>dtrace_syminfo_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_typeinfo_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_type_strcompile</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_typeinfo_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_type_fcompile</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_typeinfo_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name><name>struct</name> <name>dt_node</name></name> <modifier>*</modifier></type><name>dt_compile_sugar</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>dt_node</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>









<typedef>typedef <type><struct>struct <name>dtrace_probeinfo</name> <block>{
<decl_stmt><decl><type><name>dtrace_attribute_t</name></type> <name>dtp_attr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>dtrace_attribute_t</name></type> <name>dtp_arga</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>dtrace_typeinfo_t</name> <modifier>*</modifier></type><name>dtp_argv</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dtp_argc</name></decl>;</decl_stmt>
}</block></struct></type> <name>dtrace_probeinfo_t</name>;</typedef>

<typedef>typedef <function_decl><type><name>int</name></type> <name>dtrace_probe_f</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>dtrace_probedesc_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_probe_iter</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>dtrace_probedesc_t</name> <modifier>*</modifier></type><name>pdp</name></decl></parameter>, <parameter><decl><type><name>dtrace_probe_f</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_probe_info</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>dtrace_probedesc_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_probeinfo_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>









<struct>struct <name>dtrace_vector</name> <block>{
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>illumos</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>dtv_ioctl</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>dtv_ioctl</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>u_long</name></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>dtv_lookup_by_addr</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>GElf_Addr</name></type></decl></parameter>, <parameter><decl><type><name>GElf_Sym</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>dtrace_syminfo_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>dtv_status</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>processorid_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>long</name></type> (<modifier>*</modifier><name>dtv_sysconf</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>









<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_addr2str</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_uaddr2str</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>pid_t</name></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_xstr2desc</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_probespec_t</name></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><specifier>const</specifier> []</type></decl></parameter>, <parameter><decl><type><name>dtrace_probedesc_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_str2desc</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_probespec_t</name></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_probedesc_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_id2desc</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_id_t</name></type></decl></parameter>, <parameter><decl><type><name>dtrace_probedesc_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_DESC2STR_MAX</name></cpp:macro> <cpp:value>1024</cpp:value></cpp:define>

<function_decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>dtrace_desc2str</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>dtrace_probedesc_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DTRACE_ATTR2STR_MAX</name></cpp:macro> <cpp:value>64</cpp:value></cpp:define>

<function_decl><type><specifier>extern</specifier> <name>char</name> <modifier>*</modifier></type><name>dtrace_attr2str</name><parameter_list>(<parameter><decl><type><name>dtrace_attribute_t</name></type></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_str2attr</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>dtrace_attribute_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dtrace_stability_name</name><parameter_list>(<parameter><decl><type><name>dtrace_stability_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dtrace_class_name</name><parameter_list>(<parameter><decl><type><name>dtrace_class_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>extern</specifier> <name>int</name></type> <name>dtrace_provider_modules</name><parameter_list>(<parameter><decl><type><name>dtrace_hdl_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name>_dtrace_version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>_dtrace_debug</name></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>illumos</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_SC_CPUID_MAX</name></cpp:macro> <cpp:value>_SC_NPROCESSORS_CONF</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_SC_NPROCESSORS_MAX</name></cpp:macro> <cpp:value>_SC_NPROCESSORS_CONF</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
