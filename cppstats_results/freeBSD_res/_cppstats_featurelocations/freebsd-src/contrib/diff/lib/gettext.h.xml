<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/diff/lib/gettext.h">
















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_LIBGETTEXT_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_LIBGETTEXT_H</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>ENABLE_NLS</name></expr></cpp:if>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libintl.h&gt;</cpp:file></cpp:include>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>







<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__sun</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;locale.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>gettext</name><parameter_list>(<parameter><type><name>Msgid</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((const char *) (Msgid))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>dgettext</name><parameter_list>(<parameter><type><name>Domainname</name></type></parameter>, <parameter><type><name>Msgid</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((const char *) (Msgid))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>dcgettext</name><parameter_list>(<parameter><type><name>Domainname</name></type></parameter>, <parameter><type><name>Msgid</name></type></parameter>, <parameter><type><name>Category</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((const char *) (Msgid))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ngettext</name><parameter_list>(<parameter><type><name>Msgid1</name></type></parameter>, <parameter><type><name>Msgid2</name></type></parameter>, <parameter><type><name>N</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((N) == 1 ? (const char *) (Msgid1) : (const char *) (Msgid2))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>dngettext</name><parameter_list>(<parameter><type><name>Domainname</name></type></parameter>, <parameter><type><name>Msgid1</name></type></parameter>, <parameter><type><name>Msgid2</name></type></parameter>, <parameter><type><name>N</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((N) == 1 ? (const char *) (Msgid1) : (const char *) (Msgid2))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>dcngettext</name><parameter_list>(<parameter><type><name>Domainname</name></type></parameter>, <parameter><type><name>Msgid1</name></type></parameter>, <parameter><type><name>Msgid2</name></type></parameter>, <parameter><type><name>N</name></type></parameter>, <parameter><type><name>Category</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((N) == 1 ? (const char *) (Msgid1) : (const char *) (Msgid2))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>textdomain</name><parameter_list>(<parameter><type><name>Domainname</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((const char *) (Domainname))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bindtextdomain</name><parameter_list>(<parameter><type><name>Domainname</name></type></parameter>, <parameter><type><name>Dirname</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((const char *) (Dirname))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bind_textdomain_codeset</name><parameter_list>(<parameter><type><name>Domainname</name></type></parameter>, <parameter><type><name>Codeset</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((const char *) (Codeset))</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>gettext_noop</name><parameter_list>(<parameter><type><name>String</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>String</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
