<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/diff/lib/xstrtol.h">


















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>XSTRTOL_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>XSTRTOL_H_</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"exitfail.h"</cpp:file></cpp:include>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_INTTYPES_H</name></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;inttypes.h&gt;</cpp:file></cpp:include>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_STDINT_H</name></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_STRTOL_ERROR</name></expr></argument>)</argument_list></call></expr></cpp:if>
<enum>enum <name>strtol_error</name>
<block>{
<decl><name>LONGINT_OK</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,



<decl><name>LONGINT_OVERFLOW</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>LONGINT_INVALID_SUFFIX_CHAR</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW</name> <init>= <expr><operator>(</operator><name>LONGINT_INVALID_SUFFIX_CHAR</name>
<operator>|</operator> <name>LONGINT_OVERFLOW</name><operator>)</operator></expr></init></decl>,
<decl><name>LONGINT_INVALID</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>
}</block>;</enum>
<typedef>typedef <type><name><name>enum</name> <name>strtol_error</name></name></type> <name>strtol_error</name>;</typedef>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_DECLARE_XSTRTOL</name><parameter_list>(<parameter><type><name>name</name></type></parameter>, <parameter><type><name>type</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>strtol_error name (const char *, char **, int, type *, const char *);</cpp:value></cpp:define>

<macro><name>_DECLARE_XSTRTOL</name> <argument_list>(<argument>xstrtol</argument>, <argument>long int</argument>)</argument_list></macro>
<macro><name>_DECLARE_XSTRTOL</name> <argument_list>(<argument>xstrtoul</argument>, <argument>unsigned long int</argument>)</argument_list></macro>
<macro><name>_DECLARE_XSTRTOL</name> <argument_list>(<argument>xstrtoimax</argument>, <argument>intmax_t</argument>)</argument_list></macro>
<macro><name>_DECLARE_XSTRTOL</name> <argument_list>(<argument>xstrtoumax</argument>, <argument>uintmax_t</argument>)</argument_list></macro>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_STRTOL_ERROR</name><parameter_list>(<parameter><type><name>Exit_code</name></type></parameter>, <parameter><type><name>Str</name></type></parameter>, <parameter><type><name>Argument_type_string</name></type></parameter>, <parameter><type><name>Err</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { switch ((Err)) { default: abort (); case LONGINT_INVALID: error ((Exit_code), 0, "invalid %s `%s'", (Argument_type_string), (Str)); break; case LONGINT_INVALID_SUFFIX_CHAR: case LONGINT_INVALID_SUFFIX_CHAR | LONGINT_OVERFLOW: error ((Exit_code), 0, "invalid character following %s in `%s'", (Argument_type_string), (Str)); break; case LONGINT_OVERFLOW: error ((Exit_code), 0, "%s `%s' too large", (Argument_type_string), (Str)); break; } } while (0)</cpp:value></cpp:define>


























<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRTOL_FATAL_ERROR</name><parameter_list>(<parameter><type><name>Str</name></type></parameter>, <parameter><type><name>Argument_type_string</name></type></parameter>, <parameter><type><name>Err</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_STRTOL_ERROR (exit_failure, Str, Argument_type_string, Err)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRTOL_FAIL_WARN</name><parameter_list>(<parameter><type><name>Str</name></type></parameter>, <parameter><type><name>Argument_type_string</name></type></parameter>, <parameter><type><name>Err</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_STRTOL_ERROR (0, Str, Argument_type_string, Err)</cpp:value></cpp:define>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
