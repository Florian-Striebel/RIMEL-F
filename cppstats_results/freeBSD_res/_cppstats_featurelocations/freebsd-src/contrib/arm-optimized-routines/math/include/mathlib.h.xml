<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/arm-optimized-routines/math/include/mathlib.h">






<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_MATHLIB_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_MATHLIB_H</name></cpp:macro></cpp:define>

<function_decl><type><name>float</name></type> <name>expf</name> <parameter_list>(<parameter><decl><type><name>float</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>float</name></type> <name>exp2f</name> <parameter_list>(<parameter><decl><type><name>float</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>float</name></type> <name>logf</name> <parameter_list>(<parameter><decl><type><name>float</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>float</name></type> <name>log2f</name> <parameter_list>(<parameter><decl><type><name>float</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>float</name></type> <name>powf</name> <parameter_list>(<parameter><decl><type><name>float</name></type></decl></parameter>, <parameter><decl><type><name>float</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>float</name></type> <name>sinf</name> <parameter_list>(<parameter><decl><type><name>float</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>float</name></type> <name>cosf</name> <parameter_list>(<parameter><decl><type><name>float</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>sincosf</name> <parameter_list>(<parameter><decl><type><name>float</name></type></decl></parameter>, <parameter><decl><type><name>float</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>float</name><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>double</name></type> <name>exp</name> <parameter_list>(<parameter><decl><type><name>double</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>double</name></type> <name>exp2</name> <parameter_list>(<parameter><decl><type><name>double</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>double</name></type> <name>log</name> <parameter_list>(<parameter><decl><type><name>double</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>double</name></type> <name>log2</name> <parameter_list>(<parameter><decl><type><name>double</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>double</name></type> <name>pow</name> <parameter_list>(<parameter><decl><type><name>double</name></type></decl></parameter>, <parameter><decl><type><name>double</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>float</name></type> <name>__s_sinf</name> <parameter_list>(<parameter><decl><type><name>float</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>float</name></type> <name>__s_cosf</name> <parameter_list>(<parameter><decl><type><name>float</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>float</name></type> <name>__s_expf</name> <parameter_list>(<parameter><decl><type><name>float</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>float</name></type> <name>__s_expf_1u</name> <parameter_list>(<parameter><decl><type><name>float</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>float</name></type> <name>__s_exp2f</name> <parameter_list>(<parameter><decl><type><name>float</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>float</name></type> <name>__s_exp2f_1u</name> <parameter_list>(<parameter><decl><type><name>float</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>float</name></type> <name>__s_logf</name> <parameter_list>(<parameter><decl><type><name>float</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>float</name></type> <name>__s_powf</name> <parameter_list>(<parameter><decl><type><name>float</name></type></decl></parameter>, <parameter><decl><type><name>float</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>double</name></type> <name>__s_sin</name> <parameter_list>(<parameter><decl><type><name>double</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>double</name></type> <name>__s_cos</name> <parameter_list>(<parameter><decl><type><name>double</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>double</name></type> <name>__s_exp</name> <parameter_list>(<parameter><decl><type><name>double</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>double</name></type> <name>__s_log</name> <parameter_list>(<parameter><decl><type><name>double</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>double</name></type> <name>__s_pow</name> <parameter_list>(<parameter><decl><type><name>double</name></type></decl></parameter>, <parameter><decl><type><name>double</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__aarch64__</name></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__GNUC__</name> <operator>&gt;=</operator> <literal type="number">5</literal></expr></cpp:if>
<typedef>typedef <type><name>__Float32x4_t</name></type> <name>__f32x4_t</name>;</typedef>
<typedef>typedef <type><name>__Float64x2_t</name></type> <name>__f64x2_t</name>;</typedef>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>__clang_major__</name><operator>*</operator><literal type="number">100</literal><operator>+</operator><name>__clang_minor__</name> <operator>&gt;=</operator> <literal type="number">305</literal></expr></cpp:elif>
<typedef>typedef <macro><name>__attribute__</name><argument_list>(<argument>(__neon_vector_type__(<literal type="number">4</literal>))</argument>)</argument_list></macro> <type><name>float</name></type> <name>__f32x4_t</name>;</typedef>
<typedef>typedef <macro><name>__attribute__</name><argument_list>(<argument>(__neon_vector_type__(<literal type="number">2</literal>))</argument>)</argument_list></macro> <type><name>double</name></type> <name>__f64x2_t</name>;</typedef>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:error>#<cpp:directive>error</cpp:directive> Unsupported compiler</cpp:error>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<function_decl><type><name>__f32x4_t</name></type> <name>__v_sinf</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__f32x4_t</name></type> <name>__v_cosf</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__f32x4_t</name></type> <name>__v_expf</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__f32x4_t</name></type> <name>__v_expf_1u</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__f32x4_t</name></type> <name>__v_exp2f</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__f32x4_t</name></type> <name>__v_exp2f_1u</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__f32x4_t</name></type> <name>__v_logf</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__f32x4_t</name></type> <name>__v_powf</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>, <parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__f64x2_t</name></type> <name>__v_sin</name> <parameter_list>(<parameter><decl><type><name>__f64x2_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__f64x2_t</name></type> <name>__v_cos</name> <parameter_list>(<parameter><decl><type><name>__f64x2_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__f64x2_t</name></type> <name>__v_exp</name> <parameter_list>(<parameter><decl><type><name>__f64x2_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__f64x2_t</name></type> <name>__v_log</name> <parameter_list>(<parameter><decl><type><name>__f64x2_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__f64x2_t</name></type> <name>__v_pow</name> <parameter_list>(<parameter><decl><type><name>__f64x2_t</name></type></decl></parameter>, <parameter><decl><type><name>__f64x2_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__GNUC__</name> <operator>&gt;=</operator> <literal type="number">9</literal> <operator>||</operator> <name>__clang_major__</name> <operator>&gt;=</operator> <literal type="number">8</literal></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__vpcs</name></cpp:macro> <cpp:value>__attribute__((__aarch64_vector_pcs__))</cpp:value></cpp:define>


<function_decl><type><name>__vpcs</name> <name>__f32x4_t</name></type> <name>__vn_sinf</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f32x4_t</name></type> <name>__vn_cosf</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f32x4_t</name></type> <name>__vn_expf</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f32x4_t</name></type> <name>__vn_expf_1u</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f32x4_t</name></type> <name>__vn_exp2f</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f32x4_t</name></type> <name>__vn_exp2f_1u</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f32x4_t</name></type> <name>__vn_logf</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f32x4_t</name></type> <name>__vn_powf</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>, <parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f64x2_t</name></type> <name>__vn_sin</name> <parameter_list>(<parameter><decl><type><name>__f64x2_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f64x2_t</name></type> <name>__vn_cos</name> <parameter_list>(<parameter><decl><type><name>__f64x2_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f64x2_t</name></type> <name>__vn_exp</name> <parameter_list>(<parameter><decl><type><name>__f64x2_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f64x2_t</name></type> <name>__vn_log</name> <parameter_list>(<parameter><decl><type><name>__f64x2_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f64x2_t</name></type> <name>__vn_pow</name> <parameter_list>(<parameter><decl><type><name>__f64x2_t</name></type></decl></parameter>, <parameter><decl><type><name>__f64x2_t</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>__vpcs</name> <name>__f32x4_t</name></type> <name>_ZGVnN4v_sinf</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f32x4_t</name></type> <name>_ZGVnN4v_cosf</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f32x4_t</name></type> <name>_ZGVnN4v_expf</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f32x4_t</name></type> <name>_ZGVnN4v_exp2f</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f32x4_t</name></type> <name>_ZGVnN4v_logf</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f32x4_t</name></type> <name>_ZGVnN4vv_powf</name> <parameter_list>(<parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>, <parameter><decl><type><name>__f32x4_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f64x2_t</name></type> <name>_ZGVnN2v_sin</name> <parameter_list>(<parameter><decl><type><name>__f64x2_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f64x2_t</name></type> <name>_ZGVnN2v_cos</name> <parameter_list>(<parameter><decl><type><name>__f64x2_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f64x2_t</name></type> <name>_ZGVnN2v_exp</name> <parameter_list>(<parameter><decl><type><name>__f64x2_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f64x2_t</name></type> <name>_ZGVnN2v_log</name> <parameter_list>(<parameter><decl><type><name>__f64x2_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>__vpcs</name> <name>__f64x2_t</name></type> <name>_ZGVnN2vv_pow</name> <parameter_list>(<parameter><decl><type><name>__f64x2_t</name></type></decl></parameter>, <parameter><decl><type><name>__f64x2_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
