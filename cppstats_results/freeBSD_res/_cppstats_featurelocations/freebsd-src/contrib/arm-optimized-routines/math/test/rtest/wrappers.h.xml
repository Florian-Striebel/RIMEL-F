<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/arm-optimized-routines/math/test/rtest/wrappers.h">






<typedef>typedef <type><struct>struct <block>{


<decl_stmt><decl><type><name>int</name></type> <name>nops</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>nresults</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mpfr_srcptr</name></type> <name><name>mpfr_ops</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mpfr_ptr</name></type> <name>mpfr_result</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mpc_srcptr</name></type> <name><name>mpc_ops</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mpc_ptr</name></type> <name>mpc_result</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uint32</name> <modifier>*</modifier></type><name><name>ieee_ops</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32</name> <modifier>*</modifier></type><name>ieee_result</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name><name>size_ops</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>size_result</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>need_regen</name></decl>;</decl_stmt>
}</block></struct></type> <name>wrapperctx</name>;</typedef>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>wrapperfunc</name>)<parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAXWRAPPERS</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>






















<function_decl><type><name>void</name></type> <name>wrapper_init</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>wrapper_op_real</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>mpfr_t</name></type> <name>r</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint32</name> <modifier>*</modifier></type><name>ieee</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>wrapper_op_complex</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>mpc_t</name></type> <name>c</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint32</name> <modifier>*</modifier></type><name>ieee</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>wrapper_result_real</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>mpfr_t</name></type> <name>r</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>ieee</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>void</name></type> <name>wrapper_result_complex</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>mpc_t</name></type> <name>c</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>ieee</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>wrapper_run</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>wrapperfunc</name></type> <name><name>wrappers</name><index>[<expr><name>MAXWRAPPERS</name></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>mpfr_srcptr</name></type> <name>wrapper_get_mpfr</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>uint32</name> <modifier>*</modifier></type><name>wrapper_get_ieee</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>op</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>mpc_srcptr</name></type> <name>wrapper_get_mpc</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>mpfr_srcptr</name></type> <name>wrapper_get_mpfr_r</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>mpfr_srcptr</name></type> <name>wrapper_get_mpfr_i</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>uint32</name> <modifier>*</modifier></type><name>wrapper_get_ieee_r</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>uint32</name> <modifier>*</modifier></type><name>wrapper_get_ieee_i</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>op</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>int</name></type> <name>wrapper_get_nops</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>wrapper_get_size</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>op</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>wrapper_is_complex</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>op</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>wrapper_set_sign</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>uint32</name></type> <name>sign</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>wrapper_set_sign_r</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>uint32</name></type> <name>sign</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>wrapper_set_sign_i</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>uint32</name></type> <name>sign</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>wrapper_set_nan</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>wrapper_set_nan_r</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>wrapper_set_nan_i</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>void</name></type> <name>wrapper_set_int</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>wrapper_set_int_r</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>wrapper_set_int_i</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>wrapper_set_mpfr</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>mpfr_t</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>wrapper_set_mpfr_r</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>mpfr_t</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>wrapper_set_mpfr_i</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>mpfr_t</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>universal_wrapper</name><parameter_list>(<parameter><decl><type><name>wrapperctx</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>
</unit>
