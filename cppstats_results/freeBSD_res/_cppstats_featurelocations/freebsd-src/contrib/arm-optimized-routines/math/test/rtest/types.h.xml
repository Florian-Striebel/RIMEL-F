<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/arm-optimized-routines/math/test/rtest/types.h">






<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>mathtest_types_h</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mathtest_types_h</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;limits.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>UINT_MAX</name> <operator>==</operator> <literal type="number">4294967295</literal></expr></cpp:if>
<typedef>typedef <type><name>unsigned</name> <name>int</name></type> <name>uint32</name>;</typedef>
<typedef>typedef <type><name>int</name></type> <name>int32</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>I32</name></cpp:macro> <cpp:value>""</cpp:value></cpp:define>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>ULONG_MAX</name> <operator>==</operator> <literal type="number">4294967295</literal></expr></cpp:elif>
<typedef>typedef <type><name>unsigned</name> <name>long</name></type> <name>uint32</name>;</typedef>
<typedef>typedef <type><name>long</name></type> <name>int32</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>I32</name></cpp:macro> <cpp:value>"l"</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:error>#<cpp:directive>error</cpp:directive> Could not find an unsigned 32-bit integer type</cpp:error>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
