<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/arm-optimized-routines/math/test/rtest/semi.h">






<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>test_semi_h</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>test_semi_h</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"types.h"</cpp:file></cpp:include>

<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_ceil</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_floor</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_fmod</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_ldexp</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_frexp</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>nout</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_modf</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>iout</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>fout</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_ceilf</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_floorf</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_fmodf</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_ldexpf</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_frexpf</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>nout</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_modff</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>iout</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>fout</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_copysign</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_copysignf</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_isfinite</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_isfinitef</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_isinf</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_isinff</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_isnan</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_isnanf</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_isnormal</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_isnormalf</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_signbit</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_signbitf</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_fpclassify</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_fpclassifyf</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_isgreater</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_isgreaterequal</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_isless</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_islessequal</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_islessgreater</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_isunordered</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_isgreaterf</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_isgreaterequalf</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_islessf</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_islessequalf</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_islessgreaterf</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>test_isunorderedf</name><parameter_list>(<parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><name>uint32</name> <modifier>*</modifier></type><name>out</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
