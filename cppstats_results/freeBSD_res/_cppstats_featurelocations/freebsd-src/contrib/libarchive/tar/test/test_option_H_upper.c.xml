<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/libarchive/tar/test/test_option_H_upper.c">























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"test.h"</cpp:file></cpp:include>
<expr_stmt><expr><call><name>__FBSDID</name><argument_list>(<argument><expr><literal type="string">"$FreeBSD$"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<macro><name>DEFINE_TEST</name><argument_list>(<argument>test_option_H_upper</argument>)</argument_list></macro>
<block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>canSymlink</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>skipping</name><argument_list>(<argument><expr><literal type="string">"Can't test symlinks on this filesystem"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return;</return>
</block_content>}</block></if></if_stmt>




<expr_stmt><expr><call><name>assertMakeDir</name><argument_list>(<argument><expr><literal type="string">"in"</literal></expr></argument>, <argument><expr><literal type="number">0755</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertChdir</name><argument_list>(<argument><expr><literal type="string">"in"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertMakeDir</name><argument_list>(<argument><expr><literal type="string">"d1"</literal></expr></argument>, <argument><expr><literal type="number">0755</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertMakeSymlink</name><argument_list>(<argument><expr><literal type="string">"ld1"</literal></expr></argument>, <argument><expr><literal type="string">"d1"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertMakeFile</name><argument_list>(<argument><expr><literal type="string">"d1/file1"</literal></expr></argument>, <argument><expr><literal type="number">0644</literal></expr></argument>, <argument><expr><literal type="string">"d1/file1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertMakeFile</name><argument_list>(<argument><expr><literal type="string">"d1/file2"</literal></expr></argument>, <argument><expr><literal type="number">0644</literal></expr></argument>, <argument><expr><literal type="string">"d1/file2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertMakeSymlink</name><argument_list>(<argument><expr><literal type="string">"d1/link1"</literal></expr></argument>, <argument><expr><literal type="string">"file1"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertMakeSymlink</name><argument_list>(<argument><expr><literal type="string">"d1/linkX"</literal></expr></argument>, <argument><expr><literal type="string">"fileX"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertMakeSymlink</name><argument_list>(<argument><expr><literal type="string">"link2"</literal></expr></argument>, <argument><expr><literal type="string">"d1/file2"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertMakeSymlink</name><argument_list>(<argument><expr><literal type="string">"linkY"</literal></expr></argument>, <argument><expr><literal type="string">"d1/fileY"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertChdir</name><argument_list>(<argument><expr><literal type="string">".."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>assertMakeDir</name><argument_list>(<argument><expr><literal type="string">"test1"</literal></expr></argument>, <argument><expr><literal type="number">0755</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertEqualInt</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,
<argument><expr><call><name>systemf</name><argument_list>(<argument><expr><literal type="string">"%s -cf test1/archive.tar -C in . &gt;test1/c.out 2&gt;test1/c.err"</literal></expr></argument>, <argument><expr><name>testprog</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertChdir</name><argument_list>(<argument><expr><literal type="string">"test1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertEqualInt</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,
<argument><expr><call><name>systemf</name><argument_list>(<argument><expr><literal type="string">"%s -xf archive.tar &gt;c.out 2&gt;c.err"</literal></expr></argument>, <argument><expr><name>testprog</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertIsSymlink</name><argument_list>(<argument><expr><literal type="string">"ld1"</literal></expr></argument>, <argument><expr><literal type="string">"d1"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertIsSymlink</name><argument_list>(<argument><expr><literal type="string">"d1/link1"</literal></expr></argument>, <argument><expr><literal type="string">"file1"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertIsSymlink</name><argument_list>(<argument><expr><literal type="string">"d1/linkX"</literal></expr></argument>, <argument><expr><literal type="string">"fileX"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertIsSymlink</name><argument_list>(<argument><expr><literal type="string">"link2"</literal></expr></argument>, <argument><expr><literal type="string">"d1/file2"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertIsSymlink</name><argument_list>(<argument><expr><literal type="string">"linkY"</literal></expr></argument>, <argument><expr><literal type="string">"d1/fileY"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertChdir</name><argument_list>(<argument><expr><literal type="string">".."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>assertMakeDir</name><argument_list>(<argument><expr><literal type="string">"test2"</literal></expr></argument>, <argument><expr><literal type="number">0755</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertEqualInt</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,
<argument><expr><call><name>systemf</name><argument_list>(<argument><expr><literal type="string">"%s -cf test2/archive.tar -H -C in . &gt;test2/c.out 2&gt;test2/c.err"</literal></expr></argument>, <argument><expr><name>testprog</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertChdir</name><argument_list>(<argument><expr><literal type="string">"test2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertEqualInt</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,
<argument><expr><call><name>systemf</name><argument_list>(<argument><expr><literal type="string">"%s -xf archive.tar &gt;c.out 2&gt;c.err"</literal></expr></argument>, <argument><expr><name>testprog</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertIsSymlink</name><argument_list>(<argument><expr><literal type="string">"ld1"</literal></expr></argument>, <argument><expr><literal type="string">"d1"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertIsSymlink</name><argument_list>(<argument><expr><literal type="string">"d1/link1"</literal></expr></argument>, <argument><expr><literal type="string">"file1"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertIsSymlink</name><argument_list>(<argument><expr><literal type="string">"d1/linkX"</literal></expr></argument>, <argument><expr><literal type="string">"fileX"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertIsSymlink</name><argument_list>(<argument><expr><literal type="string">"link2"</literal></expr></argument>, <argument><expr><literal type="string">"d1/file2"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertIsSymlink</name><argument_list>(<argument><expr><literal type="string">"linkY"</literal></expr></argument>, <argument><expr><literal type="string">"d1/fileY"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertChdir</name><argument_list>(<argument><expr><literal type="string">".."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>assertMakeDir</name><argument_list>(<argument><expr><literal type="string">"test3"</literal></expr></argument>, <argument><expr><literal type="number">0755</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertEqualInt</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,
<argument><expr><call><name>systemf</name><argument_list>(<argument><expr><literal type="string">"%s -cf test3/archive.tar -H -C in ld1 d1 link2 linkY &gt;test2/c.out 2&gt;test2/c.err"</literal></expr></argument>, <argument><expr><name>testprog</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertChdir</name><argument_list>(<argument><expr><literal type="string">"test3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertEqualInt</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,
<argument><expr><call><name>systemf</name><argument_list>(<argument><expr><literal type="string">"%s -xf archive.tar &gt;c.out 2&gt;c.err"</literal></expr></argument>, <argument><expr><name>testprog</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertIsDir</name><argument_list>(<argument><expr><literal type="string">"ld1"</literal></expr></argument>, <argument><expr><call><name>umasked</name><argument_list>(<argument><expr><literal type="number">0755</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertIsSymlink</name><argument_list>(<argument><expr><literal type="string">"d1/linkX"</literal></expr></argument>, <argument><expr><literal type="string">"fileX"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertIsSymlink</name><argument_list>(<argument><expr><literal type="string">"d1/link1"</literal></expr></argument>, <argument><expr><literal type="string">"file1"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertIsReg</name><argument_list>(<argument><expr><literal type="string">"link2"</literal></expr></argument>, <argument><expr><call><name>umasked</name><argument_list>(<argument><expr><literal type="number">0644</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertIsSymlink</name><argument_list>(<argument><expr><literal type="string">"linkY"</literal></expr></argument>, <argument><expr><literal type="string">"d1/fileY"</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertChdir</name><argument_list>(<argument><expr><literal type="string">".."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block>
</unit>
