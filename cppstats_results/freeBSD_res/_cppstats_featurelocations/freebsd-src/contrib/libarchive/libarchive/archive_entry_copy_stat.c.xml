<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/libarchive/libarchive/archive_entry_copy_stat.c">
























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"archive_platform.h"</cpp:file></cpp:include>
<expr_stmt><expr><call><name>__FBSDID</name><argument_list>(<argument><expr><literal type="string">"$FreeBSD$"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_SYS_STAT_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/stat.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"archive.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"archive_entry.h"</cpp:file></cpp:include>

<function><type><name>void</name></type>
<name>archive_entry_copy_stat</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>archive_entry</name></name> <modifier>*</modifier></type><name>entry</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>stat</name></name> <modifier>*</modifier></type><name>st</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC</name></expr></cpp:if>
<expr_stmt><expr><call><name>archive_entry_set_atime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_atime</name></name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_atimespec</name><operator>.</operator><name>tv_nsec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_ctime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_ctime</name></name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_ctimespec</name><operator>.</operator><name>tv_nsec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_mtime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_mtime</name></name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_mtimespec</name><operator>.</operator><name>tv_nsec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC</name></expr></cpp:elif>
<expr_stmt><expr><call><name>archive_entry_set_atime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_atime</name></name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_atim</name><operator>.</operator><name>tv_nsec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_ctime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_ctime</name></name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_ctim</name><operator>.</operator><name>tv_nsec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_mtime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_mtime</name></name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_mtim</name><operator>.</operator><name>tv_nsec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>HAVE_STRUCT_STAT_ST_MTIME_NSEC</name></expr></cpp:elif>
<expr_stmt><expr><call><name>archive_entry_set_atime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_atime</name></name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_atime_nsec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_ctime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_ctime</name></name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_ctime_nsec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_mtime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_mtime</name></name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_mtime_nsec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>HAVE_STRUCT_STAT_ST_MTIME_N</name></expr></cpp:elif>
<expr_stmt><expr><call><name>archive_entry_set_atime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_atime</name></name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_atime_n</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_ctime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_ctime</name></name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_ctime_n</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_mtime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_mtime</name></name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_mtime_n</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>HAVE_STRUCT_STAT_ST_UMTIME</name></expr></cpp:elif>
<expr_stmt><expr><call><name>archive_entry_set_atime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_atime</name></name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_uatime</name></name> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_ctime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_ctime</name></name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_uctime</name></name> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_mtime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_mtime</name></name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_umtime</name></name> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>HAVE_STRUCT_STAT_ST_MTIME_USEC</name></expr></cpp:elif>
<expr_stmt><expr><call><name>archive_entry_set_atime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_atime</name></name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_atime_usec</name></name> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_ctime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_ctime</name></name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_ctime_usec</name></name> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_mtime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_mtime</name></name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_mtime_usec</name></name> <operator>*</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr_stmt><expr><call><name>archive_entry_set_atime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_atime</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_ctime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_ctime</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_mtime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_mtime</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>HAVE_STRUCT_STAT_ST_BIRTHTIMESPEC_TV_NSEC</name></expr></cpp:if>
<expr_stmt><expr><call><name>archive_entry_set_birthtime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_birthtime</name></name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_birthtimespec</name><operator>.</operator><name>tv_nsec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><name>HAVE_STRUCT_STAT_ST_BIRTHTIME</name></expr></cpp:elif>
<expr_stmt><expr><call><name>archive_entry_set_birthtime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_birthtime</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr_stmt><expr><call><name>archive_entry_unset_birthtime</name><argument_list>(<argument><expr><name>entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr_stmt><expr><call><name>archive_entry_set_dev</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_gid</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_gid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_uid</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_uid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_ino</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_ino</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_nlink</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_nlink</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_rdev</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_rdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_size</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>archive_entry_set_mode</name><argument_list>(<argument><expr><name>entry</name></expr></argument>, <argument><expr><name><name>st</name><operator>-&gt;</operator><name>st_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
