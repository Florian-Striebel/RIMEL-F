<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/libarchive/libarchive/test/test_read_format_zip_mac_metadata.c">























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"test.h"</cpp:file></cpp:include>
<expr_stmt><expr><call><name>__FBSDID</name><argument_list>(<argument><expr><literal type="string">"$FreeBSD$"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





<macro><name>DEFINE_TEST</name><argument_list>(<argument>test_read_format_zip_mac_metadata</argument>)</argument_list></macro>
<block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>refname</name> <init>= <expr><literal type="string">"test_read_format_zip_mac_metadata.zip"</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>p</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>s</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>archive</name></name> <modifier>*</modifier></type><name>a</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>archive_entry</name></name> <modifier>*</modifier></type><name>ae</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name></type> <name><name>appledouble</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x05</literal></expr>, <expr><literal type="number">0x16</literal></expr>, <expr><literal type="number">0x07</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>,
<expr><literal type="number">0x4d</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x63</literal></expr>, <expr><literal type="number">0x20</literal></expr>, <expr><literal type="number">0x4f</literal></expr>, <expr><literal type="number">0x53</literal></expr>, <expr><literal type="number">0x20</literal></expr>, <expr><literal type="number">0x58</literal></expr>,
<expr><literal type="number">0x20</literal></expr>, <expr><literal type="number">0x20</literal></expr>, <expr><literal type="number">0x20</literal></expr>, <expr><literal type="number">0x20</literal></expr>, <expr><literal type="number">0x20</literal></expr>, <expr><literal type="number">0x20</literal></expr>, <expr><literal type="number">0x20</literal></expr>, <expr><literal type="number">0x20</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x09</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x32</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0xed</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x02</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x1f</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x54</literal></expr>, <expr><literal type="number">0x54</literal></expr>, <expr><literal type="number">0x52</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x01</literal></expr>, <expr><literal type="number">0x1f</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x98</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x87</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x01</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x98</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x87</literal></expr>,
<expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x13</literal></expr>, <expr><literal type="number">0x63</literal></expr>, <expr><literal type="number">0x6f</literal></expr>, <expr><literal type="number">0x6d</literal></expr>, <expr><literal type="number">0x2e</literal></expr>, <expr><literal type="number">0x61</literal></expr>,
<expr><literal type="number">0x70</literal></expr>, <expr><literal type="number">0x70</literal></expr>, <expr><literal type="number">0x6c</literal></expr>, <expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0x2e</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x63</literal></expr>, <expr><literal type="number">0x6c</literal></expr>,
<expr><literal type="number">0x2e</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0x78</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>, <expr><literal type="number">0x00</literal></expr>,
<expr><literal type="number">0x21</literal></expr>, <expr><literal type="number">0x23</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x63</literal></expr>, <expr><literal type="number">0x6c</literal></expr>, <expr><literal type="number">0x20</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0x0a</literal></expr>,
<expr><literal type="number">0x75</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0x72</literal></expr>, <expr><literal type="number">0x3a</literal></expr>, <expr><literal type="number">0x46</literal></expr>, <expr><literal type="number">0x46</literal></expr>, <expr><literal type="number">0x46</literal></expr>,
<expr><literal type="number">0x46</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0x44</literal></expr>,
<expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0x2d</literal></expr>,
<expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x41</literal></expr>,
<expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x43</literal></expr>,
<expr><literal type="number">0x39</literal></expr>, <expr><literal type="number">0x3a</literal></expr>, <expr><literal type="number">0x47</literal></expr>, <expr><literal type="number">0x75</literal></expr>, <expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0x73</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0x3a</literal></expr>,
<expr><literal type="number">0x32</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x31</literal></expr>, <expr><literal type="number">0x3a</literal></expr>, <expr><literal type="number">0x64</literal></expr>, <expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0x6e</literal></expr>, <expr><literal type="number">0x79</literal></expr>,
<expr><literal type="number">0x3a</literal></expr>, <expr><literal type="number">0x72</literal></expr>, <expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x64</literal></expr>, <expr><literal type="number">0x0a</literal></expr>, <expr><literal type="number">0x67</literal></expr>, <expr><literal type="number">0x72</literal></expr>,
<expr><literal type="number">0x6f</literal></expr>, <expr><literal type="number">0x75</literal></expr>, <expr><literal type="number">0x70</literal></expr>, <expr><literal type="number">0x3a</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0x44</literal></expr>,
<expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0x46</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0x45</literal></expr>,
<expr><literal type="number">0x46</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0x45</literal></expr>,
<expr><literal type="number">0x46</literal></expr>, <expr><literal type="number">0x41</literal></expr>, <expr><literal type="number">0x42</literal></expr>, <expr><literal type="number">0x2d</literal></expr>, <expr><literal type="number">0x43</literal></expr>, <expr><literal type="number">0x44</literal></expr>, <expr><literal type="number">0x45</literal></expr>, <expr><literal type="number">0x46</literal></expr>,
<expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x35</literal></expr>, <expr><literal type="number">0x30</literal></expr>,
<expr><literal type="number">0x3a</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x64</literal></expr>, <expr><literal type="number">0x6d</literal></expr>, <expr><literal type="number">0x69</literal></expr>, <expr><literal type="number">0x6e</literal></expr>, <expr><literal type="number">0x3a</literal></expr>, <expr><literal type="number">0x38</literal></expr>,
<expr><literal type="number">0x30</literal></expr>, <expr><literal type="number">0x3a</literal></expr>, <expr><literal type="number">0x61</literal></expr>, <expr><literal type="number">0x6c</literal></expr>, <expr><literal type="number">0x6c</literal></expr>, <expr><literal type="number">0x6f</literal></expr>, <expr><literal type="number">0x77</literal></expr>, <expr><literal type="number">0x3a</literal></expr>,
<expr><literal type="number">0x77</literal></expr>, <expr><literal type="number">0x72</literal></expr>, <expr><literal type="number">0x69</literal></expr>, <expr><literal type="number">0x74</literal></expr>, <expr><literal type="number">0x65</literal></expr>, <expr><literal type="number">0x0a</literal></expr>, <expr><literal type="number">0x00</literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><call><name>extract_reference_file</name><argument_list>(<argument><expr><name>refname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p</name> <operator>=</operator> <call><name>slurpfile</name><argument_list>(<argument><expr><operator>&amp;</operator><name>s</name></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><name>refname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><operator>(</operator><name>a</name> <operator>=</operator> <call><name>archive_read_new</name><argument_list>()</argument_list></call><operator>)</operator> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertEqualIntA</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>ARCHIVE_OK</name></expr></argument>, <argument><expr><call><name>archive_read_support_format_zip</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertEqualIntA</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>ARCHIVE_OK</name></expr></argument>, <argument><expr><call><name>archive_read_set_option</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><literal type="string">"zip"</literal></expr></argument>, <argument><expr><literal type="string">"mac-ext"</literal></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertEqualIntA</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>ARCHIVE_OK</name></expr></argument>, <argument><expr><call><name>read_open_memory_seek</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>p</name></expr></argument>, <argument><expr><name>s</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>archive_zlib_version</name><argument_list>()</argument_list></call> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>assertEqualIntA</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>ARCHIVE_OK</name></expr></argument>,
<argument><expr><call><name>archive_read_next_header</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ae</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>assertEqualIntA</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>ARCHIVE_WARN</name></expr></argument>,
<argument><expr><call><name>archive_read_next_header</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ae</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertEqualString</name><argument_list>(<argument><expr><call><name>archive_error_string</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><literal type="string">"Unsupported ZIP compression method (deflation)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>archive_errno</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><call><name>assertEqualInt</name><argument_list>(<argument><expr><call><name>archive_entry_is_encrypted</name><argument_list>(<argument><expr><name>ae</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertEqualIntA</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><call><name>archive_read_has_encrypted_entries</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertEqualString</name><argument_list>(<argument><expr><literal type="string">"file3"</literal></expr></argument>, <argument><expr><call><name>archive_entry_pathname</name><argument_list>(<argument><expr><name>ae</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertEqualInt</name><argument_list>(<argument><expr><name>AE_IFREG</name> <operator>|</operator> <literal type="number">0644</literal></expr></argument>, <argument><expr><call><name>archive_entry_mode</name><argument_list>(<argument><expr><name>ae</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>failure</name><argument_list>(<argument><expr><literal type="string">"Mac metadata should be set"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>archive_zlib_version</name><argument_list>()</argument_list></call> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>metadata</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>assert</name><argument_list>(<argument><expr><operator>(</operator><name>metadata</name> <operator>=</operator> <call><name>archive_entry_mac_metadata</name><argument_list>(<argument><expr><name>ae</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>s</name></expr></argument>)</argument_list></call><operator>)</operator>
<operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>assertEqualMem</name><argument_list>(<argument><expr><name>metadata</name></expr></argument>, <argument><expr><name>appledouble</name></expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>appledouble</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><call><name>archive_entry_mac_metadata</name><argument_list>(<argument><expr><name>ae</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>s</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><call><name>assertEqualIntA</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>ARCHIVE_EOF</name></expr></argument>, <argument><expr><call><name>archive_read_next_header</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>ae</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertEqualIntA</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>ARCHIVE_OK</name></expr></argument>, <argument><expr><call><name>archive_read_close</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assertEqualIntA</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>ARCHIVE_OK</name></expr></argument>, <argument><expr><call><name>archive_read_free</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>free</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block>
</unit>
