<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/libarchive/libarchive/archive_read_support_format_by_code.c">
























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"archive_platform.h"</cpp:file></cpp:include>
<expr_stmt><expr><call><name>__FBSDID</name><argument_list>(<argument><expr><literal type="string">"$FreeBSD$"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_ERRNO_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;errno.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"archive.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"archive_private.h"</cpp:file></cpp:include>

<function><type><name>int</name></type>
<name>archive_read_support_format_by_code</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>archive</name></name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>format_code</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>archive_check_magic</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>ARCHIVE_READ_MAGIC</name></expr></argument>,
<argument><expr><name>ARCHIVE_STATE_NEW</name></expr></argument>, <argument><expr><literal type="string">"archive_read_support_format_by_code"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<switch>switch <condition>(<expr><name>format_code</name> <operator>&amp;</operator> <name>ARCHIVE_FORMAT_BASE_MASK</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>ARCHIVE_FORMAT_7ZIP</name></expr>:</case>
<return>return <expr><call><name>archive_read_support_format_7zip</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</return>
<break>break;</break>
<case>case <expr><name>ARCHIVE_FORMAT_AR</name></expr>:</case>
<return>return <expr><call><name>archive_read_support_format_ar</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</return>
<break>break;</break>
<case>case <expr><name>ARCHIVE_FORMAT_CAB</name></expr>:</case>
<return>return <expr><call><name>archive_read_support_format_cab</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</return>
<break>break;</break>
<case>case <expr><name>ARCHIVE_FORMAT_CPIO</name></expr>:</case>
<return>return <expr><call><name>archive_read_support_format_cpio</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</return>
<break>break;</break>
<case>case <expr><name>ARCHIVE_FORMAT_EMPTY</name></expr>:</case>
<return>return <expr><call><name>archive_read_support_format_empty</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</return>
<break>break;</break>
<case>case <expr><name>ARCHIVE_FORMAT_ISO9660</name></expr>:</case>
<return>return <expr><call><name>archive_read_support_format_iso9660</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</return>
<break>break;</break>
<case>case <expr><name>ARCHIVE_FORMAT_LHA</name></expr>:</case>
<return>return <expr><call><name>archive_read_support_format_lha</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</return>
<break>break;</break>
<case>case <expr><name>ARCHIVE_FORMAT_MTREE</name></expr>:</case>
<return>return <expr><call><name>archive_read_support_format_mtree</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</return>
<break>break;</break>
<case>case <expr><name>ARCHIVE_FORMAT_RAR</name></expr>:</case>
<return>return <expr><call><name>archive_read_support_format_rar</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</return>
<break>break;</break>
<case>case <expr><name>ARCHIVE_FORMAT_RAR_V5</name></expr>:</case>
<return>return <expr><call><name>archive_read_support_format_rar5</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</return>
<break>break;</break>
<case>case <expr><name>ARCHIVE_FORMAT_RAW</name></expr>:</case>
<return>return <expr><call><name>archive_read_support_format_raw</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</return>
<break>break;</break>
<case>case <expr><name>ARCHIVE_FORMAT_TAR</name></expr>:</case>
<return>return <expr><call><name>archive_read_support_format_tar</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</return>
<break>break;</break>
<case>case <expr><name>ARCHIVE_FORMAT_WARC</name></expr>:</case>
<return>return <expr><call><name>archive_read_support_format_warc</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</return>
<break>break;</break>
<case>case <expr><name>ARCHIVE_FORMAT_XAR</name></expr>:</case>
<return>return <expr><call><name>archive_read_support_format_xar</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</return>
<break>break;</break>
<case>case <expr><name>ARCHIVE_FORMAT_ZIP</name></expr>:</case>
<return>return <expr><call><name>archive_read_support_format_zip</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</return>
<break>break;</break>
</block_content>}</block></switch>
<expr_stmt><expr><call><name>archive_set_error</name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name>ARCHIVE_ERRNO_PROGRAMMER</name></expr></argument>,
<argument><expr><literal type="string">"Invalid format code specified"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>(</operator><name>ARCHIVE_FATAL</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>
</unit>
