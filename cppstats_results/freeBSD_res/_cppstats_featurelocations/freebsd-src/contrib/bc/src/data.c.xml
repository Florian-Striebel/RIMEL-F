<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/bc/src/data.c">


































<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;opt.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;args.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;lex.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;parse.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;bc.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;dc.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;num.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;rand.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;program.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;history.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;library.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vm.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><name>BC_ENABLE_LIBRARY</name></expr></cpp:if>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLED</name></expr></cpp:if>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_sig_msg</name><index>[]</index></name> <init>= <expr><literal type="string">"\ninterrupt (type \"quit\" to exit)\n"</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uchar</name></type> <name>bc_sig_msg_len</name> <init>= <expr><operator>(</operator><name>uchar</name><operator>)</operator> <operator>(</operator><sizeof>sizeof<argument_list>(<argument><expr><name>bc_sig_msg</name></expr></argument>)</argument_list></sizeof> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>DC_ENABLED</name></expr></cpp:if>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>dc_sig_msg</name><index>[]</index></name> <init>= <expr><literal type="string">"\ninterrupt (type \"q\" to exit)\n"</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>uchar</name></type> <name>dc_sig_msg_len</name> <init>= <expr><operator>(</operator><name>uchar</name><operator>)</operator> <operator>(</operator><sizeof>sizeof<argument_list>(<argument><expr><name>dc_sig_msg</name></expr></argument>)</argument_list></sizeof> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_copyright</name><index>[]</index></name> <init>=
<expr><literal type="string">"Copyright (c) 2018-2021 Gavin D. Howard and contributors\n"</literal>
<literal type="string">"Report bugs at: https://git.yzena.com/gavin/bc\n\n"</literal>
<literal type="string">"This is free software with ABSOLUTELY NO WARRANTY.\n"</literal></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__OpenBSD__</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_HISTORY</name></expr></cpp:if>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_pledge_start</name><index>[]</index></name> <init>= <expr><literal type="string">"rpath stdio tty unveil"</literal></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_pledge_end_history</name><index>[]</index></name> <init>= <expr><literal type="string">"rpath stdio tty"</literal></expr></init></decl>;</decl_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_pledge_start</name><index>[]</index></name> <init>= <expr><literal type="string">"rpath stdio unveil"</literal></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_pledge_end</name><index>[]</index></name> <init>= <expr><literal type="string">"rpath stdio"</literal></expr></init></decl>;</decl_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_HISTORY</name></expr></cpp:if>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_pledge_start</name><index>[]</index></name> <init>= <expr><literal type="string">"rpath stdio tty"</literal></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_pledge_end_history</name><index>[]</index></name> <init>= <expr><literal type="string">"stdio tty"</literal></expr></init></decl>;</decl_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_pledge_start</name><index>[]</index></name> <init>= <expr><literal type="string">"rpath stdio"</literal></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_pledge_end</name><index>[]</index></name> <init>= <expr><literal type="string">"stdio"</literal></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_pledge_start</name><index>[]</index></name> <init>= <expr><literal type="string">""</literal></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_HISTORY</name></expr></cpp:if>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_pledge_end_history</name><index>[]</index></name> <init>= <expr><literal type="string">""</literal></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_pledge_end</name><index>[]</index></name> <init>= <expr><literal type="string">""</literal></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>



<decl_stmt><decl><type><specifier>const</specifier> <name>BcOptLong</name></type> <name><name>bc_args_lopt</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><literal type="string">"expression"</literal></expr>, <expr><name>BC_OPT_REQUIRED</name></expr>, <expr><literal type="char">'e'</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"file"</literal></expr>, <expr><name>BC_OPT_REQUIRED</name></expr>, <expr><literal type="char">'f'</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"help"</literal></expr>, <expr><name>BC_OPT_NONE</name></expr>, <expr><literal type="char">'h'</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"interactive"</literal></expr>, <expr><name>BC_OPT_NONE</name></expr>, <expr><literal type="char">'i'</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"leading-zeroes"</literal></expr>, <expr><name>BC_OPT_NONE</name></expr>, <expr><literal type="char">'z'</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"no-line-length"</literal></expr>, <expr><name>BC_OPT_NONE</name></expr>, <expr><literal type="char">'L'</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"no-prompt"</literal></expr>, <expr><name>BC_OPT_NONE</name></expr>, <expr><literal type="char">'P'</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"no-read-prompt"</literal></expr>, <expr><name>BC_OPT_NONE</name></expr>, <expr><literal type="char">'R'</literal></expr> }</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLED</name></expr></cpp:if>
<expr><block>{ <expr><literal type="string">"global-stacks"</literal></expr>, <expr><name>BC_OPT_BC_ONLY</name></expr>, <expr><literal type="char">'g'</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"mathlib"</literal></expr>, <expr><name>BC_OPT_BC_ONLY</name></expr>, <expr><literal type="char">'l'</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"quiet"</literal></expr>, <expr><name>BC_OPT_BC_ONLY</name></expr>, <expr><literal type="char">'q'</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"redefine"</literal></expr>, <expr><name>BC_OPT_REQUIRED_BC_ONLY</name></expr>, <expr><literal type="char">'r'</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"standard"</literal></expr>, <expr><name>BC_OPT_BC_ONLY</name></expr>, <expr><literal type="char">'s'</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"warn"</literal></expr>, <expr><name>BC_OPT_BC_ONLY</name></expr>, <expr><literal type="char">'w'</literal></expr> }</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{ <expr><literal type="string">"version"</literal></expr>, <expr><name>BC_OPT_NONE</name></expr>, <expr><literal type="char">'v'</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"version"</literal></expr>, <expr><name>BC_OPT_NONE</name></expr>, <expr><literal type="char">'V'</literal></expr> }</block></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>DC_ENABLED</name></expr></cpp:if>
<expr><block>{ <expr><literal type="string">"extended-register"</literal></expr>, <expr><name>BC_OPT_DC_ONLY</name></expr>, <expr><literal type="char">'x'</literal></expr> }</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><block>{ <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier> <specifier>const</specifier></type> <name>bc_err_func_header</name> <init>= <expr><literal type="string">"Function:"</literal></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier> <specifier>const</specifier></type> <name>bc_err_line</name> <init>= <expr><literal type="string">":%zu"</literal></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>bc_errs</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="string">"Math error:"</literal></expr>,
<expr><literal type="string">"Parse error:"</literal></expr>,
<expr><literal type="string">"Runtime error:"</literal></expr>,
<expr><literal type="string">"Fatal error:"</literal></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLED</name></expr></cpp:if>
<expr><literal type="string">"Warning:"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>uchar</name></type> <name><name>bc_err_ids</name><index>[]</index></name> <init>= <expr><block>{

<expr><name>BC_ERR_IDX_MATH</name></expr>, <expr><name>BC_ERR_IDX_MATH</name></expr>, <expr><name>BC_ERR_IDX_MATH</name></expr>, <expr><name>BC_ERR_IDX_MATH</name></expr>,

<expr><name>BC_ERR_IDX_FATAL</name></expr>, <expr><name>BC_ERR_IDX_FATAL</name></expr>, <expr><name>BC_ERR_IDX_FATAL</name></expr>, <expr><name>BC_ERR_IDX_FATAL</name></expr>,
<expr><name>BC_ERR_IDX_FATAL</name></expr>, <expr><name>BC_ERR_IDX_FATAL</name></expr>, <expr><name>BC_ERR_IDX_FATAL</name></expr>, <expr><name>BC_ERR_IDX_FATAL</name></expr>,
<expr><name>BC_ERR_IDX_FATAL</name></expr>,

<expr><name>BC_ERR_IDX_EXEC</name></expr>, <expr><name>BC_ERR_IDX_EXEC</name></expr>, <expr><name>BC_ERR_IDX_EXEC</name></expr>, <expr><name>BC_ERR_IDX_EXEC</name></expr>,
<expr><name>BC_ERR_IDX_EXEC</name></expr>, <expr><name>BC_ERR_IDX_EXEC</name></expr>, <expr><name>BC_ERR_IDX_EXEC</name></expr>, <expr><name>BC_ERR_IDX_EXEC</name></expr>,
<expr><name>BC_ERR_IDX_EXEC</name></expr>, <expr><name>BC_ERR_IDX_EXEC</name></expr>, <expr><name>BC_ERR_IDX_EXEC</name></expr>,

<expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>,
<expr><name>BC_ERR_IDX_PARSE</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLED</name></expr></cpp:if>
<expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>,
<expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>,
<expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>,

<expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>,
<expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>,
<expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>,
<expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>, <expr><name>BC_ERR_IDX_PARSE</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

}</block></expr></init></decl>;</decl_stmt>



<decl_stmt><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier> <specifier>const</specifier></type> <name><name>bc_err_msgs</name><index>[]</index></name> <init>= <expr><block>{

<expr><literal type="string">"negative number"</literal></expr>,
<expr><literal type="string">"non-integer number"</literal></expr>,
<expr><literal type="string">"overflow: number cannot fit"</literal></expr>,
<expr><literal type="string">"divide by 0"</literal></expr>,

<expr><literal type="string">"memory allocation failed"</literal></expr>,
<expr><literal type="string">"I/O error"</literal></expr>,
<expr><literal type="string">"cannot open file: %s"</literal></expr>,
<expr><literal type="string">"file is not text: %s"</literal></expr>,
<expr><literal type="string">"path is a directory: %s"</literal></expr>,
<expr><literal type="string">"bad command-line option: \"%s\""</literal></expr>,
<expr><literal type="string">"option requires an argument: '%c' (\"%s\")"</literal></expr>,
<expr><literal type="string">"option takes no arguments: '%c' (\"%s\")"</literal></expr>,
<expr><literal type="string">"bad option argument: \"%s\""</literal></expr>,

<expr><literal type="string">"bad ibase: must be [%lu, %lu]"</literal></expr>,
<expr><literal type="string">"bad obase: must be [%lu, %lu]"</literal></expr>,
<expr><literal type="string">"bad scale: must be [%lu, %lu]"</literal></expr>,
<expr><literal type="string">"bad read() expression"</literal></expr>,
<expr><literal type="string">"read() call inside of a read() call"</literal></expr>,
<expr><literal type="string">"variable or array element is the wrong type"</literal></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>DC_ENABLED</name></expr></cpp:if>
<expr><literal type="string">"stack has too few elements"</literal></expr>,
<expr><literal type="string">"stack for register \"%s\" has too few elements"</literal></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLED</name></expr></cpp:if>
<expr><literal type="string">"wrong number of parameters; need %zu, have %zu"</literal></expr>,
<expr><literal type="string">"undefined function: %s()"</literal></expr>,
<expr><literal type="string">"cannot use a void value in an expression"</literal></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>, <expr><name>NULL</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr><literal type="string">"end of file"</literal></expr>,
<expr><literal type="string">"bad character '%c'"</literal></expr>,
<expr><literal type="string">"string end cannot be found"</literal></expr>,
<expr><literal type="string">"comment end cannot be found"</literal></expr>,
<expr><literal type="string">"bad token"</literal></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLED</name></expr></cpp:if>
<expr><literal type="string">"bad expression"</literal></expr>,
<expr><literal type="string">"empty expression"</literal></expr>,
<expr><literal type="string">"bad print or stream statement"</literal></expr>,
<expr><literal type="string">"bad function definition"</literal></expr>,
<expr><operator>(</operator><literal type="string">"bad assignment: left side must be scale, ibase, "</literal>
<literal type="string">"obase, seed, last, var, or array element"</literal><operator>)</operator></expr>,
<expr><literal type="string">"no auto variable found"</literal></expr>,
<expr><literal type="string">"function parameter or auto \"%s%s\" already exists"</literal></expr>,
<expr><literal type="string">"block end cannot be found"</literal></expr>,
<expr><literal type="string">"cannot return a value from void function: %s()"</literal></expr>,
<expr><literal type="string">"var cannot be a reference: %s"</literal></expr>,

<expr><literal type="string">"POSIX does not allow names longer than 1 character: %s"</literal></expr>,
<expr><literal type="string">"POSIX does not allow '#' script comments"</literal></expr>,
<expr><literal type="string">"POSIX does not allow the following keyword: %s"</literal></expr>,
<expr><literal type="string">"POSIX does not allow a period ('.') as a shortcut for the last result"</literal></expr>,
<expr><literal type="string">"POSIX requires parentheses around return expressions"</literal></expr>,
<expr><literal type="string">"POSIX does not allow the following operator: %s"</literal></expr>,
<expr><literal type="string">"POSIX does not allow comparison operators outside if statements or loops"</literal></expr>,
<expr><literal type="string">"POSIX requires 0 or 1 comparison operators per condition"</literal></expr>,
<expr><literal type="string">"POSIX requires all 3 parts of a for loop to be non-empty"</literal></expr>,
<expr><literal type="string">"POSIX requires a newline between a semicolon and a function definition"</literal></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><literal type="string">"POSIX does not allow exponential notation"</literal></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr><name>NULL</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><literal type="string">"POSIX does not allow array references as function parameters"</literal></expr>,
<expr><literal type="string">"POSIX does not allow void functions"</literal></expr>,
<expr><literal type="string">"POSIX requires the left brace be on the same line as the function header"</literal></expr>,
<expr><literal type="string">"POSIX does not allow strings to be assigned to variables or arrays"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

}</block></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<decl_stmt><decl><type><specifier>const</specifier> <name>BcVecFree</name></type> <name><name>bc_vec_dtors</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>NULL</name></expr>,
<expr><name>bc_vec_free</name></expr>,
<expr><name>bc_num_free</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><name>BC_ENABLE_LIBRARY</name></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>NDEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr><name>bc_func_free</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>bc_slab_free</name></expr>,
<expr><name>bc_const_free</name></expr>,
<expr><name>bc_result_free</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_HISTORY</name></expr></cpp:if>
<expr><name>bc_history_string_free</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr><name>bcl_num_destruct</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><name>BC_ENABLE_LIBRARY</name></expr></cpp:if>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_HISTORY</name></expr></cpp:if>


<decl_stmt><decl><type><specifier>const</specifier> <name>BcFlushType</name></type> <name>bc_flush_none</name> <init>= <expr><name>BC_FLUSH_NO_EXTRAS_NO_CLEAR</name></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>BcFlushType</name></type> <name>bc_flush_err</name> <init>= <expr><name>BC_FLUSH_NO_EXTRAS_CLEAR</name></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>BcFlushType</name></type> <name>bc_flush_save</name> <init>= <expr><name>BC_FLUSH_SAVE_EXTRAS_CLEAR</name></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_HISTORY</name></expr></cpp:if>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>bc_history_bad_terms</name><index>[]</index></name> <init>= <expr><block>{ <expr><literal type="string">"dumb"</literal></expr>, <expr><literal type="string">"cons25"</literal></expr>, <expr><literal type="string">"emacs"</literal></expr>, <expr><name>NULL</name></expr> }</block></expr></init></decl>;</decl_stmt>



<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_history_tab</name><index>[]</index></name> <init>= <expr><literal type="string">" "</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>size_t</name></type> <name>bc_history_tab_len</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name>bc_history_tab</name></expr></argument>)</argument_list></sizeof> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name><name>bc_history_wchars</name><index>[]</index><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="number">0x1100</literal></expr>, <expr><literal type="number">0x115F</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x231A</literal></expr>, <expr><literal type="number">0x231B</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x2329</literal></expr>, <expr><literal type="number">0x232A</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x23E9</literal></expr>, <expr><literal type="number">0x23EC</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x23F0</literal></expr>, <expr><literal type="number">0x23F0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x23F3</literal></expr>, <expr><literal type="number">0x23F3</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x25FD</literal></expr>, <expr><literal type="number">0x25FE</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x2614</literal></expr>, <expr><literal type="number">0x2615</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x2648</literal></expr>, <expr><literal type="number">0x2653</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x267F</literal></expr>, <expr><literal type="number">0x267F</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x2693</literal></expr>, <expr><literal type="number">0x2693</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x26A1</literal></expr>, <expr><literal type="number">0x26A1</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x26AA</literal></expr>, <expr><literal type="number">0x26AB</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x26BD</literal></expr>, <expr><literal type="number">0x26BE</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x26C4</literal></expr>, <expr><literal type="number">0x26C5</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x26CE</literal></expr>, <expr><literal type="number">0x26CE</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x26D4</literal></expr>, <expr><literal type="number">0x26D4</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x26EA</literal></expr>, <expr><literal type="number">0x26EA</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x26F2</literal></expr>, <expr><literal type="number">0x26F3</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x26F5</literal></expr>, <expr><literal type="number">0x26F5</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x26FA</literal></expr>, <expr><literal type="number">0x26FA</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x26FD</literal></expr>, <expr><literal type="number">0x26FD</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x2705</literal></expr>, <expr><literal type="number">0x2705</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x270A</literal></expr>, <expr><literal type="number">0x270B</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x2728</literal></expr>, <expr><literal type="number">0x2728</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x274C</literal></expr>, <expr><literal type="number">0x274C</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x274E</literal></expr>, <expr><literal type="number">0x274E</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x2753</literal></expr>, <expr><literal type="number">0x2755</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x2757</literal></expr>, <expr><literal type="number">0x2757</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x2795</literal></expr>, <expr><literal type="number">0x2797</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x27B0</literal></expr>, <expr><literal type="number">0x27B0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x27BF</literal></expr>, <expr><literal type="number">0x27BF</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x2B1B</literal></expr>, <expr><literal type="number">0x2B1C</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x2B50</literal></expr>, <expr><literal type="number">0x2B50</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x2B55</literal></expr>, <expr><literal type="number">0x2B55</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x2E80</literal></expr>, <expr><literal type="number">0x2E99</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x2E9B</literal></expr>, <expr><literal type="number">0x2EF3</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x2F00</literal></expr>, <expr><literal type="number">0x2FD5</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x2FF0</literal></expr>, <expr><literal type="number">0x2FFB</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x3001</literal></expr>, <expr><literal type="number">0x303E</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x3041</literal></expr>, <expr><literal type="number">0x3096</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x3099</literal></expr>, <expr><literal type="number">0x30FF</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x3105</literal></expr>, <expr><literal type="number">0x312D</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x3131</literal></expr>, <expr><literal type="number">0x318E</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x3190</literal></expr>, <expr><literal type="number">0x31BA</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x31C0</literal></expr>, <expr><literal type="number">0x31E3</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x31F0</literal></expr>, <expr><literal type="number">0x321E</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x3220</literal></expr>, <expr><literal type="number">0x3247</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x3250</literal></expr>, <expr><literal type="number">0x32FE</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x3300</literal></expr>, <expr><literal type="number">0x4DBF</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x4E00</literal></expr>, <expr><literal type="number">0xA48C</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xA490</literal></expr>, <expr><literal type="number">0xA4C6</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xA960</literal></expr>, <expr><literal type="number">0xA97C</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xAC00</literal></expr>, <expr><literal type="number">0xD7A3</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xF900</literal></expr>, <expr><literal type="number">0xFAFF</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xFE10</literal></expr>, <expr><literal type="number">0xFE19</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xFE30</literal></expr>, <expr><literal type="number">0xFE52</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xFE54</literal></expr>, <expr><literal type="number">0xFE66</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0xFE68</literal></expr>, <expr><literal type="number">0xFE6B</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x16FE0</literal></expr>, <expr><literal type="number">0x16FE0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x17000</literal></expr>, <expr><literal type="number">0x187EC</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x18800</literal></expr>, <expr><literal type="number">0x18AF2</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1B000</literal></expr>, <expr><literal type="number">0x1B001</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F004</literal></expr>, <expr><literal type="number">0x1F004</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F0CF</literal></expr>, <expr><literal type="number">0x1F0CF</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F18E</literal></expr>, <expr><literal type="number">0x1F18E</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F191</literal></expr>, <expr><literal type="number">0x1F19A</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F200</literal></expr>, <expr><literal type="number">0x1F202</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F210</literal></expr>, <expr><literal type="number">0x1F23B</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F240</literal></expr>, <expr><literal type="number">0x1F248</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F250</literal></expr>, <expr><literal type="number">0x1F251</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F300</literal></expr>, <expr><literal type="number">0x1F320</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F32D</literal></expr>, <expr><literal type="number">0x1F335</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F337</literal></expr>, <expr><literal type="number">0x1F37C</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F37E</literal></expr>, <expr><literal type="number">0x1F393</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F3A0</literal></expr>, <expr><literal type="number">0x1F3CA</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F3CF</literal></expr>, <expr><literal type="number">0x1F3D3</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F3E0</literal></expr>, <expr><literal type="number">0x1F3F0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F3F4</literal></expr>, <expr><literal type="number">0x1F3F4</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F3F8</literal></expr>, <expr><literal type="number">0x1F43E</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F440</literal></expr>, <expr><literal type="number">0x1F440</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F442</literal></expr>, <expr><literal type="number">0x1F4FC</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F4FF</literal></expr>, <expr><literal type="number">0x1F53D</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F54B</literal></expr>, <expr><literal type="number">0x1F54E</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F550</literal></expr>, <expr><literal type="number">0x1F567</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F57A</literal></expr>, <expr><literal type="number">0x1F57A</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F595</literal></expr>, <expr><literal type="number">0x1F596</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F5A4</literal></expr>, <expr><literal type="number">0x1F5A4</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F5FB</literal></expr>, <expr><literal type="number">0x1F64F</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F680</literal></expr>, <expr><literal type="number">0x1F6C5</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F6CC</literal></expr>, <expr><literal type="number">0x1F6CC</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F6D0</literal></expr>, <expr><literal type="number">0x1F6D2</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F6EB</literal></expr>, <expr><literal type="number">0x1F6EC</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F6F4</literal></expr>, <expr><literal type="number">0x1F6F6</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F910</literal></expr>, <expr><literal type="number">0x1F91E</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F920</literal></expr>, <expr><literal type="number">0x1F927</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F930</literal></expr>, <expr><literal type="number">0x1F930</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F933</literal></expr>, <expr><literal type="number">0x1F93E</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F940</literal></expr>, <expr><literal type="number">0x1F94B</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F950</literal></expr>, <expr><literal type="number">0x1F95E</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F980</literal></expr>, <expr><literal type="number">0x1F991</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x1F9C0</literal></expr>, <expr><literal type="number">0x1F9C0</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x20000</literal></expr>, <expr><literal type="number">0x2FFFD</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="number">0x30000</literal></expr>, <expr><literal type="number">0x3FFFD</literal></expr> }</block></expr>,
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>size_t</name></type> <name>bc_history_wchars_len</name> <init>=
<expr><sizeof>sizeof<argument_list>(<argument><expr><name>bc_history_wchars</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>bc_history_wchars</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>



<decl_stmt><decl><type><specifier>const</specifier> <name>uint32_t</name></type> <name><name>bc_history_combo_chars</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="number">0x0300</literal></expr>,<expr><literal type="number">0x0301</literal></expr>,<expr><literal type="number">0x0302</literal></expr>,<expr><literal type="number">0x0303</literal></expr>,<expr><literal type="number">0x0304</literal></expr>,<expr><literal type="number">0x0305</literal></expr>,<expr><literal type="number">0x0306</literal></expr>,<expr><literal type="number">0x0307</literal></expr>,
<expr><literal type="number">0x0308</literal></expr>,<expr><literal type="number">0x0309</literal></expr>,<expr><literal type="number">0x030A</literal></expr>,<expr><literal type="number">0x030B</literal></expr>,<expr><literal type="number">0x030C</literal></expr>,<expr><literal type="number">0x030D</literal></expr>,<expr><literal type="number">0x030E</literal></expr>,<expr><literal type="number">0x030F</literal></expr>,
<expr><literal type="number">0x0310</literal></expr>,<expr><literal type="number">0x0311</literal></expr>,<expr><literal type="number">0x0312</literal></expr>,<expr><literal type="number">0x0313</literal></expr>,<expr><literal type="number">0x0314</literal></expr>,<expr><literal type="number">0x0315</literal></expr>,<expr><literal type="number">0x0316</literal></expr>,<expr><literal type="number">0x0317</literal></expr>,
<expr><literal type="number">0x0318</literal></expr>,<expr><literal type="number">0x0319</literal></expr>,<expr><literal type="number">0x031A</literal></expr>,<expr><literal type="number">0x031B</literal></expr>,<expr><literal type="number">0x031C</literal></expr>,<expr><literal type="number">0x031D</literal></expr>,<expr><literal type="number">0x031E</literal></expr>,<expr><literal type="number">0x031F</literal></expr>,
<expr><literal type="number">0x0320</literal></expr>,<expr><literal type="number">0x0321</literal></expr>,<expr><literal type="number">0x0322</literal></expr>,<expr><literal type="number">0x0323</literal></expr>,<expr><literal type="number">0x0324</literal></expr>,<expr><literal type="number">0x0325</literal></expr>,<expr><literal type="number">0x0326</literal></expr>,<expr><literal type="number">0x0327</literal></expr>,
<expr><literal type="number">0x0328</literal></expr>,<expr><literal type="number">0x0329</literal></expr>,<expr><literal type="number">0x032A</literal></expr>,<expr><literal type="number">0x032B</literal></expr>,<expr><literal type="number">0x032C</literal></expr>,<expr><literal type="number">0x032D</literal></expr>,<expr><literal type="number">0x032E</literal></expr>,<expr><literal type="number">0x032F</literal></expr>,
<expr><literal type="number">0x0330</literal></expr>,<expr><literal type="number">0x0331</literal></expr>,<expr><literal type="number">0x0332</literal></expr>,<expr><literal type="number">0x0333</literal></expr>,<expr><literal type="number">0x0334</literal></expr>,<expr><literal type="number">0x0335</literal></expr>,<expr><literal type="number">0x0336</literal></expr>,<expr><literal type="number">0x0337</literal></expr>,
<expr><literal type="number">0x0338</literal></expr>,<expr><literal type="number">0x0339</literal></expr>,<expr><literal type="number">0x033A</literal></expr>,<expr><literal type="number">0x033B</literal></expr>,<expr><literal type="number">0x033C</literal></expr>,<expr><literal type="number">0x033D</literal></expr>,<expr><literal type="number">0x033E</literal></expr>,<expr><literal type="number">0x033F</literal></expr>,
<expr><literal type="number">0x0340</literal></expr>,<expr><literal type="number">0x0341</literal></expr>,<expr><literal type="number">0x0342</literal></expr>,<expr><literal type="number">0x0343</literal></expr>,<expr><literal type="number">0x0344</literal></expr>,<expr><literal type="number">0x0345</literal></expr>,<expr><literal type="number">0x0346</literal></expr>,<expr><literal type="number">0x0347</literal></expr>,
<expr><literal type="number">0x0348</literal></expr>,<expr><literal type="number">0x0349</literal></expr>,<expr><literal type="number">0x034A</literal></expr>,<expr><literal type="number">0x034B</literal></expr>,<expr><literal type="number">0x034C</literal></expr>,<expr><literal type="number">0x034D</literal></expr>,<expr><literal type="number">0x034E</literal></expr>,<expr><literal type="number">0x034F</literal></expr>,
<expr><literal type="number">0x0350</literal></expr>,<expr><literal type="number">0x0351</literal></expr>,<expr><literal type="number">0x0352</literal></expr>,<expr><literal type="number">0x0353</literal></expr>,<expr><literal type="number">0x0354</literal></expr>,<expr><literal type="number">0x0355</literal></expr>,<expr><literal type="number">0x0356</literal></expr>,<expr><literal type="number">0x0357</literal></expr>,
<expr><literal type="number">0x0358</literal></expr>,<expr><literal type="number">0x0359</literal></expr>,<expr><literal type="number">0x035A</literal></expr>,<expr><literal type="number">0x035B</literal></expr>,<expr><literal type="number">0x035C</literal></expr>,<expr><literal type="number">0x035D</literal></expr>,<expr><literal type="number">0x035E</literal></expr>,<expr><literal type="number">0x035F</literal></expr>,
<expr><literal type="number">0x0360</literal></expr>,<expr><literal type="number">0x0361</literal></expr>,<expr><literal type="number">0x0362</literal></expr>,<expr><literal type="number">0x0363</literal></expr>,<expr><literal type="number">0x0364</literal></expr>,<expr><literal type="number">0x0365</literal></expr>,<expr><literal type="number">0x0366</literal></expr>,<expr><literal type="number">0x0367</literal></expr>,
<expr><literal type="number">0x0368</literal></expr>,<expr><literal type="number">0x0369</literal></expr>,<expr><literal type="number">0x036A</literal></expr>,<expr><literal type="number">0x036B</literal></expr>,<expr><literal type="number">0x036C</literal></expr>,<expr><literal type="number">0x036D</literal></expr>,<expr><literal type="number">0x036E</literal></expr>,<expr><literal type="number">0x036F</literal></expr>,
<expr><literal type="number">0x0483</literal></expr>,<expr><literal type="number">0x0484</literal></expr>,<expr><literal type="number">0x0485</literal></expr>,<expr><literal type="number">0x0486</literal></expr>,<expr><literal type="number">0x0487</literal></expr>,<expr><literal type="number">0x0591</literal></expr>,<expr><literal type="number">0x0592</literal></expr>,<expr><literal type="number">0x0593</literal></expr>,
<expr><literal type="number">0x0594</literal></expr>,<expr><literal type="number">0x0595</literal></expr>,<expr><literal type="number">0x0596</literal></expr>,<expr><literal type="number">0x0597</literal></expr>,<expr><literal type="number">0x0598</literal></expr>,<expr><literal type="number">0x0599</literal></expr>,<expr><literal type="number">0x059A</literal></expr>,<expr><literal type="number">0x059B</literal></expr>,
<expr><literal type="number">0x059C</literal></expr>,<expr><literal type="number">0x059D</literal></expr>,<expr><literal type="number">0x059E</literal></expr>,<expr><literal type="number">0x059F</literal></expr>,<expr><literal type="number">0x05A0</literal></expr>,<expr><literal type="number">0x05A1</literal></expr>,<expr><literal type="number">0x05A2</literal></expr>,<expr><literal type="number">0x05A3</literal></expr>,
<expr><literal type="number">0x05A4</literal></expr>,<expr><literal type="number">0x05A5</literal></expr>,<expr><literal type="number">0x05A6</literal></expr>,<expr><literal type="number">0x05A7</literal></expr>,<expr><literal type="number">0x05A8</literal></expr>,<expr><literal type="number">0x05A9</literal></expr>,<expr><literal type="number">0x05AA</literal></expr>,<expr><literal type="number">0x05AB</literal></expr>,
<expr><literal type="number">0x05AC</literal></expr>,<expr><literal type="number">0x05AD</literal></expr>,<expr><literal type="number">0x05AE</literal></expr>,<expr><literal type="number">0x05AF</literal></expr>,<expr><literal type="number">0x05B0</literal></expr>,<expr><literal type="number">0x05B1</literal></expr>,<expr><literal type="number">0x05B2</literal></expr>,<expr><literal type="number">0x05B3</literal></expr>,
<expr><literal type="number">0x05B4</literal></expr>,<expr><literal type="number">0x05B5</literal></expr>,<expr><literal type="number">0x05B6</literal></expr>,<expr><literal type="number">0x05B7</literal></expr>,<expr><literal type="number">0x05B8</literal></expr>,<expr><literal type="number">0x05B9</literal></expr>,<expr><literal type="number">0x05BA</literal></expr>,<expr><literal type="number">0x05BB</literal></expr>,
<expr><literal type="number">0x05BC</literal></expr>,<expr><literal type="number">0x05BD</literal></expr>,<expr><literal type="number">0x05BF</literal></expr>,<expr><literal type="number">0x05C1</literal></expr>,<expr><literal type="number">0x05C2</literal></expr>,<expr><literal type="number">0x05C4</literal></expr>,<expr><literal type="number">0x05C5</literal></expr>,<expr><literal type="number">0x05C7</literal></expr>,
<expr><literal type="number">0x0610</literal></expr>,<expr><literal type="number">0x0611</literal></expr>,<expr><literal type="number">0x0612</literal></expr>,<expr><literal type="number">0x0613</literal></expr>,<expr><literal type="number">0x0614</literal></expr>,<expr><literal type="number">0x0615</literal></expr>,<expr><literal type="number">0x0616</literal></expr>,<expr><literal type="number">0x0617</literal></expr>,
<expr><literal type="number">0x0618</literal></expr>,<expr><literal type="number">0x0619</literal></expr>,<expr><literal type="number">0x061A</literal></expr>,<expr><literal type="number">0x064B</literal></expr>,<expr><literal type="number">0x064C</literal></expr>,<expr><literal type="number">0x064D</literal></expr>,<expr><literal type="number">0x064E</literal></expr>,<expr><literal type="number">0x064F</literal></expr>,
<expr><literal type="number">0x0650</literal></expr>,<expr><literal type="number">0x0651</literal></expr>,<expr><literal type="number">0x0652</literal></expr>,<expr><literal type="number">0x0653</literal></expr>,<expr><literal type="number">0x0654</literal></expr>,<expr><literal type="number">0x0655</literal></expr>,<expr><literal type="number">0x0656</literal></expr>,<expr><literal type="number">0x0657</literal></expr>,
<expr><literal type="number">0x0658</literal></expr>,<expr><literal type="number">0x0659</literal></expr>,<expr><literal type="number">0x065A</literal></expr>,<expr><literal type="number">0x065B</literal></expr>,<expr><literal type="number">0x065C</literal></expr>,<expr><literal type="number">0x065D</literal></expr>,<expr><literal type="number">0x065E</literal></expr>,<expr><literal type="number">0x065F</literal></expr>,
<expr><literal type="number">0x0670</literal></expr>,<expr><literal type="number">0x06D6</literal></expr>,<expr><literal type="number">0x06D7</literal></expr>,<expr><literal type="number">0x06D8</literal></expr>,<expr><literal type="number">0x06D9</literal></expr>,<expr><literal type="number">0x06DA</literal></expr>,<expr><literal type="number">0x06DB</literal></expr>,<expr><literal type="number">0x06DC</literal></expr>,
<expr><literal type="number">0x06DF</literal></expr>,<expr><literal type="number">0x06E0</literal></expr>,<expr><literal type="number">0x06E1</literal></expr>,<expr><literal type="number">0x06E2</literal></expr>,<expr><literal type="number">0x06E3</literal></expr>,<expr><literal type="number">0x06E4</literal></expr>,<expr><literal type="number">0x06E7</literal></expr>,<expr><literal type="number">0x06E8</literal></expr>,
<expr><literal type="number">0x06EA</literal></expr>,<expr><literal type="number">0x06EB</literal></expr>,<expr><literal type="number">0x06EC</literal></expr>,<expr><literal type="number">0x06ED</literal></expr>,<expr><literal type="number">0x0711</literal></expr>,<expr><literal type="number">0x0730</literal></expr>,<expr><literal type="number">0x0731</literal></expr>,<expr><literal type="number">0x0732</literal></expr>,
<expr><literal type="number">0x0733</literal></expr>,<expr><literal type="number">0x0734</literal></expr>,<expr><literal type="number">0x0735</literal></expr>,<expr><literal type="number">0x0736</literal></expr>,<expr><literal type="number">0x0737</literal></expr>,<expr><literal type="number">0x0738</literal></expr>,<expr><literal type="number">0x0739</literal></expr>,<expr><literal type="number">0x073A</literal></expr>,
<expr><literal type="number">0x073B</literal></expr>,<expr><literal type="number">0x073C</literal></expr>,<expr><literal type="number">0x073D</literal></expr>,<expr><literal type="number">0x073E</literal></expr>,<expr><literal type="number">0x073F</literal></expr>,<expr><literal type="number">0x0740</literal></expr>,<expr><literal type="number">0x0741</literal></expr>,<expr><literal type="number">0x0742</literal></expr>,
<expr><literal type="number">0x0743</literal></expr>,<expr><literal type="number">0x0744</literal></expr>,<expr><literal type="number">0x0745</literal></expr>,<expr><literal type="number">0x0746</literal></expr>,<expr><literal type="number">0x0747</literal></expr>,<expr><literal type="number">0x0748</literal></expr>,<expr><literal type="number">0x0749</literal></expr>,<expr><literal type="number">0x074A</literal></expr>,
<expr><literal type="number">0x07A6</literal></expr>,<expr><literal type="number">0x07A7</literal></expr>,<expr><literal type="number">0x07A8</literal></expr>,<expr><literal type="number">0x07A9</literal></expr>,<expr><literal type="number">0x07AA</literal></expr>,<expr><literal type="number">0x07AB</literal></expr>,<expr><literal type="number">0x07AC</literal></expr>,<expr><literal type="number">0x07AD</literal></expr>,
<expr><literal type="number">0x07AE</literal></expr>,<expr><literal type="number">0x07AF</literal></expr>,<expr><literal type="number">0x07B0</literal></expr>,<expr><literal type="number">0x07EB</literal></expr>,<expr><literal type="number">0x07EC</literal></expr>,<expr><literal type="number">0x07ED</literal></expr>,<expr><literal type="number">0x07EE</literal></expr>,<expr><literal type="number">0x07EF</literal></expr>,
<expr><literal type="number">0x07F0</literal></expr>,<expr><literal type="number">0x07F1</literal></expr>,<expr><literal type="number">0x07F2</literal></expr>,<expr><literal type="number">0x07F3</literal></expr>,<expr><literal type="number">0x0816</literal></expr>,<expr><literal type="number">0x0817</literal></expr>,<expr><literal type="number">0x0818</literal></expr>,<expr><literal type="number">0x0819</literal></expr>,
<expr><literal type="number">0x081B</literal></expr>,<expr><literal type="number">0x081C</literal></expr>,<expr><literal type="number">0x081D</literal></expr>,<expr><literal type="number">0x081E</literal></expr>,<expr><literal type="number">0x081F</literal></expr>,<expr><literal type="number">0x0820</literal></expr>,<expr><literal type="number">0x0821</literal></expr>,<expr><literal type="number">0x0822</literal></expr>,
<expr><literal type="number">0x0823</literal></expr>,<expr><literal type="number">0x0825</literal></expr>,<expr><literal type="number">0x0826</literal></expr>,<expr><literal type="number">0x0827</literal></expr>,<expr><literal type="number">0x0829</literal></expr>,<expr><literal type="number">0x082A</literal></expr>,<expr><literal type="number">0x082B</literal></expr>,<expr><literal type="number">0x082C</literal></expr>,
<expr><literal type="number">0x082D</literal></expr>,<expr><literal type="number">0x0859</literal></expr>,<expr><literal type="number">0x085A</literal></expr>,<expr><literal type="number">0x085B</literal></expr>,<expr><literal type="number">0x08D4</literal></expr>,<expr><literal type="number">0x08D5</literal></expr>,<expr><literal type="number">0x08D6</literal></expr>,<expr><literal type="number">0x08D7</literal></expr>,
<expr><literal type="number">0x08D8</literal></expr>,<expr><literal type="number">0x08D9</literal></expr>,<expr><literal type="number">0x08DA</literal></expr>,<expr><literal type="number">0x08DB</literal></expr>,<expr><literal type="number">0x08DC</literal></expr>,<expr><literal type="number">0x08DD</literal></expr>,<expr><literal type="number">0x08DE</literal></expr>,<expr><literal type="number">0x08DF</literal></expr>,
<expr><literal type="number">0x08E0</literal></expr>,<expr><literal type="number">0x08E1</literal></expr>,<expr><literal type="number">0x08E3</literal></expr>,<expr><literal type="number">0x08E4</literal></expr>,<expr><literal type="number">0x08E5</literal></expr>,<expr><literal type="number">0x08E6</literal></expr>,<expr><literal type="number">0x08E7</literal></expr>,<expr><literal type="number">0x08E8</literal></expr>,
<expr><literal type="number">0x08E9</literal></expr>,<expr><literal type="number">0x08EA</literal></expr>,<expr><literal type="number">0x08EB</literal></expr>,<expr><literal type="number">0x08EC</literal></expr>,<expr><literal type="number">0x08ED</literal></expr>,<expr><literal type="number">0x08EE</literal></expr>,<expr><literal type="number">0x08EF</literal></expr>,<expr><literal type="number">0x08F0</literal></expr>,
<expr><literal type="number">0x08F1</literal></expr>,<expr><literal type="number">0x08F2</literal></expr>,<expr><literal type="number">0x08F3</literal></expr>,<expr><literal type="number">0x08F4</literal></expr>,<expr><literal type="number">0x08F5</literal></expr>,<expr><literal type="number">0x08F6</literal></expr>,<expr><literal type="number">0x08F7</literal></expr>,<expr><literal type="number">0x08F8</literal></expr>,
<expr><literal type="number">0x08F9</literal></expr>,<expr><literal type="number">0x08FA</literal></expr>,<expr><literal type="number">0x08FB</literal></expr>,<expr><literal type="number">0x08FC</literal></expr>,<expr><literal type="number">0x08FD</literal></expr>,<expr><literal type="number">0x08FE</literal></expr>,<expr><literal type="number">0x08FF</literal></expr>,<expr><literal type="number">0x0900</literal></expr>,
<expr><literal type="number">0x0901</literal></expr>,<expr><literal type="number">0x0902</literal></expr>,<expr><literal type="number">0x093A</literal></expr>,<expr><literal type="number">0x093C</literal></expr>,<expr><literal type="number">0x0941</literal></expr>,<expr><literal type="number">0x0942</literal></expr>,<expr><literal type="number">0x0943</literal></expr>,<expr><literal type="number">0x0944</literal></expr>,
<expr><literal type="number">0x0945</literal></expr>,<expr><literal type="number">0x0946</literal></expr>,<expr><literal type="number">0x0947</literal></expr>,<expr><literal type="number">0x0948</literal></expr>,<expr><literal type="number">0x094D</literal></expr>,<expr><literal type="number">0x0951</literal></expr>,<expr><literal type="number">0x0952</literal></expr>,<expr><literal type="number">0x0953</literal></expr>,
<expr><literal type="number">0x0954</literal></expr>,<expr><literal type="number">0x0955</literal></expr>,<expr><literal type="number">0x0956</literal></expr>,<expr><literal type="number">0x0957</literal></expr>,<expr><literal type="number">0x0962</literal></expr>,<expr><literal type="number">0x0963</literal></expr>,<expr><literal type="number">0x0981</literal></expr>,<expr><literal type="number">0x09BC</literal></expr>,
<expr><literal type="number">0x09C1</literal></expr>,<expr><literal type="number">0x09C2</literal></expr>,<expr><literal type="number">0x09C3</literal></expr>,<expr><literal type="number">0x09C4</literal></expr>,<expr><literal type="number">0x09CD</literal></expr>,<expr><literal type="number">0x09E2</literal></expr>,<expr><literal type="number">0x09E3</literal></expr>,<expr><literal type="number">0x0A01</literal></expr>,
<expr><literal type="number">0x0A02</literal></expr>,<expr><literal type="number">0x0A3C</literal></expr>,<expr><literal type="number">0x0A41</literal></expr>,<expr><literal type="number">0x0A42</literal></expr>,<expr><literal type="number">0x0A47</literal></expr>,<expr><literal type="number">0x0A48</literal></expr>,<expr><literal type="number">0x0A4B</literal></expr>,<expr><literal type="number">0x0A4C</literal></expr>,
<expr><literal type="number">0x0A4D</literal></expr>,<expr><literal type="number">0x0A51</literal></expr>,<expr><literal type="number">0x0A70</literal></expr>,<expr><literal type="number">0x0A71</literal></expr>,<expr><literal type="number">0x0A75</literal></expr>,<expr><literal type="number">0x0A81</literal></expr>,<expr><literal type="number">0x0A82</literal></expr>,<expr><literal type="number">0x0ABC</literal></expr>,
<expr><literal type="number">0x0AC1</literal></expr>,<expr><literal type="number">0x0AC2</literal></expr>,<expr><literal type="number">0x0AC3</literal></expr>,<expr><literal type="number">0x0AC4</literal></expr>,<expr><literal type="number">0x0AC5</literal></expr>,<expr><literal type="number">0x0AC7</literal></expr>,<expr><literal type="number">0x0AC8</literal></expr>,<expr><literal type="number">0x0ACD</literal></expr>,
<expr><literal type="number">0x0AE2</literal></expr>,<expr><literal type="number">0x0AE3</literal></expr>,<expr><literal type="number">0x0B01</literal></expr>,<expr><literal type="number">0x0B3C</literal></expr>,<expr><literal type="number">0x0B3F</literal></expr>,<expr><literal type="number">0x0B41</literal></expr>,<expr><literal type="number">0x0B42</literal></expr>,<expr><literal type="number">0x0B43</literal></expr>,
<expr><literal type="number">0x0B44</literal></expr>,<expr><literal type="number">0x0B4D</literal></expr>,<expr><literal type="number">0x0B56</literal></expr>,<expr><literal type="number">0x0B62</literal></expr>,<expr><literal type="number">0x0B63</literal></expr>,<expr><literal type="number">0x0B82</literal></expr>,<expr><literal type="number">0x0BC0</literal></expr>,<expr><literal type="number">0x0BCD</literal></expr>,
<expr><literal type="number">0x0C00</literal></expr>,<expr><literal type="number">0x0C3E</literal></expr>,<expr><literal type="number">0x0C3F</literal></expr>,<expr><literal type="number">0x0C40</literal></expr>,<expr><literal type="number">0x0C46</literal></expr>,<expr><literal type="number">0x0C47</literal></expr>,<expr><literal type="number">0x0C48</literal></expr>,<expr><literal type="number">0x0C4A</literal></expr>,
<expr><literal type="number">0x0C4B</literal></expr>,<expr><literal type="number">0x0C4C</literal></expr>,<expr><literal type="number">0x0C4D</literal></expr>,<expr><literal type="number">0x0C55</literal></expr>,<expr><literal type="number">0x0C56</literal></expr>,<expr><literal type="number">0x0C62</literal></expr>,<expr><literal type="number">0x0C63</literal></expr>,<expr><literal type="number">0x0C81</literal></expr>,
<expr><literal type="number">0x0CBC</literal></expr>,<expr><literal type="number">0x0CBF</literal></expr>,<expr><literal type="number">0x0CC6</literal></expr>,<expr><literal type="number">0x0CCC</literal></expr>,<expr><literal type="number">0x0CCD</literal></expr>,<expr><literal type="number">0x0CE2</literal></expr>,<expr><literal type="number">0x0CE3</literal></expr>,<expr><literal type="number">0x0D01</literal></expr>,
<expr><literal type="number">0x0D41</literal></expr>,<expr><literal type="number">0x0D42</literal></expr>,<expr><literal type="number">0x0D43</literal></expr>,<expr><literal type="number">0x0D44</literal></expr>,<expr><literal type="number">0x0D4D</literal></expr>,<expr><literal type="number">0x0D62</literal></expr>,<expr><literal type="number">0x0D63</literal></expr>,<expr><literal type="number">0x0DCA</literal></expr>,
<expr><literal type="number">0x0DD2</literal></expr>,<expr><literal type="number">0x0DD3</literal></expr>,<expr><literal type="number">0x0DD4</literal></expr>,<expr><literal type="number">0x0DD6</literal></expr>,<expr><literal type="number">0x0E31</literal></expr>,<expr><literal type="number">0x0E34</literal></expr>,<expr><literal type="number">0x0E35</literal></expr>,<expr><literal type="number">0x0E36</literal></expr>,
<expr><literal type="number">0x0E37</literal></expr>,<expr><literal type="number">0x0E38</literal></expr>,<expr><literal type="number">0x0E39</literal></expr>,<expr><literal type="number">0x0E3A</literal></expr>,<expr><literal type="number">0x0E47</literal></expr>,<expr><literal type="number">0x0E48</literal></expr>,<expr><literal type="number">0x0E49</literal></expr>,<expr><literal type="number">0x0E4A</literal></expr>,
<expr><literal type="number">0x0E4B</literal></expr>,<expr><literal type="number">0x0E4C</literal></expr>,<expr><literal type="number">0x0E4D</literal></expr>,<expr><literal type="number">0x0E4E</literal></expr>,<expr><literal type="number">0x0EB1</literal></expr>,<expr><literal type="number">0x0EB4</literal></expr>,<expr><literal type="number">0x0EB5</literal></expr>,<expr><literal type="number">0x0EB6</literal></expr>,
<expr><literal type="number">0x0EB7</literal></expr>,<expr><literal type="number">0x0EB8</literal></expr>,<expr><literal type="number">0x0EB9</literal></expr>,<expr><literal type="number">0x0EBB</literal></expr>,<expr><literal type="number">0x0EBC</literal></expr>,<expr><literal type="number">0x0EC8</literal></expr>,<expr><literal type="number">0x0EC9</literal></expr>,<expr><literal type="number">0x0ECA</literal></expr>,
<expr><literal type="number">0x0ECB</literal></expr>,<expr><literal type="number">0x0ECC</literal></expr>,<expr><literal type="number">0x0ECD</literal></expr>,<expr><literal type="number">0x0F18</literal></expr>,<expr><literal type="number">0x0F19</literal></expr>,<expr><literal type="number">0x0F35</literal></expr>,<expr><literal type="number">0x0F37</literal></expr>,<expr><literal type="number">0x0F39</literal></expr>,
<expr><literal type="number">0x0F71</literal></expr>,<expr><literal type="number">0x0F72</literal></expr>,<expr><literal type="number">0x0F73</literal></expr>,<expr><literal type="number">0x0F74</literal></expr>,<expr><literal type="number">0x0F75</literal></expr>,<expr><literal type="number">0x0F76</literal></expr>,<expr><literal type="number">0x0F77</literal></expr>,<expr><literal type="number">0x0F78</literal></expr>,
<expr><literal type="number">0x0F79</literal></expr>,<expr><literal type="number">0x0F7A</literal></expr>,<expr><literal type="number">0x0F7B</literal></expr>,<expr><literal type="number">0x0F7C</literal></expr>,<expr><literal type="number">0x0F7D</literal></expr>,<expr><literal type="number">0x0F7E</literal></expr>,<expr><literal type="number">0x0F80</literal></expr>,<expr><literal type="number">0x0F81</literal></expr>,
<expr><literal type="number">0x0F82</literal></expr>,<expr><literal type="number">0x0F83</literal></expr>,<expr><literal type="number">0x0F84</literal></expr>,<expr><literal type="number">0x0F86</literal></expr>,<expr><literal type="number">0x0F87</literal></expr>,<expr><literal type="number">0x0F8D</literal></expr>,<expr><literal type="number">0x0F8E</literal></expr>,<expr><literal type="number">0x0F8F</literal></expr>,
<expr><literal type="number">0x0F90</literal></expr>,<expr><literal type="number">0x0F91</literal></expr>,<expr><literal type="number">0x0F92</literal></expr>,<expr><literal type="number">0x0F93</literal></expr>,<expr><literal type="number">0x0F94</literal></expr>,<expr><literal type="number">0x0F95</literal></expr>,<expr><literal type="number">0x0F96</literal></expr>,<expr><literal type="number">0x0F97</literal></expr>,
<expr><literal type="number">0x0F99</literal></expr>,<expr><literal type="number">0x0F9A</literal></expr>,<expr><literal type="number">0x0F9B</literal></expr>,<expr><literal type="number">0x0F9C</literal></expr>,<expr><literal type="number">0x0F9D</literal></expr>,<expr><literal type="number">0x0F9E</literal></expr>,<expr><literal type="number">0x0F9F</literal></expr>,<expr><literal type="number">0x0FA0</literal></expr>,
<expr><literal type="number">0x0FA1</literal></expr>,<expr><literal type="number">0x0FA2</literal></expr>,<expr><literal type="number">0x0FA3</literal></expr>,<expr><literal type="number">0x0FA4</literal></expr>,<expr><literal type="number">0x0FA5</literal></expr>,<expr><literal type="number">0x0FA6</literal></expr>,<expr><literal type="number">0x0FA7</literal></expr>,<expr><literal type="number">0x0FA8</literal></expr>,
<expr><literal type="number">0x0FA9</literal></expr>,<expr><literal type="number">0x0FAA</literal></expr>,<expr><literal type="number">0x0FAB</literal></expr>,<expr><literal type="number">0x0FAC</literal></expr>,<expr><literal type="number">0x0FAD</literal></expr>,<expr><literal type="number">0x0FAE</literal></expr>,<expr><literal type="number">0x0FAF</literal></expr>,<expr><literal type="number">0x0FB0</literal></expr>,
<expr><literal type="number">0x0FB1</literal></expr>,<expr><literal type="number">0x0FB2</literal></expr>,<expr><literal type="number">0x0FB3</literal></expr>,<expr><literal type="number">0x0FB4</literal></expr>,<expr><literal type="number">0x0FB5</literal></expr>,<expr><literal type="number">0x0FB6</literal></expr>,<expr><literal type="number">0x0FB7</literal></expr>,<expr><literal type="number">0x0FB8</literal></expr>,
<expr><literal type="number">0x0FB9</literal></expr>,<expr><literal type="number">0x0FBA</literal></expr>,<expr><literal type="number">0x0FBB</literal></expr>,<expr><literal type="number">0x0FBC</literal></expr>,<expr><literal type="number">0x0FC6</literal></expr>,<expr><literal type="number">0x102D</literal></expr>,<expr><literal type="number">0x102E</literal></expr>,<expr><literal type="number">0x102F</literal></expr>,
<expr><literal type="number">0x1030</literal></expr>,<expr><literal type="number">0x1032</literal></expr>,<expr><literal type="number">0x1033</literal></expr>,<expr><literal type="number">0x1034</literal></expr>,<expr><literal type="number">0x1035</literal></expr>,<expr><literal type="number">0x1036</literal></expr>,<expr><literal type="number">0x1037</literal></expr>,<expr><literal type="number">0x1039</literal></expr>,
<expr><literal type="number">0x103A</literal></expr>,<expr><literal type="number">0x103D</literal></expr>,<expr><literal type="number">0x103E</literal></expr>,<expr><literal type="number">0x1058</literal></expr>,<expr><literal type="number">0x1059</literal></expr>,<expr><literal type="number">0x105E</literal></expr>,<expr><literal type="number">0x105F</literal></expr>,<expr><literal type="number">0x1060</literal></expr>,
<expr><literal type="number">0x1071</literal></expr>,<expr><literal type="number">0x1072</literal></expr>,<expr><literal type="number">0x1073</literal></expr>,<expr><literal type="number">0x1074</literal></expr>,<expr><literal type="number">0x1082</literal></expr>,<expr><literal type="number">0x1085</literal></expr>,<expr><literal type="number">0x1086</literal></expr>,<expr><literal type="number">0x108D</literal></expr>,
<expr><literal type="number">0x109D</literal></expr>,<expr><literal type="number">0x135D</literal></expr>,<expr><literal type="number">0x135E</literal></expr>,<expr><literal type="number">0x135F</literal></expr>,<expr><literal type="number">0x1712</literal></expr>,<expr><literal type="number">0x1713</literal></expr>,<expr><literal type="number">0x1714</literal></expr>,<expr><literal type="number">0x1732</literal></expr>,
<expr><literal type="number">0x1733</literal></expr>,<expr><literal type="number">0x1734</literal></expr>,<expr><literal type="number">0x1752</literal></expr>,<expr><literal type="number">0x1753</literal></expr>,<expr><literal type="number">0x1772</literal></expr>,<expr><literal type="number">0x1773</literal></expr>,<expr><literal type="number">0x17B4</literal></expr>,<expr><literal type="number">0x17B5</literal></expr>,
<expr><literal type="number">0x17B7</literal></expr>,<expr><literal type="number">0x17B8</literal></expr>,<expr><literal type="number">0x17B9</literal></expr>,<expr><literal type="number">0x17BA</literal></expr>,<expr><literal type="number">0x17BB</literal></expr>,<expr><literal type="number">0x17BC</literal></expr>,<expr><literal type="number">0x17BD</literal></expr>,<expr><literal type="number">0x17C6</literal></expr>,
<expr><literal type="number">0x17C9</literal></expr>,<expr><literal type="number">0x17CA</literal></expr>,<expr><literal type="number">0x17CB</literal></expr>,<expr><literal type="number">0x17CC</literal></expr>,<expr><literal type="number">0x17CD</literal></expr>,<expr><literal type="number">0x17CE</literal></expr>,<expr><literal type="number">0x17CF</literal></expr>,<expr><literal type="number">0x17D0</literal></expr>,
<expr><literal type="number">0x17D1</literal></expr>,<expr><literal type="number">0x17D2</literal></expr>,<expr><literal type="number">0x17D3</literal></expr>,<expr><literal type="number">0x17DD</literal></expr>,<expr><literal type="number">0x180B</literal></expr>,<expr><literal type="number">0x180C</literal></expr>,<expr><literal type="number">0x180D</literal></expr>,<expr><literal type="number">0x1885</literal></expr>,
<expr><literal type="number">0x1886</literal></expr>,<expr><literal type="number">0x18A9</literal></expr>,<expr><literal type="number">0x1920</literal></expr>,<expr><literal type="number">0x1921</literal></expr>,<expr><literal type="number">0x1922</literal></expr>,<expr><literal type="number">0x1927</literal></expr>,<expr><literal type="number">0x1928</literal></expr>,<expr><literal type="number">0x1932</literal></expr>,
<expr><literal type="number">0x1939</literal></expr>,<expr><literal type="number">0x193A</literal></expr>,<expr><literal type="number">0x193B</literal></expr>,<expr><literal type="number">0x1A17</literal></expr>,<expr><literal type="number">0x1A18</literal></expr>,<expr><literal type="number">0x1A1B</literal></expr>,<expr><literal type="number">0x1A56</literal></expr>,<expr><literal type="number">0x1A58</literal></expr>,
<expr><literal type="number">0x1A59</literal></expr>,<expr><literal type="number">0x1A5A</literal></expr>,<expr><literal type="number">0x1A5B</literal></expr>,<expr><literal type="number">0x1A5C</literal></expr>,<expr><literal type="number">0x1A5D</literal></expr>,<expr><literal type="number">0x1A5E</literal></expr>,<expr><literal type="number">0x1A60</literal></expr>,<expr><literal type="number">0x1A62</literal></expr>,
<expr><literal type="number">0x1A65</literal></expr>,<expr><literal type="number">0x1A66</literal></expr>,<expr><literal type="number">0x1A67</literal></expr>,<expr><literal type="number">0x1A68</literal></expr>,<expr><literal type="number">0x1A69</literal></expr>,<expr><literal type="number">0x1A6A</literal></expr>,<expr><literal type="number">0x1A6B</literal></expr>,<expr><literal type="number">0x1A6C</literal></expr>,
<expr><literal type="number">0x1A73</literal></expr>,<expr><literal type="number">0x1A74</literal></expr>,<expr><literal type="number">0x1A75</literal></expr>,<expr><literal type="number">0x1A76</literal></expr>,<expr><literal type="number">0x1A77</literal></expr>,<expr><literal type="number">0x1A78</literal></expr>,<expr><literal type="number">0x1A79</literal></expr>,<expr><literal type="number">0x1A7A</literal></expr>,
<expr><literal type="number">0x1A7B</literal></expr>,<expr><literal type="number">0x1A7C</literal></expr>,<expr><literal type="number">0x1A7F</literal></expr>,<expr><literal type="number">0x1AB0</literal></expr>,<expr><literal type="number">0x1AB1</literal></expr>,<expr><literal type="number">0x1AB2</literal></expr>,<expr><literal type="number">0x1AB3</literal></expr>,<expr><literal type="number">0x1AB4</literal></expr>,
<expr><literal type="number">0x1AB5</literal></expr>,<expr><literal type="number">0x1AB6</literal></expr>,<expr><literal type="number">0x1AB7</literal></expr>,<expr><literal type="number">0x1AB8</literal></expr>,<expr><literal type="number">0x1AB9</literal></expr>,<expr><literal type="number">0x1ABA</literal></expr>,<expr><literal type="number">0x1ABB</literal></expr>,<expr><literal type="number">0x1ABC</literal></expr>,
<expr><literal type="number">0x1ABD</literal></expr>,<expr><literal type="number">0x1B00</literal></expr>,<expr><literal type="number">0x1B01</literal></expr>,<expr><literal type="number">0x1B02</literal></expr>,<expr><literal type="number">0x1B03</literal></expr>,<expr><literal type="number">0x1B34</literal></expr>,<expr><literal type="number">0x1B36</literal></expr>,<expr><literal type="number">0x1B37</literal></expr>,
<expr><literal type="number">0x1B38</literal></expr>,<expr><literal type="number">0x1B39</literal></expr>,<expr><literal type="number">0x1B3A</literal></expr>,<expr><literal type="number">0x1B3C</literal></expr>,<expr><literal type="number">0x1B42</literal></expr>,<expr><literal type="number">0x1B6B</literal></expr>,<expr><literal type="number">0x1B6C</literal></expr>,<expr><literal type="number">0x1B6D</literal></expr>,
<expr><literal type="number">0x1B6E</literal></expr>,<expr><literal type="number">0x1B6F</literal></expr>,<expr><literal type="number">0x1B70</literal></expr>,<expr><literal type="number">0x1B71</literal></expr>,<expr><literal type="number">0x1B72</literal></expr>,<expr><literal type="number">0x1B73</literal></expr>,<expr><literal type="number">0x1B80</literal></expr>,<expr><literal type="number">0x1B81</literal></expr>,
<expr><literal type="number">0x1BA2</literal></expr>,<expr><literal type="number">0x1BA3</literal></expr>,<expr><literal type="number">0x1BA4</literal></expr>,<expr><literal type="number">0x1BA5</literal></expr>,<expr><literal type="number">0x1BA8</literal></expr>,<expr><literal type="number">0x1BA9</literal></expr>,<expr><literal type="number">0x1BAB</literal></expr>,<expr><literal type="number">0x1BAC</literal></expr>,
<expr><literal type="number">0x1BAD</literal></expr>,<expr><literal type="number">0x1BE6</literal></expr>,<expr><literal type="number">0x1BE8</literal></expr>,<expr><literal type="number">0x1BE9</literal></expr>,<expr><literal type="number">0x1BED</literal></expr>,<expr><literal type="number">0x1BEF</literal></expr>,<expr><literal type="number">0x1BF0</literal></expr>,<expr><literal type="number">0x1BF1</literal></expr>,
<expr><literal type="number">0x1C2C</literal></expr>,<expr><literal type="number">0x1C2D</literal></expr>,<expr><literal type="number">0x1C2E</literal></expr>,<expr><literal type="number">0x1C2F</literal></expr>,<expr><literal type="number">0x1C30</literal></expr>,<expr><literal type="number">0x1C31</literal></expr>,<expr><literal type="number">0x1C32</literal></expr>,<expr><literal type="number">0x1C33</literal></expr>,
<expr><literal type="number">0x1C36</literal></expr>,<expr><literal type="number">0x1C37</literal></expr>,<expr><literal type="number">0x1CD0</literal></expr>,<expr><literal type="number">0x1CD1</literal></expr>,<expr><literal type="number">0x1CD2</literal></expr>,<expr><literal type="number">0x1CD4</literal></expr>,<expr><literal type="number">0x1CD5</literal></expr>,<expr><literal type="number">0x1CD6</literal></expr>,
<expr><literal type="number">0x1CD7</literal></expr>,<expr><literal type="number">0x1CD8</literal></expr>,<expr><literal type="number">0x1CD9</literal></expr>,<expr><literal type="number">0x1CDA</literal></expr>,<expr><literal type="number">0x1CDB</literal></expr>,<expr><literal type="number">0x1CDC</literal></expr>,<expr><literal type="number">0x1CDD</literal></expr>,<expr><literal type="number">0x1CDE</literal></expr>,
<expr><literal type="number">0x1CDF</literal></expr>,<expr><literal type="number">0x1CE0</literal></expr>,<expr><literal type="number">0x1CE2</literal></expr>,<expr><literal type="number">0x1CE3</literal></expr>,<expr><literal type="number">0x1CE4</literal></expr>,<expr><literal type="number">0x1CE5</literal></expr>,<expr><literal type="number">0x1CE6</literal></expr>,<expr><literal type="number">0x1CE7</literal></expr>,
<expr><literal type="number">0x1CE8</literal></expr>,<expr><literal type="number">0x1CED</literal></expr>,<expr><literal type="number">0x1CF4</literal></expr>,<expr><literal type="number">0x1CF8</literal></expr>,<expr><literal type="number">0x1CF9</literal></expr>,<expr><literal type="number">0x1DC0</literal></expr>,<expr><literal type="number">0x1DC1</literal></expr>,<expr><literal type="number">0x1DC2</literal></expr>,
<expr><literal type="number">0x1DC3</literal></expr>,<expr><literal type="number">0x1DC4</literal></expr>,<expr><literal type="number">0x1DC5</literal></expr>,<expr><literal type="number">0x1DC6</literal></expr>,<expr><literal type="number">0x1DC7</literal></expr>,<expr><literal type="number">0x1DC8</literal></expr>,<expr><literal type="number">0x1DC9</literal></expr>,<expr><literal type="number">0x1DCA</literal></expr>,
<expr><literal type="number">0x1DCB</literal></expr>,<expr><literal type="number">0x1DCC</literal></expr>,<expr><literal type="number">0x1DCD</literal></expr>,<expr><literal type="number">0x1DCE</literal></expr>,<expr><literal type="number">0x1DCF</literal></expr>,<expr><literal type="number">0x1DD0</literal></expr>,<expr><literal type="number">0x1DD1</literal></expr>,<expr><literal type="number">0x1DD2</literal></expr>,
<expr><literal type="number">0x1DD3</literal></expr>,<expr><literal type="number">0x1DD4</literal></expr>,<expr><literal type="number">0x1DD5</literal></expr>,<expr><literal type="number">0x1DD6</literal></expr>,<expr><literal type="number">0x1DD7</literal></expr>,<expr><literal type="number">0x1DD8</literal></expr>,<expr><literal type="number">0x1DD9</literal></expr>,<expr><literal type="number">0x1DDA</literal></expr>,
<expr><literal type="number">0x1DDB</literal></expr>,<expr><literal type="number">0x1DDC</literal></expr>,<expr><literal type="number">0x1DDD</literal></expr>,<expr><literal type="number">0x1DDE</literal></expr>,<expr><literal type="number">0x1DDF</literal></expr>,<expr><literal type="number">0x1DE0</literal></expr>,<expr><literal type="number">0x1DE1</literal></expr>,<expr><literal type="number">0x1DE2</literal></expr>,
<expr><literal type="number">0x1DE3</literal></expr>,<expr><literal type="number">0x1DE4</literal></expr>,<expr><literal type="number">0x1DE5</literal></expr>,<expr><literal type="number">0x1DE6</literal></expr>,<expr><literal type="number">0x1DE7</literal></expr>,<expr><literal type="number">0x1DE8</literal></expr>,<expr><literal type="number">0x1DE9</literal></expr>,<expr><literal type="number">0x1DEA</literal></expr>,
<expr><literal type="number">0x1DEB</literal></expr>,<expr><literal type="number">0x1DEC</literal></expr>,<expr><literal type="number">0x1DED</literal></expr>,<expr><literal type="number">0x1DEE</literal></expr>,<expr><literal type="number">0x1DEF</literal></expr>,<expr><literal type="number">0x1DF0</literal></expr>,<expr><literal type="number">0x1DF1</literal></expr>,<expr><literal type="number">0x1DF2</literal></expr>,
<expr><literal type="number">0x1DF3</literal></expr>,<expr><literal type="number">0x1DF4</literal></expr>,<expr><literal type="number">0x1DF5</literal></expr>,<expr><literal type="number">0x1DFB</literal></expr>,<expr><literal type="number">0x1DFC</literal></expr>,<expr><literal type="number">0x1DFD</literal></expr>,<expr><literal type="number">0x1DFE</literal></expr>,<expr><literal type="number">0x1DFF</literal></expr>,
<expr><literal type="number">0x20D0</literal></expr>,<expr><literal type="number">0x20D1</literal></expr>,<expr><literal type="number">0x20D2</literal></expr>,<expr><literal type="number">0x20D3</literal></expr>,<expr><literal type="number">0x20D4</literal></expr>,<expr><literal type="number">0x20D5</literal></expr>,<expr><literal type="number">0x20D6</literal></expr>,<expr><literal type="number">0x20D7</literal></expr>,
<expr><literal type="number">0x20D8</literal></expr>,<expr><literal type="number">0x20D9</literal></expr>,<expr><literal type="number">0x20DA</literal></expr>,<expr><literal type="number">0x20DB</literal></expr>,<expr><literal type="number">0x20DC</literal></expr>,<expr><literal type="number">0x20E1</literal></expr>,<expr><literal type="number">0x20E5</literal></expr>,<expr><literal type="number">0x20E6</literal></expr>,
<expr><literal type="number">0x20E7</literal></expr>,<expr><literal type="number">0x20E8</literal></expr>,<expr><literal type="number">0x20E9</literal></expr>,<expr><literal type="number">0x20EA</literal></expr>,<expr><literal type="number">0x20EB</literal></expr>,<expr><literal type="number">0x20EC</literal></expr>,<expr><literal type="number">0x20ED</literal></expr>,<expr><literal type="number">0x20EE</literal></expr>,
<expr><literal type="number">0x20EF</literal></expr>,<expr><literal type="number">0x20F0</literal></expr>,<expr><literal type="number">0x2CEF</literal></expr>,<expr><literal type="number">0x2CF0</literal></expr>,<expr><literal type="number">0x2CF1</literal></expr>,<expr><literal type="number">0x2D7F</literal></expr>,<expr><literal type="number">0x2DE0</literal></expr>,<expr><literal type="number">0x2DE1</literal></expr>,
<expr><literal type="number">0x2DE2</literal></expr>,<expr><literal type="number">0x2DE3</literal></expr>,<expr><literal type="number">0x2DE4</literal></expr>,<expr><literal type="number">0x2DE5</literal></expr>,<expr><literal type="number">0x2DE6</literal></expr>,<expr><literal type="number">0x2DE7</literal></expr>,<expr><literal type="number">0x2DE8</literal></expr>,<expr><literal type="number">0x2DE9</literal></expr>,
<expr><literal type="number">0x2DEA</literal></expr>,<expr><literal type="number">0x2DEB</literal></expr>,<expr><literal type="number">0x2DEC</literal></expr>,<expr><literal type="number">0x2DED</literal></expr>,<expr><literal type="number">0x2DEE</literal></expr>,<expr><literal type="number">0x2DEF</literal></expr>,<expr><literal type="number">0x2DF0</literal></expr>,<expr><literal type="number">0x2DF1</literal></expr>,
<expr><literal type="number">0x2DF2</literal></expr>,<expr><literal type="number">0x2DF3</literal></expr>,<expr><literal type="number">0x2DF4</literal></expr>,<expr><literal type="number">0x2DF5</literal></expr>,<expr><literal type="number">0x2DF6</literal></expr>,<expr><literal type="number">0x2DF7</literal></expr>,<expr><literal type="number">0x2DF8</literal></expr>,<expr><literal type="number">0x2DF9</literal></expr>,
<expr><literal type="number">0x2DFA</literal></expr>,<expr><literal type="number">0x2DFB</literal></expr>,<expr><literal type="number">0x2DFC</literal></expr>,<expr><literal type="number">0x2DFD</literal></expr>,<expr><literal type="number">0x2DFE</literal></expr>,<expr><literal type="number">0x2DFF</literal></expr>,<expr><literal type="number">0x302A</literal></expr>,<expr><literal type="number">0x302B</literal></expr>,
<expr><literal type="number">0x302C</literal></expr>,<expr><literal type="number">0x302D</literal></expr>,<expr><literal type="number">0x3099</literal></expr>,<expr><literal type="number">0x309A</literal></expr>,<expr><literal type="number">0xA66F</literal></expr>,<expr><literal type="number">0xA674</literal></expr>,<expr><literal type="number">0xA675</literal></expr>,<expr><literal type="number">0xA676</literal></expr>,
<expr><literal type="number">0xA677</literal></expr>,<expr><literal type="number">0xA678</literal></expr>,<expr><literal type="number">0xA679</literal></expr>,<expr><literal type="number">0xA67A</literal></expr>,<expr><literal type="number">0xA67B</literal></expr>,<expr><literal type="number">0xA67C</literal></expr>,<expr><literal type="number">0xA67D</literal></expr>,<expr><literal type="number">0xA69E</literal></expr>,
<expr><literal type="number">0xA69F</literal></expr>,<expr><literal type="number">0xA6F0</literal></expr>,<expr><literal type="number">0xA6F1</literal></expr>,<expr><literal type="number">0xA802</literal></expr>,<expr><literal type="number">0xA806</literal></expr>,<expr><literal type="number">0xA80B</literal></expr>,<expr><literal type="number">0xA825</literal></expr>,<expr><literal type="number">0xA826</literal></expr>,
<expr><literal type="number">0xA8C4</literal></expr>,<expr><literal type="number">0xA8C5</literal></expr>,<expr><literal type="number">0xA8E0</literal></expr>,<expr><literal type="number">0xA8E1</literal></expr>,<expr><literal type="number">0xA8E2</literal></expr>,<expr><literal type="number">0xA8E3</literal></expr>,<expr><literal type="number">0xA8E4</literal></expr>,<expr><literal type="number">0xA8E5</literal></expr>,
<expr><literal type="number">0xA8E6</literal></expr>,<expr><literal type="number">0xA8E7</literal></expr>,<expr><literal type="number">0xA8E8</literal></expr>,<expr><literal type="number">0xA8E9</literal></expr>,<expr><literal type="number">0xA8EA</literal></expr>,<expr><literal type="number">0xA8EB</literal></expr>,<expr><literal type="number">0xA8EC</literal></expr>,<expr><literal type="number">0xA8ED</literal></expr>,
<expr><literal type="number">0xA8EE</literal></expr>,<expr><literal type="number">0xA8EF</literal></expr>,<expr><literal type="number">0xA8F0</literal></expr>,<expr><literal type="number">0xA8F1</literal></expr>,<expr><literal type="number">0xA926</literal></expr>,<expr><literal type="number">0xA927</literal></expr>,<expr><literal type="number">0xA928</literal></expr>,<expr><literal type="number">0xA929</literal></expr>,
<expr><literal type="number">0xA92A</literal></expr>,<expr><literal type="number">0xA92B</literal></expr>,<expr><literal type="number">0xA92C</literal></expr>,<expr><literal type="number">0xA92D</literal></expr>,<expr><literal type="number">0xA947</literal></expr>,<expr><literal type="number">0xA948</literal></expr>,<expr><literal type="number">0xA949</literal></expr>,<expr><literal type="number">0xA94A</literal></expr>,
<expr><literal type="number">0xA94B</literal></expr>,<expr><literal type="number">0xA94C</literal></expr>,<expr><literal type="number">0xA94D</literal></expr>,<expr><literal type="number">0xA94E</literal></expr>,<expr><literal type="number">0xA94F</literal></expr>,<expr><literal type="number">0xA950</literal></expr>,<expr><literal type="number">0xA951</literal></expr>,<expr><literal type="number">0xA980</literal></expr>,
<expr><literal type="number">0xA981</literal></expr>,<expr><literal type="number">0xA982</literal></expr>,<expr><literal type="number">0xA9B3</literal></expr>,<expr><literal type="number">0xA9B6</literal></expr>,<expr><literal type="number">0xA9B7</literal></expr>,<expr><literal type="number">0xA9B8</literal></expr>,<expr><literal type="number">0xA9B9</literal></expr>,<expr><literal type="number">0xA9BC</literal></expr>,
<expr><literal type="number">0xA9E5</literal></expr>,<expr><literal type="number">0xAA29</literal></expr>,<expr><literal type="number">0xAA2A</literal></expr>,<expr><literal type="number">0xAA2B</literal></expr>,<expr><literal type="number">0xAA2C</literal></expr>,<expr><literal type="number">0xAA2D</literal></expr>,<expr><literal type="number">0xAA2E</literal></expr>,<expr><literal type="number">0xAA31</literal></expr>,
<expr><literal type="number">0xAA32</literal></expr>,<expr><literal type="number">0xAA35</literal></expr>,<expr><literal type="number">0xAA36</literal></expr>,<expr><literal type="number">0xAA43</literal></expr>,<expr><literal type="number">0xAA4C</literal></expr>,<expr><literal type="number">0xAA7C</literal></expr>,<expr><literal type="number">0xAAB0</literal></expr>,<expr><literal type="number">0xAAB2</literal></expr>,
<expr><literal type="number">0xAAB3</literal></expr>,<expr><literal type="number">0xAAB4</literal></expr>,<expr><literal type="number">0xAAB7</literal></expr>,<expr><literal type="number">0xAAB8</literal></expr>,<expr><literal type="number">0xAABE</literal></expr>,<expr><literal type="number">0xAABF</literal></expr>,<expr><literal type="number">0xAAC1</literal></expr>,<expr><literal type="number">0xAAEC</literal></expr>,
<expr><literal type="number">0xAAED</literal></expr>,<expr><literal type="number">0xAAF6</literal></expr>,<expr><literal type="number">0xABE5</literal></expr>,<expr><literal type="number">0xABE8</literal></expr>,<expr><literal type="number">0xABED</literal></expr>,<expr><literal type="number">0xFB1E</literal></expr>,<expr><literal type="number">0xFE00</literal></expr>,<expr><literal type="number">0xFE01</literal></expr>,
<expr><literal type="number">0xFE02</literal></expr>,<expr><literal type="number">0xFE03</literal></expr>,<expr><literal type="number">0xFE04</literal></expr>,<expr><literal type="number">0xFE05</literal></expr>,<expr><literal type="number">0xFE06</literal></expr>,<expr><literal type="number">0xFE07</literal></expr>,<expr><literal type="number">0xFE08</literal></expr>,<expr><literal type="number">0xFE09</literal></expr>,
<expr><literal type="number">0xFE0A</literal></expr>,<expr><literal type="number">0xFE0B</literal></expr>,<expr><literal type="number">0xFE0C</literal></expr>,<expr><literal type="number">0xFE0D</literal></expr>,<expr><literal type="number">0xFE0E</literal></expr>,<expr><literal type="number">0xFE0F</literal></expr>,<expr><literal type="number">0xFE20</literal></expr>,<expr><literal type="number">0xFE21</literal></expr>,
<expr><literal type="number">0xFE22</literal></expr>,<expr><literal type="number">0xFE23</literal></expr>,<expr><literal type="number">0xFE24</literal></expr>,<expr><literal type="number">0xFE25</literal></expr>,<expr><literal type="number">0xFE26</literal></expr>,<expr><literal type="number">0xFE27</literal></expr>,<expr><literal type="number">0xFE28</literal></expr>,<expr><literal type="number">0xFE29</literal></expr>,
<expr><literal type="number">0xFE2A</literal></expr>,<expr><literal type="number">0xFE2B</literal></expr>,<expr><literal type="number">0xFE2C</literal></expr>,<expr><literal type="number">0xFE2D</literal></expr>,<expr><literal type="number">0xFE2E</literal></expr>,<expr><literal type="number">0xFE2F</literal></expr>,
<expr><literal type="number">0x101FD</literal></expr>,<expr><literal type="number">0x102E0</literal></expr>,<expr><literal type="number">0x10376</literal></expr>,<expr><literal type="number">0x10377</literal></expr>,<expr><literal type="number">0x10378</literal></expr>,<expr><literal type="number">0x10379</literal></expr>,<expr><literal type="number">0x1037A</literal></expr>,<expr><literal type="number">0x10A01</literal></expr>,
<expr><literal type="number">0x10A02</literal></expr>,<expr><literal type="number">0x10A03</literal></expr>,<expr><literal type="number">0x10A05</literal></expr>,<expr><literal type="number">0x10A06</literal></expr>,<expr><literal type="number">0x10A0C</literal></expr>,<expr><literal type="number">0x10A0D</literal></expr>,<expr><literal type="number">0x10A0E</literal></expr>,<expr><literal type="number">0x10A0F</literal></expr>,
<expr><literal type="number">0x10A38</literal></expr>,<expr><literal type="number">0x10A39</literal></expr>,<expr><literal type="number">0x10A3A</literal></expr>,<expr><literal type="number">0x10A3F</literal></expr>,<expr><literal type="number">0x10AE5</literal></expr>,<expr><literal type="number">0x10AE6</literal></expr>,<expr><literal type="number">0x11001</literal></expr>,<expr><literal type="number">0x11038</literal></expr>,
<expr><literal type="number">0x11039</literal></expr>,<expr><literal type="number">0x1103A</literal></expr>,<expr><literal type="number">0x1103B</literal></expr>,<expr><literal type="number">0x1103C</literal></expr>,<expr><literal type="number">0x1103D</literal></expr>,<expr><literal type="number">0x1103E</literal></expr>,<expr><literal type="number">0x1103F</literal></expr>,<expr><literal type="number">0x11040</literal></expr>,
<expr><literal type="number">0x11041</literal></expr>,<expr><literal type="number">0x11042</literal></expr>,<expr><literal type="number">0x11043</literal></expr>,<expr><literal type="number">0x11044</literal></expr>,<expr><literal type="number">0x11045</literal></expr>,<expr><literal type="number">0x11046</literal></expr>,<expr><literal type="number">0x1107F</literal></expr>,<expr><literal type="number">0x11080</literal></expr>,
<expr><literal type="number">0x11081</literal></expr>,<expr><literal type="number">0x110B3</literal></expr>,<expr><literal type="number">0x110B4</literal></expr>,<expr><literal type="number">0x110B5</literal></expr>,<expr><literal type="number">0x110B6</literal></expr>,<expr><literal type="number">0x110B9</literal></expr>,<expr><literal type="number">0x110BA</literal></expr>,<expr><literal type="number">0x11100</literal></expr>,
<expr><literal type="number">0x11101</literal></expr>,<expr><literal type="number">0x11102</literal></expr>,<expr><literal type="number">0x11127</literal></expr>,<expr><literal type="number">0x11128</literal></expr>,<expr><literal type="number">0x11129</literal></expr>,<expr><literal type="number">0x1112A</literal></expr>,<expr><literal type="number">0x1112B</literal></expr>,<expr><literal type="number">0x1112D</literal></expr>,
<expr><literal type="number">0x1112E</literal></expr>,<expr><literal type="number">0x1112F</literal></expr>,<expr><literal type="number">0x11130</literal></expr>,<expr><literal type="number">0x11131</literal></expr>,<expr><literal type="number">0x11132</literal></expr>,<expr><literal type="number">0x11133</literal></expr>,<expr><literal type="number">0x11134</literal></expr>,<expr><literal type="number">0x11173</literal></expr>,
<expr><literal type="number">0x11180</literal></expr>,<expr><literal type="number">0x11181</literal></expr>,<expr><literal type="number">0x111B6</literal></expr>,<expr><literal type="number">0x111B7</literal></expr>,<expr><literal type="number">0x111B8</literal></expr>,<expr><literal type="number">0x111B9</literal></expr>,<expr><literal type="number">0x111BA</literal></expr>,<expr><literal type="number">0x111BB</literal></expr>,
<expr><literal type="number">0x111BC</literal></expr>,<expr><literal type="number">0x111BD</literal></expr>,<expr><literal type="number">0x111BE</literal></expr>,<expr><literal type="number">0x111CA</literal></expr>,<expr><literal type="number">0x111CB</literal></expr>,<expr><literal type="number">0x111CC</literal></expr>,<expr><literal type="number">0x1122F</literal></expr>,<expr><literal type="number">0x11230</literal></expr>,
<expr><literal type="number">0x11231</literal></expr>,<expr><literal type="number">0x11234</literal></expr>,<expr><literal type="number">0x11236</literal></expr>,<expr><literal type="number">0x11237</literal></expr>,<expr><literal type="number">0x1123E</literal></expr>,<expr><literal type="number">0x112DF</literal></expr>,<expr><literal type="number">0x112E3</literal></expr>,<expr><literal type="number">0x112E4</literal></expr>,
<expr><literal type="number">0x112E5</literal></expr>,<expr><literal type="number">0x112E6</literal></expr>,<expr><literal type="number">0x112E7</literal></expr>,<expr><literal type="number">0x112E8</literal></expr>,<expr><literal type="number">0x112E9</literal></expr>,<expr><literal type="number">0x112EA</literal></expr>,<expr><literal type="number">0x11300</literal></expr>,<expr><literal type="number">0x11301</literal></expr>,
<expr><literal type="number">0x1133C</literal></expr>,<expr><literal type="number">0x11340</literal></expr>,<expr><literal type="number">0x11366</literal></expr>,<expr><literal type="number">0x11367</literal></expr>,<expr><literal type="number">0x11368</literal></expr>,<expr><literal type="number">0x11369</literal></expr>,<expr><literal type="number">0x1136A</literal></expr>,<expr><literal type="number">0x1136B</literal></expr>,
<expr><literal type="number">0x1136C</literal></expr>,<expr><literal type="number">0x11370</literal></expr>,<expr><literal type="number">0x11371</literal></expr>,<expr><literal type="number">0x11372</literal></expr>,<expr><literal type="number">0x11373</literal></expr>,<expr><literal type="number">0x11374</literal></expr>,<expr><literal type="number">0x11438</literal></expr>,<expr><literal type="number">0x11439</literal></expr>,
<expr><literal type="number">0x1143A</literal></expr>,<expr><literal type="number">0x1143B</literal></expr>,<expr><literal type="number">0x1143C</literal></expr>,<expr><literal type="number">0x1143D</literal></expr>,<expr><literal type="number">0x1143E</literal></expr>,<expr><literal type="number">0x1143F</literal></expr>,<expr><literal type="number">0x11442</literal></expr>,<expr><literal type="number">0x11443</literal></expr>,
<expr><literal type="number">0x11444</literal></expr>,<expr><literal type="number">0x11446</literal></expr>,<expr><literal type="number">0x114B3</literal></expr>,<expr><literal type="number">0x114B4</literal></expr>,<expr><literal type="number">0x114B5</literal></expr>,<expr><literal type="number">0x114B6</literal></expr>,<expr><literal type="number">0x114B7</literal></expr>,<expr><literal type="number">0x114B8</literal></expr>,
<expr><literal type="number">0x114BA</literal></expr>,<expr><literal type="number">0x114BF</literal></expr>,<expr><literal type="number">0x114C0</literal></expr>,<expr><literal type="number">0x114C2</literal></expr>,<expr><literal type="number">0x114C3</literal></expr>,<expr><literal type="number">0x115B2</literal></expr>,<expr><literal type="number">0x115B3</literal></expr>,<expr><literal type="number">0x115B4</literal></expr>,
<expr><literal type="number">0x115B5</literal></expr>,<expr><literal type="number">0x115BC</literal></expr>,<expr><literal type="number">0x115BD</literal></expr>,<expr><literal type="number">0x115BF</literal></expr>,<expr><literal type="number">0x115C0</literal></expr>,<expr><literal type="number">0x115DC</literal></expr>,<expr><literal type="number">0x115DD</literal></expr>,<expr><literal type="number">0x11633</literal></expr>,
<expr><literal type="number">0x11634</literal></expr>,<expr><literal type="number">0x11635</literal></expr>,<expr><literal type="number">0x11636</literal></expr>,<expr><literal type="number">0x11637</literal></expr>,<expr><literal type="number">0x11638</literal></expr>,<expr><literal type="number">0x11639</literal></expr>,<expr><literal type="number">0x1163A</literal></expr>,<expr><literal type="number">0x1163D</literal></expr>,
<expr><literal type="number">0x1163F</literal></expr>,<expr><literal type="number">0x11640</literal></expr>,<expr><literal type="number">0x116AB</literal></expr>,<expr><literal type="number">0x116AD</literal></expr>,<expr><literal type="number">0x116B0</literal></expr>,<expr><literal type="number">0x116B1</literal></expr>,<expr><literal type="number">0x116B2</literal></expr>,<expr><literal type="number">0x116B3</literal></expr>,
<expr><literal type="number">0x116B4</literal></expr>,<expr><literal type="number">0x116B5</literal></expr>,<expr><literal type="number">0x116B7</literal></expr>,<expr><literal type="number">0x1171D</literal></expr>,<expr><literal type="number">0x1171E</literal></expr>,<expr><literal type="number">0x1171F</literal></expr>,<expr><literal type="number">0x11722</literal></expr>,<expr><literal type="number">0x11723</literal></expr>,
<expr><literal type="number">0x11724</literal></expr>,<expr><literal type="number">0x11725</literal></expr>,<expr><literal type="number">0x11727</literal></expr>,<expr><literal type="number">0x11728</literal></expr>,<expr><literal type="number">0x11729</literal></expr>,<expr><literal type="number">0x1172A</literal></expr>,<expr><literal type="number">0x1172B</literal></expr>,<expr><literal type="number">0x11C30</literal></expr>,
<expr><literal type="number">0x11C31</literal></expr>,<expr><literal type="number">0x11C32</literal></expr>,<expr><literal type="number">0x11C33</literal></expr>,<expr><literal type="number">0x11C34</literal></expr>,<expr><literal type="number">0x11C35</literal></expr>,<expr><literal type="number">0x11C36</literal></expr>,<expr><literal type="number">0x11C38</literal></expr>,<expr><literal type="number">0x11C39</literal></expr>,
<expr><literal type="number">0x11C3A</literal></expr>,<expr><literal type="number">0x11C3B</literal></expr>,<expr><literal type="number">0x11C3C</literal></expr>,<expr><literal type="number">0x11C3D</literal></expr>,<expr><literal type="number">0x11C3F</literal></expr>,<expr><literal type="number">0x11C92</literal></expr>,<expr><literal type="number">0x11C93</literal></expr>,<expr><literal type="number">0x11C94</literal></expr>,
<expr><literal type="number">0x11C95</literal></expr>,<expr><literal type="number">0x11C96</literal></expr>,<expr><literal type="number">0x11C97</literal></expr>,<expr><literal type="number">0x11C98</literal></expr>,<expr><literal type="number">0x11C99</literal></expr>,<expr><literal type="number">0x11C9A</literal></expr>,<expr><literal type="number">0x11C9B</literal></expr>,<expr><literal type="number">0x11C9C</literal></expr>,
<expr><literal type="number">0x11C9D</literal></expr>,<expr><literal type="number">0x11C9E</literal></expr>,<expr><literal type="number">0x11C9F</literal></expr>,<expr><literal type="number">0x11CA0</literal></expr>,<expr><literal type="number">0x11CA1</literal></expr>,<expr><literal type="number">0x11CA2</literal></expr>,<expr><literal type="number">0x11CA3</literal></expr>,<expr><literal type="number">0x11CA4</literal></expr>,
<expr><literal type="number">0x11CA5</literal></expr>,<expr><literal type="number">0x11CA6</literal></expr>,<expr><literal type="number">0x11CA7</literal></expr>,<expr><literal type="number">0x11CAA</literal></expr>,<expr><literal type="number">0x11CAB</literal></expr>,<expr><literal type="number">0x11CAC</literal></expr>,<expr><literal type="number">0x11CAD</literal></expr>,<expr><literal type="number">0x11CAE</literal></expr>,
<expr><literal type="number">0x11CAF</literal></expr>,<expr><literal type="number">0x11CB0</literal></expr>,<expr><literal type="number">0x11CB2</literal></expr>,<expr><literal type="number">0x11CB3</literal></expr>,<expr><literal type="number">0x11CB5</literal></expr>,<expr><literal type="number">0x11CB6</literal></expr>,<expr><literal type="number">0x16AF0</literal></expr>,<expr><literal type="number">0x16AF1</literal></expr>,
<expr><literal type="number">0x16AF2</literal></expr>,<expr><literal type="number">0x16AF3</literal></expr>,<expr><literal type="number">0x16AF4</literal></expr>,<expr><literal type="number">0x16B30</literal></expr>,<expr><literal type="number">0x16B31</literal></expr>,<expr><literal type="number">0x16B32</literal></expr>,<expr><literal type="number">0x16B33</literal></expr>,<expr><literal type="number">0x16B34</literal></expr>,
<expr><literal type="number">0x16B35</literal></expr>,<expr><literal type="number">0x16B36</literal></expr>,<expr><literal type="number">0x16F8F</literal></expr>,<expr><literal type="number">0x16F90</literal></expr>,<expr><literal type="number">0x16F91</literal></expr>,<expr><literal type="number">0x16F92</literal></expr>,<expr><literal type="number">0x1BC9D</literal></expr>,<expr><literal type="number">0x1BC9E</literal></expr>,
<expr><literal type="number">0x1D167</literal></expr>,<expr><literal type="number">0x1D168</literal></expr>,<expr><literal type="number">0x1D169</literal></expr>,<expr><literal type="number">0x1D17B</literal></expr>,<expr><literal type="number">0x1D17C</literal></expr>,<expr><literal type="number">0x1D17D</literal></expr>,<expr><literal type="number">0x1D17E</literal></expr>,<expr><literal type="number">0x1D17F</literal></expr>,
<expr><literal type="number">0x1D180</literal></expr>,<expr><literal type="number">0x1D181</literal></expr>,<expr><literal type="number">0x1D182</literal></expr>,<expr><literal type="number">0x1D185</literal></expr>,<expr><literal type="number">0x1D186</literal></expr>,<expr><literal type="number">0x1D187</literal></expr>,<expr><literal type="number">0x1D188</literal></expr>,<expr><literal type="number">0x1D189</literal></expr>,
<expr><literal type="number">0x1D18A</literal></expr>,<expr><literal type="number">0x1D18B</literal></expr>,<expr><literal type="number">0x1D1AA</literal></expr>,<expr><literal type="number">0x1D1AB</literal></expr>,<expr><literal type="number">0x1D1AC</literal></expr>,<expr><literal type="number">0x1D1AD</literal></expr>,<expr><literal type="number">0x1D242</literal></expr>,<expr><literal type="number">0x1D243</literal></expr>,
<expr><literal type="number">0x1D244</literal></expr>,<expr><literal type="number">0x1DA00</literal></expr>,<expr><literal type="number">0x1DA01</literal></expr>,<expr><literal type="number">0x1DA02</literal></expr>,<expr><literal type="number">0x1DA03</literal></expr>,<expr><literal type="number">0x1DA04</literal></expr>,<expr><literal type="number">0x1DA05</literal></expr>,<expr><literal type="number">0x1DA06</literal></expr>,
<expr><literal type="number">0x1DA07</literal></expr>,<expr><literal type="number">0x1DA08</literal></expr>,<expr><literal type="number">0x1DA09</literal></expr>,<expr><literal type="number">0x1DA0A</literal></expr>,<expr><literal type="number">0x1DA0B</literal></expr>,<expr><literal type="number">0x1DA0C</literal></expr>,<expr><literal type="number">0x1DA0D</literal></expr>,<expr><literal type="number">0x1DA0E</literal></expr>,
<expr><literal type="number">0x1DA0F</literal></expr>,<expr><literal type="number">0x1DA10</literal></expr>,<expr><literal type="number">0x1DA11</literal></expr>,<expr><literal type="number">0x1DA12</literal></expr>,<expr><literal type="number">0x1DA13</literal></expr>,<expr><literal type="number">0x1DA14</literal></expr>,<expr><literal type="number">0x1DA15</literal></expr>,<expr><literal type="number">0x1DA16</literal></expr>,
<expr><literal type="number">0x1DA17</literal></expr>,<expr><literal type="number">0x1DA18</literal></expr>,<expr><literal type="number">0x1DA19</literal></expr>,<expr><literal type="number">0x1DA1A</literal></expr>,<expr><literal type="number">0x1DA1B</literal></expr>,<expr><literal type="number">0x1DA1C</literal></expr>,<expr><literal type="number">0x1DA1D</literal></expr>,<expr><literal type="number">0x1DA1E</literal></expr>,
<expr><literal type="number">0x1DA1F</literal></expr>,<expr><literal type="number">0x1DA20</literal></expr>,<expr><literal type="number">0x1DA21</literal></expr>,<expr><literal type="number">0x1DA22</literal></expr>,<expr><literal type="number">0x1DA23</literal></expr>,<expr><literal type="number">0x1DA24</literal></expr>,<expr><literal type="number">0x1DA25</literal></expr>,<expr><literal type="number">0x1DA26</literal></expr>,
<expr><literal type="number">0x1DA27</literal></expr>,<expr><literal type="number">0x1DA28</literal></expr>,<expr><literal type="number">0x1DA29</literal></expr>,<expr><literal type="number">0x1DA2A</literal></expr>,<expr><literal type="number">0x1DA2B</literal></expr>,<expr><literal type="number">0x1DA2C</literal></expr>,<expr><literal type="number">0x1DA2D</literal></expr>,<expr><literal type="number">0x1DA2E</literal></expr>,
<expr><literal type="number">0x1DA2F</literal></expr>,<expr><literal type="number">0x1DA30</literal></expr>,<expr><literal type="number">0x1DA31</literal></expr>,<expr><literal type="number">0x1DA32</literal></expr>,<expr><literal type="number">0x1DA33</literal></expr>,<expr><literal type="number">0x1DA34</literal></expr>,<expr><literal type="number">0x1DA35</literal></expr>,<expr><literal type="number">0x1DA36</literal></expr>,
<expr><literal type="number">0x1DA3B</literal></expr>,<expr><literal type="number">0x1DA3C</literal></expr>,<expr><literal type="number">0x1DA3D</literal></expr>,<expr><literal type="number">0x1DA3E</literal></expr>,<expr><literal type="number">0x1DA3F</literal></expr>,<expr><literal type="number">0x1DA40</literal></expr>,<expr><literal type="number">0x1DA41</literal></expr>,<expr><literal type="number">0x1DA42</literal></expr>,
<expr><literal type="number">0x1DA43</literal></expr>,<expr><literal type="number">0x1DA44</literal></expr>,<expr><literal type="number">0x1DA45</literal></expr>,<expr><literal type="number">0x1DA46</literal></expr>,<expr><literal type="number">0x1DA47</literal></expr>,<expr><literal type="number">0x1DA48</literal></expr>,<expr><literal type="number">0x1DA49</literal></expr>,<expr><literal type="number">0x1DA4A</literal></expr>,
<expr><literal type="number">0x1DA4B</literal></expr>,<expr><literal type="number">0x1DA4C</literal></expr>,<expr><literal type="number">0x1DA4D</literal></expr>,<expr><literal type="number">0x1DA4E</literal></expr>,<expr><literal type="number">0x1DA4F</literal></expr>,<expr><literal type="number">0x1DA50</literal></expr>,<expr><literal type="number">0x1DA51</literal></expr>,<expr><literal type="number">0x1DA52</literal></expr>,
<expr><literal type="number">0x1DA53</literal></expr>,<expr><literal type="number">0x1DA54</literal></expr>,<expr><literal type="number">0x1DA55</literal></expr>,<expr><literal type="number">0x1DA56</literal></expr>,<expr><literal type="number">0x1DA57</literal></expr>,<expr><literal type="number">0x1DA58</literal></expr>,<expr><literal type="number">0x1DA59</literal></expr>,<expr><literal type="number">0x1DA5A</literal></expr>,
<expr><literal type="number">0x1DA5B</literal></expr>,<expr><literal type="number">0x1DA5C</literal></expr>,<expr><literal type="number">0x1DA5D</literal></expr>,<expr><literal type="number">0x1DA5E</literal></expr>,<expr><literal type="number">0x1DA5F</literal></expr>,<expr><literal type="number">0x1DA60</literal></expr>,<expr><literal type="number">0x1DA61</literal></expr>,<expr><literal type="number">0x1DA62</literal></expr>,
<expr><literal type="number">0x1DA63</literal></expr>,<expr><literal type="number">0x1DA64</literal></expr>,<expr><literal type="number">0x1DA65</literal></expr>,<expr><literal type="number">0x1DA66</literal></expr>,<expr><literal type="number">0x1DA67</literal></expr>,<expr><literal type="number">0x1DA68</literal></expr>,<expr><literal type="number">0x1DA69</literal></expr>,<expr><literal type="number">0x1DA6A</literal></expr>,
<expr><literal type="number">0x1DA6B</literal></expr>,<expr><literal type="number">0x1DA6C</literal></expr>,<expr><literal type="number">0x1DA75</literal></expr>,<expr><literal type="number">0x1DA84</literal></expr>,<expr><literal type="number">0x1DA9B</literal></expr>,<expr><literal type="number">0x1DA9C</literal></expr>,<expr><literal type="number">0x1DA9D</literal></expr>,<expr><literal type="number">0x1DA9E</literal></expr>,
<expr><literal type="number">0x1DA9F</literal></expr>,<expr><literal type="number">0x1DAA1</literal></expr>,<expr><literal type="number">0x1DAA2</literal></expr>,<expr><literal type="number">0x1DAA3</literal></expr>,<expr><literal type="number">0x1DAA4</literal></expr>,<expr><literal type="number">0x1DAA5</literal></expr>,<expr><literal type="number">0x1DAA6</literal></expr>,<expr><literal type="number">0x1DAA7</literal></expr>,
<expr><literal type="number">0x1DAA8</literal></expr>,<expr><literal type="number">0x1DAA9</literal></expr>,<expr><literal type="number">0x1DAAA</literal></expr>,<expr><literal type="number">0x1DAAB</literal></expr>,<expr><literal type="number">0x1DAAC</literal></expr>,<expr><literal type="number">0x1DAAD</literal></expr>,<expr><literal type="number">0x1DAAE</literal></expr>,<expr><literal type="number">0x1DAAF</literal></expr>,
<expr><literal type="number">0x1E000</literal></expr>,<expr><literal type="number">0x1E001</literal></expr>,<expr><literal type="number">0x1E002</literal></expr>,<expr><literal type="number">0x1E003</literal></expr>,<expr><literal type="number">0x1E004</literal></expr>,<expr><literal type="number">0x1E005</literal></expr>,<expr><literal type="number">0x1E006</literal></expr>,<expr><literal type="number">0x1E008</literal></expr>,
<expr><literal type="number">0x1E009</literal></expr>,<expr><literal type="number">0x1E00A</literal></expr>,<expr><literal type="number">0x1E00B</literal></expr>,<expr><literal type="number">0x1E00C</literal></expr>,<expr><literal type="number">0x1E00D</literal></expr>,<expr><literal type="number">0x1E00E</literal></expr>,<expr><literal type="number">0x1E00F</literal></expr>,<expr><literal type="number">0x1E010</literal></expr>,
<expr><literal type="number">0x1E011</literal></expr>,<expr><literal type="number">0x1E012</literal></expr>,<expr><literal type="number">0x1E013</literal></expr>,<expr><literal type="number">0x1E014</literal></expr>,<expr><literal type="number">0x1E015</literal></expr>,<expr><literal type="number">0x1E016</literal></expr>,<expr><literal type="number">0x1E017</literal></expr>,<expr><literal type="number">0x1E018</literal></expr>,
<expr><literal type="number">0x1E01B</literal></expr>,<expr><literal type="number">0x1E01C</literal></expr>,<expr><literal type="number">0x1E01D</literal></expr>,<expr><literal type="number">0x1E01E</literal></expr>,<expr><literal type="number">0x1E01F</literal></expr>,<expr><literal type="number">0x1E020</literal></expr>,<expr><literal type="number">0x1E021</literal></expr>,<expr><literal type="number">0x1E023</literal></expr>,
<expr><literal type="number">0x1E024</literal></expr>,<expr><literal type="number">0x1E026</literal></expr>,<expr><literal type="number">0x1E027</literal></expr>,<expr><literal type="number">0x1E028</literal></expr>,<expr><literal type="number">0x1E029</literal></expr>,<expr><literal type="number">0x1E02A</literal></expr>,<expr><literal type="number">0x1E8D0</literal></expr>,<expr><literal type="number">0x1E8D1</literal></expr>,
<expr><literal type="number">0x1E8D2</literal></expr>,<expr><literal type="number">0x1E8D3</literal></expr>,<expr><literal type="number">0x1E8D4</literal></expr>,<expr><literal type="number">0x1E8D5</literal></expr>,<expr><literal type="number">0x1E8D6</literal></expr>,<expr><literal type="number">0x1E944</literal></expr>,<expr><literal type="number">0x1E945</literal></expr>,<expr><literal type="number">0x1E946</literal></expr>,
<expr><literal type="number">0x1E947</literal></expr>,<expr><literal type="number">0x1E948</literal></expr>,<expr><literal type="number">0x1E949</literal></expr>,<expr><literal type="number">0x1E94A</literal></expr>,<expr><literal type="number">0xE0100</literal></expr>,<expr><literal type="number">0xE0101</literal></expr>,<expr><literal type="number">0xE0102</literal></expr>,<expr><literal type="number">0xE0103</literal></expr>,
<expr><literal type="number">0xE0104</literal></expr>,<expr><literal type="number">0xE0105</literal></expr>,<expr><literal type="number">0xE0106</literal></expr>,<expr><literal type="number">0xE0107</literal></expr>,<expr><literal type="number">0xE0108</literal></expr>,<expr><literal type="number">0xE0109</literal></expr>,<expr><literal type="number">0xE010A</literal></expr>,<expr><literal type="number">0xE010B</literal></expr>,
<expr><literal type="number">0xE010C</literal></expr>,<expr><literal type="number">0xE010D</literal></expr>,<expr><literal type="number">0xE010E</literal></expr>,<expr><literal type="number">0xE010F</literal></expr>,<expr><literal type="number">0xE0110</literal></expr>,<expr><literal type="number">0xE0111</literal></expr>,<expr><literal type="number">0xE0112</literal></expr>,<expr><literal type="number">0xE0113</literal></expr>,
<expr><literal type="number">0xE0114</literal></expr>,<expr><literal type="number">0xE0115</literal></expr>,<expr><literal type="number">0xE0116</literal></expr>,<expr><literal type="number">0xE0117</literal></expr>,<expr><literal type="number">0xE0118</literal></expr>,<expr><literal type="number">0xE0119</literal></expr>,<expr><literal type="number">0xE011A</literal></expr>,<expr><literal type="number">0xE011B</literal></expr>,
<expr><literal type="number">0xE011C</literal></expr>,<expr><literal type="number">0xE011D</literal></expr>,<expr><literal type="number">0xE011E</literal></expr>,<expr><literal type="number">0xE011F</literal></expr>,<expr><literal type="number">0xE0120</literal></expr>,<expr><literal type="number">0xE0121</literal></expr>,<expr><literal type="number">0xE0122</literal></expr>,<expr><literal type="number">0xE0123</literal></expr>,
<expr><literal type="number">0xE0124</literal></expr>,<expr><literal type="number">0xE0125</literal></expr>,<expr><literal type="number">0xE0126</literal></expr>,<expr><literal type="number">0xE0127</literal></expr>,<expr><literal type="number">0xE0128</literal></expr>,<expr><literal type="number">0xE0129</literal></expr>,<expr><literal type="number">0xE012A</literal></expr>,<expr><literal type="number">0xE012B</literal></expr>,
<expr><literal type="number">0xE012C</literal></expr>,<expr><literal type="number">0xE012D</literal></expr>,<expr><literal type="number">0xE012E</literal></expr>,<expr><literal type="number">0xE012F</literal></expr>,<expr><literal type="number">0xE0130</literal></expr>,<expr><literal type="number">0xE0131</literal></expr>,<expr><literal type="number">0xE0132</literal></expr>,<expr><literal type="number">0xE0133</literal></expr>,
<expr><literal type="number">0xE0134</literal></expr>,<expr><literal type="number">0xE0135</literal></expr>,<expr><literal type="number">0xE0136</literal></expr>,<expr><literal type="number">0xE0137</literal></expr>,<expr><literal type="number">0xE0138</literal></expr>,<expr><literal type="number">0xE0139</literal></expr>,<expr><literal type="number">0xE013A</literal></expr>,<expr><literal type="number">0xE013B</literal></expr>,
<expr><literal type="number">0xE013C</literal></expr>,<expr><literal type="number">0xE013D</literal></expr>,<expr><literal type="number">0xE013E</literal></expr>,<expr><literal type="number">0xE013F</literal></expr>,<expr><literal type="number">0xE0140</literal></expr>,<expr><literal type="number">0xE0141</literal></expr>,<expr><literal type="number">0xE0142</literal></expr>,<expr><literal type="number">0xE0143</literal></expr>,
<expr><literal type="number">0xE0144</literal></expr>,<expr><literal type="number">0xE0145</literal></expr>,<expr><literal type="number">0xE0146</literal></expr>,<expr><literal type="number">0xE0147</literal></expr>,<expr><literal type="number">0xE0148</literal></expr>,<expr><literal type="number">0xE0149</literal></expr>,<expr><literal type="number">0xE014A</literal></expr>,<expr><literal type="number">0xE014B</literal></expr>,
<expr><literal type="number">0xE014C</literal></expr>,<expr><literal type="number">0xE014D</literal></expr>,<expr><literal type="number">0xE014E</literal></expr>,<expr><literal type="number">0xE014F</literal></expr>,<expr><literal type="number">0xE0150</literal></expr>,<expr><literal type="number">0xE0151</literal></expr>,<expr><literal type="number">0xE0152</literal></expr>,<expr><literal type="number">0xE0153</literal></expr>,
<expr><literal type="number">0xE0154</literal></expr>,<expr><literal type="number">0xE0155</literal></expr>,<expr><literal type="number">0xE0156</literal></expr>,<expr><literal type="number">0xE0157</literal></expr>,<expr><literal type="number">0xE0158</literal></expr>,<expr><literal type="number">0xE0159</literal></expr>,<expr><literal type="number">0xE015A</literal></expr>,<expr><literal type="number">0xE015B</literal></expr>,
<expr><literal type="number">0xE015C</literal></expr>,<expr><literal type="number">0xE015D</literal></expr>,<expr><literal type="number">0xE015E</literal></expr>,<expr><literal type="number">0xE015F</literal></expr>,<expr><literal type="number">0xE0160</literal></expr>,<expr><literal type="number">0xE0161</literal></expr>,<expr><literal type="number">0xE0162</literal></expr>,<expr><literal type="number">0xE0163</literal></expr>,
<expr><literal type="number">0xE0164</literal></expr>,<expr><literal type="number">0xE0165</literal></expr>,<expr><literal type="number">0xE0166</literal></expr>,<expr><literal type="number">0xE0167</literal></expr>,<expr><literal type="number">0xE0168</literal></expr>,<expr><literal type="number">0xE0169</literal></expr>,<expr><literal type="number">0xE016A</literal></expr>,<expr><literal type="number">0xE016B</literal></expr>,
<expr><literal type="number">0xE016C</literal></expr>,<expr><literal type="number">0xE016D</literal></expr>,<expr><literal type="number">0xE016E</literal></expr>,<expr><literal type="number">0xE016F</literal></expr>,<expr><literal type="number">0xE0170</literal></expr>,<expr><literal type="number">0xE0171</literal></expr>,<expr><literal type="number">0xE0172</literal></expr>,<expr><literal type="number">0xE0173</literal></expr>,
<expr><literal type="number">0xE0174</literal></expr>,<expr><literal type="number">0xE0175</literal></expr>,<expr><literal type="number">0xE0176</literal></expr>,<expr><literal type="number">0xE0177</literal></expr>,<expr><literal type="number">0xE0178</literal></expr>,<expr><literal type="number">0xE0179</literal></expr>,<expr><literal type="number">0xE017A</literal></expr>,<expr><literal type="number">0xE017B</literal></expr>,
<expr><literal type="number">0xE017C</literal></expr>,<expr><literal type="number">0xE017D</literal></expr>,<expr><literal type="number">0xE017E</literal></expr>,<expr><literal type="number">0xE017F</literal></expr>,<expr><literal type="number">0xE0180</literal></expr>,<expr><literal type="number">0xE0181</literal></expr>,<expr><literal type="number">0xE0182</literal></expr>,<expr><literal type="number">0xE0183</literal></expr>,
<expr><literal type="number">0xE0184</literal></expr>,<expr><literal type="number">0xE0185</literal></expr>,<expr><literal type="number">0xE0186</literal></expr>,<expr><literal type="number">0xE0187</literal></expr>,<expr><literal type="number">0xE0188</literal></expr>,<expr><literal type="number">0xE0189</literal></expr>,<expr><literal type="number">0xE018A</literal></expr>,<expr><literal type="number">0xE018B</literal></expr>,
<expr><literal type="number">0xE018C</literal></expr>,<expr><literal type="number">0xE018D</literal></expr>,<expr><literal type="number">0xE018E</literal></expr>,<expr><literal type="number">0xE018F</literal></expr>,<expr><literal type="number">0xE0190</literal></expr>,<expr><literal type="number">0xE0191</literal></expr>,<expr><literal type="number">0xE0192</literal></expr>,<expr><literal type="number">0xE0193</literal></expr>,
<expr><literal type="number">0xE0194</literal></expr>,<expr><literal type="number">0xE0195</literal></expr>,<expr><literal type="number">0xE0196</literal></expr>,<expr><literal type="number">0xE0197</literal></expr>,<expr><literal type="number">0xE0198</literal></expr>,<expr><literal type="number">0xE0199</literal></expr>,<expr><literal type="number">0xE019A</literal></expr>,<expr><literal type="number">0xE019B</literal></expr>,
<expr><literal type="number">0xE019C</literal></expr>,<expr><literal type="number">0xE019D</literal></expr>,<expr><literal type="number">0xE019E</literal></expr>,<expr><literal type="number">0xE019F</literal></expr>,<expr><literal type="number">0xE01A0</literal></expr>,<expr><literal type="number">0xE01A1</literal></expr>,<expr><literal type="number">0xE01A2</literal></expr>,<expr><literal type="number">0xE01A3</literal></expr>,
<expr><literal type="number">0xE01A4</literal></expr>,<expr><literal type="number">0xE01A5</literal></expr>,<expr><literal type="number">0xE01A6</literal></expr>,<expr><literal type="number">0xE01A7</literal></expr>,<expr><literal type="number">0xE01A8</literal></expr>,<expr><literal type="number">0xE01A9</literal></expr>,<expr><literal type="number">0xE01AA</literal></expr>,<expr><literal type="number">0xE01AB</literal></expr>,
<expr><literal type="number">0xE01AC</literal></expr>,<expr><literal type="number">0xE01AD</literal></expr>,<expr><literal type="number">0xE01AE</literal></expr>,<expr><literal type="number">0xE01AF</literal></expr>,<expr><literal type="number">0xE01B0</literal></expr>,<expr><literal type="number">0xE01B1</literal></expr>,<expr><literal type="number">0xE01B2</literal></expr>,<expr><literal type="number">0xE01B3</literal></expr>,
<expr><literal type="number">0xE01B4</literal></expr>,<expr><literal type="number">0xE01B5</literal></expr>,<expr><literal type="number">0xE01B6</literal></expr>,<expr><literal type="number">0xE01B7</literal></expr>,<expr><literal type="number">0xE01B8</literal></expr>,<expr><literal type="number">0xE01B9</literal></expr>,<expr><literal type="number">0xE01BA</literal></expr>,<expr><literal type="number">0xE01BB</literal></expr>,
<expr><literal type="number">0xE01BC</literal></expr>,<expr><literal type="number">0xE01BD</literal></expr>,<expr><literal type="number">0xE01BE</literal></expr>,<expr><literal type="number">0xE01BF</literal></expr>,<expr><literal type="number">0xE01C0</literal></expr>,<expr><literal type="number">0xE01C1</literal></expr>,<expr><literal type="number">0xE01C2</literal></expr>,<expr><literal type="number">0xE01C3</literal></expr>,
<expr><literal type="number">0xE01C4</literal></expr>,<expr><literal type="number">0xE01C5</literal></expr>,<expr><literal type="number">0xE01C6</literal></expr>,<expr><literal type="number">0xE01C7</literal></expr>,<expr><literal type="number">0xE01C8</literal></expr>,<expr><literal type="number">0xE01C9</literal></expr>,<expr><literal type="number">0xE01CA</literal></expr>,<expr><literal type="number">0xE01CB</literal></expr>,
<expr><literal type="number">0xE01CC</literal></expr>,<expr><literal type="number">0xE01CD</literal></expr>,<expr><literal type="number">0xE01CE</literal></expr>,<expr><literal type="number">0xE01CF</literal></expr>,<expr><literal type="number">0xE01D0</literal></expr>,<expr><literal type="number">0xE01D1</literal></expr>,<expr><literal type="number">0xE01D2</literal></expr>,<expr><literal type="number">0xE01D3</literal></expr>,
<expr><literal type="number">0xE01D4</literal></expr>,<expr><literal type="number">0xE01D5</literal></expr>,<expr><literal type="number">0xE01D6</literal></expr>,<expr><literal type="number">0xE01D7</literal></expr>,<expr><literal type="number">0xE01D8</literal></expr>,<expr><literal type="number">0xE01D9</literal></expr>,<expr><literal type="number">0xE01DA</literal></expr>,<expr><literal type="number">0xE01DB</literal></expr>,
<expr><literal type="number">0xE01DC</literal></expr>,<expr><literal type="number">0xE01DD</literal></expr>,<expr><literal type="number">0xE01DE</literal></expr>,<expr><literal type="number">0xE01DF</literal></expr>,<expr><literal type="number">0xE01E0</literal></expr>,<expr><literal type="number">0xE01E1</literal></expr>,<expr><literal type="number">0xE01E2</literal></expr>,<expr><literal type="number">0xE01E3</literal></expr>,
<expr><literal type="number">0xE01E4</literal></expr>,<expr><literal type="number">0xE01E5</literal></expr>,<expr><literal type="number">0xE01E6</literal></expr>,<expr><literal type="number">0xE01E7</literal></expr>,<expr><literal type="number">0xE01E8</literal></expr>,<expr><literal type="number">0xE01E9</literal></expr>,<expr><literal type="number">0xE01EA</literal></expr>,<expr><literal type="number">0xE01EB</literal></expr>,
<expr><literal type="number">0xE01EC</literal></expr>,<expr><literal type="number">0xE01ED</literal></expr>,<expr><literal type="number">0xE01EE</literal></expr>,<expr><literal type="number">0xE01EF</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>size_t</name></type> <name>bc_history_combo_chars_len</name> <init>=
<expr><sizeof>sizeof<argument_list>(<argument><expr><name>bc_history_combo_chars</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name><name>bc_history_combo_chars</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_func_main</name><index>[]</index></name> <init>= <expr><literal type="string">"(main)"</literal></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_func_read</name><index>[]</index></name> <init>= <expr><literal type="string">"(read)"</literal></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_DEBUG_CODE</name></expr></cpp:if>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name><name>bc_inst_names</name><index>[]</index></name> <init>= <expr><block>{

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLED</name></expr></cpp:if>
<expr><literal type="string">"BC_INST_INC"</literal></expr>,
<expr><literal type="string">"BC_INST_DEC"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr><literal type="string">"BC_INST_NEG"</literal></expr>,
<expr><literal type="string">"BC_INST_BOOL_NOT"</literal></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><literal type="string">"BC_INST_TRUNC"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr><literal type="string">"BC_INST_POWER"</literal></expr>,
<expr><literal type="string">"BC_INST_MULTIPLY"</literal></expr>,
<expr><literal type="string">"BC_INST_DIVIDE"</literal></expr>,
<expr><literal type="string">"BC_INST_MODULUS"</literal></expr>,
<expr><literal type="string">"BC_INST_PLUS"</literal></expr>,
<expr><literal type="string">"BC_INST_MINUS"</literal></expr>,

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><literal type="string">"BC_INST_PLACES"</literal></expr>,

<expr><literal type="string">"BC_INST_LSHIFT"</literal></expr>,
<expr><literal type="string">"BC_INST_RSHIFT"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr><literal type="string">"BC_INST_REL_EQ"</literal></expr>,
<expr><literal type="string">"BC_INST_REL_LE"</literal></expr>,
<expr><literal type="string">"BC_INST_REL_GE"</literal></expr>,
<expr><literal type="string">"BC_INST_REL_NE"</literal></expr>,
<expr><literal type="string">"BC_INST_REL_LT"</literal></expr>,
<expr><literal type="string">"BC_INST_REL_GT"</literal></expr>,

<expr><literal type="string">"BC_INST_BOOL_OR"</literal></expr>,
<expr><literal type="string">"BC_INST_BOOL_AND"</literal></expr>,

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLED</name></expr></cpp:if>
<expr><literal type="string">"BC_INST_ASSIGN_POWER"</literal></expr>,
<expr><literal type="string">"BC_INST_ASSIGN_MULTIPLY"</literal></expr>,
<expr><literal type="string">"BC_INST_ASSIGN_DIVIDE"</literal></expr>,
<expr><literal type="string">"BC_INST_ASSIGN_MODULUS"</literal></expr>,
<expr><literal type="string">"BC_INST_ASSIGN_PLUS"</literal></expr>,
<expr><literal type="string">"BC_INST_ASSIGN_MINUS"</literal></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><literal type="string">"BC_INST_ASSIGN_PLACES"</literal></expr>,
<expr><literal type="string">"BC_INST_ASSIGN_LSHIFT"</literal></expr>,
<expr><literal type="string">"BC_INST_ASSIGN_RSHIFT"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><literal type="string">"BC_INST_ASSIGN"</literal></expr>,

<expr><literal type="string">"BC_INST_ASSIGN_POWER_NO_VAL"</literal></expr>,
<expr><literal type="string">"BC_INST_ASSIGN_MULTIPLY_NO_VAL"</literal></expr>,
<expr><literal type="string">"BC_INST_ASSIGN_DIVIDE_NO_VAL"</literal></expr>,
<expr><literal type="string">"BC_INST_ASSIGN_MODULUS_NO_VAL"</literal></expr>,
<expr><literal type="string">"BC_INST_ASSIGN_PLUS_NO_VAL"</literal></expr>,
<expr><literal type="string">"BC_INST_ASSIGN_MINUS_NO_VAL"</literal></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><literal type="string">"BC_INST_ASSIGN_PLACES_NO_VAL"</literal></expr>,
<expr><literal type="string">"BC_INST_ASSIGN_LSHIFT_NO_VAL"</literal></expr>,
<expr><literal type="string">"BC_INST_ASSIGN_RSHIFT_NO_VAL"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><literal type="string">"BC_INST_ASSIGN_NO_VAL"</literal></expr>,

<expr><literal type="string">"BC_INST_NUM"</literal></expr>,
<expr><literal type="string">"BC_INST_VAR"</literal></expr>,
<expr><literal type="string">"BC_INST_ARRAY_ELEM"</literal></expr>,
<expr><literal type="string">"BC_INST_ARRAY"</literal></expr>,

<expr><literal type="string">"BC_INST_ZERO"</literal></expr>,
<expr><literal type="string">"BC_INST_ONE"</literal></expr>,

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLED</name></expr></cpp:if>
<expr><literal type="string">"BC_INST_LAST"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><literal type="string">"BC_INST_IBASE"</literal></expr>,
<expr><literal type="string">"BC_INST_OBASE"</literal></expr>,
<expr><literal type="string">"BC_INST_SCALE"</literal></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><literal type="string">"BC_INST_SEED"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><literal type="string">"BC_INST_LENGTH"</literal></expr>,
<expr><literal type="string">"BC_INST_SCALE_FUNC"</literal></expr>,
<expr><literal type="string">"BC_INST_SQRT"</literal></expr>,
<expr><literal type="string">"BC_INST_ABS"</literal></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><literal type="string">"BC_INST_IRAND"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><literal type="string">"BC_INST_ASCIIFY"</literal></expr>,
<expr><literal type="string">"BC_INST_READ"</literal></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><literal type="string">"BC_INST_RAND"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><literal type="string">"BC_INST_MAXIBASE"</literal></expr>,
<expr><literal type="string">"BC_INST_MAXOBASE"</literal></expr>,
<expr><literal type="string">"BC_INST_MAXSCALE"</literal></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><literal type="string">"BC_INST_MAXRAND"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr><literal type="string">"BC_INST_PRINT"</literal></expr>,
<expr><literal type="string">"BC_INST_PRINT_POP"</literal></expr>,
<expr><literal type="string">"BC_INST_STR"</literal></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLED</name></expr></cpp:if>
<expr><literal type="string">"BC_INST_PRINT_STR"</literal></expr>,

<expr><literal type="string">"BC_INST_JUMP"</literal></expr>,
<expr><literal type="string">"BC_INST_JUMP_ZERO"</literal></expr>,

<expr><literal type="string">"BC_INST_CALL"</literal></expr>,

<expr><literal type="string">"BC_INST_RET"</literal></expr>,
<expr><literal type="string">"BC_INST_RET0"</literal></expr>,
<expr><literal type="string">"BC_INST_RET_VOID"</literal></expr>,

<expr><literal type="string">"BC_INST_HALT"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr><literal type="string">"BC_INST_POP"</literal></expr>,
<expr><literal type="string">"BC_INST_SWAP"</literal></expr>,
<expr><literal type="string">"BC_INST_MODEXP"</literal></expr>,
<expr><literal type="string">"BC_INST_DIVMOD"</literal></expr>,
<expr><literal type="string">"BC_INST_PRINT_STREAM"</literal></expr>,

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>DC_ENABLED</name></expr></cpp:if>
<expr><literal type="string">"BC_INST_POP_EXEC"</literal></expr>,

<expr><literal type="string">"BC_INST_EXECUTE"</literal></expr>,
<expr><literal type="string">"BC_INST_EXEC_COND"</literal></expr>,

<expr><literal type="string">"BC_INST_PRINT_STACK"</literal></expr>,
<expr><literal type="string">"BC_INST_CLEAR_STACK"</literal></expr>,
<expr><literal type="string">"BC_INST_REG_STACK_LEN"</literal></expr>,
<expr><literal type="string">"BC_INST_STACK_LEN"</literal></expr>,
<expr><literal type="string">"BC_INST_DUPLICATE"</literal></expr>,

<expr><literal type="string">"BC_INST_LOAD"</literal></expr>,
<expr><literal type="string">"BC_INST_PUSH_VAR"</literal></expr>,
<expr><literal type="string">"BC_INST_PUSH_TO_VAR"</literal></expr>,

<expr><literal type="string">"BC_INST_QUIT"</literal></expr>,
<expr><literal type="string">"BC_INST_NQUIT"</literal></expr>,

<expr><literal type="string">"BC_INST_EXEC_STACK_LEN"</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr><literal type="string">"BC_INST_INVALID"</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_parse_zero</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><literal type="string">"0"</literal></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_parse_one</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <init>= <expr><literal type="string">"1"</literal></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLED</name></expr></cpp:if>


<decl_stmt><decl><type><specifier>const</specifier> <name>BcLexKeyword</name></type> <name><name>bc_lex_kws</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"auto"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"break"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"continue"</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"define"</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"for"</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"if"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"limits"</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"return"</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"while"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"halt"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"last"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"ibase"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"obase"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"scale"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"seed"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"length"</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"print"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"sqrt"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"abs"</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"irand"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"asciify"</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"modexp"</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"divmod"</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"quit"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"read"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"rand"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"maxibase"</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"maxobase"</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"maxscale"</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"maxrand"</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"line_length"</literal></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"global_stacks"</literal></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"leading_zero"</literal></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"stream"</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_LEX_KW_ENTRY</name><argument_list>(<argument><expr><literal type="string">"else"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>size_t</name></type> <name>bc_lex_kws_len</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name>bc_lex_kws</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>BcLexKeyword</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_C11</name></expr></cpp:if>





<expr_stmt><expr><call><name>static_assert</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>bc_lex_kws</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>BcLexKeyword</name></expr></argument>)</argument_list></sizeof> <operator>==</operator> <name>BC_LEX_NKWS</name></expr></argument>,
<argument><expr><literal type="string">"BC_LEX_NKWS is wrong."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>




<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>bc_parse_exprs</name><index>[]</index></name> <init>= <expr><block>{


<expr><call><name>BC_PARSE_EXPR_ENTRY</name><argument_list>(<argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,



<expr><call><name>BC_PARSE_EXPR_ENTRY</name><argument_list>(<argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,



<expr><call><name>BC_PARSE_EXPR_ENTRY</name><argument_list>(<argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>


<expr><call><name>BC_PARSE_EXPR_ENTRY</name><argument_list>(<argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,


<expr><call><name>BC_PARSE_EXPR_ENTRY</name><argument_list>(<argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,


<expr><call><name>BC_PARSE_EXPR_ENTRY</name><argument_list>(<argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,


<expr><call><name>BC_PARSE_EXPR_ENTRY</name><argument_list>(<argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,


<expr><call><name>BC_PARSE_EXPR_ENTRY</name><argument_list>(<argument><expr><name>false</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,


<expr><call><name>BC_PARSE_EXPR_ENTRY</name><argument_list>(<argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,


<expr><call><name>BC_PARSE_EXPR_ENTRY</name><argument_list>(<argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,


<macro><name>BC_PARSE_EXPR_ENTRY</name><argument_list>(<argument>false</argument>, <argument>false</argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>)</argument_list></macro>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>


<expr><call><name>BC_PARSE_EXPR_ENTRY</name><argument_list>(<argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,


<expr><call><name>BC_PARSE_EXPR_ENTRY</name><argument_list>(<argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,


<expr><call><name>BC_PARSE_EXPR_ENTRY</name><argument_list>(<argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,


<expr><call><name>BC_PARSE_EXPR_ENTRY</name><argument_list>(<argument><expr><name>false</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,


<expr><call><name>BC_PARSE_EXPR_ENTRY</name><argument_list>(<argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>false</name></expr></argument>, <argument><expr><name>true</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,


<macro><name>BC_PARSE_EXPR_ENTRY</name><argument_list>(<argument>true</argument>, <argument>true</argument>, <argument>true</argument>, <argument>true</argument>, <argument>true</argument>, <argument>false</argument>, <argument>false</argument>, <argument><literal type="number">0</literal></argument>)</argument_list></macro>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>uchar</name></type> <name><name>bc_parse_ops</name><index>[]</index></name> <init>= <expr><block>{
<expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>, <expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>, <expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>, <expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>, <expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>, <expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>, <expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>, <expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>, <expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>, <expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>, <expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>, <expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>, <expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>, <expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>, <expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>, <expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>, <expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>, <expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><call><name>BC_PARSE_OP</name><argument_list>(<argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>,
}</block></expr></init></decl>;</decl_stmt>




<decl_stmt><decl><type><specifier>const</specifier> <name>BcParseNext</name></type> <name>bc_parse_next_expr</name> <init>=
<expr><call><name>BC_PARSE_NEXT</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>BC_LEX_NLINE</name></expr></argument>, <argument><expr><name>BC_LEX_SCOLON</name></expr></argument>, <argument><expr><name>BC_LEX_RBRACE</name></expr></argument>, <argument><expr><name>BC_LEX_EOF</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>BcParseNext</name></type> <name>bc_parse_next_arg</name> <init>=
<expr><call><name>BC_PARSE_NEXT</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>BC_LEX_RPAREN</name></expr></argument>, <argument><expr><name>BC_LEX_COMMA</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>BcParseNext</name></type> <name>bc_parse_next_print</name> <init>=
<expr><call><name>BC_PARSE_NEXT</name><argument_list>(<argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>BC_LEX_COMMA</name></expr></argument>, <argument><expr><name>BC_LEX_NLINE</name></expr></argument>, <argument><expr><name>BC_LEX_SCOLON</name></expr></argument>, <argument><expr><name>BC_LEX_EOF</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>







<decl_stmt><decl><type><specifier>const</specifier> <name>BcParseNext</name></type> <name>bc_parse_next_rel</name> <init>= <expr><call><name>BC_PARSE_NEXT</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>BC_LEX_RPAREN</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>BcParseNext</name></type> <name>bc_parse_next_elem</name> <init>= <expr><call><name>BC_PARSE_NEXT</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>BC_LEX_RBRACKET</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<decl_stmt><decl><type><specifier>const</specifier> <name>BcParseNext</name></type> <name>bc_parse_next_for</name> <init>= <expr><call><name>BC_PARSE_NEXT</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>BC_LEX_SCOLON</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>BcParseNext</name></type> <name>bc_parse_next_read</name> <init>=
<expr><call><name>BC_PARSE_NEXT</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><name>BC_LEX_NLINE</name></expr></argument>, <argument><expr><name>BC_LEX_EOF</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<decl_stmt><decl><type><specifier>const</specifier> <name>BcParseNext</name></type> <name>bc_parse_next_builtin</name> <init>= <expr><call><name>BC_PARSE_NEXT</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>BC_LEX_COMMA</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>DC_ENABLED</name></expr></cpp:if>


<decl_stmt><decl><type><specifier>const</specifier> <name>uint8_t</name></type> <name><name>dc_lex_regs</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>BC_LEX_OP_REL_EQ</name></expr>, <expr><name>BC_LEX_OP_REL_LE</name></expr>, <expr><name>BC_LEX_OP_REL_GE</name></expr>, <expr><name>BC_LEX_OP_REL_NE</name></expr>,
<expr><name>BC_LEX_OP_REL_LT</name></expr>, <expr><name>BC_LEX_OP_REL_GT</name></expr>, <expr><name>BC_LEX_SCOLON</name></expr>, <expr><name>BC_LEX_COLON</name></expr>,
<expr><name>BC_LEX_KW_ELSE</name></expr>, <expr><name>BC_LEX_LOAD</name></expr>, <expr><name>BC_LEX_LOAD_POP</name></expr>, <expr><name>BC_LEX_OP_ASSIGN</name></expr>,
<expr><name>BC_LEX_STORE_PUSH</name></expr>, <expr><name>BC_LEX_REG_STACK_LEVEL</name></expr>, <expr><name>BC_LEX_ARRAY_LENGTH</name></expr>,
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>size_t</name></type> <name>dc_lex_regs_len</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name>dc_lex_regs</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>uint8_t</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>






<decl_stmt><decl><type><specifier>const</specifier> <name>uchar</name></type> <name><name>dc_lex_tokens</name><index>[]</index></name> <init>= <expr><block>{
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>BC_LEX_KW_IRAND</name></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr><name>BC_LEX_INVALID</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_LEX_INVALID</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>BC_LEX_OP_TRUNC</name></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr><name>BC_LEX_INVALID</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_LEX_OP_MODULUS</name></expr>, <expr><name>BC_LEX_INVALID</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>BC_LEX_KW_RAND</name></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr><name>BC_LEX_INVALID</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_LEX_LPAREN</name></expr>, <expr><name>BC_LEX_RPAREN</name></expr>, <expr><name>BC_LEX_OP_MULTIPLY</name></expr>, <expr><name>BC_LEX_OP_PLUS</name></expr>,
<expr><name>BC_LEX_EXEC_STACK_LENGTH</name></expr>, <expr><name>BC_LEX_OP_MINUS</name></expr>, <expr><name>BC_LEX_INVALID</name></expr>, <expr><name>BC_LEX_OP_DIVIDE</name></expr>,
<expr><name>BC_LEX_INVALID</name></expr>, <expr><name>BC_LEX_INVALID</name></expr>, <expr><name>BC_LEX_INVALID</name></expr>, <expr><name>BC_LEX_INVALID</name></expr>,
<expr><name>BC_LEX_INVALID</name></expr>, <expr><name>BC_LEX_INVALID</name></expr>, <expr><name>BC_LEX_INVALID</name></expr>, <expr><name>BC_LEX_INVALID</name></expr>,
<expr><name>BC_LEX_INVALID</name></expr>, <expr><name>BC_LEX_INVALID</name></expr>,
<expr><name>BC_LEX_COLON</name></expr>, <expr><name>BC_LEX_SCOLON</name></expr>, <expr><name>BC_LEX_OP_REL_GT</name></expr>, <expr><name>BC_LEX_OP_REL_EQ</name></expr>,
<expr><name>BC_LEX_OP_REL_LT</name></expr>, <expr><name>BC_LEX_KW_READ</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>BC_LEX_OP_PLACES</name></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr><name>BC_LEX_INVALID</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_LEX_INVALID</name></expr>, <expr><name>BC_LEX_INVALID</name></expr>, <expr><name>BC_LEX_INVALID</name></expr>, <expr><name>BC_LEX_INVALID</name></expr>,
<expr><name>BC_LEX_INVALID</name></expr>, <expr><name>BC_LEX_INVALID</name></expr>, <expr><name>BC_LEX_EQ_NO_REG</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>BC_LEX_OP_LSHIFT</name></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr><name>BC_LEX_INVALID</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_LEX_KW_IBASE</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>BC_LEX_KW_SEED</name></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr><name>BC_LEX_INVALID</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_LEX_KW_SCALE</name></expr>, <expr><name>BC_LEX_LOAD_POP</name></expr>, <expr><name>BC_LEX_OP_BOOL_AND</name></expr>, <expr><name>BC_LEX_OP_BOOL_NOT</name></expr>,
<expr><name>BC_LEX_KW_OBASE</name></expr>, <expr><name>BC_LEX_KW_STREAM</name></expr>, <expr><name>BC_LEX_NQUIT</name></expr>, <expr><name>BC_LEX_POP</name></expr>,
<expr><name>BC_LEX_STORE_PUSH</name></expr>, <expr><name>BC_LEX_KW_MAXIBASE</name></expr>, <expr><name>BC_LEX_KW_MAXOBASE</name></expr>,
<expr><name>BC_LEX_KW_MAXSCALE</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>BC_LEX_KW_MAXRAND</name></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr><name>BC_LEX_INVALID</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_LEX_SCALE_FACTOR</name></expr>, <expr><name>BC_LEX_ARRAY_LENGTH</name></expr>, <expr><name>BC_LEX_KW_LENGTH</name></expr>,
<expr><name>BC_LEX_INVALID</name></expr>, <expr><name>BC_LEX_INVALID</name></expr>, <expr><name>BC_LEX_INVALID</name></expr>,
<expr><name>BC_LEX_OP_POWER</name></expr>, <expr><name>BC_LEX_NEG</name></expr>, <expr><name>BC_LEX_INVALID</name></expr>,
<expr><name>BC_LEX_KW_ASCIIFY</name></expr>, <expr><name>BC_LEX_KW_ABS</name></expr>, <expr><name>BC_LEX_CLEAR_STACK</name></expr>, <expr><name>BC_LEX_DUPLICATE</name></expr>,
<expr><name>BC_LEX_KW_ELSE</name></expr>, <expr><name>BC_LEX_PRINT_STACK</name></expr>, <expr><name>BC_LEX_INVALID</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>BC_LEX_OP_RSHIFT</name></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr><name>BC_LEX_INVALID</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_LEX_STORE_IBASE</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>BC_LEX_STORE_SEED</name></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr><name>BC_LEX_INVALID</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_LEX_STORE_SCALE</name></expr>, <expr><name>BC_LEX_LOAD</name></expr>,
<expr><name>BC_LEX_OP_BOOL_OR</name></expr>, <expr><name>BC_LEX_PRINT_POP</name></expr>, <expr><name>BC_LEX_STORE_OBASE</name></expr>, <expr><name>BC_LEX_KW_PRINT</name></expr>,
<expr><name>BC_LEX_KW_QUIT</name></expr>, <expr><name>BC_LEX_SWAP</name></expr>, <expr><name>BC_LEX_OP_ASSIGN</name></expr>, <expr><name>BC_LEX_INVALID</name></expr>,
<expr><name>BC_LEX_INVALID</name></expr>, <expr><name>BC_LEX_KW_SQRT</name></expr>, <expr><name>BC_LEX_INVALID</name></expr>, <expr><name>BC_LEX_EXECUTE</name></expr>,
<expr><name>BC_LEX_REG_STACK_LEVEL</name></expr>, <expr><name>BC_LEX_STACK_LEVEL</name></expr>,
<expr><name>BC_LEX_LBRACE</name></expr>, <expr><name>BC_LEX_KW_MODEXP</name></expr>, <expr><name>BC_LEX_RBRACE</name></expr>, <expr><name>BC_LEX_KW_DIVMOD</name></expr>,
<expr><name>BC_LEX_INVALID</name></expr>
}</block></expr></init></decl>;</decl_stmt>





<decl_stmt><decl><type><specifier>const</specifier> <name>uchar</name></type> <name><name>dc_parse_insts</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLED</name></expr></cpp:if>
<expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_BOOL_NOT</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>BC_INST_TRUNC</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_INST_POWER</name></expr>, <expr><name>BC_INST_MULTIPLY</name></expr>, <expr><name>BC_INST_DIVIDE</name></expr>, <expr><name>BC_INST_MODULUS</name></expr>,
<expr><name>BC_INST_PLUS</name></expr>, <expr><name>BC_INST_MINUS</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>BC_INST_PLACES</name></expr>,
<expr><name>BC_INST_LSHIFT</name></expr>, <expr><name>BC_INST_RSHIFT</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>,
<expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>,
<expr><name>BC_INST_BOOL_OR</name></expr>, <expr><name>BC_INST_BOOL_AND</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLED</name></expr></cpp:if>
<expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>,
<expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_INST_INVALID</name></expr>,
<expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_REL_GT</name></expr>, <expr><name>BC_INST_REL_LT</name></expr>,
<expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_REL_GE</name></expr>,
<expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_REL_LE</name></expr>,
<expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLED</name></expr></cpp:if>
<expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>,
<expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>,
<expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_INST_IBASE</name></expr>, <expr><name>BC_INST_OBASE</name></expr>, <expr><name>BC_INST_SCALE</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>BC_INST_SEED</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_INST_LENGTH</name></expr>, <expr><name>BC_INST_PRINT</name></expr>,
<expr><name>BC_INST_SQRT</name></expr>, <expr><name>BC_INST_ABS</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>BC_INST_IRAND</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_INST_ASCIIFY</name></expr>, <expr><name>BC_INST_MODEXP</name></expr>, <expr><name>BC_INST_DIVMOD</name></expr>,
<expr><name>BC_INST_QUIT</name></expr>, <expr><name>BC_INST_INVALID</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>BC_INST_RAND</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_INST_MAXIBASE</name></expr>,
<expr><name>BC_INST_MAXOBASE</name></expr>, <expr><name>BC_INST_MAXSCALE</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>BC_INST_MAXRAND</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_INST_LINE_LENGTH</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLED</name></expr></cpp:if>
<expr><name>BC_INST_INVALID</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_INST_LEADING_ZERO</name></expr>, <expr><name>BC_INST_PRINT_STREAM</name></expr>, <expr><name>BC_INST_INVALID</name></expr>,
<expr><name>BC_INST_REL_EQ</name></expr>, <expr><name>BC_INST_INVALID</name></expr>,
<expr><name>BC_INST_EXECUTE</name></expr>, <expr><name>BC_INST_PRINT_STACK</name></expr>, <expr><name>BC_INST_CLEAR_STACK</name></expr>,
<expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_STACK_LEN</name></expr>, <expr><name>BC_INST_DUPLICATE</name></expr>, <expr><name>BC_INST_SWAP</name></expr>,
<expr><name>BC_INST_POP</name></expr>,
<expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>BC_INST_INVALID</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>, <expr><name>BC_INST_INVALID</name></expr>,
<expr><name>BC_INST_PRINT_POP</name></expr>, <expr><name>BC_INST_NQUIT</name></expr>, <expr><name>BC_INST_EXEC_STACK_LEN</name></expr>,
<expr><name>BC_INST_SCALE_FUNC</name></expr>, <expr><name>BC_INST_INVALID</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>


<decl_stmt><decl><type><specifier>const</specifier> <name>BcRandState</name></type> <name>bc_rand_multiplier</name> <init>= <expr><name>BC_RAND_MULTIPLIER</name></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_LONG_BIT</name> <operator>&gt;=</operator> <literal type="number">64</literal></expr></cpp:if>


<decl_stmt><decl><type><specifier>const</specifier> <name>BcDig</name></type> <name><name>bc_num_bigdigMax</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="number">709551616U</literal></expr>,
<expr><literal type="number">446744073U</literal></expr>,
<expr><literal type="number">18U</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>BcDig</name></type> <name><name>bc_num_bigdigMax2</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="number">768211456U</literal></expr>,
<expr><literal type="number">374607431U</literal></expr>,
<expr><literal type="number">938463463U</literal></expr>,
<expr><literal type="number">282366920U</literal></expr>,
<expr><literal type="number">340U</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>


<decl_stmt><decl><type><specifier>const</specifier> <name>BcDig</name></type> <name><name>bc_num_bigdigMax</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="number">7296U</literal></expr>,
<expr><literal type="number">9496U</literal></expr>,
<expr><literal type="number">42U</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>BcDig</name></type> <name><name>bc_num_bigdigMax2</name><index>[]</index></name> <init>= <expr><block>{
<expr><literal type="number">1616U</literal></expr>,
<expr><literal type="number">955U</literal></expr>,
<expr><literal type="number">737U</literal></expr>,
<expr><literal type="number">6744U</literal></expr>,
<expr><literal type="number">1844U</literal></expr>,
}</block></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<decl_stmt><decl><type><specifier>const</specifier> <name>size_t</name></type> <name>bc_num_bigdigMax_size</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name>bc_num_bigdigMax</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>BcDig</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>size_t</name></type> <name>bc_num_bigdigMax2_size</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name>bc_num_bigdigMax2</name></expr></argument>)</argument_list></sizeof> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>BcDig</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_num_hex_digits</name><index>[]</index></name> <init>= <expr><literal type="string">"0123456789ABCDEF"</literal></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>BcBigDig</name></type> <name><name>bc_num_pow10</name><index>[<expr><name>BC_BASE_DIGS</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name> <init>= <expr><block>{
<expr><literal type="number">1</literal></expr>,
<expr><literal type="number">10</literal></expr>,
<expr><literal type="number">100</literal></expr>,
<expr><literal type="number">1000</literal></expr>,
<expr><literal type="number">10000</literal></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_BASE_DIGS</name> <operator>&gt;</operator> <literal type="number">4</literal></expr></cpp:if>
<expr><literal type="number">100000</literal></expr>,
<expr><literal type="number">1000000</literal></expr>,
<expr><literal type="number">10000000</literal></expr>,
<expr><literal type="number">100000000</literal></expr>,
<expr><literal type="number">1000000000</literal></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><name>BC_ENABLE_LIBRARY</name></expr></cpp:if>



<decl_stmt><decl><type><specifier>const</specifier> <name>BcNumBinaryOp</name></type> <name><name>bc_program_ops</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>bc_num_pow</name></expr>, <expr><name>bc_num_mul</name></expr>, <expr><name>bc_num_div</name></expr>, <expr><name>bc_num_mod</name></expr>, <expr><name>bc_num_add</name></expr>, <expr><name>bc_num_sub</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>bc_num_places</name></expr>, <expr><name>bc_num_lshift</name></expr>, <expr><name>bc_num_rshift</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></expr></init></decl>;</decl_stmt>



<decl_stmt><decl><type><specifier>const</specifier> <name>BcNumBinaryOpReq</name></type> <name><name>bc_program_opReqs</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>bc_num_powReq</name></expr>, <expr><name>bc_num_mulReq</name></expr>, <expr><name>bc_num_divReq</name></expr>, <expr><name>bc_num_divReq</name></expr>,
<expr><name>bc_num_addReq</name></expr>, <expr><name>bc_num_addReq</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>bc_num_placesReq</name></expr>, <expr><name>bc_num_placesReq</name></expr>, <expr><name>bc_num_placesReq</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></expr></init></decl>;</decl_stmt>



<decl_stmt><decl><type><specifier>const</specifier> <name>BcProgramUnary</name></type> <name><name>bc_program_unarys</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>bc_program_negate</name></expr>, <expr><name>bc_program_not</name></expr>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BC_ENABLE_EXTRA_MATH</name></expr></cpp:if>
<expr><name>bc_program_trunc</name></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_program_exprs_name</name><index>[]</index></name> <init>= <expr><literal type="string">"&lt;exprs&gt;"</literal></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_program_stdin_name</name><index>[]</index></name> <init>= <expr><literal type="string">"&lt;stdin&gt;"</literal></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_program_ready_msg</name><index>[]</index></name> <init>= <expr><literal type="string">"ready for more input\n"</literal></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>size_t</name></type> <name>bc_program_ready_msg_len</name> <init>= <expr><sizeof>sizeof<argument_list>(<argument><expr><name>bc_program_ready_msg</name></expr></argument>)</argument_list></sizeof> <operator>-</operator> <literal type="number">1</literal></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_program_esc_chars</name><index>[]</index></name> <init>= <expr><literal type="string">"ab\\efnqrt"</literal></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>bc_program_esc_seqs</name><index>[]</index></name> <init>= <expr><literal type="string">"\a\b\\\\\f\n\"\r\t"</literal></expr></init></decl>;</decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
