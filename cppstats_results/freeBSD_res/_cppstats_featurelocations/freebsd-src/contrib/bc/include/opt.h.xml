<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/bc/include/opt.h">






































<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BC_OPT_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BC_OPT_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdbool.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>


<typedef>typedef <type><struct>struct <name>BcOpt</name> <block>{


<decl_stmt><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>size_t</name></type> <name>optind</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>optopt</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>subopt</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>optarg</name></decl>;</decl_stmt>

}</block></struct></type> <name>BcOpt</name>;</typedef>


<typedef>typedef <type><enum>enum <name>BcOptType</name> <block>{


<decl><name>BC_OPT_NONE</name></decl>,


<decl><name>BC_OPT_REQUIRED</name></decl>,


<decl><name>BC_OPT_BC_ONLY</name></decl>,


<decl><name>BC_OPT_REQUIRED_BC_ONLY</name></decl>,


<decl><name>BC_OPT_DC_ONLY</name></decl>,

}</block></enum></type> <name>BcOptType</name>;</typedef>


<typedef>typedef <type><struct>struct <name>BcOptLong</name> <block>{


<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>BcOptType</name></type> <name>type</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>val</name></decl>;</decl_stmt>

}</block></struct></type> <name>BcOptLong</name>;</typedef>






<function_decl><type><name>void</name></type> <name>bc_opt_init</name><parameter_list>(<parameter><decl><type><name>BcOpt</name> <modifier>*</modifier></type><name>o</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>int</name></type> <name>bc_opt_parse</name><parameter_list>(<parameter><decl><type><name>BcOpt</name> <modifier>*</modifier></type><name>o</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>BcOptLong</name> <modifier>*</modifier></type><name>longopts</name></decl></parameter>)</parameter_list>;</function_decl>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BC_OPT_ISDASHDASH</name><parameter_list>(<parameter><type><name>a</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((a) != NULL &amp;&amp; (a)[0] == '-' &amp;&amp; (a)[1] == '-' &amp;&amp; (a)[2] == '\0')</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BC_OPT_ISSHORTOPT</name><parameter_list>(<parameter><type><name>a</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((a) != NULL &amp;&amp; (a)[0] == '-' &amp;&amp; (a)[1] != '-' &amp;&amp; (a)[1] != '\0')</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BC_OPT_ISLONGOPT</name><parameter_list>(<parameter><type><name>a</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((a) != NULL &amp;&amp; (a)[0] == '-' &amp;&amp; (a)[1] == '-' &amp;&amp; (a)[2] != '\0')</cpp:value></cpp:define>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
