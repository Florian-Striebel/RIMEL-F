<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/googletest/googletest/samples/sample4.h">





























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>GTEST_SAMPLES_SAMPLE4_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GTEST_SAMPLES_SAMPLE4_H_</name></cpp:macro></cpp:define>


<decl_stmt><decl><type><name>class</name></type> <name>Counter</name> <block>{<block_content>
<label><name>private</name>:</label>
<decl_stmt><decl><type><name>int</name></type> <name>counter_</name></decl>;</decl_stmt>

<label><name>public</name>:</label>

<expr_stmt><expr><call><name>Counter</name><argument_list>()</argument_list></call> <operator>:</operator> <macro><name>counter_</name><argument_list>(<argument><literal type="number">0</literal></argument>)</argument_list></macro> <block>{}</block>


<name>int</name> <call><name>Increment</name><argument_list>()</argument_list></call></expr>;</expr_stmt>


<function_decl><type><name>int</name></type> <name>Decrement</name><parameter_list>()</parameter_list>;</function_decl>


<expr_stmt><expr><name>void</name> <macro><name>Print</name><argument_list>()</argument_list></macro> <specifier>const</specifier></expr>;</expr_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
