<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/googletest/googletest/include/gtest/internal/gtest-param-util-generated.h">













































<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_GENERATED_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_GENERATED_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gtest/internal/gtest-param-util.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"gtest/internal/gtest-port.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>testing</name> <block>{<block_content>



<expr_stmt><expr><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>ForwardIterator</name></expr></argument>&gt;</argument_list></name>
<name>internal</name><operator>::</operator><name><name>ParamGenerator</name><argument_list type="generic">&lt;
<argument><expr><name>typename</name> <operator>::</operator><name>testing</name><operator>::</operator><name>internal</name><operator>::</operator><name><name>IteratorTraits</name><argument_list type="generic">&lt;<argument><expr><name>ForwardIterator</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>value_type</name></expr></argument>&gt;</argument_list></name>
<macro><name>ValuesIn</name><argument_list>(<argument>ForwardIterator begin</argument>, <argument>ForwardIterator end</argument>)</argument_list></macro></expr>;</expr_stmt>

<expr_stmt><expr><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>, <argument><expr><name>size_t</name> <name>N</name></expr></argument>&gt;</argument_list></name>
<name>internal</name><operator>::</operator><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name> <call><name>ValuesIn</name><argument_list>(<argument><expr><specifier>const</specifier> <call><name>T</name> <argument_list>(<argument><expr><operator>&amp;</operator><name>array</name></expr></argument>)</argument_list></call><index>[<expr><name>N</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>class</name> <name>Container</name></expr></argument>&gt;</argument_list></name>
<name>internal</name><operator>::</operator><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>Container</name><operator>::</operator><name>value_type</name></expr></argument>&gt;</argument_list></name> <call><name>ValuesIn</name><argument_list>(
<argument><expr><specifier>const</specifier> <name>Container</name><operator>&amp;</operator> <name>container</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>namespace</name></type> <name>internal</name> <block>{<block_content>


<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray1</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>explicit</name></macro> <macro><name>ValueArray1</name><argument_list>(<argument>T1 v1</argument>)</argument_list></macro> : <macro><name>v1_</name><argument_list>(<argument>v1</argument>)</argument_list></macro> <block>{<block_content/>}</block>

<expr_stmt><expr><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v1_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray1</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray1</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <macro><name>v1_</name><argument_list>(<argument>other.v1_</argument>)</argument_list></macro> <block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray1</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray2</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray2</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v2_</name><argument_list>(<argument>v2</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v2_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray2</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray2</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v2_</name><argument_list>(<argument>other.v2_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray2</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray3</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray3</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v3_</name><argument_list>(<argument>v3</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v3_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray3</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray3</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>v3_</name><argument_list>(<argument>other.v3_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray3</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray4</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray4</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>v4_</name><argument_list>(<argument>v4</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v4_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray4</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray4</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v4_</name><argument_list>(<argument>other.v4_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray4</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray5</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray5</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v5_</name><argument_list>(<argument>v5</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v5_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray5</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray5</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v5_</name><argument_list>(<argument>other.v5_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray5</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray6</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray6</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v6_</name><argument_list>(<argument>v6</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v6_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray6</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray6</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v6_</name><argument_list>(<argument>other.v6_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray6</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray7</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray7</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v7_</name><argument_list>(<argument>v7</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v7_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray7</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray7</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>v7_</name><argument_list>(<argument>other.v7_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray7</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray8</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray8</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>,
<argument>T8 v8</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>v8_</name><argument_list>(<argument>v8</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v8_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray8</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray8</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v8_</name><argument_list>(<argument>other.v8_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray8</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray9</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray9</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>,
<argument>T9 v9</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v9_</name><argument_list>(<argument>v9</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v9_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray9</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray9</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v9_</name><argument_list>(<argument>other.v9_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray9</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray10</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray10</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v10_</name><argument_list>(<argument>v10</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v10_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray10</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray10</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v10_</name><argument_list>(<argument>other.v10_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray10</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray11</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray11</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v11_</name><argument_list>(<argument>v11</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v11_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray11</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray11</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>v11_</name><argument_list>(<argument>other.v11_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray11</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray12</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray12</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v12_</name><argument_list>(<argument>v12</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v12_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray12</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray12</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v12_</name><argument_list>(<argument>other.v12_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray12</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray13</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray13</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v13_</name><argument_list>(<argument>v13</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v13_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray13</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray13</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v13_</name><argument_list>(<argument>other.v13_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray13</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray14</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray14</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v14_</name><argument_list>(<argument>v14</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v14_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray14</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray14</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v14_</name><argument_list>(<argument>other.v14_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray14</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray15</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray15</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v15_</name><argument_list>(<argument>v15</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v15_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray15</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray15</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>v15_</name><argument_list>(<argument>other.v15_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray15</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray16</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray16</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>v16_</name><argument_list>(<argument>v16</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v16_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray16</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray16</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v16_</name><argument_list>(<argument>other.v16_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray16</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray17</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray17</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>,
<argument>T17 v17</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v17_</name><argument_list>(<argument>v17</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v17_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray17</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray17</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v17_</name><argument_list>(<argument>other.v17_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray17</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray18</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray18</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v18_</name><argument_list>(<argument>v18</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v18_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray18</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray18</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v18_</name><argument_list>(<argument>other.v18_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray18</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray19</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray19</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v19_</name><argument_list>(<argument>v19</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v19_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray19</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray19</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>v19_</name><argument_list>(<argument>other.v19_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray19</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray20</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray20</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v20_</name><argument_list>(<argument>v20</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v20_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray20</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray20</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v20_</name><argument_list>(<argument>other.v20_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray20</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray21</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray21</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v21_</name><argument_list>(<argument>v21</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v21_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray21</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray21</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v21_</name><argument_list>(<argument>other.v21_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray21</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray22</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray22</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v22_</name><argument_list>(<argument>v22</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v22_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray22</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray22</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v22_</name><argument_list>(<argument>other.v22_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray22</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray23</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray23</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>v23_</name><argument_list>(<argument>v23</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v23_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray23</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray23</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>v23_</name><argument_list>(<argument>other.v23_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray23</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray24</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray24</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v24_</name><argument_list>(<argument>v24</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v24_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray24</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray24</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v24_</name><argument_list>(<argument>other.v24_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray24</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray25</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray25</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>,
<argument>T25 v25</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v25_</name><argument_list>(<argument>v25</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v25_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray25</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray25</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v25_</name><argument_list>(<argument>other.v25_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray25</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray26</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray26</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v26_</name><argument_list>(<argument>v26</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v26_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray26</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray26</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v26_</name><argument_list>(<argument>other.v26_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray26</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray27</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray27</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v27_</name><argument_list>(<argument>v27</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v27_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray27</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray27</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>v27_</name><argument_list>(<argument>other.v27_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray27</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray28</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray28</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v28_</name><argument_list>(<argument>v28</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v28_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray28</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray28</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v28_</name><argument_list>(<argument>other.v28_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray28</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray29</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray29</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v29_</name><argument_list>(<argument>v29</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v29_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray29</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray29</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v29_</name><argument_list>(<argument>other.v29_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray29</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray30</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray30</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v30_</name><argument_list>(<argument>v30</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v30_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray30</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray30</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v30_</name><argument_list>(<argument>other.v30_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray30</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray31</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray31</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v31_</name><argument_list>(<argument>v31</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v31_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray31</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray31</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>v31_</name><argument_list>(<argument>other.v31_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray31</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>, <argument><expr><name>typename</name> <name>T32</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray32</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray32</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>, <argument>T32 v32</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v31_</name><argument_list>(<argument><expr><name>v31</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v32_</name><argument_list>(<argument>v32</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v31_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v32_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray32</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray32</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v31_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v32_</name><argument_list>(<argument>other.v32_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray32</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T32</name></type> <name>v32_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>, <argument><expr><name>typename</name> <name>T32</name></expr></argument>, <argument><expr><name>typename</name> <name>T33</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray33</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray33</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>, <argument>T32 v32</argument>,
<argument>T33 v33</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v31_</name><argument_list>(<argument><expr><name>v31</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name>v32</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>v33_</name><argument_list>(<argument>v33</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v31_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v32_</name></expr></argument>)</argument_list></call></expr>,
<macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v33_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray33</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray33</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v31_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v32_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v33_</name><argument_list>(<argument>other.v33_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray33</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T32</name></type> <name>v32_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T33</name></type> <name>v33_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>, <argument><expr><name>typename</name> <name>T32</name></expr></argument>, <argument><expr><name>typename</name> <name>T33</name></expr></argument>, <argument><expr><name>typename</name> <name>T34</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray34</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray34</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>, <argument>T32 v32</argument>, <argument>T33 v33</argument>,
<argument>T34 v34</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v31_</name><argument_list>(<argument><expr><name>v31</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name>v32</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v33_</name><argument_list>(<argument><expr><name>v33</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v34_</name><argument_list>(<argument>v34</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v31_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v32_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v33_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v34_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray34</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray34</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v31_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v32_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v33_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v34_</name><argument_list>(<argument>other.v34_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray34</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T32</name></type> <name>v32_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T33</name></type> <name>v33_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T34</name></type> <name>v34_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>, <argument><expr><name>typename</name> <name>T32</name></expr></argument>, <argument><expr><name>typename</name> <name>T33</name></expr></argument>, <argument><expr><name>typename</name> <name>T34</name></expr></argument>, <argument><expr><name>typename</name> <name>T35</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray35</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray35</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>, <argument>T32 v32</argument>, <argument>T33 v33</argument>,
<argument>T34 v34</argument>, <argument>T35 v35</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v31_</name><argument_list>(<argument><expr><name>v31</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v32_</name><argument_list>(<argument><expr><name>v32</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name>v33</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name>v34</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v35_</name><argument_list>(<argument>v35</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v31_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v32_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v33_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v34_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v35_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray35</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray35</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v31_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v32_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v33_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v34_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>v35_</name><argument_list>(<argument>other.v35_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray35</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T32</name></type> <name>v32_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T33</name></type> <name>v33_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T34</name></type> <name>v34_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T35</name></type> <name>v35_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>, <argument><expr><name>typename</name> <name>T32</name></expr></argument>, <argument><expr><name>typename</name> <name>T33</name></expr></argument>, <argument><expr><name>typename</name> <name>T34</name></expr></argument>, <argument><expr><name>typename</name> <name>T35</name></expr></argument>,
<argument><expr><name>typename</name> <name>T36</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray36</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray36</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>, <argument>T32 v32</argument>, <argument>T33 v33</argument>,
<argument>T34 v34</argument>, <argument>T35 v35</argument>, <argument>T36 v36</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name>v31</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name>v32</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name>v33</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name>v34</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v35_</name><argument_list>(<argument><expr><name>v35</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v36_</name><argument_list>(<argument>v36</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v31_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v32_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v33_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v34_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v35_</name></expr></argument>)</argument_list></call></expr>,
<macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v36_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray36</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray36</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v31_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v32_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v33_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v34_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v35_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v35_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v36_</name><argument_list>(<argument>other.v36_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray36</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T32</name></type> <name>v32_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T33</name></type> <name>v33_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T34</name></type> <name>v34_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T35</name></type> <name>v35_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T36</name></type> <name>v36_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>, <argument><expr><name>typename</name> <name>T32</name></expr></argument>, <argument><expr><name>typename</name> <name>T33</name></expr></argument>, <argument><expr><name>typename</name> <name>T34</name></expr></argument>, <argument><expr><name>typename</name> <name>T35</name></expr></argument>,
<argument><expr><name>typename</name> <name>T36</name></expr></argument>, <argument><expr><name>typename</name> <name>T37</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray37</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray37</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>, <argument>T32 v32</argument>, <argument>T33 v33</argument>,
<argument>T34 v34</argument>, <argument>T35 v35</argument>, <argument>T36 v36</argument>, <argument>T37 v37</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v31_</name><argument_list>(<argument><expr><name>v31</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name>v32</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name>v33</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name>v34</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v35_</name><argument_list>(<argument><expr><name>v35</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v36_</name><argument_list>(<argument><expr><name>v36</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v37_</name><argument_list>(<argument>v37</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v31_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v32_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v33_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v34_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v35_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v36_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v37_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray37</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray37</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v31_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v32_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v33_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v34_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v35_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v35_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v36_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v37_</name><argument_list>(<argument>other.v37_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray37</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T32</name></type> <name>v32_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T33</name></type> <name>v33_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T34</name></type> <name>v34_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T35</name></type> <name>v35_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T36</name></type> <name>v36_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T37</name></type> <name>v37_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>, <argument><expr><name>typename</name> <name>T32</name></expr></argument>, <argument><expr><name>typename</name> <name>T33</name></expr></argument>, <argument><expr><name>typename</name> <name>T34</name></expr></argument>, <argument><expr><name>typename</name> <name>T35</name></expr></argument>,
<argument><expr><name>typename</name> <name>T36</name></expr></argument>, <argument><expr><name>typename</name> <name>T37</name></expr></argument>, <argument><expr><name>typename</name> <name>T38</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray38</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray38</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>, <argument>T32 v32</argument>, <argument>T33 v33</argument>,
<argument>T34 v34</argument>, <argument>T35 v35</argument>, <argument>T36 v36</argument>, <argument>T37 v37</argument>, <argument>T38 v38</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v31_</name><argument_list>(<argument><expr><name>v31</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name>v32</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name>v33</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name>v34</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v35_</name><argument_list>(<argument><expr><name>v35</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name>v36</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name>v37</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v38_</name><argument_list>(<argument>v38</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v31_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v32_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v33_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v34_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v35_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v36_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v37_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v38_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray38</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray38</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v31_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v32_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v33_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v34_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v35_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v35_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v36_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v37_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v38_</name><argument_list>(<argument>other.v38_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray38</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T32</name></type> <name>v32_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T33</name></type> <name>v33_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T34</name></type> <name>v34_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T35</name></type> <name>v35_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T36</name></type> <name>v36_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T37</name></type> <name>v37_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T38</name></type> <name>v38_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>, <argument><expr><name>typename</name> <name>T32</name></expr></argument>, <argument><expr><name>typename</name> <name>T33</name></expr></argument>, <argument><expr><name>typename</name> <name>T34</name></expr></argument>, <argument><expr><name>typename</name> <name>T35</name></expr></argument>,
<argument><expr><name>typename</name> <name>T36</name></expr></argument>, <argument><expr><name>typename</name> <name>T37</name></expr></argument>, <argument><expr><name>typename</name> <name>T38</name></expr></argument>, <argument><expr><name>typename</name> <name>T39</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray39</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray39</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>, <argument>T32 v32</argument>, <argument>T33 v33</argument>,
<argument>T34 v34</argument>, <argument>T35 v35</argument>, <argument>T36 v36</argument>, <argument>T37 v37</argument>, <argument>T38 v38</argument>, <argument>T39 v39</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v31_</name><argument_list>(<argument><expr><name>v31</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name>v32</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name>v33</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name>v34</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v35_</name><argument_list>(<argument><expr><name>v35</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name>v36</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name>v37</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name>v38</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v39_</name><argument_list>(<argument>v39</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v31_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v32_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v33_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v34_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v35_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v36_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v37_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v38_</name></expr></argument>)</argument_list></call></expr>,
<macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v39_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray39</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray39</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v31_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v32_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v33_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v34_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v35_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v35_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v36_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v37_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v38_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>v39_</name><argument_list>(<argument>other.v39_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray39</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T32</name></type> <name>v32_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T33</name></type> <name>v33_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T34</name></type> <name>v34_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T35</name></type> <name>v35_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T36</name></type> <name>v36_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T37</name></type> <name>v37_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T38</name></type> <name>v38_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T39</name></type> <name>v39_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>, <argument><expr><name>typename</name> <name>T32</name></expr></argument>, <argument><expr><name>typename</name> <name>T33</name></expr></argument>, <argument><expr><name>typename</name> <name>T34</name></expr></argument>, <argument><expr><name>typename</name> <name>T35</name></expr></argument>,
<argument><expr><name>typename</name> <name>T36</name></expr></argument>, <argument><expr><name>typename</name> <name>T37</name></expr></argument>, <argument><expr><name>typename</name> <name>T38</name></expr></argument>, <argument><expr><name>typename</name> <name>T39</name></expr></argument>, <argument><expr><name>typename</name> <name>T40</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray40</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray40</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>, <argument>T32 v32</argument>, <argument>T33 v33</argument>,
<argument>T34 v34</argument>, <argument>T35 v35</argument>, <argument>T36 v36</argument>, <argument>T37 v37</argument>, <argument>T38 v38</argument>, <argument>T39 v39</argument>, <argument>T40 v40</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v31_</name><argument_list>(<argument><expr><name>v31</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name>v32</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name>v33</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v34_</name><argument_list>(<argument><expr><name>v34</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v35_</name><argument_list>(<argument><expr><name>v35</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name>v36</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name>v37</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name>v38</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v39_</name><argument_list>(<argument><expr><name>v39</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>v40_</name><argument_list>(<argument>v40</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v31_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v32_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v33_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v34_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v35_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v36_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v37_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v38_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v39_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v40_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray40</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray40</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v31_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v32_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v33_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v34_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v35_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v35_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v36_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v37_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v38_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v39_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v39_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v40_</name><argument_list>(<argument>other.v40_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray40</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T32</name></type> <name>v32_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T33</name></type> <name>v33_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T34</name></type> <name>v34_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T35</name></type> <name>v35_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T36</name></type> <name>v36_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T37</name></type> <name>v37_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T38</name></type> <name>v38_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T39</name></type> <name>v39_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T40</name></type> <name>v40_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>, <argument><expr><name>typename</name> <name>T32</name></expr></argument>, <argument><expr><name>typename</name> <name>T33</name></expr></argument>, <argument><expr><name>typename</name> <name>T34</name></expr></argument>, <argument><expr><name>typename</name> <name>T35</name></expr></argument>,
<argument><expr><name>typename</name> <name>T36</name></expr></argument>, <argument><expr><name>typename</name> <name>T37</name></expr></argument>, <argument><expr><name>typename</name> <name>T38</name></expr></argument>, <argument><expr><name>typename</name> <name>T39</name></expr></argument>, <argument><expr><name>typename</name> <name>T40</name></expr></argument>,
<argument><expr><name>typename</name> <name>T41</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray41</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray41</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>, <argument>T32 v32</argument>, <argument>T33 v33</argument>,
<argument>T34 v34</argument>, <argument>T35 v35</argument>, <argument>T36 v36</argument>, <argument>T37 v37</argument>, <argument>T38 v38</argument>, <argument>T39 v39</argument>, <argument>T40 v40</argument>,
<argument>T41 v41</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v31_</name><argument_list>(<argument><expr><name>v31</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name>v32</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v33_</name><argument_list>(<argument><expr><name>v33</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name>v34</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v35_</name><argument_list>(<argument><expr><name>v35</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name>v36</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name>v37</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name>v38</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v39_</name><argument_list>(<argument><expr><name>v39</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v40_</name><argument_list>(<argument><expr><name>v40</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v41_</name><argument_list>(<argument>v41</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v31_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v32_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v33_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v34_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v35_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v36_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v37_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v38_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v39_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v40_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v41_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray41</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray41</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v31_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v32_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v33_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v34_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v35_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v35_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v36_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v37_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v38_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v39_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v39_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v40_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v40_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v41_</name><argument_list>(<argument>other.v41_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray41</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T32</name></type> <name>v32_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T33</name></type> <name>v33_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T34</name></type> <name>v34_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T35</name></type> <name>v35_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T36</name></type> <name>v36_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T37</name></type> <name>v37_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T38</name></type> <name>v38_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T39</name></type> <name>v39_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T40</name></type> <name>v40_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T41</name></type> <name>v41_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>, <argument><expr><name>typename</name> <name>T32</name></expr></argument>, <argument><expr><name>typename</name> <name>T33</name></expr></argument>, <argument><expr><name>typename</name> <name>T34</name></expr></argument>, <argument><expr><name>typename</name> <name>T35</name></expr></argument>,
<argument><expr><name>typename</name> <name>T36</name></expr></argument>, <argument><expr><name>typename</name> <name>T37</name></expr></argument>, <argument><expr><name>typename</name> <name>T38</name></expr></argument>, <argument><expr><name>typename</name> <name>T39</name></expr></argument>, <argument><expr><name>typename</name> <name>T40</name></expr></argument>,
<argument><expr><name>typename</name> <name>T41</name></expr></argument>, <argument><expr><name>typename</name> <name>T42</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray42</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray42</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>, <argument>T32 v32</argument>, <argument>T33 v33</argument>,
<argument>T34 v34</argument>, <argument>T35 v35</argument>, <argument>T36 v36</argument>, <argument>T37 v37</argument>, <argument>T38 v38</argument>, <argument>T39 v39</argument>, <argument>T40 v40</argument>, <argument>T41 v41</argument>,
<argument>T42 v42</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v31_</name><argument_list>(<argument><expr><name>v31</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name>v32</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v33_</name><argument_list>(<argument><expr><name>v33</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name>v34</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v35_</name><argument_list>(<argument><expr><name>v35</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name>v36</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name>v37</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name>v38</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v39_</name><argument_list>(<argument><expr><name>v39</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v40_</name><argument_list>(<argument><expr><name>v40</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v41_</name><argument_list>(<argument><expr><name>v41</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v42_</name><argument_list>(<argument>v42</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v31_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v32_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v33_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v34_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v35_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v36_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v37_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v38_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v39_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v40_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v41_</name></expr></argument>)</argument_list></call></expr>,
<macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v42_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray42</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray42</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v31_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v32_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v33_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v34_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v35_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v35_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v36_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v37_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v38_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v39_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v39_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v40_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v40_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v41_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v41_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v42_</name><argument_list>(<argument>other.v42_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray42</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T32</name></type> <name>v32_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T33</name></type> <name>v33_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T34</name></type> <name>v34_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T35</name></type> <name>v35_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T36</name></type> <name>v36_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T37</name></type> <name>v37_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T38</name></type> <name>v38_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T39</name></type> <name>v39_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T40</name></type> <name>v40_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T41</name></type> <name>v41_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T42</name></type> <name>v42_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>, <argument><expr><name>typename</name> <name>T32</name></expr></argument>, <argument><expr><name>typename</name> <name>T33</name></expr></argument>, <argument><expr><name>typename</name> <name>T34</name></expr></argument>, <argument><expr><name>typename</name> <name>T35</name></expr></argument>,
<argument><expr><name>typename</name> <name>T36</name></expr></argument>, <argument><expr><name>typename</name> <name>T37</name></expr></argument>, <argument><expr><name>typename</name> <name>T38</name></expr></argument>, <argument><expr><name>typename</name> <name>T39</name></expr></argument>, <argument><expr><name>typename</name> <name>T40</name></expr></argument>,
<argument><expr><name>typename</name> <name>T41</name></expr></argument>, <argument><expr><name>typename</name> <name>T42</name></expr></argument>, <argument><expr><name>typename</name> <name>T43</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray43</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray43</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>, <argument>T32 v32</argument>, <argument>T33 v33</argument>,
<argument>T34 v34</argument>, <argument>T35 v35</argument>, <argument>T36 v36</argument>, <argument>T37 v37</argument>, <argument>T38 v38</argument>, <argument>T39 v39</argument>, <argument>T40 v40</argument>, <argument>T41 v41</argument>,
<argument>T42 v42</argument>, <argument>T43 v43</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v31_</name><argument_list>(<argument><expr><name>v31</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v32_</name><argument_list>(<argument><expr><name>v32</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name>v33</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name>v34</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v35_</name><argument_list>(<argument><expr><name>v35</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name>v36</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name>v37</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v38_</name><argument_list>(<argument><expr><name>v38</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v39_</name><argument_list>(<argument><expr><name>v39</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v40_</name><argument_list>(<argument><expr><name>v40</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v41_</name><argument_list>(<argument><expr><name>v41</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v42_</name><argument_list>(<argument><expr><name>v42</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v43_</name><argument_list>(<argument>v43</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v31_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v32_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v33_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v34_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v35_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v36_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v37_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v38_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v39_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v40_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v41_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v42_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v43_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray43</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray43</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v31_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v32_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v33_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v34_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v35_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v35_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v36_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v37_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v38_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v39_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v39_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v40_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v40_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v41_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v41_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v42_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v42_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>v43_</name><argument_list>(<argument>other.v43_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray43</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T32</name></type> <name>v32_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T33</name></type> <name>v33_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T34</name></type> <name>v34_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T35</name></type> <name>v35_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T36</name></type> <name>v36_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T37</name></type> <name>v37_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T38</name></type> <name>v38_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T39</name></type> <name>v39_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T40</name></type> <name>v40_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T41</name></type> <name>v41_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T42</name></type> <name>v42_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T43</name></type> <name>v43_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>, <argument><expr><name>typename</name> <name>T32</name></expr></argument>, <argument><expr><name>typename</name> <name>T33</name></expr></argument>, <argument><expr><name>typename</name> <name>T34</name></expr></argument>, <argument><expr><name>typename</name> <name>T35</name></expr></argument>,
<argument><expr><name>typename</name> <name>T36</name></expr></argument>, <argument><expr><name>typename</name> <name>T37</name></expr></argument>, <argument><expr><name>typename</name> <name>T38</name></expr></argument>, <argument><expr><name>typename</name> <name>T39</name></expr></argument>, <argument><expr><name>typename</name> <name>T40</name></expr></argument>,
<argument><expr><name>typename</name> <name>T41</name></expr></argument>, <argument><expr><name>typename</name> <name>T42</name></expr></argument>, <argument><expr><name>typename</name> <name>T43</name></expr></argument>, <argument><expr><name>typename</name> <name>T44</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray44</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray44</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>, <argument>T32 v32</argument>, <argument>T33 v33</argument>,
<argument>T34 v34</argument>, <argument>T35 v35</argument>, <argument>T36 v36</argument>, <argument>T37 v37</argument>, <argument>T38 v38</argument>, <argument>T39 v39</argument>, <argument>T40 v40</argument>, <argument>T41 v41</argument>,
<argument>T42 v42</argument>, <argument>T43 v43</argument>, <argument>T44 v44</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name>v31</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name>v32</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name>v33</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name>v34</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v35_</name><argument_list>(<argument><expr><name>v35</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name>v36</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v37_</name><argument_list>(<argument><expr><name>v37</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name>v38</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v39_</name><argument_list>(<argument><expr><name>v39</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v40_</name><argument_list>(<argument><expr><name>v40</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v41_</name><argument_list>(<argument><expr><name>v41</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v42_</name><argument_list>(<argument><expr><name>v42</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v43_</name><argument_list>(<argument><expr><name>v43</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v44_</name><argument_list>(<argument>v44</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v31_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v32_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v33_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v34_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v35_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v36_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v37_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v38_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v39_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v40_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v41_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v42_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v43_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v44_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray44</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray44</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v31_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v32_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v33_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v34_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v35_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v35_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v36_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v37_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v38_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v39_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v39_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v40_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v40_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v41_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v41_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v42_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v42_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v43_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v43_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v44_</name><argument_list>(<argument>other.v44_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray44</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T32</name></type> <name>v32_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T33</name></type> <name>v33_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T34</name></type> <name>v34_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T35</name></type> <name>v35_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T36</name></type> <name>v36_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T37</name></type> <name>v37_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T38</name></type> <name>v38_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T39</name></type> <name>v39_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T40</name></type> <name>v40_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T41</name></type> <name>v41_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T42</name></type> <name>v42_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T43</name></type> <name>v43_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T44</name></type> <name>v44_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>, <argument><expr><name>typename</name> <name>T32</name></expr></argument>, <argument><expr><name>typename</name> <name>T33</name></expr></argument>, <argument><expr><name>typename</name> <name>T34</name></expr></argument>, <argument><expr><name>typename</name> <name>T35</name></expr></argument>,
<argument><expr><name>typename</name> <name>T36</name></expr></argument>, <argument><expr><name>typename</name> <name>T37</name></expr></argument>, <argument><expr><name>typename</name> <name>T38</name></expr></argument>, <argument><expr><name>typename</name> <name>T39</name></expr></argument>, <argument><expr><name>typename</name> <name>T40</name></expr></argument>,
<argument><expr><name>typename</name> <name>T41</name></expr></argument>, <argument><expr><name>typename</name> <name>T42</name></expr></argument>, <argument><expr><name>typename</name> <name>T43</name></expr></argument>, <argument><expr><name>typename</name> <name>T44</name></expr></argument>, <argument><expr><name>typename</name> <name>T45</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray45</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray45</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>, <argument>T32 v32</argument>, <argument>T33 v33</argument>,
<argument>T34 v34</argument>, <argument>T35 v35</argument>, <argument>T36 v36</argument>, <argument>T37 v37</argument>, <argument>T38 v38</argument>, <argument>T39 v39</argument>, <argument>T40 v40</argument>, <argument>T41 v41</argument>,
<argument>T42 v42</argument>, <argument>T43 v43</argument>, <argument>T44 v44</argument>, <argument>T45 v45</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v31_</name><argument_list>(<argument><expr><name>v31</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name>v32</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name>v33</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name>v34</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v35_</name><argument_list>(<argument><expr><name>v35</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v36_</name><argument_list>(<argument><expr><name>v36</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name>v37</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name>v38</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v39_</name><argument_list>(<argument><expr><name>v39</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v40_</name><argument_list>(<argument><expr><name>v40</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v41_</name><argument_list>(<argument><expr><name>v41</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v42_</name><argument_list>(<argument><expr><name>v42</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v43_</name><argument_list>(<argument><expr><name>v43</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v44_</name><argument_list>(<argument><expr><name>v44</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v45_</name><argument_list>(<argument>v45</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v31_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v32_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v33_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v34_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v35_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v36_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v37_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v38_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v39_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v40_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v41_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v42_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v43_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v44_</name></expr></argument>)</argument_list></call></expr>,
<macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v45_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray45</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray45</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v31_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v32_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v33_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v34_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v35_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v35_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v36_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v37_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v38_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v39_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v39_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v40_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v40_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v41_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v41_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v42_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v42_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v43_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v43_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v44_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v44_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v45_</name><argument_list>(<argument>other.v45_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray45</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T32</name></type> <name>v32_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T33</name></type> <name>v33_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T34</name></type> <name>v34_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T35</name></type> <name>v35_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T36</name></type> <name>v36_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T37</name></type> <name>v37_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T38</name></type> <name>v38_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T39</name></type> <name>v39_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T40</name></type> <name>v40_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T41</name></type> <name>v41_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T42</name></type> <name>v42_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T43</name></type> <name>v43_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T44</name></type> <name>v44_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T45</name></type> <name>v45_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>, <argument><expr><name>typename</name> <name>T32</name></expr></argument>, <argument><expr><name>typename</name> <name>T33</name></expr></argument>, <argument><expr><name>typename</name> <name>T34</name></expr></argument>, <argument><expr><name>typename</name> <name>T35</name></expr></argument>,
<argument><expr><name>typename</name> <name>T36</name></expr></argument>, <argument><expr><name>typename</name> <name>T37</name></expr></argument>, <argument><expr><name>typename</name> <name>T38</name></expr></argument>, <argument><expr><name>typename</name> <name>T39</name></expr></argument>, <argument><expr><name>typename</name> <name>T40</name></expr></argument>,
<argument><expr><name>typename</name> <name>T41</name></expr></argument>, <argument><expr><name>typename</name> <name>T42</name></expr></argument>, <argument><expr><name>typename</name> <name>T43</name></expr></argument>, <argument><expr><name>typename</name> <name>T44</name></expr></argument>, <argument><expr><name>typename</name> <name>T45</name></expr></argument>,
<argument><expr><name>typename</name> <name>T46</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray46</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray46</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>, <argument>T32 v32</argument>, <argument>T33 v33</argument>,
<argument>T34 v34</argument>, <argument>T35 v35</argument>, <argument>T36 v36</argument>, <argument>T37 v37</argument>, <argument>T38 v38</argument>, <argument>T39 v39</argument>, <argument>T40 v40</argument>, <argument>T41 v41</argument>,
<argument>T42 v42</argument>, <argument>T43 v43</argument>, <argument>T44 v44</argument>, <argument>T45 v45</argument>, <argument>T46 v46</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v31_</name><argument_list>(<argument><expr><name>v31</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name>v32</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name>v33</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name>v34</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v35_</name><argument_list>(<argument><expr><name>v35</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name>v36</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name>v37</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name>v38</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v39_</name><argument_list>(<argument><expr><name>v39</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v40_</name><argument_list>(<argument><expr><name>v40</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v41_</name><argument_list>(<argument><expr><name>v41</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v42_</name><argument_list>(<argument><expr><name>v42</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v43_</name><argument_list>(<argument><expr><name>v43</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v44_</name><argument_list>(<argument><expr><name>v44</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v45_</name><argument_list>(<argument><expr><name>v45</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v46_</name><argument_list>(<argument>v46</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v31_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v32_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v33_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v34_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v35_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v36_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v37_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v38_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v39_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v40_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v41_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v42_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v43_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v44_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v45_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v46_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray46</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray46</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v31_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v32_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v33_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v34_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v35_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v35_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v36_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v37_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v38_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v39_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v39_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v40_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v40_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v41_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v41_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v42_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v42_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v43_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v43_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v44_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v44_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v45_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v45_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v46_</name><argument_list>(<argument>other.v46_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray46</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T32</name></type> <name>v32_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T33</name></type> <name>v33_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T34</name></type> <name>v34_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T35</name></type> <name>v35_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T36</name></type> <name>v36_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T37</name></type> <name>v37_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T38</name></type> <name>v38_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T39</name></type> <name>v39_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T40</name></type> <name>v40_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T41</name></type> <name>v41_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T42</name></type> <name>v42_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T43</name></type> <name>v43_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T44</name></type> <name>v44_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T45</name></type> <name>v45_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T46</name></type> <name>v46_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>, <argument><expr><name>typename</name> <name>T32</name></expr></argument>, <argument><expr><name>typename</name> <name>T33</name></expr></argument>, <argument><expr><name>typename</name> <name>T34</name></expr></argument>, <argument><expr><name>typename</name> <name>T35</name></expr></argument>,
<argument><expr><name>typename</name> <name>T36</name></expr></argument>, <argument><expr><name>typename</name> <name>T37</name></expr></argument>, <argument><expr><name>typename</name> <name>T38</name></expr></argument>, <argument><expr><name>typename</name> <name>T39</name></expr></argument>, <argument><expr><name>typename</name> <name>T40</name></expr></argument>,
<argument><expr><name>typename</name> <name>T41</name></expr></argument>, <argument><expr><name>typename</name> <name>T42</name></expr></argument>, <argument><expr><name>typename</name> <name>T43</name></expr></argument>, <argument><expr><name>typename</name> <name>T44</name></expr></argument>, <argument><expr><name>typename</name> <name>T45</name></expr></argument>,
<argument><expr><name>typename</name> <name>T46</name></expr></argument>, <argument><expr><name>typename</name> <name>T47</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray47</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray47</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>, <argument>T32 v32</argument>, <argument>T33 v33</argument>,
<argument>T34 v34</argument>, <argument>T35 v35</argument>, <argument>T36 v36</argument>, <argument>T37 v37</argument>, <argument>T38 v38</argument>, <argument>T39 v39</argument>, <argument>T40 v40</argument>, <argument>T41 v41</argument>,
<argument>T42 v42</argument>, <argument>T43 v43</argument>, <argument>T44 v44</argument>, <argument>T45 v45</argument>, <argument>T46 v46</argument>, <argument>T47 v47</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v31_</name><argument_list>(<argument><expr><name>v31</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name>v32</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name>v33</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name>v34</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v35_</name><argument_list>(<argument><expr><name>v35</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name>v36</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name>v37</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name>v38</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v39_</name><argument_list>(<argument><expr><name>v39</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v40_</name><argument_list>(<argument><expr><name>v40</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v41_</name><argument_list>(<argument><expr><name>v41</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v42_</name><argument_list>(<argument><expr><name>v42</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v43_</name><argument_list>(<argument><expr><name>v43</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v44_</name><argument_list>(<argument><expr><name>v44</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v45_</name><argument_list>(<argument><expr><name>v45</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v46_</name><argument_list>(<argument><expr><name>v46</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>v47_</name><argument_list>(<argument>v47</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v31_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v32_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v33_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v34_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v35_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v36_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v37_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v38_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v39_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v40_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v41_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v42_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v43_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v44_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v45_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v46_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v47_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray47</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray47</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v31_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v32_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v33_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v34_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v35_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v35_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v36_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v37_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v38_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v39_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v39_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v40_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v40_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v41_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v41_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v42_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v42_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v43_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v43_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v44_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v44_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v45_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v45_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v46_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v46_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>v47_</name><argument_list>(<argument>other.v47_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray47</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T32</name></type> <name>v32_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T33</name></type> <name>v33_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T34</name></type> <name>v34_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T35</name></type> <name>v35_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T36</name></type> <name>v36_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T37</name></type> <name>v37_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T38</name></type> <name>v38_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T39</name></type> <name>v39_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T40</name></type> <name>v40_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T41</name></type> <name>v41_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T42</name></type> <name>v42_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T43</name></type> <name>v43_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T44</name></type> <name>v44_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T45</name></type> <name>v45_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T46</name></type> <name>v46_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T47</name></type> <name>v47_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>, <argument><expr><name>typename</name> <name>T32</name></expr></argument>, <argument><expr><name>typename</name> <name>T33</name></expr></argument>, <argument><expr><name>typename</name> <name>T34</name></expr></argument>, <argument><expr><name>typename</name> <name>T35</name></expr></argument>,
<argument><expr><name>typename</name> <name>T36</name></expr></argument>, <argument><expr><name>typename</name> <name>T37</name></expr></argument>, <argument><expr><name>typename</name> <name>T38</name></expr></argument>, <argument><expr><name>typename</name> <name>T39</name></expr></argument>, <argument><expr><name>typename</name> <name>T40</name></expr></argument>,
<argument><expr><name>typename</name> <name>T41</name></expr></argument>, <argument><expr><name>typename</name> <name>T42</name></expr></argument>, <argument><expr><name>typename</name> <name>T43</name></expr></argument>, <argument><expr><name>typename</name> <name>T44</name></expr></argument>, <argument><expr><name>typename</name> <name>T45</name></expr></argument>,
<argument><expr><name>typename</name> <name>T46</name></expr></argument>, <argument><expr><name>typename</name> <name>T47</name></expr></argument>, <argument><expr><name>typename</name> <name>T48</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray48</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray48</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>, <argument>T32 v32</argument>, <argument>T33 v33</argument>,
<argument>T34 v34</argument>, <argument>T35 v35</argument>, <argument>T36 v36</argument>, <argument>T37 v37</argument>, <argument>T38 v38</argument>, <argument>T39 v39</argument>, <argument>T40 v40</argument>, <argument>T41 v41</argument>,
<argument>T42 v42</argument>, <argument>T43 v43</argument>, <argument>T44 v44</argument>, <argument>T45 v45</argument>, <argument>T46 v46</argument>, <argument>T47 v47</argument>, <argument>T48 v48</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v31_</name><argument_list>(<argument><expr><name>v31</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name>v32</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name>v33</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v34_</name><argument_list>(<argument><expr><name>v34</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v35_</name><argument_list>(<argument><expr><name>v35</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name>v36</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name>v37</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name>v38</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v39_</name><argument_list>(<argument><expr><name>v39</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v40_</name><argument_list>(<argument><expr><name>v40</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v41_</name><argument_list>(<argument><expr><name>v41</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v42_</name><argument_list>(<argument><expr><name>v42</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v43_</name><argument_list>(<argument><expr><name>v43</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v44_</name><argument_list>(<argument><expr><name>v44</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v45_</name><argument_list>(<argument><expr><name>v45</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v46_</name><argument_list>(<argument><expr><name>v46</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v47_</name><argument_list>(<argument><expr><name>v47</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v48_</name><argument_list>(<argument>v48</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v31_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v32_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v33_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v34_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v35_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v36_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v37_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v38_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v39_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v40_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v41_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v42_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v43_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v44_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v45_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v46_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v47_</name></expr></argument>)</argument_list></call></expr>,
<macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v48_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray48</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray48</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v31_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v32_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v33_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v34_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v35_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v35_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v36_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v37_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v38_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v39_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v39_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v40_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v40_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v41_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v41_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v42_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v42_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v43_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v43_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v44_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v44_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v45_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v45_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v46_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v46_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v47_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v47_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v48_</name><argument_list>(<argument>other.v48_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray48</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T32</name></type> <name>v32_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T33</name></type> <name>v33_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T34</name></type> <name>v34_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T35</name></type> <name>v35_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T36</name></type> <name>v36_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T37</name></type> <name>v37_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T38</name></type> <name>v38_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T39</name></type> <name>v39_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T40</name></type> <name>v40_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T41</name></type> <name>v41_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T42</name></type> <name>v42_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T43</name></type> <name>v43_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T44</name></type> <name>v44_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T45</name></type> <name>v45_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T46</name></type> <name>v46_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T47</name></type> <name>v47_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T48</name></type> <name>v48_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>, <argument><expr><name>typename</name> <name>T32</name></expr></argument>, <argument><expr><name>typename</name> <name>T33</name></expr></argument>, <argument><expr><name>typename</name> <name>T34</name></expr></argument>, <argument><expr><name>typename</name> <name>T35</name></expr></argument>,
<argument><expr><name>typename</name> <name>T36</name></expr></argument>, <argument><expr><name>typename</name> <name>T37</name></expr></argument>, <argument><expr><name>typename</name> <name>T38</name></expr></argument>, <argument><expr><name>typename</name> <name>T39</name></expr></argument>, <argument><expr><name>typename</name> <name>T40</name></expr></argument>,
<argument><expr><name>typename</name> <name>T41</name></expr></argument>, <argument><expr><name>typename</name> <name>T42</name></expr></argument>, <argument><expr><name>typename</name> <name>T43</name></expr></argument>, <argument><expr><name>typename</name> <name>T44</name></expr></argument>, <argument><expr><name>typename</name> <name>T45</name></expr></argument>,
<argument><expr><name>typename</name> <name>T46</name></expr></argument>, <argument><expr><name>typename</name> <name>T47</name></expr></argument>, <argument><expr><name>typename</name> <name>T48</name></expr></argument>, <argument><expr><name>typename</name> <name>T49</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray49</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray49</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>, <argument>T32 v32</argument>, <argument>T33 v33</argument>,
<argument>T34 v34</argument>, <argument>T35 v35</argument>, <argument>T36 v36</argument>, <argument>T37 v37</argument>, <argument>T38 v38</argument>, <argument>T39 v39</argument>, <argument>T40 v40</argument>, <argument>T41 v41</argument>,
<argument>T42 v42</argument>, <argument>T43 v43</argument>, <argument>T44 v44</argument>, <argument>T45 v45</argument>, <argument>T46 v46</argument>, <argument>T47 v47</argument>, <argument>T48 v48</argument>,
<argument>T49 v49</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v31_</name><argument_list>(<argument><expr><name>v31</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name>v32</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v33_</name><argument_list>(<argument><expr><name>v33</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name>v34</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v35_</name><argument_list>(<argument><expr><name>v35</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name>v36</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name>v37</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name>v38</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v39_</name><argument_list>(<argument><expr><name>v39</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v40_</name><argument_list>(<argument><expr><name>v40</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v41_</name><argument_list>(<argument><expr><name>v41</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v42_</name><argument_list>(<argument><expr><name>v42</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v43_</name><argument_list>(<argument><expr><name>v43</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v44_</name><argument_list>(<argument><expr><name>v44</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v45_</name><argument_list>(<argument><expr><name>v45</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v46_</name><argument_list>(<argument><expr><name>v46</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v47_</name><argument_list>(<argument><expr><name>v47</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v48_</name><argument_list>(<argument><expr><name>v48</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v49_</name><argument_list>(<argument>v49</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v31_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v32_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v33_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v34_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v35_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v36_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v37_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v38_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v39_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v40_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v41_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v42_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v43_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v44_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v45_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v46_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v47_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v48_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v49_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray49</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray49</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v31_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v32_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v33_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v34_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v35_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v35_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v36_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v37_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v38_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v39_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v39_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v40_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v40_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v41_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v41_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v42_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v42_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v43_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v43_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v44_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v44_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v45_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v45_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v46_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v46_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v47_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v47_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v48_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v48_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v49_</name><argument_list>(<argument>other.v49_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray49</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T32</name></type> <name>v32_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T33</name></type> <name>v33_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T34</name></type> <name>v34_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T35</name></type> <name>v35_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T36</name></type> <name>v36_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T37</name></type> <name>v37_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T38</name></type> <name>v38_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T39</name></type> <name>v39_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T40</name></type> <name>v40_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T41</name></type> <name>v41_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T42</name></type> <name>v42_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T43</name></type> <name>v43_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T44</name></type> <name>v44_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T45</name></type> <name>v45_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T46</name></type> <name>v46_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T47</name></type> <name>v47_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T48</name></type> <name>v48_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T49</name></type> <name>v49_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>,
<argument><expr><name>typename</name> <name>T11</name></expr></argument>, <argument><expr><name>typename</name> <name>T12</name></expr></argument>, <argument><expr><name>typename</name> <name>T13</name></expr></argument>, <argument><expr><name>typename</name> <name>T14</name></expr></argument>, <argument><expr><name>typename</name> <name>T15</name></expr></argument>,
<argument><expr><name>typename</name> <name>T16</name></expr></argument>, <argument><expr><name>typename</name> <name>T17</name></expr></argument>, <argument><expr><name>typename</name> <name>T18</name></expr></argument>, <argument><expr><name>typename</name> <name>T19</name></expr></argument>, <argument><expr><name>typename</name> <name>T20</name></expr></argument>,
<argument><expr><name>typename</name> <name>T21</name></expr></argument>, <argument><expr><name>typename</name> <name>T22</name></expr></argument>, <argument><expr><name>typename</name> <name>T23</name></expr></argument>, <argument><expr><name>typename</name> <name>T24</name></expr></argument>, <argument><expr><name>typename</name> <name>T25</name></expr></argument>,
<argument><expr><name>typename</name> <name>T26</name></expr></argument>, <argument><expr><name>typename</name> <name>T27</name></expr></argument>, <argument><expr><name>typename</name> <name>T28</name></expr></argument>, <argument><expr><name>typename</name> <name>T29</name></expr></argument>, <argument><expr><name>typename</name> <name>T30</name></expr></argument>,
<argument><expr><name>typename</name> <name>T31</name></expr></argument>, <argument><expr><name>typename</name> <name>T32</name></expr></argument>, <argument><expr><name>typename</name> <name>T33</name></expr></argument>, <argument><expr><name>typename</name> <name>T34</name></expr></argument>, <argument><expr><name>typename</name> <name>T35</name></expr></argument>,
<argument><expr><name>typename</name> <name>T36</name></expr></argument>, <argument><expr><name>typename</name> <name>T37</name></expr></argument>, <argument><expr><name>typename</name> <name>T38</name></expr></argument>, <argument><expr><name>typename</name> <name>T39</name></expr></argument>, <argument><expr><name>typename</name> <name>T40</name></expr></argument>,
<argument><expr><name>typename</name> <name>T41</name></expr></argument>, <argument><expr><name>typename</name> <name>T42</name></expr></argument>, <argument><expr><name>typename</name> <name>T43</name></expr></argument>, <argument><expr><name>typename</name> <name>T44</name></expr></argument>, <argument><expr><name>typename</name> <name>T45</name></expr></argument>,
<argument><expr><name>typename</name> <name>T46</name></expr></argument>, <argument><expr><name>typename</name> <name>T47</name></expr></argument>, <argument><expr><name>typename</name> <name>T48</name></expr></argument>, <argument><expr><name>typename</name> <name>T49</name></expr></argument>, <argument><expr><name>typename</name> <name>T50</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>ValueArray50</name> <block>{<block_content>
<label><name>public</name>:</label>
<macro><name>ValueArray50</name><argument_list>(<argument>T1 v1</argument>, <argument>T2 v2</argument>, <argument>T3 v3</argument>, <argument>T4 v4</argument>, <argument>T5 v5</argument>, <argument>T6 v6</argument>, <argument>T7 v7</argument>, <argument>T8 v8</argument>, <argument>T9 v9</argument>,
<argument>T10 v10</argument>, <argument>T11 v11</argument>, <argument>T12 v12</argument>, <argument>T13 v13</argument>, <argument>T14 v14</argument>, <argument>T15 v15</argument>, <argument>T16 v16</argument>, <argument>T17 v17</argument>,
<argument>T18 v18</argument>, <argument>T19 v19</argument>, <argument>T20 v20</argument>, <argument>T21 v21</argument>, <argument>T22 v22</argument>, <argument>T23 v23</argument>, <argument>T24 v24</argument>, <argument>T25 v25</argument>,
<argument>T26 v26</argument>, <argument>T27 v27</argument>, <argument>T28 v28</argument>, <argument>T29 v29</argument>, <argument>T30 v30</argument>, <argument>T31 v31</argument>, <argument>T32 v32</argument>, <argument>T33 v33</argument>,
<argument>T34 v34</argument>, <argument>T35 v35</argument>, <argument>T36 v36</argument>, <argument>T37 v37</argument>, <argument>T38 v38</argument>, <argument>T39 v39</argument>, <argument>T40 v40</argument>, <argument>T41 v41</argument>,
<argument>T42 v42</argument>, <argument>T43 v43</argument>, <argument>T44 v44</argument>, <argument>T45 v45</argument>, <argument>T46 v46</argument>, <argument>T47 v47</argument>, <argument>T48 v48</argument>, <argument>T49 v49</argument>,
<argument>T50 v50</argument>)</argument_list></macro> : <expr_stmt><expr><call><name>v1_</name><argument_list>(<argument><expr><name>v1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name>v2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v3_</name><argument_list>(<argument><expr><name>v3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name>v4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name>v5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name>v6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v7_</name><argument_list>(<argument><expr><name>v7</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v8_</name><argument_list>(<argument><expr><name>v8</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name>v9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name>v10</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v11_</name><argument_list>(<argument><expr><name>v11</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name>v12</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name>v13</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name>v14</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name>v15</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name>v16</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name>v17</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name>v18</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v19_</name><argument_list>(<argument><expr><name>v19</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name>v20</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v21_</name><argument_list>(<argument><expr><name>v21</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name>v22</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v23_</name><argument_list>(<argument><expr><name>v23</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name>v24</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name>v25</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name>v26</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name>v27</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name>v28</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name>v29</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name>v30</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v31_</name><argument_list>(<argument><expr><name>v31</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name>v32</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v33_</name><argument_list>(<argument><expr><name>v33</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name>v34</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v35_</name><argument_list>(<argument><expr><name>v35</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name>v36</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name>v37</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name>v38</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v39_</name><argument_list>(<argument><expr><name>v39</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v40_</name><argument_list>(<argument><expr><name>v40</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v41_</name><argument_list>(<argument><expr><name>v41</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v42_</name><argument_list>(<argument><expr><name>v42</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v43_</name><argument_list>(<argument><expr><name>v43</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v44_</name><argument_list>(<argument><expr><name>v44</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v45_</name><argument_list>(<argument><expr><name>v45</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v46_</name><argument_list>(<argument><expr><name>v46</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v47_</name><argument_list>(<argument><expr><name>v47</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v48_</name><argument_list>(<argument><expr><name>v48</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v49_</name><argument_list>(<argument><expr><name>v49</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v50_</name><argument_list>(<argument>v50</argument>)</argument_list></macro> <expr><block>{}</block>

<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<expr><specifier>const</specifier> <name>T</name> <name><name>array</name><index>[]</index></name> <operator>=</operator> <block>{<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v1_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v2_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v3_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v4_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v5_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v6_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v7_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v8_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v9_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v10_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v11_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v12_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v13_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v14_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v15_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v16_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v17_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v18_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v19_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v20_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v21_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v22_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v23_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v24_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v25_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v26_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v27_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v28_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v29_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v30_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v31_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v32_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v33_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v34_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v35_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v36_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v37_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v38_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v39_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v40_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v41_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v42_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v43_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v44_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v45_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v46_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v47_</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v48_</name></expr></argument>)</argument_list></call></expr>, <expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>v49_</name></expr></argument>)</argument_list></call></expr>, <macro><name>static_cast</name></macro><expr><operator>&lt;</operator><name>T</name><operator>&gt;</operator><operator>(</operator><name>v50_</name><operator>)</operator></expr>}</block></expr>;
<return>return <expr><call><name>ValuesIn</name><argument_list>(<argument><expr><name>array</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><call><name>ValueArray50</name><argument_list>(<argument><expr><specifier>const</specifier> <name>ValueArray50</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call> <operator>:</operator> <call><name>v1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v11_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v11_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v12_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v12_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v13_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v13_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v14_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v14_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v15_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v15_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v16_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v16_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v17_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v17_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v18_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v18_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v19_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v19_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v20_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v20_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v21_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v21_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v22_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v22_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v23_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v23_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v24_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v24_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v25_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v25_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v26_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v26_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v27_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v27_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v28_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v28_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v29_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v29_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v30_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v30_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v31_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v31_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v32_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v32_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v33_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v33_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v34_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v34_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v35_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v35_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v36_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v36_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v37_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v37_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v38_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v38_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v39_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v39_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v40_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v40_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v41_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v41_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v42_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v42_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v43_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v43_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v44_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v44_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v45_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v45_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v46_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v46_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>v47_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v47_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v48_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v48_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>v49_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>v49_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>v50_</name><argument_list>(<argument>other.v50_</argument>)</argument_list></macro> <expr><block>{}</block>

<name>private</name><operator>:</operator>

<name>void</name> <name>operator</name><operator>=</operator><operator>(</operator><specifier>const</specifier> <name>ValueArray50</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>T1</name></type> <name>v1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T2</name></type> <name>v2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T3</name></type> <name>v3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T4</name></type> <name>v4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T5</name></type> <name>v5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T6</name></type> <name>v6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T7</name></type> <name>v7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T8</name></type> <name>v8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T9</name></type> <name>v9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T10</name></type> <name>v10_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T11</name></type> <name>v11_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T12</name></type> <name>v12_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T13</name></type> <name>v13_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T14</name></type> <name>v14_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T15</name></type> <name>v15_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T16</name></type> <name>v16_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T17</name></type> <name>v17_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T18</name></type> <name>v18_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T19</name></type> <name>v19_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T20</name></type> <name>v20_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T21</name></type> <name>v21_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T22</name></type> <name>v22_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T23</name></type> <name>v23_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T24</name></type> <name>v24_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T25</name></type> <name>v25_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T26</name></type> <name>v26_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T27</name></type> <name>v27_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T28</name></type> <name>v28_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T29</name></type> <name>v29_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T30</name></type> <name>v30_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T31</name></type> <name>v31_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T32</name></type> <name>v32_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T33</name></type> <name>v33_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T34</name></type> <name>v34_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T35</name></type> <name>v35_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T36</name></type> <name>v36_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T37</name></type> <name>v37_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T38</name></type> <name>v38_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T39</name></type> <name>v39_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T40</name></type> <name>v40_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T41</name></type> <name>v41_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T42</name></type> <name>v42_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T43</name></type> <name>v43_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T44</name></type> <name>v44_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T45</name></type> <name>v45_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T46</name></type> <name>v46_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T47</name></type> <name>v47_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T48</name></type> <name>v48_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T49</name></type> <name>v49_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>T50</name></type> <name>v50_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>GTEST_HAS_COMBINE</name></expr></cpp:if>





<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>CartesianProductGenerator2</name>
<range>: <expr><name>public</name> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt; <argument><expr><operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name> <block>{
<expr><name>public</name><operator>:</operator></expr>
<typedef>typedef <expr_stmt><expr><operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name> <name>ParamType</name></expr>;</expr_stmt></typedef>

<call><name>CartesianProductGenerator2</name><argument_list>(<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g1</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g2</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>g1_</name><argument_list>(<argument><expr><name>g1</name></expr></argument>)</argument_list></call>, <macro><name>g2_</name><argument_list>(<argument>g2</argument>)</argument_list></macro> <block>{}</block></block>
<name>virtual</name> <operator>~</operator><macro><name>CartesianProductGenerator2</name><argument_list>()</argument_list></macro> <block>{}</block>

<name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>Begin</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>g1_</name></expr></argument>, <argument><expr><call><name><name>g1_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g2_</name></expr></argument>, <argument><expr><call><name><name>g2_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></range></decl></decl_stmt>
<expr_stmt><expr><name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>End</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>g1_</name></expr></argument>, <argument><expr><call><name><name>g1_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g2_</name></expr></argument>, <argument><expr><call><name><name>g2_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<label><name>private</name>:</label>
<decl_stmt><decl><type><name>class</name></type> <name>Iterator</name> <range>: <expr><name>public</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name> <block>{
<expr><name>public</name><operator>:</operator>
<macro><name>Iterator</name><argument_list>(<argument>const ParamGeneratorInterface&lt;ParamType&gt;* base</argument>,
<argument>const ParamGenerator&lt;T1&gt;&amp; g1</argument>,
<argument>const typename ParamGenerator&lt;T1&gt;::iterator&amp; current1</argument>,
<argument>const ParamGenerator&lt;T2&gt;&amp; g2</argument>,
<argument>const typename ParamGenerator&lt;T2&gt;::iterator&amp; current2</argument>)</argument_list></macro>
<operator>:</operator> <call><name>base_</name><argument_list>(<argument><expr><name>base</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin1_</name><argument_list>(<argument><expr><call><name><name>g1</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end1_</name><argument_list>(<argument><expr><call><name><name>g1</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current1_</name><argument_list>(<argument><expr><name>current1</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin2_</name><argument_list>(<argument><expr><call><name><name>g2</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end2_</name><argument_list>(<argument><expr><call><name><name>g2</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <macro><name>current2_</name><argument_list>(<argument>current2</argument>)</argument_list></macro> <expr><block>{
<expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;
}</block>
<name>virtual</name> <operator>~</operator><macro><name>Iterator</name><argument_list>()</argument_list></macro> <block>{}</block>

<name>virtual</name> <specifier>const</specifier> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>BaseGenerator</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>base_</name></expr>;</return>
}</block>


<name>virtual</name> <name>void</name> <macro><name>Advance</name><argument_list>()</argument_list></macro> <block>{
<expr><call><name>assert</name><argument_list>(<argument><expr><operator>!</operator><call><name>AtEnd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
<expr><operator>++</operator><name>current2_</name></expr>;
<if_stmt><if>if <condition>(<expr><name>current2_</name> <operator>==</operator> <name>end2_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current2_</name> <operator>=</operator> <name>begin2_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current1_</name></expr>;</expr_stmt>
<expr_stmt/>}</block_content>
ComputeCurrentValue(</block></if></if_stmt>)</block></expr>;
}</block>
<name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>Clone</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><operator>*</operator><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></range></decl></decl_stmt>
<expr_stmt><expr><name>virtual</name> <specifier>const</specifier> <name>ParamType</name><operator>*</operator> <macro><name>Current</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><call><name><name>current_value_</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;</return> }</block></expr></expr_stmt>
<decl_stmt><decl><type><name>virtual</name> <name>bool</name></type> <name>Equals</name><argument_list>(<argument><expr><specifier>const</specifier> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list> const <block>{<block_content>


<expr_stmt><expr><call><name>GTEST_CHECK_</name><argument_list>(<argument><expr><call><name>BaseGenerator</name><argument_list>()</argument_list></call> <operator>==</operator> <call><name><name>other</name><operator>.</operator><name>BaseGenerator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
<operator>&lt;&lt;</operator> <literal type="string">"The program attempted to compare iterators "</literal>
<operator>&lt;&lt;</operator> <literal type="string">"from different generators."</literal> <operator>&lt;&lt;</operator> <name>std</name><operator>::</operator><name>endl</name></expr>;</expr_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Iterator</name><modifier>*</modifier></type> <name>typed_other</name> <init>=
<expr><call><name><name>CheckedDowncastToActualType</name><argument_list type="generic">&lt;<argument><expr><specifier>const</specifier> <name>Iterator</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><operator>&amp;</operator><name>other</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<return>return <expr><operator>(</operator><call><name>AtEnd</name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>typed_other</name><operator>-&gt;</operator><name>AtEnd</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>||</operator>
<operator>(</operator>
<name>current1_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current1_</name></name> <operator>&amp;&amp;</operator>
<name>current2_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current2_</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<label><name>private</name>:</label>
<expr_stmt><expr><call><name>Iterator</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Iterator</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>base_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>base_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>current2_</name><argument_list>(<argument>other.current2_</argument>)</argument_list></macro> <expr><block>{
<expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;
}</block>

<name>void</name> <macro><name>ComputeCurrentValue</name><argument_list>()</argument_list></macro> <block>{
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>AtEnd</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<macro><name>current_value_</name></macro><expr_stmt><expr><operator>.</operator><macro><name>reset</name><argument_list>(<argument>new ParamType(*current1_, *current2_)</argument>)</argument_list></macro></expr>;</expr_stmt></block_content></block></if></if_stmt>
}</block></expr></expr_stmt>
<expr_stmt><expr><name>bool</name> <macro><name>AtEnd</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{


<return>return
<expr><name>current1_</name> <operator>==</operator> <name>end1_</name> <operator>||</operator>
<name>current2_</name> <operator>==</operator> <name>end2_</name></expr>;</return>
}</block></expr></expr_stmt>


<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>Iterator</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><modifier>*</modifier> <specifier>const</specifier></type> <name>base_</name></decl>;</decl_stmt>


<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin1_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end1_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current1_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin2_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end2_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current2_</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name><name>linked_ptr</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name></type> <name>current_value_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>


<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>CartesianProductGenerator2</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name></type> <name>g1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name></type> <name>g2_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>


<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>CartesianProductGenerator3</name>
<range>: <expr><name>public</name> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt; <argument><expr><operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name> <block>{
<expr><name>public</name><operator>:</operator></expr>
<typedef>typedef <expr_stmt><expr><operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name> <name>ParamType</name></expr>;</expr_stmt></typedef>

<call><name>CartesianProductGenerator3</name><argument_list>(<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g1</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g2</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g3</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>g1_</name><argument_list>(<argument><expr><name>g1</name></expr></argument>)</argument_list></call>, <call><name>g2_</name><argument_list>(<argument><expr><name>g2</name></expr></argument>)</argument_list></call>, <macro><name>g3_</name><argument_list>(<argument>g3</argument>)</argument_list></macro> <block>{}</block></block>
<name>virtual</name> <operator>~</operator><macro><name>CartesianProductGenerator3</name><argument_list>()</argument_list></macro> <block>{}</block>

<name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>Begin</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>g1_</name></expr></argument>, <argument><expr><call><name><name>g1_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g2_</name></expr></argument>, <argument><expr><call><name><name>g2_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g3_</name></expr></argument>,
<argument><expr><call><name><name>g3_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></range></decl></decl_stmt>
<expr_stmt><expr><name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>End</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>g1_</name></expr></argument>, <argument><expr><call><name><name>g1_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g2_</name></expr></argument>, <argument><expr><call><name><name>g2_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g3_</name></expr></argument>, <argument><expr><call><name><name>g3_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<label><name>private</name>:</label>
<decl_stmt><decl><type><name>class</name></type> <name>Iterator</name> <range>: <expr><name>public</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name> <block>{
<expr><name>public</name><operator>:</operator>
<macro><name>Iterator</name><argument_list>(<argument>const ParamGeneratorInterface&lt;ParamType&gt;* base</argument>,
<argument>const ParamGenerator&lt;T1&gt;&amp; g1</argument>,
<argument>const typename ParamGenerator&lt;T1&gt;::iterator&amp; current1</argument>,
<argument>const ParamGenerator&lt;T2&gt;&amp; g2</argument>,
<argument>const typename ParamGenerator&lt;T2&gt;::iterator&amp; current2</argument>,
<argument>const ParamGenerator&lt;T3&gt;&amp; g3</argument>,
<argument>const typename ParamGenerator&lt;T3&gt;::iterator&amp; current3</argument>)</argument_list></macro>
<operator>:</operator> <call><name>base_</name><argument_list>(<argument><expr><name>base</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin1_</name><argument_list>(<argument><expr><call><name><name>g1</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end1_</name><argument_list>(<argument><expr><call><name><name>g1</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current1_</name><argument_list>(<argument><expr><name>current1</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin2_</name><argument_list>(<argument><expr><call><name><name>g2</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end2_</name><argument_list>(<argument><expr><call><name><name>g2</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current2_</name><argument_list>(<argument><expr><name>current2</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin3_</name><argument_list>(<argument><expr><call><name><name>g3</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end3_</name><argument_list>(<argument><expr><call><name><name>g3</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <macro><name>current3_</name><argument_list>(<argument>current3</argument>)</argument_list></macro> <expr><block>{
<expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;
}</block>
<name>virtual</name> <operator>~</operator><macro><name>Iterator</name><argument_list>()</argument_list></macro> <block>{}</block>

<name>virtual</name> <specifier>const</specifier> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>BaseGenerator</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>base_</name></expr>;</return>
}</block>


<name>virtual</name> <name>void</name> <macro><name>Advance</name><argument_list>()</argument_list></macro> <block>{
<expr><call><name>assert</name><argument_list>(<argument><expr><operator>!</operator><call><name>AtEnd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
<expr><operator>++</operator><name>current3_</name></expr>;
<if_stmt><if>if <condition>(<expr><name>current3_</name> <operator>==</operator> <name>end3_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current3_</name> <operator>=</operator> <name>begin3_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current2_</name></expr>;</expr_stmt>
<expr_stmt/>}</block_content>
if (current2_ == end2_</block></if></if_stmt>) <block>{
<expr><name>current2_</name> <operator>=</operator> <name>begin2_</name></expr>;
<expr><operator>++</operator><name>current1_</name></expr>;
}</block></block>
<call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;
}</block>
<name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>Clone</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><operator>*</operator><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></range></decl></decl_stmt>
<expr_stmt><expr><name>virtual</name> <specifier>const</specifier> <name>ParamType</name><operator>*</operator> <macro><name>Current</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><call><name><name>current_value_</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;</return> }</block></expr></expr_stmt>
<decl_stmt><decl><type><name>virtual</name> <name>bool</name></type> <name>Equals</name><argument_list>(<argument><expr><specifier>const</specifier> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list> const <block>{<block_content>


<expr_stmt><expr><call><name>GTEST_CHECK_</name><argument_list>(<argument><expr><call><name>BaseGenerator</name><argument_list>()</argument_list></call> <operator>==</operator> <call><name><name>other</name><operator>.</operator><name>BaseGenerator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
<operator>&lt;&lt;</operator> <literal type="string">"The program attempted to compare iterators "</literal>
<operator>&lt;&lt;</operator> <literal type="string">"from different generators."</literal> <operator>&lt;&lt;</operator> <name>std</name><operator>::</operator><name>endl</name></expr>;</expr_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Iterator</name><modifier>*</modifier></type> <name>typed_other</name> <init>=
<expr><call><name><name>CheckedDowncastToActualType</name><argument_list type="generic">&lt;<argument><expr><specifier>const</specifier> <name>Iterator</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><operator>&amp;</operator><name>other</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<return>return <expr><operator>(</operator><call><name>AtEnd</name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>typed_other</name><operator>-&gt;</operator><name>AtEnd</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>||</operator>
<operator>(</operator>
<name>current1_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current1_</name></name> <operator>&amp;&amp;</operator>
<name>current2_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current2_</name></name> <operator>&amp;&amp;</operator>
<name>current3_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current3_</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<label><name>private</name>:</label>
<expr_stmt><expr><call><name>Iterator</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Iterator</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>base_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>base_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>current3_</name><argument_list>(<argument>other.current3_</argument>)</argument_list></macro> <expr><block>{
<expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;
}</block>

<name>void</name> <macro><name>ComputeCurrentValue</name><argument_list>()</argument_list></macro> <block>{
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>AtEnd</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<macro><name>current_value_</name></macro><expr_stmt><expr><operator>.</operator><macro><name>reset</name><argument_list>(<argument>new ParamType(*current1_, *current2_, *current3_)</argument>)</argument_list></macro></expr>;</expr_stmt></block_content></block></if></if_stmt>
}</block></expr></expr_stmt>
<expr_stmt><expr><name>bool</name> <macro><name>AtEnd</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{


<return>return
<expr><name>current1_</name> <operator>==</operator> <name>end1_</name> <operator>||</operator>
<name>current2_</name> <operator>==</operator> <name>end2_</name> <operator>||</operator>
<name>current3_</name> <operator>==</operator> <name>end3_</name></expr>;</return>
}</block></expr></expr_stmt>


<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>Iterator</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><modifier>*</modifier> <specifier>const</specifier></type> <name>base_</name></decl>;</decl_stmt>


<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin1_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end1_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current1_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin2_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end2_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current2_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin3_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end3_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current3_</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name><name>linked_ptr</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name></type> <name>current_value_</name></decl>;</decl_stmt>
};


<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>CartesianProductGenerator3</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name></type> <name>g1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name></type> <name>g2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name></type> <name>g3_</name></decl>;</decl_stmt>
};


<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>CartesianProductGenerator4</name>
<range>: <expr><name>public</name> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt; <argument><expr><operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name> <block>{
<expr><name>public</name><operator>:</operator></expr>
<typedef>typedef <expr_stmt><expr><operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name> <name>ParamType</name></expr>;</expr_stmt></typedef>

<call><name>CartesianProductGenerator4</name><argument_list>(<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g1</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g2</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g3</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g4</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>g1_</name><argument_list>(<argument><expr><name>g1</name></expr></argument>)</argument_list></call>, <call><name>g2_</name><argument_list>(<argument><expr><name>g2</name></expr></argument>)</argument_list></call>, <call><name>g3_</name><argument_list>(<argument><expr><name>g3</name></expr></argument>)</argument_list></call>, <macro><name>g4_</name><argument_list>(<argument>g4</argument>)</argument_list></macro> <block>{}</block></block>
<name>virtual</name> <operator>~</operator><macro><name>CartesianProductGenerator4</name><argument_list>()</argument_list></macro> <block>{}</block>

<name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>Begin</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>g1_</name></expr></argument>, <argument><expr><call><name><name>g1_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g2_</name></expr></argument>, <argument><expr><call><name><name>g2_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g3_</name></expr></argument>,
<argument><expr><call><name><name>g3_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g4_</name></expr></argument>, <argument><expr><call><name><name>g4_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></range></decl></decl_stmt>
<expr_stmt><expr><name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>End</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>g1_</name></expr></argument>, <argument><expr><call><name><name>g1_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g2_</name></expr></argument>, <argument><expr><call><name><name>g2_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g3_</name></expr></argument>, <argument><expr><call><name><name>g3_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>g4_</name></expr></argument>, <argument><expr><call><name><name>g4_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<label><name>private</name>:</label>
<decl_stmt><decl><type><name>class</name></type> <name>Iterator</name> <range>: <expr><name>public</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name> <block>{
<expr><name>public</name><operator>:</operator>
<macro><name>Iterator</name><argument_list>(<argument>const ParamGeneratorInterface&lt;ParamType&gt;* base</argument>,
<argument>const ParamGenerator&lt;T1&gt;&amp; g1</argument>,
<argument>const typename ParamGenerator&lt;T1&gt;::iterator&amp; current1</argument>,
<argument>const ParamGenerator&lt;T2&gt;&amp; g2</argument>,
<argument>const typename ParamGenerator&lt;T2&gt;::iterator&amp; current2</argument>,
<argument>const ParamGenerator&lt;T3&gt;&amp; g3</argument>,
<argument>const typename ParamGenerator&lt;T3&gt;::iterator&amp; current3</argument>,
<argument>const ParamGenerator&lt;T4&gt;&amp; g4</argument>,
<argument>const typename ParamGenerator&lt;T4&gt;::iterator&amp; current4</argument>)</argument_list></macro>
<operator>:</operator> <call><name>base_</name><argument_list>(<argument><expr><name>base</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin1_</name><argument_list>(<argument><expr><call><name><name>g1</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end1_</name><argument_list>(<argument><expr><call><name><name>g1</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current1_</name><argument_list>(<argument><expr><name>current1</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin2_</name><argument_list>(<argument><expr><call><name><name>g2</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end2_</name><argument_list>(<argument><expr><call><name><name>g2</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current2_</name><argument_list>(<argument><expr><name>current2</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin3_</name><argument_list>(<argument><expr><call><name><name>g3</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end3_</name><argument_list>(<argument><expr><call><name><name>g3</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current3_</name><argument_list>(<argument><expr><name>current3</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin4_</name><argument_list>(<argument><expr><call><name><name>g4</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end4_</name><argument_list>(<argument><expr><call><name><name>g4</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <macro><name>current4_</name><argument_list>(<argument>current4</argument>)</argument_list></macro> <expr><block>{
<expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;
}</block>
<name>virtual</name> <operator>~</operator><macro><name>Iterator</name><argument_list>()</argument_list></macro> <block>{}</block>

<name>virtual</name> <specifier>const</specifier> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>BaseGenerator</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>base_</name></expr>;</return>
}</block>


<name>virtual</name> <name>void</name> <macro><name>Advance</name><argument_list>()</argument_list></macro> <block>{
<expr><call><name>assert</name><argument_list>(<argument><expr><operator>!</operator><call><name>AtEnd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
<expr><operator>++</operator><name>current4_</name></expr>;
<if_stmt><if>if <condition>(<expr><name>current4_</name> <operator>==</operator> <name>end4_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current4_</name> <operator>=</operator> <name>begin4_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current3_</name></expr>;</expr_stmt>
<expr_stmt/>}</block_content>
if (current3_ == end3_</block></if></if_stmt>) <block>{
<expr><name>current3_</name> <operator>=</operator> <name>begin3_</name></expr>;
<expr><operator>++</operator><name>current2_</name></expr>;
}</block></block></expr>
<if_stmt><if>if <condition>(<expr><name>current2_</name> <operator>==</operator> <name>end2_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current2_</name> <operator>=</operator> <name>begin2_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current1_</name></expr>;</expr_stmt>
<expr_stmt/>}</block_content>
ComputeCurrentValue(</block></if></if_stmt>)</block></expr></range></decl>;</decl_stmt>
}
virtual <expr_stmt><expr><name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>Clone</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><operator>*</operator><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>
<expr_stmt><expr><name>virtual</name> <specifier>const</specifier> <name>ParamType</name><operator>*</operator> <macro><name>Current</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><call><name><name>current_value_</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;</return> }</block></expr></expr_stmt>
<decl_stmt><decl><type><name>virtual</name> <name>bool</name></type> <name>Equals</name><argument_list>(<argument><expr><specifier>const</specifier> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list> const <block>{<block_content>


<expr_stmt><expr><call><name>GTEST_CHECK_</name><argument_list>(<argument><expr><call><name>BaseGenerator</name><argument_list>()</argument_list></call> <operator>==</operator> <call><name><name>other</name><operator>.</operator><name>BaseGenerator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
<operator>&lt;&lt;</operator> <literal type="string">"The program attempted to compare iterators "</literal>
<operator>&lt;&lt;</operator> <literal type="string">"from different generators."</literal> <operator>&lt;&lt;</operator> <name>std</name><operator>::</operator><name>endl</name></expr>;</expr_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Iterator</name><modifier>*</modifier></type> <name>typed_other</name> <init>=
<expr><call><name><name>CheckedDowncastToActualType</name><argument_list type="generic">&lt;<argument><expr><specifier>const</specifier> <name>Iterator</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><operator>&amp;</operator><name>other</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<return>return <expr><operator>(</operator><call><name>AtEnd</name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>typed_other</name><operator>-&gt;</operator><name>AtEnd</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>||</operator>
<operator>(</operator>
<name>current1_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current1_</name></name> <operator>&amp;&amp;</operator>
<name>current2_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current2_</name></name> <operator>&amp;&amp;</operator>
<name>current3_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current3_</name></name> <operator>&amp;&amp;</operator>
<name>current4_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current4_</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<label><name>private</name>:</label>
<expr_stmt><expr><call><name>Iterator</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Iterator</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>base_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>base_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>current4_</name><argument_list>(<argument>other.current4_</argument>)</argument_list></macro> <expr><block>{
<expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;
}</block>

<name>void</name> <macro><name>ComputeCurrentValue</name><argument_list>()</argument_list></macro> <block>{
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>AtEnd</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<macro><name>current_value_</name></macro><expr_stmt><expr><operator>.</operator><macro><name>reset</name><argument_list>(<argument>new ParamType(*current1_, *current2_, *current3_,
*current4_)</argument>)</argument_list></macro></expr>;</expr_stmt></block_content></block></if></if_stmt>
}</block></expr></expr_stmt>
<expr_stmt><expr><name>bool</name> <macro><name>AtEnd</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{


<return>return
<expr><name>current1_</name> <operator>==</operator> <name>end1_</name> <operator>||</operator>
<name>current2_</name> <operator>==</operator> <name>end2_</name> <operator>||</operator>
<name>current3_</name> <operator>==</operator> <name>end3_</name> <operator>||</operator>
<name>current4_</name> <operator>==</operator> <name>end4_</name></expr>;</return>
}</block></expr></expr_stmt>


<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>Iterator</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><modifier>*</modifier> <specifier>const</specifier></type> <name>base_</name></decl>;</decl_stmt>


<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin1_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end1_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current1_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin2_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end2_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current2_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin3_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end3_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current3_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin4_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end4_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current4_</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name><name>linked_ptr</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name></type> <name>current_value_</name></decl>;</decl_stmt>
};


<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>CartesianProductGenerator4</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name></type> <name>g1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name></type> <name>g2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name></type> <name>g3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name></type> <name>g4_</name></decl>;</decl_stmt>
};


<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>CartesianProductGenerator5</name>
<range>: <expr><name>public</name> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt; <argument><expr><operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name> <block>{
<expr><name>public</name><operator>:</operator></expr>
<typedef>typedef <expr_stmt><expr><operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name> <name>ParamType</name></expr>;</expr_stmt></typedef>

<call><name>CartesianProductGenerator5</name><argument_list>(<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g1</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g2</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g3</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g4</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g5</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>g1_</name><argument_list>(<argument><expr><name>g1</name></expr></argument>)</argument_list></call>, <call><name>g2_</name><argument_list>(<argument><expr><name>g2</name></expr></argument>)</argument_list></call>, <call><name>g3_</name><argument_list>(<argument><expr><name>g3</name></expr></argument>)</argument_list></call>, <call><name>g4_</name><argument_list>(<argument><expr><name>g4</name></expr></argument>)</argument_list></call>, <macro><name>g5_</name><argument_list>(<argument>g5</argument>)</argument_list></macro> <block>{}</block></block>
<name>virtual</name> <operator>~</operator><macro><name>CartesianProductGenerator5</name><argument_list>()</argument_list></macro> <block>{}</block>

<name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>Begin</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>g1_</name></expr></argument>, <argument><expr><call><name><name>g1_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g2_</name></expr></argument>, <argument><expr><call><name><name>g2_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g3_</name></expr></argument>,
<argument><expr><call><name><name>g3_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g4_</name></expr></argument>, <argument><expr><call><name><name>g4_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g5_</name></expr></argument>, <argument><expr><call><name><name>g5_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></range></decl></decl_stmt>
<expr_stmt><expr><name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>End</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>g1_</name></expr></argument>, <argument><expr><call><name><name>g1_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g2_</name></expr></argument>, <argument><expr><call><name><name>g2_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g3_</name></expr></argument>, <argument><expr><call><name><name>g3_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>g4_</name></expr></argument>, <argument><expr><call><name><name>g4_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g5_</name></expr></argument>, <argument><expr><call><name><name>g5_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<label><name>private</name>:</label>
<decl_stmt><decl><type><name>class</name></type> <name>Iterator</name> <range>: <expr><name>public</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name> <block>{
<expr><name>public</name><operator>:</operator>
<macro><name>Iterator</name><argument_list>(<argument>const ParamGeneratorInterface&lt;ParamType&gt;* base</argument>,
<argument>const ParamGenerator&lt;T1&gt;&amp; g1</argument>,
<argument>const typename ParamGenerator&lt;T1&gt;::iterator&amp; current1</argument>,
<argument>const ParamGenerator&lt;T2&gt;&amp; g2</argument>,
<argument>const typename ParamGenerator&lt;T2&gt;::iterator&amp; current2</argument>,
<argument>const ParamGenerator&lt;T3&gt;&amp; g3</argument>,
<argument>const typename ParamGenerator&lt;T3&gt;::iterator&amp; current3</argument>,
<argument>const ParamGenerator&lt;T4&gt;&amp; g4</argument>,
<argument>const typename ParamGenerator&lt;T4&gt;::iterator&amp; current4</argument>,
<argument>const ParamGenerator&lt;T5&gt;&amp; g5</argument>,
<argument>const typename ParamGenerator&lt;T5&gt;::iterator&amp; current5</argument>)</argument_list></macro>
<operator>:</operator> <call><name>base_</name><argument_list>(<argument><expr><name>base</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin1_</name><argument_list>(<argument><expr><call><name><name>g1</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end1_</name><argument_list>(<argument><expr><call><name><name>g1</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current1_</name><argument_list>(<argument><expr><name>current1</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin2_</name><argument_list>(<argument><expr><call><name><name>g2</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end2_</name><argument_list>(<argument><expr><call><name><name>g2</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current2_</name><argument_list>(<argument><expr><name>current2</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin3_</name><argument_list>(<argument><expr><call><name><name>g3</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end3_</name><argument_list>(<argument><expr><call><name><name>g3</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current3_</name><argument_list>(<argument><expr><name>current3</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin4_</name><argument_list>(<argument><expr><call><name><name>g4</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end4_</name><argument_list>(<argument><expr><call><name><name>g4</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current4_</name><argument_list>(<argument><expr><name>current4</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin5_</name><argument_list>(<argument><expr><call><name><name>g5</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end5_</name><argument_list>(<argument><expr><call><name><name>g5</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <macro><name>current5_</name><argument_list>(<argument>current5</argument>)</argument_list></macro> <expr><block>{
<expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;
}</block>
<name>virtual</name> <operator>~</operator><macro><name>Iterator</name><argument_list>()</argument_list></macro> <block>{}</block>

<name>virtual</name> <specifier>const</specifier> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>BaseGenerator</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>base_</name></expr>;</return>
}</block>


<name>virtual</name> <name>void</name> <macro><name>Advance</name><argument_list>()</argument_list></macro> <block>{
<expr><call><name>assert</name><argument_list>(<argument><expr><operator>!</operator><call><name>AtEnd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
<expr><operator>++</operator><name>current5_</name></expr>;
<if_stmt><if>if <condition>(<expr><name>current5_</name> <operator>==</operator> <name>end5_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current5_</name> <operator>=</operator> <name>begin5_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current4_</name></expr>;</expr_stmt>
<expr_stmt/>}</block_content>
if (current4_ == end4_</block></if></if_stmt>) <block>{
<expr><name>current4_</name> <operator>=</operator> <name>begin4_</name></expr>;
<expr><operator>++</operator><name>current3_</name></expr>;
}</block></block></expr>
<if_stmt><if>if <condition>(<expr><name>current3_</name> <operator>==</operator> <name>end3_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current3_</name> <operator>=</operator> <name>begin3_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current2_</name></expr>;</expr_stmt>
<expr_stmt/>}</block_content>
if (current2_ == end2_</block></if></if_stmt>) <block>{
<expr><name>current2_</name> <operator>=</operator> <name>begin2_</name></expr>;
<expr><operator>++</operator><name>current1_</name></expr>;
}</block></block>
<call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr></range></decl>;</decl_stmt>
}
virtual <expr_stmt><expr><name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>Clone</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><operator>*</operator><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>
<expr_stmt><expr><name>virtual</name> <specifier>const</specifier> <name>ParamType</name><operator>*</operator> <macro><name>Current</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><call><name><name>current_value_</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;</return> }</block></expr></expr_stmt>
<decl_stmt><decl><type><name>virtual</name> <name>bool</name></type> <name>Equals</name><argument_list>(<argument><expr><specifier>const</specifier> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list> const <block>{<block_content>


<expr_stmt><expr><call><name>GTEST_CHECK_</name><argument_list>(<argument><expr><call><name>BaseGenerator</name><argument_list>()</argument_list></call> <operator>==</operator> <call><name><name>other</name><operator>.</operator><name>BaseGenerator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
<operator>&lt;&lt;</operator> <literal type="string">"The program attempted to compare iterators "</literal>
<operator>&lt;&lt;</operator> <literal type="string">"from different generators."</literal> <operator>&lt;&lt;</operator> <name>std</name><operator>::</operator><name>endl</name></expr>;</expr_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Iterator</name><modifier>*</modifier></type> <name>typed_other</name> <init>=
<expr><call><name><name>CheckedDowncastToActualType</name><argument_list type="generic">&lt;<argument><expr><specifier>const</specifier> <name>Iterator</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><operator>&amp;</operator><name>other</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<return>return <expr><operator>(</operator><call><name>AtEnd</name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>typed_other</name><operator>-&gt;</operator><name>AtEnd</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>||</operator>
<operator>(</operator>
<name>current1_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current1_</name></name> <operator>&amp;&amp;</operator>
<name>current2_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current2_</name></name> <operator>&amp;&amp;</operator>
<name>current3_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current3_</name></name> <operator>&amp;&amp;</operator>
<name>current4_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current4_</name></name> <operator>&amp;&amp;</operator>
<name>current5_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current5_</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<label><name>private</name>:</label>
<expr_stmt><expr><call><name>Iterator</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Iterator</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>base_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>base_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>current5_</name><argument_list>(<argument>other.current5_</argument>)</argument_list></macro> <expr><block>{
<expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;
}</block>

<name>void</name> <macro><name>ComputeCurrentValue</name><argument_list>()</argument_list></macro> <block>{
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>AtEnd</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<macro><name>current_value_</name></macro><expr_stmt><expr><operator>.</operator><macro><name>reset</name><argument_list>(<argument>new ParamType(*current1_, *current2_, *current3_,
*current4_, *current5_)</argument>)</argument_list></macro></expr>;</expr_stmt></block_content></block></if></if_stmt>
}</block></expr></expr_stmt>
<expr_stmt><expr><name>bool</name> <macro><name>AtEnd</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{


<return>return
<expr><name>current1_</name> <operator>==</operator> <name>end1_</name> <operator>||</operator>
<name>current2_</name> <operator>==</operator> <name>end2_</name> <operator>||</operator>
<name>current3_</name> <operator>==</operator> <name>end3_</name> <operator>||</operator>
<name>current4_</name> <operator>==</operator> <name>end4_</name> <operator>||</operator>
<name>current5_</name> <operator>==</operator> <name>end5_</name></expr>;</return>
}</block></expr></expr_stmt>


<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>Iterator</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><modifier>*</modifier> <specifier>const</specifier></type> <name>base_</name></decl>;</decl_stmt>


<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin1_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end1_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current1_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin2_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end2_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current2_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin3_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end3_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current3_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin4_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end4_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current4_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin5_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end5_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current5_</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name><name>linked_ptr</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name></type> <name>current_value_</name></decl>;</decl_stmt>
};


<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>CartesianProductGenerator5</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name></type> <name>g1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name></type> <name>g2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name></type> <name>g3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name></type> <name>g4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name></type> <name>g5_</name></decl>;</decl_stmt>
};


<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>CartesianProductGenerator6</name>
<range>: <expr><name>public</name> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt; <argument><expr><operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>,
<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name> <block>{
<expr><name>public</name><operator>:</operator></expr>
<typedef>typedef <expr_stmt><expr><operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name> <name>ParamType</name></expr>;</expr_stmt></typedef>

<call><name>CartesianProductGenerator6</name><argument_list>(<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g1</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g2</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g3</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g4</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g5</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g6</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>g1_</name><argument_list>(<argument><expr><name>g1</name></expr></argument>)</argument_list></call>, <call><name>g2_</name><argument_list>(<argument><expr><name>g2</name></expr></argument>)</argument_list></call>, <call><name>g3_</name><argument_list>(<argument><expr><name>g3</name></expr></argument>)</argument_list></call>, <call><name>g4_</name><argument_list>(<argument><expr><name>g4</name></expr></argument>)</argument_list></call>, <call><name>g5_</name><argument_list>(<argument><expr><name>g5</name></expr></argument>)</argument_list></call>, <macro><name>g6_</name><argument_list>(<argument>g6</argument>)</argument_list></macro> <block>{}</block></block>
<name>virtual</name> <operator>~</operator><macro><name>CartesianProductGenerator6</name><argument_list>()</argument_list></macro> <block>{}</block>

<name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>Begin</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>g1_</name></expr></argument>, <argument><expr><call><name><name>g1_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g2_</name></expr></argument>, <argument><expr><call><name><name>g2_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g3_</name></expr></argument>,
<argument><expr><call><name><name>g3_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g4_</name></expr></argument>, <argument><expr><call><name><name>g4_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g5_</name></expr></argument>, <argument><expr><call><name><name>g5_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g6_</name></expr></argument>, <argument><expr><call><name><name>g6_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></range></decl></decl_stmt>
<expr_stmt><expr><name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>End</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>g1_</name></expr></argument>, <argument><expr><call><name><name>g1_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g2_</name></expr></argument>, <argument><expr><call><name><name>g2_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g3_</name></expr></argument>, <argument><expr><call><name><name>g3_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>g4_</name></expr></argument>, <argument><expr><call><name><name>g4_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g5_</name></expr></argument>, <argument><expr><call><name><name>g5_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g6_</name></expr></argument>, <argument><expr><call><name><name>g6_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<label><name>private</name>:</label>
<decl_stmt><decl><type><name>class</name></type> <name>Iterator</name> <range>: <expr><name>public</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name> <block>{
<expr><name>public</name><operator>:</operator>
<macro><name>Iterator</name><argument_list>(<argument>const ParamGeneratorInterface&lt;ParamType&gt;* base</argument>,
<argument>const ParamGenerator&lt;T1&gt;&amp; g1</argument>,
<argument>const typename ParamGenerator&lt;T1&gt;::iterator&amp; current1</argument>,
<argument>const ParamGenerator&lt;T2&gt;&amp; g2</argument>,
<argument>const typename ParamGenerator&lt;T2&gt;::iterator&amp; current2</argument>,
<argument>const ParamGenerator&lt;T3&gt;&amp; g3</argument>,
<argument>const typename ParamGenerator&lt;T3&gt;::iterator&amp; current3</argument>,
<argument>const ParamGenerator&lt;T4&gt;&amp; g4</argument>,
<argument>const typename ParamGenerator&lt;T4&gt;::iterator&amp; current4</argument>,
<argument>const ParamGenerator&lt;T5&gt;&amp; g5</argument>,
<argument>const typename ParamGenerator&lt;T5&gt;::iterator&amp; current5</argument>,
<argument>const ParamGenerator&lt;T6&gt;&amp; g6</argument>,
<argument>const typename ParamGenerator&lt;T6&gt;::iterator&amp; current6</argument>)</argument_list></macro>
<operator>:</operator> <call><name>base_</name><argument_list>(<argument><expr><name>base</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin1_</name><argument_list>(<argument><expr><call><name><name>g1</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end1_</name><argument_list>(<argument><expr><call><name><name>g1</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current1_</name><argument_list>(<argument><expr><name>current1</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin2_</name><argument_list>(<argument><expr><call><name><name>g2</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end2_</name><argument_list>(<argument><expr><call><name><name>g2</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current2_</name><argument_list>(<argument><expr><name>current2</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin3_</name><argument_list>(<argument><expr><call><name><name>g3</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end3_</name><argument_list>(<argument><expr><call><name><name>g3</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current3_</name><argument_list>(<argument><expr><name>current3</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin4_</name><argument_list>(<argument><expr><call><name><name>g4</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end4_</name><argument_list>(<argument><expr><call><name><name>g4</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current4_</name><argument_list>(<argument><expr><name>current4</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin5_</name><argument_list>(<argument><expr><call><name><name>g5</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end5_</name><argument_list>(<argument><expr><call><name><name>g5</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current5_</name><argument_list>(<argument><expr><name>current5</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin6_</name><argument_list>(<argument><expr><call><name><name>g6</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end6_</name><argument_list>(<argument><expr><call><name><name>g6</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <macro><name>current6_</name><argument_list>(<argument>current6</argument>)</argument_list></macro> <expr><block>{
<expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;
}</block>
<name>virtual</name> <operator>~</operator><macro><name>Iterator</name><argument_list>()</argument_list></macro> <block>{}</block>

<name>virtual</name> <specifier>const</specifier> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>BaseGenerator</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>base_</name></expr>;</return>
}</block>


<name>virtual</name> <name>void</name> <macro><name>Advance</name><argument_list>()</argument_list></macro> <block>{
<expr><call><name>assert</name><argument_list>(<argument><expr><operator>!</operator><call><name>AtEnd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
<expr><operator>++</operator><name>current6_</name></expr>;
<if_stmt><if>if <condition>(<expr><name>current6_</name> <operator>==</operator> <name>end6_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current6_</name> <operator>=</operator> <name>begin6_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current5_</name></expr>;</expr_stmt>
<expr_stmt/>}</block_content>
if (current5_ == end5_</block></if></if_stmt>) <block>{
<expr><name>current5_</name> <operator>=</operator> <name>begin5_</name></expr>;
<expr><operator>++</operator><name>current4_</name></expr>;
}</block></block></expr>
<if_stmt><if>if <condition>(<expr><name>current4_</name> <operator>==</operator> <name>end4_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current4_</name> <operator>=</operator> <name>begin4_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current3_</name></expr>;</expr_stmt>
<expr_stmt/>}</block_content>
if (current3_ == end3_</block></if></if_stmt>) <block>{
<expr><name>current3_</name> <operator>=</operator> <name>begin3_</name></expr>;
<expr><operator>++</operator><name>current2_</name></expr>;
}</block></block></expr></range></decl></decl_stmt>
<if_stmt><if>if <condition>(<expr><name>current2_</name> <operator>==</operator> <name>end2_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current2_</name> <operator>=</operator> <name>begin2_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current1_</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
}
virtual <expr_stmt><expr><name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>Clone</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><operator>*</operator><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>
<expr_stmt><expr><name>virtual</name> <specifier>const</specifier> <name>ParamType</name><operator>*</operator> <macro><name>Current</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><call><name><name>current_value_</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;</return> }</block></expr></expr_stmt>
<decl_stmt><decl><type><name>virtual</name> <name>bool</name></type> <name>Equals</name><argument_list>(<argument><expr><specifier>const</specifier> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list> const <block>{<block_content>


<expr_stmt><expr><call><name>GTEST_CHECK_</name><argument_list>(<argument><expr><call><name>BaseGenerator</name><argument_list>()</argument_list></call> <operator>==</operator> <call><name><name>other</name><operator>.</operator><name>BaseGenerator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
<operator>&lt;&lt;</operator> <literal type="string">"The program attempted to compare iterators "</literal>
<operator>&lt;&lt;</operator> <literal type="string">"from different generators."</literal> <operator>&lt;&lt;</operator> <name>std</name><operator>::</operator><name>endl</name></expr>;</expr_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Iterator</name><modifier>*</modifier></type> <name>typed_other</name> <init>=
<expr><call><name><name>CheckedDowncastToActualType</name><argument_list type="generic">&lt;<argument><expr><specifier>const</specifier> <name>Iterator</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><operator>&amp;</operator><name>other</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<return>return <expr><operator>(</operator><call><name>AtEnd</name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>typed_other</name><operator>-&gt;</operator><name>AtEnd</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>||</operator>
<operator>(</operator>
<name>current1_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current1_</name></name> <operator>&amp;&amp;</operator>
<name>current2_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current2_</name></name> <operator>&amp;&amp;</operator>
<name>current3_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current3_</name></name> <operator>&amp;&amp;</operator>
<name>current4_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current4_</name></name> <operator>&amp;&amp;</operator>
<name>current5_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current5_</name></name> <operator>&amp;&amp;</operator>
<name>current6_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current6_</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<label><name>private</name>:</label>
<expr_stmt><expr><call><name>Iterator</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Iterator</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>base_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>base_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>current6_</name><argument_list>(<argument>other.current6_</argument>)</argument_list></macro> <expr><block>{
<expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;
}</block>

<name>void</name> <macro><name>ComputeCurrentValue</name><argument_list>()</argument_list></macro> <block>{
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>AtEnd</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<macro><name>current_value_</name></macro><expr_stmt><expr><operator>.</operator><macro><name>reset</name><argument_list>(<argument>new ParamType(*current1_, *current2_, *current3_,
*current4_, *current5_, *current6_)</argument>)</argument_list></macro></expr>;</expr_stmt></block_content></block></if></if_stmt>
}</block></expr></expr_stmt>
<expr_stmt><expr><name>bool</name> <macro><name>AtEnd</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{


<return>return
<expr><name>current1_</name> <operator>==</operator> <name>end1_</name> <operator>||</operator>
<name>current2_</name> <operator>==</operator> <name>end2_</name> <operator>||</operator>
<name>current3_</name> <operator>==</operator> <name>end3_</name> <operator>||</operator>
<name>current4_</name> <operator>==</operator> <name>end4_</name> <operator>||</operator>
<name>current5_</name> <operator>==</operator> <name>end5_</name> <operator>||</operator>
<name>current6_</name> <operator>==</operator> <name>end6_</name></expr>;</return>
}</block></expr></expr_stmt>


<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>Iterator</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><modifier>*</modifier> <specifier>const</specifier></type> <name>base_</name></decl>;</decl_stmt>


<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin1_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end1_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current1_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin2_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end2_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current2_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin3_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end3_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current3_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin4_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end4_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current4_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin5_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end5_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current5_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin6_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end6_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current6_</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name><name>linked_ptr</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name></type> <name>current_value_</name></decl>;</decl_stmt>
};


<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>CartesianProductGenerator6</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name></type> <name>g1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name></type> <name>g2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name></type> <name>g3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name></type> <name>g4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name></type> <name>g5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name></type> <name>g6_</name></decl>;</decl_stmt>
};


<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>CartesianProductGenerator7</name>
<range>: <expr><name>public</name> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt; <argument><expr><operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>,
<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name> <block>{
<expr><name>public</name><operator>:</operator></expr>
<typedef>typedef <expr_stmt><expr><operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>, <argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name> <name>ParamType</name></expr>;</expr_stmt></typedef>

<call><name>CartesianProductGenerator7</name><argument_list>(<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g1</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g2</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g3</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g4</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g5</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g6</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g7</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>g1_</name><argument_list>(<argument><expr><name>g1</name></expr></argument>)</argument_list></call>, <call><name>g2_</name><argument_list>(<argument><expr><name>g2</name></expr></argument>)</argument_list></call>, <call><name>g3_</name><argument_list>(<argument><expr><name>g3</name></expr></argument>)</argument_list></call>, <call><name>g4_</name><argument_list>(<argument><expr><name>g4</name></expr></argument>)</argument_list></call>, <call><name>g5_</name><argument_list>(<argument><expr><name>g5</name></expr></argument>)</argument_list></call>, <call><name>g6_</name><argument_list>(<argument><expr><name>g6</name></expr></argument>)</argument_list></call>, <macro><name>g7_</name><argument_list>(<argument>g7</argument>)</argument_list></macro> <block>{}</block></block>
<name>virtual</name> <operator>~</operator><macro><name>CartesianProductGenerator7</name><argument_list>()</argument_list></macro> <block>{}</block>

<name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>Begin</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>g1_</name></expr></argument>, <argument><expr><call><name><name>g1_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g2_</name></expr></argument>, <argument><expr><call><name><name>g2_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g3_</name></expr></argument>,
<argument><expr><call><name><name>g3_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g4_</name></expr></argument>, <argument><expr><call><name><name>g4_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g5_</name></expr></argument>, <argument><expr><call><name><name>g5_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g6_</name></expr></argument>, <argument><expr><call><name><name>g6_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g7_</name></expr></argument>,
<argument><expr><call><name><name>g7_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></range></decl></decl_stmt>
<expr_stmt><expr><name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>End</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>g1_</name></expr></argument>, <argument><expr><call><name><name>g1_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g2_</name></expr></argument>, <argument><expr><call><name><name>g2_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g3_</name></expr></argument>, <argument><expr><call><name><name>g3_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>g4_</name></expr></argument>, <argument><expr><call><name><name>g4_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g5_</name></expr></argument>, <argument><expr><call><name><name>g5_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g6_</name></expr></argument>, <argument><expr><call><name><name>g6_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g7_</name></expr></argument>, <argument><expr><call><name><name>g7_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<label><name>private</name>:</label>
<decl_stmt><decl><type><name>class</name></type> <name>Iterator</name> <range>: <expr><name>public</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name> <block>{
<expr><name>public</name><operator>:</operator>
<macro><name>Iterator</name><argument_list>(<argument>const ParamGeneratorInterface&lt;ParamType&gt;* base</argument>,
<argument>const ParamGenerator&lt;T1&gt;&amp; g1</argument>,
<argument>const typename ParamGenerator&lt;T1&gt;::iterator&amp; current1</argument>,
<argument>const ParamGenerator&lt;T2&gt;&amp; g2</argument>,
<argument>const typename ParamGenerator&lt;T2&gt;::iterator&amp; current2</argument>,
<argument>const ParamGenerator&lt;T3&gt;&amp; g3</argument>,
<argument>const typename ParamGenerator&lt;T3&gt;::iterator&amp; current3</argument>,
<argument>const ParamGenerator&lt;T4&gt;&amp; g4</argument>,
<argument>const typename ParamGenerator&lt;T4&gt;::iterator&amp; current4</argument>,
<argument>const ParamGenerator&lt;T5&gt;&amp; g5</argument>,
<argument>const typename ParamGenerator&lt;T5&gt;::iterator&amp; current5</argument>,
<argument>const ParamGenerator&lt;T6&gt;&amp; g6</argument>,
<argument>const typename ParamGenerator&lt;T6&gt;::iterator&amp; current6</argument>,
<argument>const ParamGenerator&lt;T7&gt;&amp; g7</argument>,
<argument>const typename ParamGenerator&lt;T7&gt;::iterator&amp; current7</argument>)</argument_list></macro>
<operator>:</operator> <call><name>base_</name><argument_list>(<argument><expr><name>base</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin1_</name><argument_list>(<argument><expr><call><name><name>g1</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end1_</name><argument_list>(<argument><expr><call><name><name>g1</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current1_</name><argument_list>(<argument><expr><name>current1</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin2_</name><argument_list>(<argument><expr><call><name><name>g2</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end2_</name><argument_list>(<argument><expr><call><name><name>g2</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current2_</name><argument_list>(<argument><expr><name>current2</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin3_</name><argument_list>(<argument><expr><call><name><name>g3</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end3_</name><argument_list>(<argument><expr><call><name><name>g3</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current3_</name><argument_list>(<argument><expr><name>current3</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin4_</name><argument_list>(<argument><expr><call><name><name>g4</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end4_</name><argument_list>(<argument><expr><call><name><name>g4</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current4_</name><argument_list>(<argument><expr><name>current4</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin5_</name><argument_list>(<argument><expr><call><name><name>g5</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end5_</name><argument_list>(<argument><expr><call><name><name>g5</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current5_</name><argument_list>(<argument><expr><name>current5</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin6_</name><argument_list>(<argument><expr><call><name><name>g6</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end6_</name><argument_list>(<argument><expr><call><name><name>g6</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current6_</name><argument_list>(<argument><expr><name>current6</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin7_</name><argument_list>(<argument><expr><call><name><name>g7</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end7_</name><argument_list>(<argument><expr><call><name><name>g7</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <macro><name>current7_</name><argument_list>(<argument>current7</argument>)</argument_list></macro> <expr><block>{
<expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;
}</block>
<name>virtual</name> <operator>~</operator><macro><name>Iterator</name><argument_list>()</argument_list></macro> <block>{}</block>

<name>virtual</name> <specifier>const</specifier> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>BaseGenerator</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>base_</name></expr>;</return>
}</block>


<name>virtual</name> <name>void</name> <macro><name>Advance</name><argument_list>()</argument_list></macro> <block>{
<expr><call><name>assert</name><argument_list>(<argument><expr><operator>!</operator><call><name>AtEnd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
<expr><operator>++</operator><name>current7_</name></expr>;
<if_stmt><if>if <condition>(<expr><name>current7_</name> <operator>==</operator> <name>end7_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current7_</name> <operator>=</operator> <name>begin7_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current6_</name></expr>;</expr_stmt>
<expr_stmt/>}</block_content>
if (current6_ == end6_</block></if></if_stmt>) <block>{
<expr><name>current6_</name> <operator>=</operator> <name>begin6_</name></expr>;
<expr><operator>++</operator><name>current5_</name></expr>;
}</block></block></expr>
<if_stmt><if>if <condition>(<expr><name>current5_</name> <operator>==</operator> <name>end5_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current5_</name> <operator>=</operator> <name>begin5_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current4_</name></expr>;</expr_stmt>
<expr_stmt/>}</block_content>
if (current4_ == end4_</block></if></if_stmt>) <block>{
<expr><name>current4_</name> <operator>=</operator> <name>begin4_</name></expr>;
<expr><operator>++</operator><name>current3_</name></expr>;
}</block></block></expr></range></decl></decl_stmt>
<if_stmt><if>if <condition>(<expr><name>current3_</name> <operator>==</operator> <name>end3_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current3_</name> <operator>=</operator> <name>begin3_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current2_</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>current2_</name> <operator>==</operator> <name>end2_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current2_</name> <operator>=</operator> <name>begin2_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current1_</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
}
virtual <expr_stmt><expr><name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>Clone</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><operator>*</operator><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>
<expr_stmt><expr><name>virtual</name> <specifier>const</specifier> <name>ParamType</name><operator>*</operator> <macro><name>Current</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><call><name><name>current_value_</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;</return> }</block></expr></expr_stmt>
<decl_stmt><decl><type><name>virtual</name> <name>bool</name></type> <name>Equals</name><argument_list>(<argument><expr><specifier>const</specifier> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list> const <block>{<block_content>


<expr_stmt><expr><call><name>GTEST_CHECK_</name><argument_list>(<argument><expr><call><name>BaseGenerator</name><argument_list>()</argument_list></call> <operator>==</operator> <call><name><name>other</name><operator>.</operator><name>BaseGenerator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
<operator>&lt;&lt;</operator> <literal type="string">"The program attempted to compare iterators "</literal>
<operator>&lt;&lt;</operator> <literal type="string">"from different generators."</literal> <operator>&lt;&lt;</operator> <name>std</name><operator>::</operator><name>endl</name></expr>;</expr_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Iterator</name><modifier>*</modifier></type> <name>typed_other</name> <init>=
<expr><call><name><name>CheckedDowncastToActualType</name><argument_list type="generic">&lt;<argument><expr><specifier>const</specifier> <name>Iterator</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><operator>&amp;</operator><name>other</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<return>return <expr><operator>(</operator><call><name>AtEnd</name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>typed_other</name><operator>-&gt;</operator><name>AtEnd</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>||</operator>
<operator>(</operator>
<name>current1_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current1_</name></name> <operator>&amp;&amp;</operator>
<name>current2_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current2_</name></name> <operator>&amp;&amp;</operator>
<name>current3_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current3_</name></name> <operator>&amp;&amp;</operator>
<name>current4_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current4_</name></name> <operator>&amp;&amp;</operator>
<name>current5_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current5_</name></name> <operator>&amp;&amp;</operator>
<name>current6_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current6_</name></name> <operator>&amp;&amp;</operator>
<name>current7_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current7_</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<label><name>private</name>:</label>
<expr_stmt><expr><call><name>Iterator</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Iterator</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>base_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>base_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>current7_</name><argument_list>(<argument>other.current7_</argument>)</argument_list></macro> <expr><block>{
<expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;
}</block>

<name>void</name> <macro><name>ComputeCurrentValue</name><argument_list>()</argument_list></macro> <block>{
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>AtEnd</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<macro><name>current_value_</name></macro><expr_stmt><expr><operator>.</operator><macro><name>reset</name><argument_list>(<argument>new ParamType(*current1_, *current2_, *current3_,
*current4_, *current5_, *current6_, *current7_)</argument>)</argument_list></macro></expr>;</expr_stmt></block_content></block></if></if_stmt>
}</block></expr></expr_stmt>
<expr_stmt><expr><name>bool</name> <macro><name>AtEnd</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{


<return>return
<expr><name>current1_</name> <operator>==</operator> <name>end1_</name> <operator>||</operator>
<name>current2_</name> <operator>==</operator> <name>end2_</name> <operator>||</operator>
<name>current3_</name> <operator>==</operator> <name>end3_</name> <operator>||</operator>
<name>current4_</name> <operator>==</operator> <name>end4_</name> <operator>||</operator>
<name>current5_</name> <operator>==</operator> <name>end5_</name> <operator>||</operator>
<name>current6_</name> <operator>==</operator> <name>end6_</name> <operator>||</operator>
<name>current7_</name> <operator>==</operator> <name>end7_</name></expr>;</return>
}</block></expr></expr_stmt>


<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>Iterator</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><modifier>*</modifier> <specifier>const</specifier></type> <name>base_</name></decl>;</decl_stmt>


<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin1_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end1_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current1_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin2_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end2_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current2_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin3_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end3_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current3_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin4_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end4_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current4_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin5_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end5_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current5_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin6_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end6_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current6_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin7_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end7_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current7_</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name><name>linked_ptr</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name></type> <name>current_value_</name></decl>;</decl_stmt>
};


<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>CartesianProductGenerator7</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name></type> <name>g1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name></type> <name>g2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name></type> <name>g3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name></type> <name>g4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name></type> <name>g5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name></type> <name>g6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name></type> <name>g7_</name></decl>;</decl_stmt>
};


<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>CartesianProductGenerator8</name>
<range>: <expr><name>public</name> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt; <argument><expr><operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>,
<argument><expr><name>T7</name></expr></argument>, <argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name> <block>{
<expr><name>public</name><operator>:</operator></expr>
<typedef>typedef <expr_stmt><expr><operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>, <argument><expr><name>T7</name></expr></argument>, <argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name> <name>ParamType</name></expr>;</expr_stmt></typedef>

<call><name>CartesianProductGenerator8</name><argument_list>(<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g1</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g2</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g3</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g4</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g5</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g6</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g7</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g8</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>g1_</name><argument_list>(<argument><expr><name>g1</name></expr></argument>)</argument_list></call>, <call><name>g2_</name><argument_list>(<argument><expr><name>g2</name></expr></argument>)</argument_list></call>, <call><name>g3_</name><argument_list>(<argument><expr><name>g3</name></expr></argument>)</argument_list></call>, <call><name>g4_</name><argument_list>(<argument><expr><name>g4</name></expr></argument>)</argument_list></call>, <call><name>g5_</name><argument_list>(<argument><expr><name>g5</name></expr></argument>)</argument_list></call>, <call><name>g6_</name><argument_list>(<argument><expr><name>g6</name></expr></argument>)</argument_list></call>, <call><name>g7_</name><argument_list>(<argument><expr><name>g7</name></expr></argument>)</argument_list></call>,
<macro><name>g8_</name><argument_list>(<argument>g8</argument>)</argument_list></macro> <block>{}</block></block>
<name>virtual</name> <operator>~</operator><macro><name>CartesianProductGenerator8</name><argument_list>()</argument_list></macro> <block>{}</block>

<name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>Begin</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>g1_</name></expr></argument>, <argument><expr><call><name><name>g1_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g2_</name></expr></argument>, <argument><expr><call><name><name>g2_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g3_</name></expr></argument>,
<argument><expr><call><name><name>g3_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g4_</name></expr></argument>, <argument><expr><call><name><name>g4_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g5_</name></expr></argument>, <argument><expr><call><name><name>g5_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g6_</name></expr></argument>, <argument><expr><call><name><name>g6_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g7_</name></expr></argument>,
<argument><expr><call><name><name>g7_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g8_</name></expr></argument>, <argument><expr><call><name><name>g8_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></range></decl></decl_stmt>
<expr_stmt><expr><name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>End</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>g1_</name></expr></argument>, <argument><expr><call><name><name>g1_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g2_</name></expr></argument>, <argument><expr><call><name><name>g2_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g3_</name></expr></argument>, <argument><expr><call><name><name>g3_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>g4_</name></expr></argument>, <argument><expr><call><name><name>g4_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g5_</name></expr></argument>, <argument><expr><call><name><name>g5_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g6_</name></expr></argument>, <argument><expr><call><name><name>g6_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g7_</name></expr></argument>, <argument><expr><call><name><name>g7_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g8_</name></expr></argument>,
<argument><expr><call><name><name>g8_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<label><name>private</name>:</label>
<decl_stmt><decl><type><name>class</name></type> <name>Iterator</name> <range>: <expr><name>public</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name> <block>{
<expr><name>public</name><operator>:</operator>
<macro><name>Iterator</name><argument_list>(<argument>const ParamGeneratorInterface&lt;ParamType&gt;* base</argument>,
<argument>const ParamGenerator&lt;T1&gt;&amp; g1</argument>,
<argument>const typename ParamGenerator&lt;T1&gt;::iterator&amp; current1</argument>,
<argument>const ParamGenerator&lt;T2&gt;&amp; g2</argument>,
<argument>const typename ParamGenerator&lt;T2&gt;::iterator&amp; current2</argument>,
<argument>const ParamGenerator&lt;T3&gt;&amp; g3</argument>,
<argument>const typename ParamGenerator&lt;T3&gt;::iterator&amp; current3</argument>,
<argument>const ParamGenerator&lt;T4&gt;&amp; g4</argument>,
<argument>const typename ParamGenerator&lt;T4&gt;::iterator&amp; current4</argument>,
<argument>const ParamGenerator&lt;T5&gt;&amp; g5</argument>,
<argument>const typename ParamGenerator&lt;T5&gt;::iterator&amp; current5</argument>,
<argument>const ParamGenerator&lt;T6&gt;&amp; g6</argument>,
<argument>const typename ParamGenerator&lt;T6&gt;::iterator&amp; current6</argument>,
<argument>const ParamGenerator&lt;T7&gt;&amp; g7</argument>,
<argument>const typename ParamGenerator&lt;T7&gt;::iterator&amp; current7</argument>,
<argument>const ParamGenerator&lt;T8&gt;&amp; g8</argument>,
<argument>const typename ParamGenerator&lt;T8&gt;::iterator&amp; current8</argument>)</argument_list></macro>
<operator>:</operator> <call><name>base_</name><argument_list>(<argument><expr><name>base</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin1_</name><argument_list>(<argument><expr><call><name><name>g1</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end1_</name><argument_list>(<argument><expr><call><name><name>g1</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current1_</name><argument_list>(<argument><expr><name>current1</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin2_</name><argument_list>(<argument><expr><call><name><name>g2</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end2_</name><argument_list>(<argument><expr><call><name><name>g2</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current2_</name><argument_list>(<argument><expr><name>current2</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin3_</name><argument_list>(<argument><expr><call><name><name>g3</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end3_</name><argument_list>(<argument><expr><call><name><name>g3</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current3_</name><argument_list>(<argument><expr><name>current3</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin4_</name><argument_list>(<argument><expr><call><name><name>g4</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end4_</name><argument_list>(<argument><expr><call><name><name>g4</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current4_</name><argument_list>(<argument><expr><name>current4</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin5_</name><argument_list>(<argument><expr><call><name><name>g5</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end5_</name><argument_list>(<argument><expr><call><name><name>g5</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current5_</name><argument_list>(<argument><expr><name>current5</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin6_</name><argument_list>(<argument><expr><call><name><name>g6</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end6_</name><argument_list>(<argument><expr><call><name><name>g6</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current6_</name><argument_list>(<argument><expr><name>current6</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin7_</name><argument_list>(<argument><expr><call><name><name>g7</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end7_</name><argument_list>(<argument><expr><call><name><name>g7</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current7_</name><argument_list>(<argument><expr><name>current7</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin8_</name><argument_list>(<argument><expr><call><name><name>g8</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end8_</name><argument_list>(<argument><expr><call><name><name>g8</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <macro><name>current8_</name><argument_list>(<argument>current8</argument>)</argument_list></macro> <expr><block>{
<expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;
}</block>
<name>virtual</name> <operator>~</operator><macro><name>Iterator</name><argument_list>()</argument_list></macro> <block>{}</block>

<name>virtual</name> <specifier>const</specifier> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>BaseGenerator</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>base_</name></expr>;</return>
}</block>


<name>virtual</name> <name>void</name> <macro><name>Advance</name><argument_list>()</argument_list></macro> <block>{
<expr><call><name>assert</name><argument_list>(<argument><expr><operator>!</operator><call><name>AtEnd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
<expr><operator>++</operator><name>current8_</name></expr>;
<if_stmt><if>if <condition>(<expr><name>current8_</name> <operator>==</operator> <name>end8_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current8_</name> <operator>=</operator> <name>begin8_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current7_</name></expr>;</expr_stmt>
<expr_stmt/>}</block_content>
if (current7_ == end7_</block></if></if_stmt>) <block>{
<expr><name>current7_</name> <operator>=</operator> <name>begin7_</name></expr>;
<expr><operator>++</operator><name>current6_</name></expr>;
}</block></block></expr>
<if_stmt><if>if <condition>(<expr><name>current6_</name> <operator>==</operator> <name>end6_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current6_</name> <operator>=</operator> <name>begin6_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current5_</name></expr>;</expr_stmt>
<expr_stmt/>}</block_content>
if (current5_ == end5_</block></if></if_stmt>) <block>{
<expr><name>current5_</name> <operator>=</operator> <name>begin5_</name></expr>;
<expr><operator>++</operator><name>current4_</name></expr>;
}</block></block></expr></range></decl></decl_stmt>
<if_stmt><if>if <condition>(<expr><name>current4_</name> <operator>==</operator> <name>end4_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current4_</name> <operator>=</operator> <name>begin4_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current3_</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>current3_</name> <operator>==</operator> <name>end3_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current3_</name> <operator>=</operator> <name>begin3_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current2_</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>current2_</name> <operator>==</operator> <name>end2_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current2_</name> <operator>=</operator> <name>begin2_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current1_</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
}
virtual <expr_stmt><expr><name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>Clone</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><operator>*</operator><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>
<expr_stmt><expr><name>virtual</name> <specifier>const</specifier> <name>ParamType</name><operator>*</operator> <macro><name>Current</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><call><name><name>current_value_</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;</return> }</block></expr></expr_stmt>
<decl_stmt><decl><type><name>virtual</name> <name>bool</name></type> <name>Equals</name><argument_list>(<argument><expr><specifier>const</specifier> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list> const <block>{<block_content>


<expr_stmt><expr><call><name>GTEST_CHECK_</name><argument_list>(<argument><expr><call><name>BaseGenerator</name><argument_list>()</argument_list></call> <operator>==</operator> <call><name><name>other</name><operator>.</operator><name>BaseGenerator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
<operator>&lt;&lt;</operator> <literal type="string">"The program attempted to compare iterators "</literal>
<operator>&lt;&lt;</operator> <literal type="string">"from different generators."</literal> <operator>&lt;&lt;</operator> <name>std</name><operator>::</operator><name>endl</name></expr>;</expr_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Iterator</name><modifier>*</modifier></type> <name>typed_other</name> <init>=
<expr><call><name><name>CheckedDowncastToActualType</name><argument_list type="generic">&lt;<argument><expr><specifier>const</specifier> <name>Iterator</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><operator>&amp;</operator><name>other</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<return>return <expr><operator>(</operator><call><name>AtEnd</name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>typed_other</name><operator>-&gt;</operator><name>AtEnd</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>||</operator>
<operator>(</operator>
<name>current1_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current1_</name></name> <operator>&amp;&amp;</operator>
<name>current2_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current2_</name></name> <operator>&amp;&amp;</operator>
<name>current3_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current3_</name></name> <operator>&amp;&amp;</operator>
<name>current4_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current4_</name></name> <operator>&amp;&amp;</operator>
<name>current5_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current5_</name></name> <operator>&amp;&amp;</operator>
<name>current6_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current6_</name></name> <operator>&amp;&amp;</operator>
<name>current7_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current7_</name></name> <operator>&amp;&amp;</operator>
<name>current8_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current8_</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<label><name>private</name>:</label>
<expr_stmt><expr><call><name>Iterator</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Iterator</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>base_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>base_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>current8_</name><argument_list>(<argument>other.current8_</argument>)</argument_list></macro> <expr><block>{
<expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;
}</block>

<name>void</name> <macro><name>ComputeCurrentValue</name><argument_list>()</argument_list></macro> <block>{
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>AtEnd</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<macro><name>current_value_</name></macro><expr_stmt><expr><operator>.</operator><macro><name>reset</name><argument_list>(<argument>new ParamType(*current1_, *current2_, *current3_,
*current4_, *current5_, *current6_, *current7_, *current8_)</argument>)</argument_list></macro></expr>;</expr_stmt></block_content></block></if></if_stmt>
}</block></expr></expr_stmt>
<expr_stmt><expr><name>bool</name> <macro><name>AtEnd</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{


<return>return
<expr><name>current1_</name> <operator>==</operator> <name>end1_</name> <operator>||</operator>
<name>current2_</name> <operator>==</operator> <name>end2_</name> <operator>||</operator>
<name>current3_</name> <operator>==</operator> <name>end3_</name> <operator>||</operator>
<name>current4_</name> <operator>==</operator> <name>end4_</name> <operator>||</operator>
<name>current5_</name> <operator>==</operator> <name>end5_</name> <operator>||</operator>
<name>current6_</name> <operator>==</operator> <name>end6_</name> <operator>||</operator>
<name>current7_</name> <operator>==</operator> <name>end7_</name> <operator>||</operator>
<name>current8_</name> <operator>==</operator> <name>end8_</name></expr>;</return>
}</block></expr></expr_stmt>


<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>Iterator</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><modifier>*</modifier> <specifier>const</specifier></type> <name>base_</name></decl>;</decl_stmt>


<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin1_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end1_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current1_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin2_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end2_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current2_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin3_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end3_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current3_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin4_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end4_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current4_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin5_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end5_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current5_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin6_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end6_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current6_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin7_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end7_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current7_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin8_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end8_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current8_</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name><name>linked_ptr</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name></type> <name>current_value_</name></decl>;</decl_stmt>
};


<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>CartesianProductGenerator8</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name></type> <name>g1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name></type> <name>g2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name></type> <name>g3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name></type> <name>g4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name></type> <name>g5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name></type> <name>g6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name></type> <name>g7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name></type> <name>g8_</name></decl>;</decl_stmt>
};


<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>CartesianProductGenerator9</name>
<range>: <expr><name>public</name> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt; <argument><expr><operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>,
<argument><expr><name>T7</name></expr></argument>, <argument><expr><name>T8</name></expr></argument>, <argument><expr><name>T9</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name> <block>{
<expr><name>public</name><operator>:</operator></expr>
<typedef>typedef <expr_stmt><expr><operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>, <argument><expr><name>T7</name></expr></argument>, <argument><expr><name>T8</name></expr></argument>, <argument><expr><name>T9</name></expr></argument>&gt;</argument_list></name> <name>ParamType</name></expr>;</expr_stmt></typedef>

<call><name>CartesianProductGenerator9</name><argument_list>(<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g1</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g2</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g3</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g4</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g5</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g6</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g7</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g8</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T9</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g9</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>g1_</name><argument_list>(<argument><expr><name>g1</name></expr></argument>)</argument_list></call>, <call><name>g2_</name><argument_list>(<argument><expr><name>g2</name></expr></argument>)</argument_list></call>, <call><name>g3_</name><argument_list>(<argument><expr><name>g3</name></expr></argument>)</argument_list></call>, <call><name>g4_</name><argument_list>(<argument><expr><name>g4</name></expr></argument>)</argument_list></call>, <call><name>g5_</name><argument_list>(<argument><expr><name>g5</name></expr></argument>)</argument_list></call>, <call><name>g6_</name><argument_list>(<argument><expr><name>g6</name></expr></argument>)</argument_list></call>, <call><name>g7_</name><argument_list>(<argument><expr><name>g7</name></expr></argument>)</argument_list></call>, <call><name>g8_</name><argument_list>(<argument><expr><name>g8</name></expr></argument>)</argument_list></call>,
<macro><name>g9_</name><argument_list>(<argument>g9</argument>)</argument_list></macro> <block>{}</block></block>
<name>virtual</name> <operator>~</operator><macro><name>CartesianProductGenerator9</name><argument_list>()</argument_list></macro> <block>{}</block>

<name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>Begin</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>g1_</name></expr></argument>, <argument><expr><call><name><name>g1_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g2_</name></expr></argument>, <argument><expr><call><name><name>g2_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g3_</name></expr></argument>,
<argument><expr><call><name><name>g3_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g4_</name></expr></argument>, <argument><expr><call><name><name>g4_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g5_</name></expr></argument>, <argument><expr><call><name><name>g5_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g6_</name></expr></argument>, <argument><expr><call><name><name>g6_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g7_</name></expr></argument>,
<argument><expr><call><name><name>g7_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g8_</name></expr></argument>, <argument><expr><call><name><name>g8_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g9_</name></expr></argument>, <argument><expr><call><name><name>g9_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></range></decl></decl_stmt>
<expr_stmt><expr><name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>End</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>g1_</name></expr></argument>, <argument><expr><call><name><name>g1_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g2_</name></expr></argument>, <argument><expr><call><name><name>g2_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g3_</name></expr></argument>, <argument><expr><call><name><name>g3_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>g4_</name></expr></argument>, <argument><expr><call><name><name>g4_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g5_</name></expr></argument>, <argument><expr><call><name><name>g5_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g6_</name></expr></argument>, <argument><expr><call><name><name>g6_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g7_</name></expr></argument>, <argument><expr><call><name><name>g7_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g8_</name></expr></argument>,
<argument><expr><call><name><name>g8_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g9_</name></expr></argument>, <argument><expr><call><name><name>g9_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<label><name>private</name>:</label>
<decl_stmt><decl><type><name>class</name></type> <name>Iterator</name> <range>: <expr><name>public</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name> <block>{
<expr><name>public</name><operator>:</operator>
<macro><name>Iterator</name><argument_list>(<argument>const ParamGeneratorInterface&lt;ParamType&gt;* base</argument>,
<argument>const ParamGenerator&lt;T1&gt;&amp; g1</argument>,
<argument>const typename ParamGenerator&lt;T1&gt;::iterator&amp; current1</argument>,
<argument>const ParamGenerator&lt;T2&gt;&amp; g2</argument>,
<argument>const typename ParamGenerator&lt;T2&gt;::iterator&amp; current2</argument>,
<argument>const ParamGenerator&lt;T3&gt;&amp; g3</argument>,
<argument>const typename ParamGenerator&lt;T3&gt;::iterator&amp; current3</argument>,
<argument>const ParamGenerator&lt;T4&gt;&amp; g4</argument>,
<argument>const typename ParamGenerator&lt;T4&gt;::iterator&amp; current4</argument>,
<argument>const ParamGenerator&lt;T5&gt;&amp; g5</argument>,
<argument>const typename ParamGenerator&lt;T5&gt;::iterator&amp; current5</argument>,
<argument>const ParamGenerator&lt;T6&gt;&amp; g6</argument>,
<argument>const typename ParamGenerator&lt;T6&gt;::iterator&amp; current6</argument>,
<argument>const ParamGenerator&lt;T7&gt;&amp; g7</argument>,
<argument>const typename ParamGenerator&lt;T7&gt;::iterator&amp; current7</argument>,
<argument>const ParamGenerator&lt;T8&gt;&amp; g8</argument>,
<argument>const typename ParamGenerator&lt;T8&gt;::iterator&amp; current8</argument>,
<argument>const ParamGenerator&lt;T9&gt;&amp; g9</argument>,
<argument>const typename ParamGenerator&lt;T9&gt;::iterator&amp; current9</argument>)</argument_list></macro>
<operator>:</operator> <call><name>base_</name><argument_list>(<argument><expr><name>base</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin1_</name><argument_list>(<argument><expr><call><name><name>g1</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end1_</name><argument_list>(<argument><expr><call><name><name>g1</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current1_</name><argument_list>(<argument><expr><name>current1</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin2_</name><argument_list>(<argument><expr><call><name><name>g2</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end2_</name><argument_list>(<argument><expr><call><name><name>g2</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current2_</name><argument_list>(<argument><expr><name>current2</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin3_</name><argument_list>(<argument><expr><call><name><name>g3</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end3_</name><argument_list>(<argument><expr><call><name><name>g3</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current3_</name><argument_list>(<argument><expr><name>current3</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin4_</name><argument_list>(<argument><expr><call><name><name>g4</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end4_</name><argument_list>(<argument><expr><call><name><name>g4</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current4_</name><argument_list>(<argument><expr><name>current4</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin5_</name><argument_list>(<argument><expr><call><name><name>g5</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end5_</name><argument_list>(<argument><expr><call><name><name>g5</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current5_</name><argument_list>(<argument><expr><name>current5</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin6_</name><argument_list>(<argument><expr><call><name><name>g6</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end6_</name><argument_list>(<argument><expr><call><name><name>g6</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current6_</name><argument_list>(<argument><expr><name>current6</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin7_</name><argument_list>(<argument><expr><call><name><name>g7</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end7_</name><argument_list>(<argument><expr><call><name><name>g7</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current7_</name><argument_list>(<argument><expr><name>current7</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin8_</name><argument_list>(<argument><expr><call><name><name>g8</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end8_</name><argument_list>(<argument><expr><call><name><name>g8</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current8_</name><argument_list>(<argument><expr><name>current8</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin9_</name><argument_list>(<argument><expr><call><name><name>g9</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end9_</name><argument_list>(<argument><expr><call><name><name>g9</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <macro><name>current9_</name><argument_list>(<argument>current9</argument>)</argument_list></macro> <expr><block>{
<expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;
}</block>
<name>virtual</name> <operator>~</operator><macro><name>Iterator</name><argument_list>()</argument_list></macro> <block>{}</block>

<name>virtual</name> <specifier>const</specifier> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>BaseGenerator</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>base_</name></expr>;</return>
}</block>


<name>virtual</name> <name>void</name> <macro><name>Advance</name><argument_list>()</argument_list></macro> <block>{
<expr><call><name>assert</name><argument_list>(<argument><expr><operator>!</operator><call><name>AtEnd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
<expr><operator>++</operator><name>current9_</name></expr>;
<if_stmt><if>if <condition>(<expr><name>current9_</name> <operator>==</operator> <name>end9_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current9_</name> <operator>=</operator> <name>begin9_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current8_</name></expr>;</expr_stmt>
<expr_stmt/>}</block_content>
if (current8_ == end8_</block></if></if_stmt>) <block>{
<expr><name>current8_</name> <operator>=</operator> <name>begin8_</name></expr>;
<expr><operator>++</operator><name>current7_</name></expr>;
}</block></block></expr>
<if_stmt><if>if <condition>(<expr><name>current7_</name> <operator>==</operator> <name>end7_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current7_</name> <operator>=</operator> <name>begin7_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current6_</name></expr>;</expr_stmt>
<expr_stmt/>}</block_content>
if (current6_ == end6_</block></if></if_stmt>) <block>{
<expr><name>current6_</name> <operator>=</operator> <name>begin6_</name></expr>;
<expr><operator>++</operator><name>current5_</name></expr>;
}</block></block></expr></range></decl></decl_stmt>
<if_stmt><if>if <condition>(<expr><name>current5_</name> <operator>==</operator> <name>end5_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current5_</name> <operator>=</operator> <name>begin5_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current4_</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>current4_</name> <operator>==</operator> <name>end4_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current4_</name> <operator>=</operator> <name>begin4_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current3_</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>current3_</name> <operator>==</operator> <name>end3_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current3_</name> <operator>=</operator> <name>begin3_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current2_</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>current2_</name> <operator>==</operator> <name>end2_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current2_</name> <operator>=</operator> <name>begin2_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current1_</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
}
virtual <expr_stmt><expr><name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>Clone</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><operator>*</operator><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>
<expr_stmt><expr><name>virtual</name> <specifier>const</specifier> <name>ParamType</name><operator>*</operator> <macro><name>Current</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><call><name><name>current_value_</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;</return> }</block></expr></expr_stmt>
<decl_stmt><decl><type><name>virtual</name> <name>bool</name></type> <name>Equals</name><argument_list>(<argument><expr><specifier>const</specifier> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list> const <block>{<block_content>


<expr_stmt><expr><call><name>GTEST_CHECK_</name><argument_list>(<argument><expr><call><name>BaseGenerator</name><argument_list>()</argument_list></call> <operator>==</operator> <call><name><name>other</name><operator>.</operator><name>BaseGenerator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
<operator>&lt;&lt;</operator> <literal type="string">"The program attempted to compare iterators "</literal>
<operator>&lt;&lt;</operator> <literal type="string">"from different generators."</literal> <operator>&lt;&lt;</operator> <name>std</name><operator>::</operator><name>endl</name></expr>;</expr_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Iterator</name><modifier>*</modifier></type> <name>typed_other</name> <init>=
<expr><call><name><name>CheckedDowncastToActualType</name><argument_list type="generic">&lt;<argument><expr><specifier>const</specifier> <name>Iterator</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><operator>&amp;</operator><name>other</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<return>return <expr><operator>(</operator><call><name>AtEnd</name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>typed_other</name><operator>-&gt;</operator><name>AtEnd</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>||</operator>
<operator>(</operator>
<name>current1_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current1_</name></name> <operator>&amp;&amp;</operator>
<name>current2_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current2_</name></name> <operator>&amp;&amp;</operator>
<name>current3_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current3_</name></name> <operator>&amp;&amp;</operator>
<name>current4_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current4_</name></name> <operator>&amp;&amp;</operator>
<name>current5_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current5_</name></name> <operator>&amp;&amp;</operator>
<name>current6_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current6_</name></name> <operator>&amp;&amp;</operator>
<name>current7_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current7_</name></name> <operator>&amp;&amp;</operator>
<name>current8_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current8_</name></name> <operator>&amp;&amp;</operator>
<name>current9_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current9_</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<label><name>private</name>:</label>
<expr_stmt><expr><call><name>Iterator</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Iterator</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>base_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>base_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>current9_</name><argument_list>(<argument>other.current9_</argument>)</argument_list></macro> <expr><block>{
<expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;
}</block>

<name>void</name> <macro><name>ComputeCurrentValue</name><argument_list>()</argument_list></macro> <block>{
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>AtEnd</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<macro><name>current_value_</name></macro><expr_stmt><expr><operator>.</operator><macro><name>reset</name><argument_list>(<argument>new ParamType(*current1_, *current2_, *current3_,
*current4_, *current5_, *current6_, *current7_, *current8_,
*current9_)</argument>)</argument_list></macro></expr>;</expr_stmt></block_content></block></if></if_stmt>
}</block></expr></expr_stmt>
<expr_stmt><expr><name>bool</name> <macro><name>AtEnd</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{


<return>return
<expr><name>current1_</name> <operator>==</operator> <name>end1_</name> <operator>||</operator>
<name>current2_</name> <operator>==</operator> <name>end2_</name> <operator>||</operator>
<name>current3_</name> <operator>==</operator> <name>end3_</name> <operator>||</operator>
<name>current4_</name> <operator>==</operator> <name>end4_</name> <operator>||</operator>
<name>current5_</name> <operator>==</operator> <name>end5_</name> <operator>||</operator>
<name>current6_</name> <operator>==</operator> <name>end6_</name> <operator>||</operator>
<name>current7_</name> <operator>==</operator> <name>end7_</name> <operator>||</operator>
<name>current8_</name> <operator>==</operator> <name>end8_</name> <operator>||</operator>
<name>current9_</name> <operator>==</operator> <name>end9_</name></expr>;</return>
}</block></expr></expr_stmt>


<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>Iterator</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><modifier>*</modifier> <specifier>const</specifier></type> <name>base_</name></decl>;</decl_stmt>


<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin1_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end1_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current1_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin2_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end2_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current2_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin3_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end3_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current3_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin4_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end4_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current4_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin5_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end5_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current5_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin6_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end6_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current6_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin7_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end7_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current7_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin8_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end8_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current8_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T9</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin9_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T9</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end9_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T9</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current9_</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name><name>linked_ptr</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name></type> <name>current_value_</name></decl>;</decl_stmt>
};


<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>CartesianProductGenerator9</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name></type> <name>g1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name></type> <name>g2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name></type> <name>g3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name></type> <name>g4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name></type> <name>g5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name></type> <name>g6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name></type> <name>g7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name></type> <name>g8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T9</name></expr></argument>&gt;</argument_list></name></type> <name>g9_</name></decl>;</decl_stmt>
};


<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>CartesianProductGenerator10</name>
<range>: <expr><name>public</name> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt; <argument><expr><operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>,
<argument><expr><name>T7</name></expr></argument>, <argument><expr><name>T8</name></expr></argument>, <argument><expr><name>T9</name></expr></argument>, <argument><expr><name>T10</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name> <block>{
<expr><name>public</name><operator>:</operator></expr>
<typedef>typedef <expr_stmt><expr><operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>, <argument><expr><name>T7</name></expr></argument>, <argument><expr><name>T8</name></expr></argument>, <argument><expr><name>T9</name></expr></argument>, <argument><expr><name>T10</name></expr></argument>&gt;</argument_list></name> <name>ParamType</name></expr>;</expr_stmt></typedef>

<call><name>CartesianProductGenerator10</name><argument_list>(<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g1</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g2</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g3</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g4</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g5</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g6</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g7</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g8</name></expr></argument>, <argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T9</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g9</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T10</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>g10</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>g1_</name><argument_list>(<argument><expr><name>g1</name></expr></argument>)</argument_list></call>, <call><name>g2_</name><argument_list>(<argument><expr><name>g2</name></expr></argument>)</argument_list></call>, <call><name>g3_</name><argument_list>(<argument><expr><name>g3</name></expr></argument>)</argument_list></call>, <call><name>g4_</name><argument_list>(<argument><expr><name>g4</name></expr></argument>)</argument_list></call>, <call><name>g5_</name><argument_list>(<argument><expr><name>g5</name></expr></argument>)</argument_list></call>, <call><name>g6_</name><argument_list>(<argument><expr><name>g6</name></expr></argument>)</argument_list></call>, <call><name>g7_</name><argument_list>(<argument><expr><name>g7</name></expr></argument>)</argument_list></call>, <call><name>g8_</name><argument_list>(<argument><expr><name>g8</name></expr></argument>)</argument_list></call>,
<call><name>g9_</name><argument_list>(<argument><expr><name>g9</name></expr></argument>)</argument_list></call>, <macro><name>g10_</name><argument_list>(<argument>g10</argument>)</argument_list></macro> <block>{}</block></block>
<name>virtual</name> <operator>~</operator><macro><name>CartesianProductGenerator10</name><argument_list>()</argument_list></macro> <block>{}</block>

<name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>Begin</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>g1_</name></expr></argument>, <argument><expr><call><name><name>g1_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g2_</name></expr></argument>, <argument><expr><call><name><name>g2_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g3_</name></expr></argument>,
<argument><expr><call><name><name>g3_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g4_</name></expr></argument>, <argument><expr><call><name><name>g4_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g5_</name></expr></argument>, <argument><expr><call><name><name>g5_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g6_</name></expr></argument>, <argument><expr><call><name><name>g6_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g7_</name></expr></argument>,
<argument><expr><call><name><name>g7_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g8_</name></expr></argument>, <argument><expr><call><name><name>g8_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g9_</name></expr></argument>, <argument><expr><call><name><name>g9_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g10_</name></expr></argument>, <argument><expr><call><name><name>g10_</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></range></decl></decl_stmt>
<expr_stmt><expr><name>virtual</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>End</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>g1_</name></expr></argument>, <argument><expr><call><name><name>g1_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g2_</name></expr></argument>, <argument><expr><call><name><name>g2_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g3_</name></expr></argument>, <argument><expr><call><name><name>g3_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>g4_</name></expr></argument>, <argument><expr><call><name><name>g4_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g5_</name></expr></argument>, <argument><expr><call><name><name>g5_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g6_</name></expr></argument>, <argument><expr><call><name><name>g6_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g7_</name></expr></argument>, <argument><expr><call><name><name>g7_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g8_</name></expr></argument>,
<argument><expr><call><name><name>g8_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g9_</name></expr></argument>, <argument><expr><call><name><name>g9_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>g10_</name></expr></argument>, <argument><expr><call><name><name>g10_</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<label><name>private</name>:</label>
<decl_stmt><decl><type><name>class</name></type> <name>Iterator</name> <range>: <expr><name>public</name> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name> <block>{
<expr><name>public</name><operator>:</operator>
<macro><name>Iterator</name><argument_list>(<argument>const ParamGeneratorInterface&lt;ParamType&gt;* base</argument>,
<argument>const ParamGenerator&lt;T1&gt;&amp; g1</argument>,
<argument>const typename ParamGenerator&lt;T1&gt;::iterator&amp; current1</argument>,
<argument>const ParamGenerator&lt;T2&gt;&amp; g2</argument>,
<argument>const typename ParamGenerator&lt;T2&gt;::iterator&amp; current2</argument>,
<argument>const ParamGenerator&lt;T3&gt;&amp; g3</argument>,
<argument>const typename ParamGenerator&lt;T3&gt;::iterator&amp; current3</argument>,
<argument>const ParamGenerator&lt;T4&gt;&amp; g4</argument>,
<argument>const typename ParamGenerator&lt;T4&gt;::iterator&amp; current4</argument>,
<argument>const ParamGenerator&lt;T5&gt;&amp; g5</argument>,
<argument>const typename ParamGenerator&lt;T5&gt;::iterator&amp; current5</argument>,
<argument>const ParamGenerator&lt;T6&gt;&amp; g6</argument>,
<argument>const typename ParamGenerator&lt;T6&gt;::iterator&amp; current6</argument>,
<argument>const ParamGenerator&lt;T7&gt;&amp; g7</argument>,
<argument>const typename ParamGenerator&lt;T7&gt;::iterator&amp; current7</argument>,
<argument>const ParamGenerator&lt;T8&gt;&amp; g8</argument>,
<argument>const typename ParamGenerator&lt;T8&gt;::iterator&amp; current8</argument>,
<argument>const ParamGenerator&lt;T9&gt;&amp; g9</argument>,
<argument>const typename ParamGenerator&lt;T9&gt;::iterator&amp; current9</argument>,
<argument>const ParamGenerator&lt;T10&gt;&amp; g10</argument>,
<argument>const typename ParamGenerator&lt;T10&gt;::iterator&amp; current10</argument>)</argument_list></macro>
<operator>:</operator> <call><name>base_</name><argument_list>(<argument><expr><name>base</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin1_</name><argument_list>(<argument><expr><call><name><name>g1</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end1_</name><argument_list>(<argument><expr><call><name><name>g1</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current1_</name><argument_list>(<argument><expr><name>current1</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin2_</name><argument_list>(<argument><expr><call><name><name>g2</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end2_</name><argument_list>(<argument><expr><call><name><name>g2</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current2_</name><argument_list>(<argument><expr><name>current2</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin3_</name><argument_list>(<argument><expr><call><name><name>g3</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end3_</name><argument_list>(<argument><expr><call><name><name>g3</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current3_</name><argument_list>(<argument><expr><name>current3</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin4_</name><argument_list>(<argument><expr><call><name><name>g4</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end4_</name><argument_list>(<argument><expr><call><name><name>g4</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current4_</name><argument_list>(<argument><expr><name>current4</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin5_</name><argument_list>(<argument><expr><call><name><name>g5</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end5_</name><argument_list>(<argument><expr><call><name><name>g5</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current5_</name><argument_list>(<argument><expr><name>current5</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin6_</name><argument_list>(<argument><expr><call><name><name>g6</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end6_</name><argument_list>(<argument><expr><call><name><name>g6</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current6_</name><argument_list>(<argument><expr><name>current6</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin7_</name><argument_list>(<argument><expr><call><name><name>g7</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end7_</name><argument_list>(<argument><expr><call><name><name>g7</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current7_</name><argument_list>(<argument><expr><name>current7</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin8_</name><argument_list>(<argument><expr><call><name><name>g8</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end8_</name><argument_list>(<argument><expr><call><name><name>g8</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current8_</name><argument_list>(<argument><expr><name>current8</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin9_</name><argument_list>(<argument><expr><call><name><name>g9</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end9_</name><argument_list>(<argument><expr><call><name><name>g9</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>current9_</name><argument_list>(<argument><expr><name>current9</name></expr></argument>)</argument_list></call></expr>,
<expr><call><name>begin10_</name><argument_list>(<argument><expr><call><name><name>g10</name><operator>.</operator><name>begin</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <expr><call><name>end10_</name><argument_list>(<argument><expr><call><name><name>g10</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>, <macro><name>current10_</name><argument_list>(<argument>current10</argument>)</argument_list></macro> <expr><block>{
<expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;
}</block>
<name>virtual</name> <operator>~</operator><macro><name>Iterator</name><argument_list>()</argument_list></macro> <block>{}</block>

<name>virtual</name> <specifier>const</specifier> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>BaseGenerator</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>base_</name></expr>;</return>
}</block>


<name>virtual</name> <name>void</name> <macro><name>Advance</name><argument_list>()</argument_list></macro> <block>{
<expr><call><name>assert</name><argument_list>(<argument><expr><operator>!</operator><call><name>AtEnd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;
<expr><operator>++</operator><name>current10_</name></expr>;
<if_stmt><if>if <condition>(<expr><name>current10_</name> <operator>==</operator> <name>end10_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current10_</name> <operator>=</operator> <name>begin10_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current9_</name></expr>;</expr_stmt>
<expr_stmt/>}</block_content>
if (current9_ == end9_</block></if></if_stmt>) <block>{
<expr><name>current9_</name> <operator>=</operator> <name>begin9_</name></expr>;
<expr><operator>++</operator><name>current8_</name></expr>;
}</block></block></expr>
<if_stmt><if>if <condition>(<expr><name>current8_</name> <operator>==</operator> <name>end8_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current8_</name> <operator>=</operator> <name>begin8_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current7_</name></expr>;</expr_stmt>
<expr_stmt/>}</block_content>
if (current7_ == end7_</block></if></if_stmt>) <block>{
<expr><name>current7_</name> <operator>=</operator> <name>begin7_</name></expr>;
<expr><operator>++</operator><name>current6_</name></expr>;
}</block></block></expr></range></decl></decl_stmt>
<if_stmt><if>if <condition>(<expr><name>current6_</name> <operator>==</operator> <name>end6_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current6_</name> <operator>=</operator> <name>begin6_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current5_</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>current5_</name> <operator>==</operator> <name>end5_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current5_</name> <operator>=</operator> <name>begin5_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current4_</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>current4_</name> <operator>==</operator> <name>end4_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current4_</name> <operator>=</operator> <name>begin4_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current3_</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>current3_</name> <operator>==</operator> <name>end3_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current3_</name> <operator>=</operator> <name>begin3_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current2_</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>current2_</name> <operator>==</operator> <name>end2_</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>current2_</name> <operator>=</operator> <name>begin2_</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>++</operator><name>current1_</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
}
virtual <expr_stmt><expr><name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>*</operator> <macro><name>Clone</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>new</name> <call><name>Iterator</name><argument_list>(<argument><expr><operator>*</operator><name>this</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>
<expr_stmt><expr><name>virtual</name> <specifier>const</specifier> <name>ParamType</name><operator>*</operator> <macro><name>Current</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><call><name><name>current_value_</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr>;</return> }</block></expr></expr_stmt>
<decl_stmt><decl><type><name>virtual</name> <name>bool</name></type> <name>Equals</name><argument_list>(<argument><expr><specifier>const</specifier> <name><name>ParamIteratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list> const <block>{<block_content>


<expr_stmt><expr><call><name>GTEST_CHECK_</name><argument_list>(<argument><expr><call><name>BaseGenerator</name><argument_list>()</argument_list></call> <operator>==</operator> <call><name><name>other</name><operator>.</operator><name>BaseGenerator</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call>
<operator>&lt;&lt;</operator> <literal type="string">"The program attempted to compare iterators "</literal>
<operator>&lt;&lt;</operator> <literal type="string">"from different generators."</literal> <operator>&lt;&lt;</operator> <name>std</name><operator>::</operator><name>endl</name></expr>;</expr_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Iterator</name><modifier>*</modifier></type> <name>typed_other</name> <init>=
<expr><call><name><name>CheckedDowncastToActualType</name><argument_list type="generic">&lt;<argument><expr><specifier>const</specifier> <name>Iterator</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><operator>&amp;</operator><name>other</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



<return>return <expr><operator>(</operator><call><name>AtEnd</name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>typed_other</name><operator>-&gt;</operator><name>AtEnd</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>||</operator>
<operator>(</operator>
<name>current1_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current1_</name></name> <operator>&amp;&amp;</operator>
<name>current2_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current2_</name></name> <operator>&amp;&amp;</operator>
<name>current3_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current3_</name></name> <operator>&amp;&amp;</operator>
<name>current4_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current4_</name></name> <operator>&amp;&amp;</operator>
<name>current5_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current5_</name></name> <operator>&amp;&amp;</operator>
<name>current6_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current6_</name></name> <operator>&amp;&amp;</operator>
<name>current7_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current7_</name></name> <operator>&amp;&amp;</operator>
<name>current8_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current8_</name></name> <operator>&amp;&amp;</operator>
<name>current9_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current9_</name></name> <operator>&amp;&amp;</operator>
<name>current10_</name> <operator>==</operator> <name><name>typed_other</name><operator>-&gt;</operator><name>current10_</name></name><operator>)</operator></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<label><name>private</name>:</label>
<expr_stmt><expr><call><name>Iterator</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Iterator</name><operator>&amp;</operator> <name>other</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>base_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>base_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current1_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current1_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current2_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current2_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current3_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current3_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current4_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current4_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current5_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current5_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current6_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current6_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current7_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current7_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current8_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current8_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>current9_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>current9_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>begin10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>begin10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>end10_</name><argument_list>(<argument><expr><name><name>other</name><operator>.</operator><name>end10_</name></name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>current10_</name><argument_list>(<argument>other.current10_</argument>)</argument_list></macro> <expr><block>{
<expr><call><name>ComputeCurrentValue</name><argument_list>()</argument_list></call></expr>;
}</block>

<name>void</name> <macro><name>ComputeCurrentValue</name><argument_list>()</argument_list></macro> <block>{
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>AtEnd</name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<macro><name>current_value_</name></macro><expr_stmt><expr><operator>.</operator><macro><name>reset</name><argument_list>(<argument>new ParamType(*current1_, *current2_, *current3_,
*current4_, *current5_, *current6_, *current7_, *current8_,
*current9_, *current10_)</argument>)</argument_list></macro></expr>;</expr_stmt></block_content></block></if></if_stmt>
}</block></expr></expr_stmt>
<expr_stmt><expr><name>bool</name> <macro><name>AtEnd</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{


<return>return
<expr><name>current1_</name> <operator>==</operator> <name>end1_</name> <operator>||</operator>
<name>current2_</name> <operator>==</operator> <name>end2_</name> <operator>||</operator>
<name>current3_</name> <operator>==</operator> <name>end3_</name> <operator>||</operator>
<name>current4_</name> <operator>==</operator> <name>end4_</name> <operator>||</operator>
<name>current5_</name> <operator>==</operator> <name>end5_</name> <operator>||</operator>
<name>current6_</name> <operator>==</operator> <name>end6_</name> <operator>||</operator>
<name>current7_</name> <operator>==</operator> <name>end7_</name> <operator>||</operator>
<name>current8_</name> <operator>==</operator> <name>end8_</name> <operator>||</operator>
<name>current9_</name> <operator>==</operator> <name>end9_</name> <operator>||</operator>
<name>current10_</name> <operator>==</operator> <name>end10_</name></expr>;</return>
}</block></expr></expr_stmt>


<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>Iterator</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGeneratorInterface</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name><modifier>*</modifier> <specifier>const</specifier></type> <name>base_</name></decl>;</decl_stmt>


<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin1_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end1_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current1_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin2_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end2_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current2_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin3_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end3_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current3_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin4_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end4_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current4_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin5_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end5_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current5_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin6_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end6_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current6_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin7_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end7_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current7_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin8_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end8_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current8_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T9</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin9_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T9</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end9_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T9</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current9_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T10</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>begin10_</name></expr>;</expr_stmt>
<expr_stmt><expr><specifier>const</specifier> <name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T10</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>end10_</name></expr>;</expr_stmt>
<expr_stmt><expr><name>typename</name> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T10</name></expr></argument>&gt;</argument_list></name><operator>::</operator><name>iterator</name> <name>current10_</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name><name>linked_ptr</name><argument_list type="generic">&lt;<argument><expr><name>ParamType</name></expr></argument>&gt;</argument_list></name></type> <name>current_value_</name></decl>;</decl_stmt>
};


<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>CartesianProductGenerator10</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name></type> <name>g1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name></type> <name>g2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name></type> <name>g3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name></type> <name>g4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name></type> <name>g5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name></type> <name>g6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name></type> <name>g7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name></type> <name>g8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T9</name></expr></argument>&gt;</argument_list></name></type> <name>g9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T10</name></expr></argument>&gt;</argument_list></name></type> <name>g10_</name></decl>;</decl_stmt>
};








<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>class</name> <name>Generator1</name></expr></argument>, <argument><expr><name>class</name> <name>Generator2</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>CartesianProductHolder2</name> <block>{<block_content>
<label><name>public</name>:</label>
<expr_stmt><expr><call><name>CartesianProductHolder2</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Generator1</name><operator>&amp;</operator> <name>g1</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator2</name><operator>&amp;</operator> <name>g2</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>g1_</name><argument_list>(<argument><expr><name>g1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>g2_</name><argument_list>(<argument>g2</argument>)</argument_list></macro> <expr><block>{}</block>
<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator> <operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name> <operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<return>return <macro><name>ParamGenerator</name></macro><expr><operator>&lt;</operator> <operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name> <operator>&gt;</operator><operator>(</operator>
<name>new</name> <call><name><name>CartesianProductGenerator2</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name><argument_list>(
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g1_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g2_</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
}</block></expr></expr_stmt>

<label><name>private</name>:</label>

<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>CartesianProductHolder2</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>Generator1</name></type> <name>g1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator2</name></type> <name>g2_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>class</name> <name>Generator1</name></expr></argument>, <argument><expr><name>class</name> <name>Generator2</name></expr></argument>, <argument><expr><name>class</name> <name>Generator3</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>CartesianProductHolder3</name> <block>{<block_content>
<label><name>public</name>:</label>
<expr_stmt><expr><call><name>CartesianProductHolder3</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Generator1</name><operator>&amp;</operator> <name>g1</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator2</name><operator>&amp;</operator> <name>g2</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name>Generator3</name><operator>&amp;</operator> <name>g3</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>g1_</name><argument_list>(<argument><expr><name>g1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g2_</name><argument_list>(<argument><expr><name>g2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>g3_</name><argument_list>(<argument>g3</argument>)</argument_list></macro> <expr><block>{}</block>
<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator> <operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name> <operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<return>return <macro><name>ParamGenerator</name></macro><expr><operator>&lt;</operator> <operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name> <operator>&gt;</operator><operator>(</operator>
<name>new</name> <call><name><name>CartesianProductGenerator3</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name><argument_list>(
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g1_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g2_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g3_</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
}</block></expr></expr_stmt>

<label><name>private</name>:</label>

<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>CartesianProductHolder3</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>Generator1</name></type> <name>g1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator2</name></type> <name>g2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator3</name></type> <name>g3_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>class</name> <name>Generator1</name></expr></argument>, <argument><expr><name>class</name> <name>Generator2</name></expr></argument>, <argument><expr><name>class</name> <name>Generator3</name></expr></argument>,
<argument><expr><name>class</name> <name>Generator4</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>CartesianProductHolder4</name> <block>{<block_content>
<label><name>public</name>:</label>
<expr_stmt><expr><call><name>CartesianProductHolder4</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Generator1</name><operator>&amp;</operator> <name>g1</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator2</name><operator>&amp;</operator> <name>g2</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name>Generator3</name><operator>&amp;</operator> <name>g3</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator4</name><operator>&amp;</operator> <name>g4</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>g1_</name><argument_list>(<argument><expr><name>g1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g2_</name><argument_list>(<argument><expr><name>g2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g3_</name><argument_list>(<argument><expr><name>g3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>g4_</name><argument_list>(<argument>g4</argument>)</argument_list></macro> <expr><block>{}</block>
<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator> <operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name> <operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<return>return <macro><name>ParamGenerator</name></macro><expr><operator>&lt;</operator> <operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name> <operator>&gt;</operator><operator>(</operator>
<name>new</name> <call><name><name>CartesianProductGenerator4</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name><argument_list>(
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g1_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g2_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g3_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g4_</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
}</block></expr></expr_stmt>

<label><name>private</name>:</label>

<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>CartesianProductHolder4</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>Generator1</name></type> <name>g1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator2</name></type> <name>g2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator3</name></type> <name>g3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator4</name></type> <name>g4_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>class</name> <name>Generator1</name></expr></argument>, <argument><expr><name>class</name> <name>Generator2</name></expr></argument>, <argument><expr><name>class</name> <name>Generator3</name></expr></argument>,
<argument><expr><name>class</name> <name>Generator4</name></expr></argument>, <argument><expr><name>class</name> <name>Generator5</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>CartesianProductHolder5</name> <block>{<block_content>
<label><name>public</name>:</label>
<expr_stmt><expr><call><name>CartesianProductHolder5</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Generator1</name><operator>&amp;</operator> <name>g1</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator2</name><operator>&amp;</operator> <name>g2</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name>Generator3</name><operator>&amp;</operator> <name>g3</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator4</name><operator>&amp;</operator> <name>g4</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator5</name><operator>&amp;</operator> <name>g5</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>g1_</name><argument_list>(<argument><expr><name>g1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g2_</name><argument_list>(<argument><expr><name>g2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g3_</name><argument_list>(<argument><expr><name>g3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g4_</name><argument_list>(<argument><expr><name>g4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>g5_</name><argument_list>(<argument>g5</argument>)</argument_list></macro> <expr><block>{}</block>
<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator> <operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name> <operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<return>return <macro><name>ParamGenerator</name></macro><expr><operator>&lt;</operator> <operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name> <operator>&gt;</operator><operator>(</operator>
<name>new</name> <call><name><name>CartesianProductGenerator5</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name><argument_list>(
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g1_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g2_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g3_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g4_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g5_</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
}</block></expr></expr_stmt>

<label><name>private</name>:</label>

<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>CartesianProductHolder5</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>Generator1</name></type> <name>g1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator2</name></type> <name>g2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator3</name></type> <name>g3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator4</name></type> <name>g4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator5</name></type> <name>g5_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>class</name> <name>Generator1</name></expr></argument>, <argument><expr><name>class</name> <name>Generator2</name></expr></argument>, <argument><expr><name>class</name> <name>Generator3</name></expr></argument>,
<argument><expr><name>class</name> <name>Generator4</name></expr></argument>, <argument><expr><name>class</name> <name>Generator5</name></expr></argument>, <argument><expr><name>class</name> <name>Generator6</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>CartesianProductHolder6</name> <block>{<block_content>
<label><name>public</name>:</label>
<expr_stmt><expr><call><name>CartesianProductHolder6</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Generator1</name><operator>&amp;</operator> <name>g1</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator2</name><operator>&amp;</operator> <name>g2</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name>Generator3</name><operator>&amp;</operator> <name>g3</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator4</name><operator>&amp;</operator> <name>g4</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator5</name><operator>&amp;</operator> <name>g5</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name>Generator6</name><operator>&amp;</operator> <name>g6</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>g1_</name><argument_list>(<argument><expr><name>g1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g2_</name><argument_list>(<argument><expr><name>g2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g3_</name><argument_list>(<argument><expr><name>g3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g4_</name><argument_list>(<argument><expr><name>g4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g5_</name><argument_list>(<argument><expr><name>g5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>g6_</name><argument_list>(<argument>g6</argument>)</argument_list></macro> <expr><block>{}</block>
<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator> <operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name> <operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<return>return <macro><name>ParamGenerator</name></macro><expr><operator>&lt;</operator> <operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name> <operator>&gt;</operator><operator>(</operator>
<name>new</name> <call><name><name>CartesianProductGenerator6</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name><argument_list>(
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g1_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g2_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g3_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g4_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g5_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g6_</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
}</block></expr></expr_stmt>

<label><name>private</name>:</label>

<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>CartesianProductHolder6</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>Generator1</name></type> <name>g1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator2</name></type> <name>g2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator3</name></type> <name>g3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator4</name></type> <name>g4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator5</name></type> <name>g5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator6</name></type> <name>g6_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>class</name> <name>Generator1</name></expr></argument>, <argument><expr><name>class</name> <name>Generator2</name></expr></argument>, <argument><expr><name>class</name> <name>Generator3</name></expr></argument>,
<argument><expr><name>class</name> <name>Generator4</name></expr></argument>, <argument><expr><name>class</name> <name>Generator5</name></expr></argument>, <argument><expr><name>class</name> <name>Generator6</name></expr></argument>, <argument><expr><name>class</name> <name>Generator7</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>CartesianProductHolder7</name> <block>{<block_content>
<label><name>public</name>:</label>
<expr_stmt><expr><call><name>CartesianProductHolder7</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Generator1</name><operator>&amp;</operator> <name>g1</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator2</name><operator>&amp;</operator> <name>g2</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name>Generator3</name><operator>&amp;</operator> <name>g3</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator4</name><operator>&amp;</operator> <name>g4</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator5</name><operator>&amp;</operator> <name>g5</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name>Generator6</name><operator>&amp;</operator> <name>g6</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator7</name><operator>&amp;</operator> <name>g7</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>g1_</name><argument_list>(<argument><expr><name>g1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g2_</name><argument_list>(<argument><expr><name>g2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g3_</name><argument_list>(<argument><expr><name>g3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g4_</name><argument_list>(<argument><expr><name>g4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g5_</name><argument_list>(<argument><expr><name>g5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g6_</name><argument_list>(<argument><expr><name>g6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>g7_</name><argument_list>(<argument>g7</argument>)</argument_list></macro> <expr><block>{}</block>
<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator> <operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>,
<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name> <operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<return>return <macro><name>ParamGenerator</name></macro><expr><operator>&lt;</operator> <operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>, <argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name> <operator>&gt;</operator><operator>(</operator>
<name>new</name> <call><name><name>CartesianProductGenerator7</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>, <argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name><argument_list>(
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g1_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g2_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g3_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g4_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g5_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g6_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g7_</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
}</block></expr></expr_stmt>

<label><name>private</name>:</label>

<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>CartesianProductHolder7</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>Generator1</name></type> <name>g1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator2</name></type> <name>g2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator3</name></type> <name>g3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator4</name></type> <name>g4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator5</name></type> <name>g5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator6</name></type> <name>g6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator7</name></type> <name>g7_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>class</name> <name>Generator1</name></expr></argument>, <argument><expr><name>class</name> <name>Generator2</name></expr></argument>, <argument><expr><name>class</name> <name>Generator3</name></expr></argument>,
<argument><expr><name>class</name> <name>Generator4</name></expr></argument>, <argument><expr><name>class</name> <name>Generator5</name></expr></argument>, <argument><expr><name>class</name> <name>Generator6</name></expr></argument>, <argument><expr><name>class</name> <name>Generator7</name></expr></argument>,
<argument><expr><name>class</name> <name>Generator8</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>CartesianProductHolder8</name> <block>{<block_content>
<label><name>public</name>:</label>
<expr_stmt><expr><call><name>CartesianProductHolder8</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Generator1</name><operator>&amp;</operator> <name>g1</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator2</name><operator>&amp;</operator> <name>g2</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name>Generator3</name><operator>&amp;</operator> <name>g3</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator4</name><operator>&amp;</operator> <name>g4</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator5</name><operator>&amp;</operator> <name>g5</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name>Generator6</name><operator>&amp;</operator> <name>g6</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator7</name><operator>&amp;</operator> <name>g7</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator8</name><operator>&amp;</operator> <name>g8</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>g1_</name><argument_list>(<argument><expr><name>g1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g2_</name><argument_list>(<argument><expr><name>g2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g3_</name><argument_list>(<argument><expr><name>g3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g4_</name><argument_list>(<argument><expr><name>g4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g5_</name><argument_list>(<argument><expr><name>g5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g6_</name><argument_list>(<argument><expr><name>g6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g7_</name><argument_list>(<argument><expr><name>g7</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>g8_</name><argument_list>(<argument>g8</argument>)</argument_list></macro> <expr><block>{}</block>
<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator> <operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>, <argument><expr><name>T7</name></expr></argument>,
<argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name> <operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<return>return <macro><name>ParamGenerator</name></macro><expr><operator>&lt;</operator> <operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>, <argument><expr><name>T7</name></expr></argument>, <argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name> <operator>&gt;</operator><operator>(</operator>
<name>new</name> <call><name><name>CartesianProductGenerator8</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>, <argument><expr><name>T7</name></expr></argument>, <argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name><argument_list>(
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g1_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g2_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g3_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g4_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g5_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g6_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g7_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g8_</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
}</block></expr></expr_stmt>

<label><name>private</name>:</label>

<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>CartesianProductHolder8</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>Generator1</name></type> <name>g1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator2</name></type> <name>g2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator3</name></type> <name>g3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator4</name></type> <name>g4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator5</name></type> <name>g5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator6</name></type> <name>g6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator7</name></type> <name>g7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator8</name></type> <name>g8_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>class</name> <name>Generator1</name></expr></argument>, <argument><expr><name>class</name> <name>Generator2</name></expr></argument>, <argument><expr><name>class</name> <name>Generator3</name></expr></argument>,
<argument><expr><name>class</name> <name>Generator4</name></expr></argument>, <argument><expr><name>class</name> <name>Generator5</name></expr></argument>, <argument><expr><name>class</name> <name>Generator6</name></expr></argument>, <argument><expr><name>class</name> <name>Generator7</name></expr></argument>,
<argument><expr><name>class</name> <name>Generator8</name></expr></argument>, <argument><expr><name>class</name> <name>Generator9</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>CartesianProductHolder9</name> <block>{<block_content>
<label><name>public</name>:</label>
<expr_stmt><expr><call><name>CartesianProductHolder9</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Generator1</name><operator>&amp;</operator> <name>g1</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator2</name><operator>&amp;</operator> <name>g2</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name>Generator3</name><operator>&amp;</operator> <name>g3</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator4</name><operator>&amp;</operator> <name>g4</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator5</name><operator>&amp;</operator> <name>g5</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name>Generator6</name><operator>&amp;</operator> <name>g6</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator7</name><operator>&amp;</operator> <name>g7</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator8</name><operator>&amp;</operator> <name>g8</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name>Generator9</name><operator>&amp;</operator> <name>g9</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>g1_</name><argument_list>(<argument><expr><name>g1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g2_</name><argument_list>(<argument><expr><name>g2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g3_</name><argument_list>(<argument><expr><name>g3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g4_</name><argument_list>(<argument><expr><name>g4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g5_</name><argument_list>(<argument><expr><name>g5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g6_</name><argument_list>(<argument><expr><name>g6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g7_</name><argument_list>(<argument><expr><name>g7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g8_</name><argument_list>(<argument><expr><name>g8</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<macro><name>g9_</name><argument_list>(<argument>g9</argument>)</argument_list></macro> <expr><block>{}</block>
<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator> <operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>, <argument><expr><name>T7</name></expr></argument>, <argument><expr><name>T8</name></expr></argument>,
<argument><expr><name>T9</name></expr></argument>&gt;</argument_list></name> <operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<return>return <macro><name>ParamGenerator</name></macro><expr><operator>&lt;</operator> <operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>, <argument><expr><name>T7</name></expr></argument>, <argument><expr><name>T8</name></expr></argument>,
<argument><expr><name>T9</name></expr></argument>&gt;</argument_list></name> <operator>&gt;</operator><operator>(</operator>
<name>new</name> <call><name><name>CartesianProductGenerator9</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>, <argument><expr><name>T7</name></expr></argument>, <argument><expr><name>T8</name></expr></argument>, <argument><expr><name>T9</name></expr></argument>&gt;</argument_list></name><argument_list>(
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g1_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g2_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g3_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g4_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g5_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g6_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g7_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g8_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T9</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g9_</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
}</block></expr></expr_stmt>

<label><name>private</name>:</label>

<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>CartesianProductHolder9</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>Generator1</name></type> <name>g1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator2</name></type> <name>g2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator3</name></type> <name>g3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator4</name></type> <name>g4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator5</name></type> <name>g5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator6</name></type> <name>g6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator7</name></type> <name>g7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator8</name></type> <name>g8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator9</name></type> <name>g9_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<decl_stmt><decl><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>class</name> <name>Generator1</name></expr></argument>, <argument><expr><name>class</name> <name>Generator2</name></expr></argument>, <argument><expr><name>class</name> <name>Generator3</name></expr></argument>,
<argument><expr><name>class</name> <name>Generator4</name></expr></argument>, <argument><expr><name>class</name> <name>Generator5</name></expr></argument>, <argument><expr><name>class</name> <name>Generator6</name></expr></argument>, <argument><expr><name>class</name> <name>Generator7</name></expr></argument>,
<argument><expr><name>class</name> <name>Generator8</name></expr></argument>, <argument><expr><name>class</name> <name>Generator9</name></expr></argument>, <argument><expr><name>class</name> <name>Generator10</name></expr></argument>&gt;</argument_list></name>
<name>class</name></type> <name>CartesianProductHolder10</name> <block>{<block_content>
<label><name>public</name>:</label>
<expr_stmt><expr><call><name>CartesianProductHolder10</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Generator1</name><operator>&amp;</operator> <name>g1</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator2</name><operator>&amp;</operator> <name>g2</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name>Generator3</name><operator>&amp;</operator> <name>g3</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator4</name><operator>&amp;</operator> <name>g4</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator5</name><operator>&amp;</operator> <name>g5</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name>Generator6</name><operator>&amp;</operator> <name>g6</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator7</name><operator>&amp;</operator> <name>g7</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator8</name><operator>&amp;</operator> <name>g8</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name>Generator9</name><operator>&amp;</operator> <name>g9</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>Generator10</name><operator>&amp;</operator> <name>g10</name></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>g1_</name><argument_list>(<argument><expr><name>g1</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g2_</name><argument_list>(<argument><expr><name>g2</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g3_</name><argument_list>(<argument><expr><name>g3</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g4_</name><argument_list>(<argument><expr><name>g4</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g5_</name><argument_list>(<argument><expr><name>g5</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g6_</name><argument_list>(<argument><expr><name>g6</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g7_</name><argument_list>(<argument><expr><name>g7</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><call><name>g8_</name><argument_list>(<argument><expr><name>g8</name></expr></argument>)</argument_list></call></expr><operator>,</operator>
<expr><call><name>g9_</name><argument_list>(<argument><expr><name>g9</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <macro><name>g10_</name><argument_list>(<argument>g10</argument>)</argument_list></macro> <expr><block>{}</block>
<name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T1</name></expr></argument>, <argument><expr><name>typename</name> <name>T2</name></expr></argument>, <argument><expr><name>typename</name> <name>T3</name></expr></argument>, <argument><expr><name>typename</name> <name>T4</name></expr></argument>, <argument><expr><name>typename</name> <name>T5</name></expr></argument>,
<argument><expr><name>typename</name> <name>T6</name></expr></argument>, <argument><expr><name>typename</name> <name>T7</name></expr></argument>, <argument><expr><name>typename</name> <name>T8</name></expr></argument>, <argument><expr><name>typename</name> <name>T9</name></expr></argument>, <argument><expr><name>typename</name> <name>T10</name></expr></argument>&gt;</argument_list></name>
<name>operator</name> <macro><name>ParamGenerator</name></macro><operator>&lt;</operator> <operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>, <argument><expr><name>T7</name></expr></argument>, <argument><expr><name>T8</name></expr></argument>, <argument><expr><name>T9</name></expr></argument>,
<argument><expr><name>T10</name></expr></argument>&gt;</argument_list></name> <operator>&gt;</operator><operator>(</operator><operator>)</operator> <specifier>const</specifier> <block>{
<return>return <macro><name>ParamGenerator</name></macro><expr><operator>&lt;</operator> <operator>::</operator><name>testing</name><operator>::</operator><name><name>tuple</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>, <argument><expr><name>T7</name></expr></argument>, <argument><expr><name>T8</name></expr></argument>, <argument><expr><name>T9</name></expr></argument>,
<argument><expr><name>T10</name></expr></argument>&gt;</argument_list></name> <operator>&gt;</operator><operator>(</operator>
<name>new</name> <call><name><name>CartesianProductGenerator10</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>, <argument><expr><name>T2</name></expr></argument>, <argument><expr><name>T3</name></expr></argument>, <argument><expr><name>T4</name></expr></argument>, <argument><expr><name>T5</name></expr></argument>, <argument><expr><name>T6</name></expr></argument>, <argument><expr><name>T7</name></expr></argument>, <argument><expr><name>T8</name></expr></argument>, <argument><expr><name>T9</name></expr></argument>,
<argument><expr><name>T10</name></expr></argument>&gt;</argument_list></name><argument_list>(
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T1</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g1_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T2</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g2_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T3</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g3_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T4</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g4_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T5</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g5_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T6</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g6_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T7</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g7_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T8</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g8_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T9</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g9_</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name><name>static_cast</name><argument_list type="generic">&lt;<argument><expr><name><name>ParamGenerator</name><argument_list type="generic">&lt;<argument><expr><name>T10</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name><argument_list>(<argument><expr><name>g10_</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
}</block></expr></expr_stmt>

<label><name>private</name>:</label>

<decl_stmt><decl><type><name>void</name></type> <name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>CartesianProductHolder10</name><operator>&amp;</operator> <name>other</name><operator>)</operator></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>Generator1</name></type> <name>g1_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator2</name></type> <name>g2_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator3</name></type> <name>g3_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator4</name></type> <name>g4_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator5</name></type> <name>g5_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator6</name></type> <name>g6_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator7</name></type> <name>g7_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator8</name></type> <name>g8_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator9</name></type> <name>g9_</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>Generator10</name></type> <name>g10_</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

}
}

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
