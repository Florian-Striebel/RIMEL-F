<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/file/src/elfclass.h">

























<if_stmt><if>if <condition>(<expr><name>nbytes</name> <operator>&lt;=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>elfhdr</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name><name>u</name><operator>.</operator><name>l</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><call><name>memcpy</name><argument_list>(<argument><expr><operator>&amp;</operator><name>elfhdr</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><sizeof>sizeof <name>elfhdr</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>swap</name> <operator>=</operator> <operator>(</operator><name><name>u</name><operator>.</operator><name>c</name><index>[<expr><sizeof>sizeof<argument_list>(<argument><expr><name>int32_t</name></expr></argument>)</argument_list></sizeof> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>!=</operator> <name><name>elfhdr</name><operator>.</operator><name>e_ident</name><index>[<expr><name>EI_DATA</name></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name>type</name> <operator>=</operator> <call><name>elf_getu16</name><argument_list>(<argument><expr><name>swap</name></expr></argument>, <argument><expr><name><name>elfhdr</name><operator>.</operator><name>e_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>notecount</name> <operator>=</operator> <name><name>ms</name><operator>-&gt;</operator><name>elf_notes_max</name></name></expr>;</expr_stmt>
<switch>switch <condition>(<expr><name>type</name></expr>)</condition> <block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ELFCORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<case>case <expr><name>ET_CORE</name></expr>:</case>
<expr_stmt><expr><name>phnum</name> <operator>=</operator> <call><name>elf_getu16</name><argument_list>(<argument><expr><name>swap</name></expr></argument>, <argument><expr><name><name>elfhdr</name><operator>.</operator><name>e_phnum</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>phnum</name> <operator>&gt;</operator> <name><name>ms</name><operator>-&gt;</operator><name>elf_phnum_max</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>toomany</name><argument_list>(<argument><expr><name>ms</name></expr></argument>, <argument><expr><literal type="string">"program headers"</literal></expr></argument>, <argument><expr><name>phnum</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name>flags</name> <operator>|=</operator> <name>FLAGS_IS_CORE</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>dophn_core</name><argument_list>(<argument><expr><name>ms</name></expr></argument>, <argument><expr><name>clazz</name></expr></argument>, <argument><expr><name>swap</name></expr></argument>, <argument><expr><name>fd</name></expr></argument>,
<argument><expr><call><name>CAST</name><argument_list>(<argument><expr><name>off_t</name></expr></argument>, <argument><expr><call><name>elf_getu</name><argument_list>(<argument><expr><name>swap</name></expr></argument>, <argument><expr><name><name>elfhdr</name><operator>.</operator><name>e_phoff</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>phnum</name></expr></argument>,
<argument><expr><call><name>CAST</name><argument_list>(<argument><expr><name>size_t</name></expr></argument>, <argument><expr><call><name>elf_getu16</name><argument_list>(<argument><expr><name>swap</name></expr></argument>, <argument><expr><name><name>elfhdr</name><operator>.</operator><name>e_phentsize</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>fsize</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>flags</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>notecount</name></expr></argument>)</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
<break>break;</break>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<case>case <expr><name>ET_EXEC</name></expr>:</case>
<case>case <expr><name>ET_DYN</name></expr>:</case>
<expr_stmt><expr><name>phnum</name> <operator>=</operator> <call><name>elf_getu16</name><argument_list>(<argument><expr><name>swap</name></expr></argument>, <argument><expr><name><name>elfhdr</name><operator>.</operator><name>e_phnum</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>phnum</name> <operator>&gt;</operator> <name><name>ms</name><operator>-&gt;</operator><name>elf_phnum_max</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>toomany</name><argument_list>(<argument><expr><name>ms</name></expr></argument>, <argument><expr><literal type="string">"program"</literal></expr></argument>, <argument><expr><name>phnum</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name>shnum</name> <operator>=</operator> <call><name>elf_getu16</name><argument_list>(<argument><expr><name>swap</name></expr></argument>, <argument><expr><name><name>elfhdr</name><operator>.</operator><name>e_shnum</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>shnum</name> <operator>&gt;</operator> <name><name>ms</name><operator>-&gt;</operator><name>elf_shnum_max</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>toomany</name><argument_list>(<argument><expr><name>ms</name></expr></argument>, <argument><expr><literal type="string">"section"</literal></expr></argument>, <argument><expr><name>shnum</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>dophn_exec</name><argument_list>(<argument><expr><name>ms</name></expr></argument>, <argument><expr><name>clazz</name></expr></argument>, <argument><expr><name>swap</name></expr></argument>, <argument><expr><name>fd</name></expr></argument>,
<argument><expr><call><name>CAST</name><argument_list>(<argument><expr><name>off_t</name></expr></argument>, <argument><expr><call><name>elf_getu</name><argument_list>(<argument><expr><name>swap</name></expr></argument>, <argument><expr><name><name>elfhdr</name><operator>.</operator><name>e_phoff</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>phnum</name></expr></argument>,
<argument><expr><call><name>CAST</name><argument_list>(<argument><expr><name>size_t</name></expr></argument>, <argument><expr><call><name>elf_getu16</name><argument_list>(<argument><expr><name>swap</name></expr></argument>, <argument><expr><name><name>elfhdr</name><operator>.</operator><name>e_phentsize</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>fsize</name></expr></argument>, <argument><expr><name>shnum</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>flags</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>notecount</name></expr></argument>)</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<case>case <expr><name>ET_REL</name></expr>:</case>
<expr_stmt><expr><name>shnum</name> <operator>=</operator> <call><name>elf_getu16</name><argument_list>(<argument><expr><name>swap</name></expr></argument>, <argument><expr><name><name>elfhdr</name><operator>.</operator><name>e_shnum</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>shnum</name> <operator>&gt;</operator> <name><name>ms</name><operator>-&gt;</operator><name>elf_shnum_max</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>toomany</name><argument_list>(<argument><expr><name>ms</name></expr></argument>, <argument><expr><literal type="string">"section headers"</literal></expr></argument>, <argument><expr><name>shnum</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>doshn</name><argument_list>(<argument><expr><name>ms</name></expr></argument>, <argument><expr><name>clazz</name></expr></argument>, <argument><expr><name>swap</name></expr></argument>, <argument><expr><name>fd</name></expr></argument>,
<argument><expr><call><name>CAST</name><argument_list>(<argument><expr><name>off_t</name></expr></argument>, <argument><expr><call><name>elf_getu</name><argument_list>(<argument><expr><name>swap</name></expr></argument>, <argument><expr><name><name>elfhdr</name><operator>.</operator><name>e_shoff</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>shnum</name></expr></argument>,
<argument><expr><call><name>CAST</name><argument_list>(<argument><expr><name>size_t</name></expr></argument>, <argument><expr><call><name>elf_getu16</name><argument_list>(<argument><expr><name>swap</name></expr></argument>, <argument><expr><name><name>elfhdr</name><operator>.</operator><name>e_shentsize</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>fsize</name></expr></argument>, <argument><expr><call><name>elf_getu16</name><argument_list>(<argument><expr><name>swap</name></expr></argument>, <argument><expr><name><name>elfhdr</name><operator>.</operator><name>e_machine</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>CAST</name><argument_list>(<argument><expr><name>int</name></expr></argument>, <argument><expr><call><name>elf_getu16</name><argument_list>(<argument><expr><name>swap</name></expr></argument>, <argument><expr><name><name>elfhdr</name><operator>.</operator><name>e_shstrndx</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>&amp;</operator><name>flags</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>notecount</name></expr></argument>)</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
<break>break;</break>

<default>default:</default>
<break>break;</break>
</block_content>}</block></switch>
<if_stmt><if>if <condition>(<expr><name>notecount</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>toomany</name><argument_list>(<argument><expr><name>ms</name></expr></argument>, <argument><expr><literal type="string">"notes"</literal></expr></argument>, <argument><expr><name><name>ms</name><operator>-&gt;</operator><name>elf_notes_max</name></name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</unit>
