<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/libedit/map.h">






































<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_h_el_map</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_h_el_map</name></cpp:macro></cpp:define>

<typedef>typedef <function_decl><type><name>el_action_t</name></type> (<modifier>*</modifier><name>el_func_t</name>)<parameter_list>(<parameter><decl><type><name>EditLine</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>wint_t</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><struct>struct <name>el_bindings_t</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>wchar_t</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>func</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>wchar_t</name> <modifier>*</modifier></type><name>description</name></decl>;</decl_stmt>
}</block></struct></type> <name>el_bindings_t</name>;</typedef>

<typedef>typedef <type><struct>struct <name>el_map_t</name> <block>{
<decl_stmt><decl><type><name>el_action_t</name> <modifier>*</modifier></type><name>alt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>el_action_t</name> <modifier>*</modifier></type><name>key</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>el_action_t</name> <modifier>*</modifier></type><name>current</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>el_action_t</name> <modifier>*</modifier></type><name>emacs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>el_action_t</name> <modifier>*</modifier></type><name>vic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>el_action_t</name> <modifier>*</modifier></type><name>vii</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>el_bindings_t</name> <modifier>*</modifier></type><name>help</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>el_func_t</name> <modifier>*</modifier></type><name>func</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>nfunc</name></decl>;</decl_stmt>
}</block></struct></type> <name>el_map_t</name>;</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAP_EMACS</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAP_VI</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>N_KEYS</name></cpp:macro> <cpp:value>256</cpp:value></cpp:define>

<function_decl><type><name>libedit_private</name> <name>int</name></type> <name>map_bind</name><parameter_list>(<parameter><decl><type><name>EditLine</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>wchar_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>libedit_private</name> <name>int</name></type> <name>map_init</name><parameter_list>(<parameter><decl><type><name>EditLine</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>libedit_private</name> <name>void</name></type> <name>map_end</name><parameter_list>(<parameter><decl><type><name>EditLine</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>libedit_private</name> <name>void</name></type> <name>map_init_vi</name><parameter_list>(<parameter><decl><type><name>EditLine</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>libedit_private</name> <name>void</name></type> <name>map_init_emacs</name><parameter_list>(<parameter><decl><type><name>EditLine</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>libedit_private</name> <name>int</name></type> <name>map_set_editor</name><parameter_list>(<parameter><decl><type><name>EditLine</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>wchar_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>libedit_private</name> <name>int</name></type> <name>map_get_editor</name><parameter_list>(<parameter><decl><type><name>EditLine</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>wchar_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>libedit_private</name> <name>int</name></type> <name>map_addfunc</name><parameter_list>(<parameter><decl><type><name>EditLine</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>wchar_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>wchar_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>el_func_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
