<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/bmake/hash.h">











































































<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>MAKE_HASH_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MAKE_HASH_H</name></cpp:macro></cpp:define>


<typedef>typedef <type><struct>struct <name>HashEntry</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>HashEntry</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>value</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>key_hash</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>key</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>HashEntry</name>;</typedef>


<typedef>typedef <type><struct>struct <name>HashTable</name> <block>{
<decl_stmt><decl><type><name>HashEntry</name> <modifier>*</modifier><modifier>*</modifier></type><name>buckets</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>bucketsSize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>numEntries</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>bucketsMask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>maxchain</name></decl>;</decl_stmt>
}</block></struct></type> <name>HashTable</name>;</typedef>


<typedef>typedef <type><struct>struct <name>HashIter</name> <block>{
<decl_stmt><decl><type><name>HashTable</name> <modifier>*</modifier></type><name>table</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>nextBucket</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>HashEntry</name> <modifier>*</modifier></type><name>entry</name></decl>;</decl_stmt>
}</block></struct></type> <name>HashIter</name>;</typedef>


<typedef>typedef <type><struct>struct <name>HashSet</name> <block>{
<decl_stmt><decl><type><name>HashTable</name></type> <name>tbl</name></decl>;</decl_stmt>
}</block></struct></type> <name>HashSet</name>;</typedef>

<function><type><name>MAKE_INLINE</name> <name>void</name> <modifier>*</modifier></type>
<name>HashEntry_Get</name><parameter_list>(<parameter><decl><type><name>HashEntry</name> <modifier>*</modifier></type><name>h</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>h</name><operator>-&gt;</operator><name>value</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>MAKE_INLINE</name> <name>void</name></type>
<name>HashEntry_Set</name><parameter_list>(<parameter><decl><type><name>HashEntry</name> <modifier>*</modifier></type><name>h</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>datum</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>h</name><operator>-&gt;</operator><name>value</name></name> <operator>=</operator> <name>datum</name></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>MAKE_INLINE</name> <name>void</name></type>
<name>HashIter_Init</name><parameter_list>(<parameter><decl><type><name>HashIter</name> <modifier>*</modifier></type><name>hi</name></decl></parameter>, <parameter><decl><type><name>HashTable</name> <modifier>*</modifier></type><name>t</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>hi</name><operator>-&gt;</operator><name>table</name></name> <operator>=</operator> <name>t</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>hi</name><operator>-&gt;</operator><name>nextBucket</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>hi</name><operator>-&gt;</operator><name>entry</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function_decl><type><name>void</name></type> <name>HashTable_Init</name><parameter_list>(<parameter><decl><type><name>HashTable</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>HashTable_Done</name><parameter_list>(<parameter><decl><type><name>HashTable</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>HashEntry</name> <modifier>*</modifier></type><name>HashTable_FindEntry</name><parameter_list>(<parameter><decl><type><name>HashTable</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name> <modifier>*</modifier></type><name>HashTable_FindValue</name><parameter_list>(<parameter><decl><type><name>HashTable</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>unsigned</name> <name>int</name></type> <name>Hash_Substring</name><parameter_list>(<parameter><decl><type><name>Substring</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name> <modifier>*</modifier></type><name>HashTable_FindValueBySubstringHash</name><parameter_list>(<parameter><decl><type><name>HashTable</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Substring</name></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>HashEntry</name> <modifier>*</modifier></type><name>HashTable_CreateEntry</name><parameter_list>(<parameter><decl><type><name>HashTable</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>bool</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>HashEntry</name> <modifier>*</modifier></type><name>HashTable_Set</name><parameter_list>(<parameter><decl><type><name>HashTable</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>HashTable_DeleteEntry</name><parameter_list>(<parameter><decl><type><name>HashTable</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>HashEntry</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>HashTable_DebugStats</name><parameter_list>(<parameter><decl><type><name>HashTable</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>HashIter_Init</name><parameter_list>(<parameter><decl><type><name>HashIter</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>HashTable</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>HashEntry</name> <modifier>*</modifier></type><name>HashIter_Next</name><parameter_list>(<parameter><decl><type><name>HashIter</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function><type><name>MAKE_INLINE</name> <name>void</name></type>
<name>HashSet_Init</name><parameter_list>(<parameter><decl><type><name>HashSet</name> <modifier>*</modifier></type><name>set</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>HashTable_Init</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>set</name><operator>-&gt;</operator><name>tbl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>MAKE_INLINE</name> <name>void</name></type>
<name>HashSet_Done</name><parameter_list>(<parameter><decl><type><name>HashSet</name> <modifier>*</modifier></type><name>set</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>HashTable_Done</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>set</name><operator>-&gt;</operator><name>tbl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>MAKE_INLINE</name> <name>bool</name></type>
<name>HashSet_Add</name><parameter_list>(<parameter><decl><type><name>HashSet</name> <modifier>*</modifier></type><name>set</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>bool</name></type> <name>isNew</name></decl>;</decl_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><call><name>HashTable_CreateEntry</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>set</name><operator>-&gt;</operator><name>tbl</name></name></expr></argument>, <argument><expr><name>key</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>isNew</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>isNew</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>MAKE_INLINE</name> <name>bool</name></type>
<name>HashSet_Contains</name><parameter_list>(<parameter><decl><type><name>HashSet</name> <modifier>*</modifier></type><name>set</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>HashTable_FindEntry</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>set</name><operator>-&gt;</operator><name>tbl</name></name></expr></argument>, <argument><expr><name>key</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>NULL</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>MAKE_INLINE</name> <name>void</name></type>
<name>HashIter_InitSet</name><parameter_list>(<parameter><decl><type><name>HashIter</name> <modifier>*</modifier></type><name>hi</name></decl></parameter>, <parameter><decl><type><name>HashSet</name> <modifier>*</modifier></type><name>set</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>HashIter_Init</name><argument_list>(<argument><expr><name>hi</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>set</name><operator>-&gt;</operator><name>tbl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
