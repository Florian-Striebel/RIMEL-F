<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/bmake/meta.h">
































<typedef>typedef <type><struct>struct <name>BuildMon</name> <block>{
<decl_stmt><decl><type><name>char</name></type> <name><name>meta_fname</name><index>[<expr><name>MAXPATHLEN</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>filemon</name></name> <modifier>*</modifier></type><name>filemon</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>mon_fd</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>FILE</name> <modifier>*</modifier></type><name>mfp</name></decl>;</decl_stmt>
}</block></struct></type> <name>BuildMon</name>;</typedef>

<struct_decl>struct <name>Job</name>;</struct_decl>

<function_decl><type><name>void</name></type> <name>meta_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>meta_finish</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>meta_mode_init</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>meta_job_start</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Job</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>GNode</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>meta_job_child</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Job</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>meta_job_parent</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Job</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>pid_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>meta_job_fd</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Job</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>meta_job_event</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Job</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>meta_job_error</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Job</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>GNode</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>bool</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>meta_job_output</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Job</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>meta_cmd_finish</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>meta_job_finish</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>Job</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>meta_oodate</name><parameter_list>(<parameter><decl><type><name>GNode</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>bool</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>meta_compat_start</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>meta_compat_child</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>meta_compat_parent</name><parameter_list>(<parameter><decl><type><name>pid_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>extern</specifier> <name>bool</name></type> <name>useMeta</name></decl>;</decl_stmt>
</unit>
