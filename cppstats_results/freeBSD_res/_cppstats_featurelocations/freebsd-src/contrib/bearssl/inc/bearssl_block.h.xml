<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/bearssl/inc/bearssl_block.h">























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_BEARSSL_BLOCK_H__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BR_BEARSSL_BLOCK_H__</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>







































































































































































































































































































































































<typedef>typedef <type><name><name>struct</name> <name>br_block_cbcenc_class_</name></name></type> <name>br_block_cbcenc_class</name>;</typedef>
<struct>struct <name>br_block_cbcenc_class_</name> <block>{




<decl_stmt><decl><type><name>size_t</name></type> <name>context_size</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>unsigned</name></type> <name>block_size</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>unsigned</name></type> <name>log_block_size</name></decl>;</decl_stmt>












<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>init</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_block_cbcenc_class</name> <modifier>*</modifier><modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>key_len</name></decl></parameter>)</parameter_list>;</function_decl>














<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>run</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_block_cbcenc_class</name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>







<typedef>typedef <type><name><name>struct</name> <name>br_block_cbcdec_class_</name></name></type> <name>br_block_cbcdec_class</name>;</typedef>
<struct>struct <name>br_block_cbcdec_class_</name> <block>{




<decl_stmt><decl><type><name>size_t</name></type> <name>context_size</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>unsigned</name></type> <name>block_size</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>unsigned</name></type> <name>log_block_size</name></decl>;</decl_stmt>












<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>init</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_block_cbcdec_class</name> <modifier>*</modifier><modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>key_len</name></decl></parameter>)</parameter_list>;</function_decl>














<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>run</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_block_cbcdec_class</name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>








<typedef>typedef <type><name><name>struct</name> <name>br_block_ctr_class_</name></name></type> <name>br_block_ctr_class</name>;</typedef>
<struct>struct <name>br_block_ctr_class_</name> <block>{




<decl_stmt><decl><type><name>size_t</name></type> <name>context_size</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>unsigned</name></type> <name>block_size</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>unsigned</name></type> <name>log_block_size</name></decl>;</decl_stmt>












<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>init</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_block_ctr_class</name> <modifier>*</modifier><modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>key_len</name></decl></parameter>)</parameter_list>;</function_decl>
























<function_decl><type><name>uint32_t</name></type> (<modifier>*</modifier><name>run</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_block_ctr_class</name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>cc</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>








<typedef>typedef <type><name><name>struct</name> <name>br_block_ctrcbc_class_</name></name></type> <name>br_block_ctrcbc_class</name>;</typedef>
<struct>struct <name>br_block_ctrcbc_class_</name> <block>{




<decl_stmt><decl><type><name>size_t</name></type> <name>context_size</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>unsigned</name></type> <name>block_size</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>unsigned</name></type> <name>log_block_size</name></decl>;</decl_stmt>












<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>init</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_block_ctrcbc_class</name> <modifier>*</modifier><modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>key_len</name></decl></parameter>)</parameter_list>;</function_decl>






















<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>encrypt</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_block_ctrcbc_class</name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>






















<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>decrypt</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_block_ctrcbc_class</name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
















<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>ctr</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_block_ctrcbc_class</name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>

















<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>mac</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_block_ctrcbc_class</name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
}</block>;</struct>










<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>br_aes_big_BLOCK_SIZE</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>







<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcenc_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">60</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_big_cbcenc_keys</name>;</typedef>







<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcdec_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">60</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_big_cbcdec_keys</name>;</typedef>








<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_ctr_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">60</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_big_ctr_keys</name>;</typedef>








<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_ctrcbc_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">60</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_big_ctrcbc_keys</name>;</typedef>




<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_cbcenc_class</name></type> <name>br_aes_big_cbcenc_vtable</name></decl>;</decl_stmt>




<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_cbcdec_class</name></type> <name>br_aes_big_cbcdec_vtable</name></decl>;</decl_stmt>





<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_ctr_class</name></type> <name>br_aes_big_ctr_vtable</name></decl>;</decl_stmt>





<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_ctrcbc_class</name></type> <name>br_aes_big_ctrcbc_vtable</name></decl>;</decl_stmt>









<function_decl><type><name>void</name></type> <name>br_aes_big_cbcenc_init</name><parameter_list>(<parameter><decl><type><name>br_aes_big_cbcenc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_big_cbcdec_init</name><parameter_list>(<parameter><decl><type><name>br_aes_big_cbcdec_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_big_ctr_init</name><parameter_list>(<parameter><decl><type><name>br_aes_big_ctr_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_big_ctrcbc_init</name><parameter_list>(<parameter><decl><type><name>br_aes_big_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_big_cbcenc_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_big_cbcenc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_big_cbcdec_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_big_cbcdec_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>uint32_t</name></type> <name>br_aes_big_ctr_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_big_ctr_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>cc</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>br_aes_big_ctrcbc_encrypt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_big_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>br_aes_big_ctrcbc_decrypt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_big_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_big_ctrcbc_ctr</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_big_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_big_ctrcbc_mac</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_big_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>










<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>br_aes_small_BLOCK_SIZE</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>







<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcenc_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">60</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_small_cbcenc_keys</name>;</typedef>







<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcdec_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">60</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_small_cbcdec_keys</name>;</typedef>








<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_ctr_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">60</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_small_ctr_keys</name>;</typedef>








<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_ctrcbc_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">60</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_small_ctrcbc_keys</name>;</typedef>




<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_cbcenc_class</name></type> <name>br_aes_small_cbcenc_vtable</name></decl>;</decl_stmt>




<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_cbcdec_class</name></type> <name>br_aes_small_cbcdec_vtable</name></decl>;</decl_stmt>





<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_ctr_class</name></type> <name>br_aes_small_ctr_vtable</name></decl>;</decl_stmt>





<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_ctrcbc_class</name></type> <name>br_aes_small_ctrcbc_vtable</name></decl>;</decl_stmt>









<function_decl><type><name>void</name></type> <name>br_aes_small_cbcenc_init</name><parameter_list>(<parameter><decl><type><name>br_aes_small_cbcenc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_small_cbcdec_init</name><parameter_list>(<parameter><decl><type><name>br_aes_small_cbcdec_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_small_ctr_init</name><parameter_list>(<parameter><decl><type><name>br_aes_small_ctr_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_small_ctrcbc_init</name><parameter_list>(<parameter><decl><type><name>br_aes_small_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_small_cbcenc_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_small_cbcenc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_small_cbcdec_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_small_cbcdec_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>uint32_t</name></type> <name>br_aes_small_ctr_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_small_ctr_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>cc</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>br_aes_small_ctrcbc_encrypt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_small_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>br_aes_small_ctrcbc_decrypt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_small_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_small_ctrcbc_ctr</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_small_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_small_ctrcbc_mac</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_small_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>br_aes_ct_BLOCK_SIZE</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>







<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcenc_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">60</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_ct_cbcenc_keys</name>;</typedef>







<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcdec_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">60</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_ct_cbcdec_keys</name>;</typedef>








<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_ctr_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">60</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_ct_ctr_keys</name>;</typedef>








<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_ctrcbc_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">60</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_ct_ctrcbc_keys</name>;</typedef>




<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_cbcenc_class</name></type> <name>br_aes_ct_cbcenc_vtable</name></decl>;</decl_stmt>




<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_cbcdec_class</name></type> <name>br_aes_ct_cbcdec_vtable</name></decl>;</decl_stmt>





<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_ctr_class</name></type> <name>br_aes_ct_ctr_vtable</name></decl>;</decl_stmt>





<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_ctrcbc_class</name></type> <name>br_aes_ct_ctrcbc_vtable</name></decl>;</decl_stmt>









<function_decl><type><name>void</name></type> <name>br_aes_ct_cbcenc_init</name><parameter_list>(<parameter><decl><type><name>br_aes_ct_cbcenc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_ct_cbcdec_init</name><parameter_list>(<parameter><decl><type><name>br_aes_ct_cbcdec_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_ct_ctr_init</name><parameter_list>(<parameter><decl><type><name>br_aes_ct_ctr_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_ct_ctrcbc_init</name><parameter_list>(<parameter><decl><type><name>br_aes_ct_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_ct_cbcenc_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_ct_cbcenc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_ct_cbcdec_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_ct_cbcdec_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>uint32_t</name></type> <name>br_aes_ct_ctr_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_ct_ctr_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>cc</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>br_aes_ct_ctrcbc_encrypt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_ct_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>br_aes_ct_ctrcbc_decrypt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_ct_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_ct_ctrcbc_ctr</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_ct_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_ct_ctrcbc_mac</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_ct_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>











<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>br_aes_ct64_BLOCK_SIZE</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>







<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcenc_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint64_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">30</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_ct64_cbcenc_keys</name>;</typedef>







<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcdec_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint64_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">30</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_ct64_cbcdec_keys</name>;</typedef>








<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_ctr_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint64_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">30</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_ct64_ctr_keys</name>;</typedef>








<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_ctrcbc_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint64_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">30</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_ct64_ctrcbc_keys</name>;</typedef>




<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_cbcenc_class</name></type> <name>br_aes_ct64_cbcenc_vtable</name></decl>;</decl_stmt>




<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_cbcdec_class</name></type> <name>br_aes_ct64_cbcdec_vtable</name></decl>;</decl_stmt>





<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_ctr_class</name></type> <name>br_aes_ct64_ctr_vtable</name></decl>;</decl_stmt>





<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_ctrcbc_class</name></type> <name>br_aes_ct64_ctrcbc_vtable</name></decl>;</decl_stmt>









<function_decl><type><name>void</name></type> <name>br_aes_ct64_cbcenc_init</name><parameter_list>(<parameter><decl><type><name>br_aes_ct64_cbcenc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_ct64_cbcdec_init</name><parameter_list>(<parameter><decl><type><name>br_aes_ct64_cbcdec_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_ct64_ctr_init</name><parameter_list>(<parameter><decl><type><name>br_aes_ct64_ctr_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_ct64_ctrcbc_init</name><parameter_list>(<parameter><decl><type><name>br_aes_ct64_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_ct64_cbcenc_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_ct64_cbcenc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_ct64_cbcdec_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_ct64_cbcdec_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>uint32_t</name></type> <name>br_aes_ct64_ctr_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_ct64_ctr_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>cc</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>br_aes_ct64_ctrcbc_encrypt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_ct64_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>br_aes_ct64_ctrcbc_decrypt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_ct64_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_ct64_ctrcbc_ctr</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_ct64_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_ct64_ctrcbc_mac</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_ct64_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>br_aes_x86ni_BLOCK_SIZE</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>







<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcenc_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<union>union <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>skni</name><index>[<expr><literal type="number">16</literal> <operator>*</operator> <literal type="number">15</literal></expr>]</index></name></decl>;</decl_stmt>
}</block> <decl><name>skey</name></decl>;</union>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_x86ni_cbcenc_keys</name>;</typedef>







<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcdec_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<union>union <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>skni</name><index>[<expr><literal type="number">16</literal> <operator>*</operator> <literal type="number">15</literal></expr>]</index></name></decl>;</decl_stmt>
}</block> <decl><name>skey</name></decl>;</union>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_x86ni_cbcdec_keys</name>;</typedef>








<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_ctr_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<union>union <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>skni</name><index>[<expr><literal type="number">16</literal> <operator>*</operator> <literal type="number">15</literal></expr>]</index></name></decl>;</decl_stmt>
}</block> <decl><name>skey</name></decl>;</union>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_x86ni_ctr_keys</name>;</typedef>








<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_ctrcbc_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<union>union <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>skni</name><index>[<expr><literal type="number">16</literal> <operator>*</operator> <literal type="number">15</literal></expr>]</index></name></decl>;</decl_stmt>
}</block> <decl><name>skey</name></decl>;</union>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_x86ni_ctrcbc_keys</name>;</typedef>








<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_cbcenc_class</name></type> <name>br_aes_x86ni_cbcenc_vtable</name></decl>;</decl_stmt>








<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_cbcdec_class</name></type> <name>br_aes_x86ni_cbcdec_vtable</name></decl>;</decl_stmt>









<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_ctr_class</name></type> <name>br_aes_x86ni_ctr_vtable</name></decl>;</decl_stmt>









<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_ctrcbc_class</name></type> <name>br_aes_x86ni_ctrcbc_vtable</name></decl>;</decl_stmt>









<function_decl><type><name>void</name></type> <name>br_aes_x86ni_cbcenc_init</name><parameter_list>(<parameter><decl><type><name>br_aes_x86ni_cbcenc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_x86ni_cbcdec_init</name><parameter_list>(<parameter><decl><type><name>br_aes_x86ni_cbcdec_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_x86ni_ctr_init</name><parameter_list>(<parameter><decl><type><name>br_aes_x86ni_ctr_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_x86ni_ctrcbc_init</name><parameter_list>(<parameter><decl><type><name>br_aes_x86ni_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_x86ni_cbcenc_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_x86ni_cbcenc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_x86ni_cbcdec_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_x86ni_cbcdec_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>uint32_t</name></type> <name>br_aes_x86ni_ctr_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_x86ni_ctr_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>cc</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>br_aes_x86ni_ctrcbc_encrypt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_x86ni_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>br_aes_x86ni_ctrcbc_decrypt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_x86ni_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_x86ni_ctrcbc_ctr</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_x86ni_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_x86ni_ctrcbc_mac</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_x86ni_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><specifier>const</specifier> <name>br_block_cbcenc_class</name> <modifier>*</modifier></type><name>br_aes_x86ni_cbcenc_get_vtable</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><specifier>const</specifier> <name>br_block_cbcdec_class</name> <modifier>*</modifier></type><name>br_aes_x86ni_cbcdec_get_vtable</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><specifier>const</specifier> <name>br_block_ctr_class</name> <modifier>*</modifier></type><name>br_aes_x86ni_ctr_get_vtable</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><specifier>const</specifier> <name>br_block_ctrcbc_class</name> <modifier>*</modifier></type><name>br_aes_x86ni_ctrcbc_get_vtable</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>br_aes_pwr8_BLOCK_SIZE</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>







<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcenc_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<union>union <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>skni</name><index>[<expr><literal type="number">16</literal> <operator>*</operator> <literal type="number">15</literal></expr>]</index></name></decl>;</decl_stmt>
}</block> <decl><name>skey</name></decl>;</union>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_pwr8_cbcenc_keys</name>;</typedef>







<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcdec_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<union>union <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>skni</name><index>[<expr><literal type="number">16</literal> <operator>*</operator> <literal type="number">15</literal></expr>]</index></name></decl>;</decl_stmt>
}</block> <decl><name>skey</name></decl>;</union>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_pwr8_cbcdec_keys</name>;</typedef>








<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_ctr_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<union>union <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>skni</name><index>[<expr><literal type="number">16</literal> <operator>*</operator> <literal type="number">15</literal></expr>]</index></name></decl>;</decl_stmt>
}</block> <decl><name>skey</name></decl>;</union>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_pwr8_ctr_keys</name>;</typedef>








<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_ctrcbc_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<union>union <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>skni</name><index>[<expr><literal type="number">16</literal> <operator>*</operator> <literal type="number">15</literal></expr>]</index></name></decl>;</decl_stmt>
}</block> <decl><name>skey</name></decl>;</union>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_aes_pwr8_ctrcbc_keys</name>;</typedef>








<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_cbcenc_class</name></type> <name>br_aes_pwr8_cbcenc_vtable</name></decl>;</decl_stmt>








<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_cbcdec_class</name></type> <name>br_aes_pwr8_cbcdec_vtable</name></decl>;</decl_stmt>









<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_ctr_class</name></type> <name>br_aes_pwr8_ctr_vtable</name></decl>;</decl_stmt>









<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_ctrcbc_class</name></type> <name>br_aes_pwr8_ctrcbc_vtable</name></decl>;</decl_stmt>









<function_decl><type><name>void</name></type> <name>br_aes_pwr8_cbcenc_init</name><parameter_list>(<parameter><decl><type><name>br_aes_pwr8_cbcenc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_pwr8_cbcdec_init</name><parameter_list>(<parameter><decl><type><name>br_aes_pwr8_cbcdec_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_pwr8_ctr_init</name><parameter_list>(<parameter><decl><type><name>br_aes_pwr8_ctr_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_pwr8_ctrcbc_init</name><parameter_list>(<parameter><decl><type><name>br_aes_pwr8_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_pwr8_cbcenc_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_pwr8_cbcenc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_pwr8_cbcdec_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_pwr8_cbcdec_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>uint32_t</name></type> <name>br_aes_pwr8_ctr_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_pwr8_ctr_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>cc</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>br_aes_pwr8_ctrcbc_encrypt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_pwr8_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>br_aes_pwr8_ctrcbc_decrypt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_pwr8_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_pwr8_ctrcbc_ctr</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_pwr8_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ctr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_aes_pwr8_ctrcbc_mac</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_aes_pwr8_ctrcbc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbcmac</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><specifier>const</specifier> <name>br_block_cbcenc_class</name> <modifier>*</modifier></type><name>br_aes_pwr8_cbcenc_get_vtable</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><specifier>const</specifier> <name>br_block_cbcdec_class</name> <modifier>*</modifier></type><name>br_aes_pwr8_cbcdec_get_vtable</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><specifier>const</specifier> <name>br_block_ctr_class</name> <modifier>*</modifier></type><name>br_aes_pwr8_ctr_get_vtable</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><specifier>const</specifier> <name>br_block_ctrcbc_class</name> <modifier>*</modifier></type><name>br_aes_pwr8_ctrcbc_get_vtable</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>





<typedef>typedef <type><union>union <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcenc_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_big_cbcenc_keys</name></type> <name>c_big</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_small_cbcenc_keys</name></type> <name>c_small</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_ct_cbcenc_keys</name></type> <name>c_ct</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_ct64_cbcenc_keys</name></type> <name>c_ct64</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_x86ni_cbcenc_keys</name></type> <name>c_x86ni</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_pwr8_cbcenc_keys</name></type> <name>c_pwr8</name></decl>;</decl_stmt>
}</block></union></type> <name>br_aes_gen_cbcenc_keys</name>;</typedef>





<typedef>typedef <type><union>union <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcdec_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_big_cbcdec_keys</name></type> <name>c_big</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_small_cbcdec_keys</name></type> <name>c_small</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_ct_cbcdec_keys</name></type> <name>c_ct</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_ct64_cbcdec_keys</name></type> <name>c_ct64</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_x86ni_cbcdec_keys</name></type> <name>c_x86ni</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_pwr8_cbcdec_keys</name></type> <name>c_pwr8</name></decl>;</decl_stmt>
}</block></union></type> <name>br_aes_gen_cbcdec_keys</name>;</typedef>





<typedef>typedef <type><union>union <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_ctr_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_big_ctr_keys</name></type> <name>c_big</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_small_ctr_keys</name></type> <name>c_small</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_ct_ctr_keys</name></type> <name>c_ct</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_ct64_ctr_keys</name></type> <name>c_ct64</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_x86ni_ctr_keys</name></type> <name>c_x86ni</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_pwr8_ctr_keys</name></type> <name>c_pwr8</name></decl>;</decl_stmt>
}</block></union></type> <name>br_aes_gen_ctr_keys</name>;</typedef>





<typedef>typedef <type><union>union <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_ctrcbc_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_big_ctrcbc_keys</name></type> <name>c_big</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_small_ctrcbc_keys</name></type> <name>c_small</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_ct_ctrcbc_keys</name></type> <name>c_ct</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_ct64_ctrcbc_keys</name></type> <name>c_ct64</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_x86ni_ctrcbc_keys</name></type> <name>c_x86ni</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_aes_pwr8_ctrcbc_keys</name></type> <name>c_pwr8</name></decl>;</decl_stmt>
}</block></union></type> <name>br_aes_gen_ctrcbc_keys</name>;</typedef>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>br_des_tab_BLOCK_SIZE</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>







<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcenc_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">96</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_des_tab_cbcenc_keys</name>;</typedef>







<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcdec_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">96</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_des_tab_cbcdec_keys</name>;</typedef>




<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_cbcenc_class</name></type> <name>br_des_tab_cbcenc_vtable</name></decl>;</decl_stmt>




<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_cbcdec_class</name></type> <name>br_des_tab_cbcdec_vtable</name></decl>;</decl_stmt>









<function_decl><type><name>void</name></type> <name>br_des_tab_cbcenc_init</name><parameter_list>(<parameter><decl><type><name>br_des_tab_cbcenc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_des_tab_cbcdec_init</name><parameter_list>(<parameter><decl><type><name>br_des_tab_cbcdec_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_des_tab_cbcenc_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_des_tab_cbcenc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_des_tab_cbcdec_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_des_tab_cbcdec_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>br_des_ct_BLOCK_SIZE</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>







<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcenc_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">96</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_des_ct_cbcenc_keys</name>;</typedef>







<typedef>typedef <type><struct>struct <block>{

<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcdec_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_DOXYGEN_IGNORE</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>skey</name><index>[<expr><literal type="number">96</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>num_rounds</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
}</block></struct></type> <name>br_des_ct_cbcdec_keys</name>;</typedef>




<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_cbcenc_class</name></type> <name>br_des_ct_cbcenc_vtable</name></decl>;</decl_stmt>




<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>br_block_cbcdec_class</name></type> <name>br_des_ct_cbcdec_vtable</name></decl>;</decl_stmt>









<function_decl><type><name>void</name></type> <name>br_des_ct_cbcenc_init</name><parameter_list>(<parameter><decl><type><name>br_des_ct_cbcenc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_des_ct_cbcdec_init</name><parameter_list>(<parameter><decl><type><name>br_des_ct_cbcdec_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_des_ct_cbcenc_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_des_ct_cbcenc_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>br_des_ct_cbcdec_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_des_ct_cbcdec_keys</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>










<typedef>typedef <type><union>union <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcenc_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_des_tab_cbcenc_keys</name></type> <name>tab</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_des_ct_cbcenc_keys</name></type> <name>ct</name></decl>;</decl_stmt>
}</block></union></type> <name>br_des_gen_cbcenc_keys</name>;</typedef>





<typedef>typedef <type><union>union <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>br_block_cbcdec_class</name> <modifier>*</modifier></type><name>vtable</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_des_tab_cbcdec_keys</name></type> <name>c_tab</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_des_ct_cbcdec_keys</name></type> <name>c_ct</name></decl>;</decl_stmt>
}</block></union></type> <name>br_des_gen_cbcdec_keys</name>;</typedef>
























<typedef>typedef <function_decl><type><name>uint32_t</name></type> (<modifier>*</modifier><name>br_chacha20_run</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>cc</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl></typedef>












<function_decl><type><name>uint32_t</name></type> <name>br_chacha20_ct_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>cc</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>



















<function_decl><type><name>uint32_t</name></type> <name>br_chacha20_sse2_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>cc</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>br_chacha20_run</name></type> <name>br_chacha20_sse2_get</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>






















<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>br_poly1305_run</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>aad</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>aad_len</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>tag</name></decl></parameter>, <parameter><decl><type><name>br_chacha20_run</name></type> <name>ichacha</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>encrypt</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
















<function_decl><type><name>void</name></type> <name>br_poly1305_ctmul_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>aad</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>aad_len</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>tag</name></decl></parameter>, <parameter><decl><type><name>br_chacha20_run</name></type> <name>ichacha</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>encrypt</name></decl></parameter>)</parameter_list>;</function_decl>
















<function_decl><type><name>void</name></type> <name>br_poly1305_ctmul32_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>aad</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>aad_len</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>tag</name></decl></parameter>, <parameter><decl><type><name>br_chacha20_run</name></type> <name>ichacha</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>encrypt</name></decl></parameter>)</parameter_list>;</function_decl>






















<function_decl><type><name>void</name></type> <name>br_poly1305_i15_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>aad</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>aad_len</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>tag</name></decl></parameter>, <parameter><decl><type><name>br_chacha20_run</name></type> <name>ichacha</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>encrypt</name></decl></parameter>)</parameter_list>;</function_decl>





















<function_decl><type><name>void</name></type> <name>br_poly1305_ctmulq_run</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>iv</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>aad</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>aad_len</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>tag</name></decl></parameter>, <parameter><decl><type><name>br_chacha20_run</name></type> <name>ichacha</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>encrypt</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>br_poly1305_run</name></type> <name>br_poly1305_ctmulq_get</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
