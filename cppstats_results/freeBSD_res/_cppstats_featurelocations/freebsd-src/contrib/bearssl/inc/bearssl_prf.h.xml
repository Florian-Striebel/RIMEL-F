<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/bearssl/inc/bearssl_prf.h">























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>BR_BEARSSL_PRF_H__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BR_BEARSSL_PRF_H__</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>































<typedef>typedef <type><struct>struct <block>{



<decl_stmt><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>




<decl_stmt><decl><type><name>size_t</name></type> <name>len</name></decl>;</decl_stmt>
}</block></struct></type> <name>br_tls_prf_seed_chunk</name>;</typedef>















<function_decl><type><name>void</name></type> <name>br_tls10_prf</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>secret</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>secret_len</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>label</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>seed_num</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>br_tls_prf_seed_chunk</name> <modifier>*</modifier></type><name>seed</name></decl></parameter>)</parameter_list>;</function_decl>















<function_decl><type><name>void</name></type> <name>br_tls12_sha256_prf</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>secret</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>secret_len</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>label</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>seed_num</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>br_tls_prf_seed_chunk</name> <modifier>*</modifier></type><name>seed</name></decl></parameter>)</parameter_list>;</function_decl>















<function_decl><type><name>void</name></type> <name>br_tls12_sha384_prf</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>secret</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>secret_len</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>label</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>seed_num</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>br_tls_prf_seed_chunk</name> <modifier>*</modifier></type><name>seed</name></decl></parameter>)</parameter_list>;</function_decl>












<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>br_tls_prf_impl</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>secret</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>secret_len</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>label</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>seed_num</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>br_tls_prf_seed_chunk</name> <modifier>*</modifier></type><name>seed</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
