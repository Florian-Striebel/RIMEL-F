<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/bearssl/src/rsa/rsa_i31_pss_vrfy.c">























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"inner.h"</cpp:file></cpp:include>


<function><type><name>uint32_t</name></type>
<name>br_rsa_i31_pss_vrfy</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>xlen</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>br_hash_class</name> <modifier>*</modifier></type><name>hf_data</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>br_hash_class</name> <modifier>*</modifier></type><name>hf_mgf1</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>hash</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>salt_len</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>br_rsa_public_key</name> <modifier>*</modifier></type><name>pk</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name>unsigned</name> <name>char</name> <name><name>sig</name><index>[<expr><name>BR_MAX_RSA_SIZE</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>xlen</name> <operator>&gt;</operator> <operator>(</operator><sizeof>sizeof <name>sig</name></sizeof><operator>)</operator></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>sig</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>xlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>br_rsa_i31_public</name><argument_list>(<argument><expr><name>sig</name></expr></argument>, <argument><expr><name>xlen</name></expr></argument>, <argument><expr><name>pk</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><call><name>br_rsa_pss_sig_unpad</name><argument_list>(<argument><expr><name>hf_data</name></expr></argument>, <argument><expr><name>hf_mgf1</name></expr></argument>,
<argument><expr><name>hash</name></expr></argument>, <argument><expr><name>salt_len</name></expr></argument>, <argument><expr><name>pk</name></expr></argument>, <argument><expr><name>sig</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
</unit>
