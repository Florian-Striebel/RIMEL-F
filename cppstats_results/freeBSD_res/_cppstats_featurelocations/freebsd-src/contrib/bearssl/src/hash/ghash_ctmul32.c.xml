<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/bearssl/src/hash/ghash_ctmul32.c">























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"inner.h"</cpp:file></cpp:include>






















<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>uint32_t</name></type>
<name>bmul32</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>x0</name></decl>, <decl><type ref="prev"/><name>x1</name></decl>, <decl><type ref="prev"/><name>x2</name></decl>, <decl><type ref="prev"/><name>x3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>y0</name></decl>, <decl><type ref="prev"/><name>y1</name></decl>, <decl><type ref="prev"/><name>y2</name></decl>, <decl><type ref="prev"/><name>y3</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>z0</name></decl>, <decl><type ref="prev"/><name>z1</name></decl>, <decl><type ref="prev"/><name>z2</name></decl>, <decl><type ref="prev"/><name>z3</name></decl>;</decl_stmt>

<expr_stmt><expr><name>x0</name> <operator>=</operator> <name>x</name> <operator>&amp;</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator><literal type="number">0x11111111</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>x1</name> <operator>=</operator> <name>x</name> <operator>&amp;</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator><literal type="number">0x22222222</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>x2</name> <operator>=</operator> <name>x</name> <operator>&amp;</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator><literal type="number">0x44444444</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>x3</name> <operator>=</operator> <name>x</name> <operator>&amp;</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator><literal type="number">0x88888888</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>y0</name> <operator>=</operator> <name>y</name> <operator>&amp;</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator><literal type="number">0x11111111</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>y1</name> <operator>=</operator> <name>y</name> <operator>&amp;</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator><literal type="number">0x22222222</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>y2</name> <operator>=</operator> <name>y</name> <operator>&amp;</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator><literal type="number">0x44444444</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>y3</name> <operator>=</operator> <name>y</name> <operator>&amp;</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator><literal type="number">0x88888888</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>z0</name> <operator>=</operator> <operator>(</operator><name>x0</name> <operator>*</operator> <name>y0</name><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x1</name> <operator>*</operator> <name>y3</name><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x2</name> <operator>*</operator> <name>y2</name><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x3</name> <operator>*</operator> <name>y1</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>z1</name> <operator>=</operator> <operator>(</operator><name>x0</name> <operator>*</operator> <name>y1</name><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x1</name> <operator>*</operator> <name>y0</name><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x2</name> <operator>*</operator> <name>y3</name><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x3</name> <operator>*</operator> <name>y2</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>z2</name> <operator>=</operator> <operator>(</operator><name>x0</name> <operator>*</operator> <name>y2</name><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x1</name> <operator>*</operator> <name>y1</name><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x2</name> <operator>*</operator> <name>y0</name><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x3</name> <operator>*</operator> <name>y3</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>z3</name> <operator>=</operator> <operator>(</operator><name>x0</name> <operator>*</operator> <name>y3</name><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x1</name> <operator>*</operator> <name>y2</name><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x2</name> <operator>*</operator> <name>y1</name><operator>)</operator> <operator>^</operator> <operator>(</operator><name>x3</name> <operator>*</operator> <name>y0</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>z0</name> <operator>&amp;=</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator><literal type="number">0x11111111</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>z1</name> <operator>&amp;=</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator><literal type="number">0x22222222</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>z2</name> <operator>&amp;=</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator><literal type="number">0x44444444</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>z3</name> <operator>&amp;=</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator><literal type="number">0x88888888</literal></expr>;</expr_stmt>
<return>return <expr><name>z0</name> <operator>|</operator> <name>z1</name> <operator>|</operator> <name>z2</name> <operator>|</operator> <name>z3</name></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>uint32_t</name></type>
<name>rev32</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>x</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RMS</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { x = ((x &amp; (uint32_t)(m)) &lt;&lt; (s)) | ((x &gt;&gt; (s)) &amp; (uint32_t)(m)); } while (0)</cpp:value></cpp:define>




<expr_stmt><expr><call><name>RMS</name><argument_list>(<argument><expr><literal type="number">0x55555555</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RMS</name><argument_list>(<argument><expr><literal type="number">0x33333333</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RMS</name><argument_list>(<argument><expr><literal type="number">0x0F0F0F0F</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>RMS</name><argument_list>(<argument><expr><literal type="number">0x00FF00FF</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>(</operator><name>x</name> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name>x</name> <operator>&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>;</return>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>RMS</name></cpp:undef>
</block_content>}</block></function>


<function><type><name>void</name></type>
<name>br_ghash_ctmul32</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>y</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>h</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>
<block>{<block_content>







<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>buf</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>hb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>yb</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>yw</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>hw</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>hwr</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>

<expr_stmt><expr><name>buf</name> <operator>=</operator> <name>data</name></expr>;</expr_stmt>
<expr_stmt><expr><name>yb</name> <operator>=</operator> <name>y</name></expr>;</expr_stmt>
<expr_stmt><expr><name>hb</name> <operator>=</operator> <name>h</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>yw</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <call><name>br_dec32be</name><argument_list>(<argument><expr><name>yb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>yw</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <call><name>br_dec32be</name><argument_list>(<argument><expr><name>yb</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>yw</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <call><name>br_dec32be</name><argument_list>(<argument><expr><name>yb</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>yw</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>br_dec32be</name><argument_list>(<argument><expr><name>yb</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>hw</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <call><name>br_dec32be</name><argument_list>(<argument><expr><name>hb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>hw</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <call><name>br_dec32be</name><argument_list>(<argument><expr><name>hb</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>hw</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <call><name>br_dec32be</name><argument_list>(<argument><expr><name>hb</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>hw</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>br_dec32be</name><argument_list>(<argument><expr><name>hb</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>hwr</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <call><name>rev32</name><argument_list>(<argument><expr><name><name>hw</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>hwr</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <call><name>rev32</name><argument_list>(<argument><expr><name><name>hw</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>hwr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <call><name>rev32</name><argument_list>(<argument><expr><name><name>hw</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>hwr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <call><name>rev32</name><argument_list>(<argument><expr><name><name>hw</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<while>while <condition>(<expr><name>len</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>src</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>tmp</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>a</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>b</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></decl>, <decl><type ref="prev"/><name><name>c</name><index>[<expr><literal type="number">18</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>d0</name></decl>, <decl><type ref="prev"/><name>d1</name></decl>, <decl><type ref="prev"/><name>d2</name></decl>, <decl><type ref="prev"/><name>d3</name></decl>, <decl><type ref="prev"/><name>d4</name></decl>, <decl><type ref="prev"/><name>d5</name></decl>, <decl><type ref="prev"/><name>d6</name></decl>, <decl><type ref="prev"/><name>d7</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name><name>zw</name><index>[<expr><literal type="number">8</literal></expr>]</index></name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>len</name> <operator>&gt;=</operator> <literal type="number">16</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>src</name> <operator>=</operator> <name>buf</name></expr>;</expr_stmt>
<expr_stmt><expr><name>buf</name> <operator>+=</operator> <literal type="number">16</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>len</name> <operator>-=</operator> <literal type="number">16</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>tmp</name> <operator>+</operator> <name>len</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><operator>(</operator><sizeof>sizeof <name>tmp</name></sizeof><operator>)</operator> <operator>-</operator> <name>len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>src</name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>
<expr_stmt><expr><name>len</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><name><name>yw</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>^=</operator> <call><name>br_dec32be</name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>yw</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>^=</operator> <call><name>br_dec32be</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>yw</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>^=</operator> <call><name>br_dec32be</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>yw</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^=</operator> <call><name>br_dec32be</name><argument_list>(<argument><expr><name>src</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>














<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>yw</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>yw</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>yw</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>yw</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name><name>a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^</operator> <name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <name><name>a</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>^</operator> <name><name>a</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <name><name>a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^</operator> <name><name>a</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <name><name>a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>^</operator> <name><name>a</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>=</operator> <name><name>a</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>^</operator> <name><name>a</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name> <operator>=</operator> <call><name>rev32</name><argument_list>(<argument><expr><name><name>yw</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>=</operator> <call><name>rev32</name><argument_list>(<argument><expr><name><name>yw</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>=</operator> <call><name>rev32</name><argument_list>(<argument><expr><name><name>yw</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <operator>=</operator> <call><name>rev32</name><argument_list>(<argument><expr><name><name>yw</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <operator>=</operator> <name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name> <operator>^</operator> <name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>=</operator> <name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>^</operator> <name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>=</operator> <name><name>a</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name> <operator>^</operator> <name><name>a</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <operator>=</operator> <name><name>a</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>^</operator> <name><name>a</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>a</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <operator>=</operator> <name><name>a</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>^</operator> <name><name>a</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>hw</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <name><name>hw</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <name><name>hw</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <name><name>hw</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <name><name>b</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^</operator> <name><name>b</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <name><name>b</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>^</operator> <name><name>b</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <name><name>b</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^</operator> <name><name>b</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <name><name>b</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>^</operator> <name><name>b</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>=</operator> <name><name>b</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>^</operator> <name><name>b</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name> <operator>=</operator> <name><name>hwr</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>=</operator> <name><name>hwr</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>=</operator> <name><name>hwr</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <operator>=</operator> <name><name>hwr</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <operator>=</operator> <name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name> <operator>^</operator> <name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>=</operator> <name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>^</operator> <name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>=</operator> <name><name>b</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name> <operator>^</operator> <name><name>b</name><index>[<expr><literal type="number">11</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name> <operator>=</operator> <name><name>b</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>^</operator> <name><name>b</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>b</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <operator>=</operator> <name><name>b</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>^</operator> <name><name>b</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">18</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>bmul32</name><argument_list>(<argument><expr><name><name>a</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name><name>b</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>^=</operator> <name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>^=</operator> <name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">8</literal></expr>]</index></name> <operator>^=</operator> <name><name>c</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <operator>^=</operator> <name><name>c</name><index>[ <expr><literal type="number">9</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">10</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>^=</operator> <name><name>c</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">17</literal></expr>]</index></name> <operator>^=</operator> <name><name>c</name><index>[<expr><literal type="number">15</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr>;</expr_stmt>






<expr_stmt><expr><name>d0</name> <operator>=</operator> <name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>d1</name> <operator>=</operator> <name><name>c</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>^</operator> <operator>(</operator><call><name>rev32</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">9</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>d2</name> <operator>=</operator> <name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>^</operator> <operator>(</operator><call><name>rev32</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">13</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>d3</name> <operator>=</operator> <name><name>c</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">8</literal></expr>]</index></name>
<operator>^</operator> <operator>(</operator><call><name>rev32</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">9</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">15</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>d4</name> <operator>=</operator> <name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">7</literal></expr>]</index></name>
<operator>^</operator> <operator>(</operator><call><name>rev32</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">13</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">14</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">17</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>d5</name> <operator>=</operator> <name><name>c</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>^</operator> <operator>(</operator><call><name>rev32</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">11</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">10</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <operator>^</operator> <name><name>c</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>d6</name> <operator>=</operator> <name><name>c</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>^</operator> <operator>(</operator><call><name>rev32</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">14</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>d7</name> <operator>=</operator> <call><name>rev32</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">12</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>&gt;&gt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>zw</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>d0</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>zw</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>d1</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name>d0</name> <operator>&gt;&gt;</operator> <literal type="number">31</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>zw</name><index>[<expr><literal type="number">2</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>d2</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name>d1</name> <operator>&gt;&gt;</operator> <literal type="number">31</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>zw</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>d3</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name>d2</name> <operator>&gt;&gt;</operator> <literal type="number">31</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>zw</name><index>[<expr><literal type="number">4</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>d4</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name>d3</name> <operator>&gt;&gt;</operator> <literal type="number">31</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>zw</name><index>[<expr><literal type="number">5</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>d5</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name>d4</name> <operator>&gt;&gt;</operator> <literal type="number">31</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>zw</name><index>[<expr><literal type="number">6</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>d6</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name>d5</name> <operator>&gt;&gt;</operator> <literal type="number">31</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>zw</name><index>[<expr><literal type="number">7</literal></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>d7</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>|</operator> <operator>(</operator><name>d6</name> <operator>&gt;&gt;</operator> <literal type="number">31</literal><operator>)</operator></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">4</literal></expr>;</condition> <incr><expr><name>i</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>lw</name></decl>;</decl_stmt>

<expr_stmt><expr><name>lw</name> <operator>=</operator> <name><name>zw</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>zw</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">4</literal></expr>]</index></name> <operator>^=</operator> <name>lw</name> <operator>^</operator> <operator>(</operator><name>lw</name> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>lw</name> <operator>&gt;&gt;</operator> <literal type="number">2</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>lw</name> <operator>&gt;&gt;</operator> <literal type="number">7</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>zw</name><index>[<expr><name>i</name> <operator>+</operator> <literal type="number">3</literal></expr>]</index></name> <operator>^=</operator> <operator>(</operator><name>lw</name> <operator>&lt;&lt;</operator> <literal type="number">31</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>lw</name> <operator>&lt;&lt;</operator> <literal type="number">30</literal><operator>)</operator> <operator>^</operator> <operator>(</operator><name>lw</name> <operator>&lt;&lt;</operator> <literal type="number">25</literal><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>yw</name></expr></argument>, <argument><expr><name>zw</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><sizeof>sizeof <name>yw</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></while>
<expr_stmt><expr><call><name>br_enc32be</name><argument_list>(<argument><expr><name>yb</name></expr></argument>, <argument><expr><name><name>yw</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>br_enc32be</name><argument_list>(<argument><expr><name>yb</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><name><name>yw</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>br_enc32be</name><argument_list>(<argument><expr><name>yb</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><name><name>yw</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>br_enc32be</name><argument_list>(<argument><expr><name>yb</name> <operator>+</operator> <literal type="number">12</literal></expr></argument>, <argument><expr><name><name>yw</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
