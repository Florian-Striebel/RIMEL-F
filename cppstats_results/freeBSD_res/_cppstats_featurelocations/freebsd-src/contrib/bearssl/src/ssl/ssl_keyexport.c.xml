<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/bearssl/src/ssl/ssl_keyexport.c">























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"inner.h"</cpp:file></cpp:include>





<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>suites_sha384</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>BR_TLS_RSA_WITH_AES_256_GCM_SHA384</name></expr>,
<expr><name>BR_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384</name></expr>,
<expr><name>BR_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384</name></expr>,
<expr><name>BR_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384</name></expr>,
<expr><name>BR_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384</name></expr>,
<expr><name>BR_TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384</name></expr>,
<expr><name>BR_TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384</name></expr>,
<expr><name>BR_TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384</name></expr>,
<expr><name>BR_TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384</name></expr>
}</block></expr></init></decl>;</decl_stmt>


<function><type><name>int</name></type>
<name>br_ssl_key_export</name><parameter_list>(<parameter><decl><type><name>br_ssl_engine_context</name> <modifier>*</modifier></type><name>cc</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>label</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>context</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>context_len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>br_tls_prf_seed_chunk</name></type> <name><name>chunks</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>br_tls_prf_impl</name></type> <name>iprf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>num_chunks</name></decl>, <decl><type ref="prev"/><name>u</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>tmp</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>prf_id</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name><name>cc</name><operator>-&gt;</operator><name>application_data</name></name> <operator>!=</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>chunks</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>data</name> <operator>=</operator> <name><name>cc</name><operator>-&gt;</operator><name>client_random</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>chunks</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>len</name> <operator>=</operator> <sizeof>sizeof <name><name>cc</name><operator>-&gt;</operator><name>client_random</name></name></sizeof></expr>;</expr_stmt>
<expr_stmt><expr><name><name>chunks</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>data</name> <operator>=</operator> <name><name>cc</name><operator>-&gt;</operator><name>server_random</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>chunks</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>len</name> <operator>=</operator> <sizeof>sizeof <name><name>cc</name><operator>-&gt;</operator><name>server_random</name></name></sizeof></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>context</name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>br_enc16be</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>, <argument><expr><operator>(</operator><name>unsigned</name><operator>)</operator><name>context_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>chunks</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>data</name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>chunks</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>len</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>chunks</name><index>[<expr><literal type="number">3</literal></expr>]</index></name><operator>.</operator><name>data</name> <operator>=</operator> <name>context</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>chunks</name><index>[<expr><literal type="number">3</literal></expr>]</index></name><operator>.</operator><name>len</name> <operator>=</operator> <name>context_len</name></expr>;</expr_stmt>
<expr_stmt><expr><name>num_chunks</name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>num_chunks</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><name>prf_id</name> <operator>=</operator> <name>BR_SSLPRF_SHA256</name></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>u</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>u</name> <operator>&lt;</operator> <operator>(</operator><sizeof>sizeof <name>suites_sha384</name></sizeof><operator>)</operator> <operator>/</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>uint16_t</name></expr></argument>)</argument_list></sizeof></expr>;</condition> <incr><expr><name>u</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>suites_sha384</name><index>[<expr><name>u</name></expr>]</index></name> <operator>==</operator> <name><name>cc</name><operator>-&gt;</operator><name>session</name><operator>.</operator><name>cipher_suite</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>prf_id</name> <operator>=</operator> <name>BR_SSLPRF_SHA384</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<expr_stmt><expr><name>iprf</name> <operator>=</operator> <call><name>br_ssl_engine_get_PRF</name><argument_list>(<argument><expr><name>cc</name></expr></argument>, <argument><expr><name>prf_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>iprf</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>len</name></expr></argument>,
<argument><expr><name><name>cc</name><operator>-&gt;</operator><name>session</name><operator>.</operator><name>master_secret</name></name></expr></argument>, <argument><expr><sizeof>sizeof <name><name>cc</name><operator>-&gt;</operator><name>session</name><operator>.</operator><name>master_secret</name></name></sizeof></expr></argument>,
<argument><expr><name>label</name></expr></argument>, <argument><expr><name>num_chunks</name></expr></argument>, <argument><expr><name>chunks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>
</unit>
