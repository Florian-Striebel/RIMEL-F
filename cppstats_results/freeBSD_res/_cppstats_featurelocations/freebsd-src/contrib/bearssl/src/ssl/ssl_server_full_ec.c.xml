<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/bearssl/src/ssl/ssl_server_full_ec.c">























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"inner.h"</cpp:file></cpp:include>


<function><type><name>void</name></type>
<name>br_ssl_server_init_full_ec</name><parameter_list>(<parameter><decl><type><name>br_ssl_server_context</name> <modifier>*</modifier></type><name>cc</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>br_x509_certificate</name> <modifier>*</modifier></type><name>chain</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>chain_len</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>cert_issuer_key_type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>br_ec_private_key</name> <modifier>*</modifier></type><name>sk</name></decl></parameter>)</parameter_list>
<block>{<block_content>

















<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>uint16_t</name></type> <name><name>suites</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>BR_TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256</name></expr>,
<expr><name>BR_TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256</name></expr>,
<expr><name>BR_TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384</name></expr>,
<expr><name>BR_TLS_ECDHE_ECDSA_WITH_AES_128_CCM</name></expr>,
<expr><name>BR_TLS_ECDHE_ECDSA_WITH_AES_256_CCM</name></expr>,
<expr><name>BR_TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8</name></expr>,
<expr><name>BR_TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8</name></expr>,
<expr><name>BR_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256</name></expr>,
<expr><name>BR_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384</name></expr>,
<expr><name>BR_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA</name></expr>,
<expr><name>BR_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA</name></expr>,
<expr><name>BR_TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256</name></expr>,
<expr><name>BR_TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256</name></expr>,
<expr><name>BR_TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384</name></expr>,
<expr><name>BR_TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384</name></expr>,
<expr><name>BR_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256</name></expr>,
<expr><name>BR_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256</name></expr>,
<expr><name>BR_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384</name></expr>,
<expr><name>BR_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384</name></expr>,
<expr><name>BR_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA</name></expr>,
<expr><name>BR_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA</name></expr>,
<expr><name>BR_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA</name></expr>,
<expr><name>BR_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA</name></expr>,
<expr><name>BR_TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA</name></expr>,
<expr><name>BR_TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA</name></expr>,
<expr><name>BR_TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA</name></expr>
}</block></expr></init></decl>;</decl_stmt>






<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>br_hash_class</name> <modifier>*</modifier></type><name><name>hashes</name><index>[]</index></name> <init>= <expr><block>{
<expr><operator>&amp;</operator><name>br_md5_vtable</name></expr>,
<expr><operator>&amp;</operator><name>br_sha1_vtable</name></expr>,
<expr><operator>&amp;</operator><name>br_sha224_vtable</name></expr>,
<expr><operator>&amp;</operator><name>br_sha256_vtable</name></expr>,
<expr><operator>&amp;</operator><name>br_sha384_vtable</name></expr>,
<expr><operator>&amp;</operator><name>br_sha512_vtable</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>id</name></decl>;</decl_stmt>





<expr_stmt><expr><call><name>br_ssl_server_zero</name><argument_list>(<argument><expr><name>cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>br_ssl_engine_set_versions</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cc</name><operator>-&gt;</operator><name>eng</name></name></expr></argument>, <argument><expr><name>BR_TLS10</name></expr></argument>, <argument><expr><name>BR_TLS12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




<expr_stmt><expr><call><name>br_ssl_engine_set_suites</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cc</name><operator>-&gt;</operator><name>eng</name></name></expr></argument>, <argument><expr><name>suites</name></expr></argument>,
<argument><expr><operator>(</operator><sizeof>sizeof <name>suites</name></sizeof><operator>)</operator> <operator>/</operator> <operator>(</operator><sizeof>sizeof <name><name>suites</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></sizeof><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>br_ssl_engine_set_default_ec</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cc</name><operator>-&gt;</operator><name>eng</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





<macro><name>br_ssl_server_set_single_ec</name><argument_list>(<argument>cc</argument>, <argument>chain</argument>, <argument>chain_len</argument>, <argument>sk</argument>,
<argument>BR_KEYTYPE_KEYX | BR_KEYTYPE_SIGN</argument>,
<argument>cert_issuer_key_type</argument>,
<argument>br_ssl_engine_get_ec(&amp;cc-&gt;eng)</argument>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>BR_LOMUL</name></expr></cpp:if>
<argument>br_ecdsa_i15_sign_asn1
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
br_ecdsa_i31_sign_asn1</argument>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
)</argument_list></macro><empty_stmt>;</empty_stmt>




<for>for <control>(<init><expr><name>id</name> <operator>=</operator> <name>br_md5_ID</name></expr>;</init> <condition><expr><name>id</name> <operator>&lt;=</operator> <name>br_sha512_ID</name></expr>;</condition> <incr><expr><name>id</name> <operator>++</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>br_hash_class</name> <modifier>*</modifier></type><name>hc</name></decl>;</decl_stmt>

<expr_stmt><expr><name>hc</name> <operator>=</operator> <name><name>hashes</name><index>[<expr><name>id</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>br_ssl_engine_set_hash</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cc</name><operator>-&gt;</operator><name>eng</name></name></expr></argument>, <argument><expr><name>id</name></expr></argument>, <argument><expr><name>hc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>




<expr_stmt><expr><call><name>br_ssl_engine_set_prf10</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cc</name><operator>-&gt;</operator><name>eng</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>br_tls10_prf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>br_ssl_engine_set_prf_sha256</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cc</name><operator>-&gt;</operator><name>eng</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>br_tls12_sha256_prf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>br_ssl_engine_set_prf_sha384</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cc</name><operator>-&gt;</operator><name>eng</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>br_tls12_sha384_prf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




<expr_stmt><expr><call><name>br_ssl_engine_set_default_aes_cbc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cc</name><operator>-&gt;</operator><name>eng</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>br_ssl_engine_set_default_aes_ccm</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cc</name><operator>-&gt;</operator><name>eng</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>br_ssl_engine_set_default_aes_gcm</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cc</name><operator>-&gt;</operator><name>eng</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>br_ssl_engine_set_default_des_cbc</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cc</name><operator>-&gt;</operator><name>eng</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>br_ssl_engine_set_default_chapol</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>cc</name><operator>-&gt;</operator><name>eng</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
