<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/bearssl/src/int/i32_div32.c">























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"inner.h"</cpp:file></cpp:include>


<function><type><name>uint32_t</name></type>
<name>br_divrem</name><parameter_list>(<parameter><decl><type><name>uint32_t</name></type> <name>hi</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>lo</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>d</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>q</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>ch</name></decl>, <decl><type ref="prev"/><name>cf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>k</name></decl>;</decl_stmt>

<expr_stmt><expr><name>q</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>ch</name> <operator>=</operator> <call><name>EQ</name><argument_list>(<argument><expr><name>hi</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>hi</name> <operator>=</operator> <call><name>MUX</name><argument_list>(<argument><expr><name>ch</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>hi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>k</name> <operator>=</operator> <literal type="number">31</literal></expr>;</init> <condition><expr><name>k</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>k</name> <operator>--</operator></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>j</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>w</name></decl>, <decl><type ref="prev"/><name>ctl</name></decl>, <decl><type ref="prev"/><name>hi2</name></decl>, <decl><type ref="prev"/><name>lo2</name></decl>;</decl_stmt>

<expr_stmt><expr><name>j</name> <operator>=</operator> <literal type="number">32</literal> <operator>-</operator> <name>k</name></expr>;</expr_stmt>
<expr_stmt><expr><name>w</name> <operator>=</operator> <operator>(</operator><name>hi</name> <operator>&lt;&lt;</operator> <name>j</name><operator>)</operator> <operator>|</operator> <operator>(</operator><name>lo</name> <operator>&gt;&gt;</operator> <name>k</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>ctl</name> <operator>=</operator> <call><name>GE</name><argument_list>(<argument><expr><name>w</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call> <operator>|</operator> <operator>(</operator><name>hi</name> <operator>&gt;&gt;</operator> <name>k</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>hi2</name> <operator>=</operator> <operator>(</operator><name>w</name> <operator>-</operator> <name>d</name><operator>)</operator> <operator>&gt;&gt;</operator> <name>j</name></expr>;</expr_stmt>
<expr_stmt><expr><name>lo2</name> <operator>=</operator> <name>lo</name> <operator>-</operator> <operator>(</operator><name>d</name> <operator>&lt;&lt;</operator> <name>k</name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>hi</name> <operator>=</operator> <call><name>MUX</name><argument_list>(<argument><expr><name>ctl</name></expr></argument>, <argument><expr><name>hi2</name></expr></argument>, <argument><expr><name>hi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>lo</name> <operator>=</operator> <call><name>MUX</name><argument_list>(<argument><expr><name>ctl</name></expr></argument>, <argument><expr><name>lo2</name></expr></argument>, <argument><expr><name>lo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>q</name> <operator>|=</operator> <name>ctl</name> <operator>&lt;&lt;</operator> <name>k</name></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><name>cf</name> <operator>=</operator> <call><name>GE</name><argument_list>(<argument><expr><name>lo</name></expr></argument>, <argument><expr><name>d</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>hi</name></expr>;</expr_stmt>
<expr_stmt><expr><name>q</name> <operator>|=</operator> <name>cf</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>r</name> <operator>=</operator> <call><name>MUX</name><argument_list>(<argument><expr><name>cf</name></expr></argument>, <argument><expr><name>lo</name> <operator>-</operator> <name>d</name></expr></argument>, <argument><expr><name>lo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>q</name></expr>;</return>
</block_content>}</block></function>
</unit>
