<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/bearssl/src/ec/ecdsa_i15_sign_asn1.c">























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"inner.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ORDER_LEN</name></cpp:macro> <cpp:value>((BR_MAX_EC_SIZE + 7) &gt;&gt; 3)</cpp:value></cpp:define>


<function><type><name>size_t</name></type>
<name>br_ecdsa_i15_sign_asn1</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>br_ec_impl</name> <modifier>*</modifier></type><name>impl</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>br_hash_class</name> <modifier>*</modifier></type><name>hf</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>hash_value</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>br_ec_private_key</name> <modifier>*</modifier></type><name>sk</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>sig</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>rsig</name><index>[<expr><operator>(</operator><name>ORDER_LEN</name> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>+</operator> <literal type="number">12</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>sig_len</name></decl>;</decl_stmt>

<expr_stmt><expr><name>sig_len</name> <operator>=</operator> <call><name>br_ecdsa_i15_sign_raw</name><argument_list>(<argument><expr><name>impl</name></expr></argument>, <argument><expr><name>hf</name></expr></argument>, <argument><expr><name>hash_value</name></expr></argument>, <argument><expr><name>sk</name></expr></argument>, <argument><expr><name>rsig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>sig_len</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>sig_len</name> <operator>=</operator> <call><name>br_ecdsa_raw_to_asn1</name><argument_list>(<argument><expr><name>rsig</name></expr></argument>, <argument><expr><name>sig_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>sig</name></expr></argument>, <argument><expr><name>rsig</name></expr></argument>, <argument><expr><name>sig_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>sig_len</name></expr>;</return>
</block_content>}</block></function>
</unit>
