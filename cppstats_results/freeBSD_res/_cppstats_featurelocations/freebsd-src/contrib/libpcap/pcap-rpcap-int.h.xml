<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/libpcap/pcap-rpcap-int.h">
































<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__PCAP_RPCAP_INT_H__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__PCAP_RPCAP_INT_H__</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pcap.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sockutils.h"</cpp:file></cpp:include>


























<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RPCAP_NETBUF_SIZE</name></cpp:macro> <cpp:value>64000</cpp:value></cpp:define>






<function_decl><type><name>void</name></type> <name>rpcap_createhdr</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>rpcap_header</name></name> <modifier>*</modifier></type><name>header</name></decl></parameter>, <parameter><decl><type><name>uint8</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>uint16</name></type> <name>value</name></decl></parameter>, <parameter><decl><type><name>uint32</name></type> <name>length</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>rpcap_senderror</name><parameter_list>(<parameter><decl><type><name>SOCKET</name></type> <name>sock</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>error</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>short</name></type> <name>errcode</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>errbuf</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
