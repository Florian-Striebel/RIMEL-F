<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/lib9p/fcall.h">






























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LIB9P_FCALL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LIB9P_FCALL_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>L9P_MAX_WELEM</name></cpp:macro> <cpp:value>256</cpp:value></cpp:define>










<enum>enum <name>l9p_ftype</name> <block>{
<decl><name>L9P__FIRST</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,
<decl><name>L9P_TLERROR</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,
<decl><name>L9P_RLERROR</name></decl>,
<decl><name>L9P_TSTATFS</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,
<decl><name>L9P_RSTATFS</name></decl>,
<decl><name>L9P_TLOPEN</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>,
<decl><name>L9P_RLOPEN</name></decl>,
<decl><name>L9P_TLCREATE</name> <init>= <expr><literal type="number">14</literal></expr></init></decl>,
<decl><name>L9P_RLCREATE</name></decl>,
<decl><name>L9P_TSYMLINK</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>,
<decl><name>L9P_RSYMLINK</name></decl>,
<decl><name>L9P_TMKNOD</name> <init>= <expr><literal type="number">18</literal></expr></init></decl>,
<decl><name>L9P_RMKNOD</name></decl>,
<decl><name>L9P_TRENAME</name> <init>= <expr><literal type="number">20</literal></expr></init></decl>,
<decl><name>L9P_RRENAME</name></decl>,
<decl><name>L9P_TREADLINK</name> <init>= <expr><literal type="number">22</literal></expr></init></decl>,
<decl><name>L9P_RREADLINK</name></decl>,
<decl><name>L9P_TGETATTR</name> <init>= <expr><literal type="number">24</literal></expr></init></decl>,
<decl><name>L9P_RGETATTR</name></decl>,
<decl><name>L9P_TSETATTR</name> <init>= <expr><literal type="number">26</literal></expr></init></decl>,
<decl><name>L9P_RSETATTR</name></decl>,
<decl><name>L9P_TXATTRWALK</name> <init>= <expr><literal type="number">30</literal></expr></init></decl>,
<decl><name>L9P_RXATTRWALK</name></decl>,
<decl><name>L9P_TXATTRCREATE</name> <init>= <expr><literal type="number">32</literal></expr></init></decl>,
<decl><name>L9P_RXATTRCREATE</name></decl>,
<decl><name>L9P_TREADDIR</name> <init>= <expr><literal type="number">40</literal></expr></init></decl>,
<decl><name>L9P_RREADDIR</name></decl>,
<decl><name>L9P_TFSYNC</name> <init>= <expr><literal type="number">50</literal></expr></init></decl>,
<decl><name>L9P_RFSYNC</name></decl>,
<decl><name>L9P_TLOCK</name> <init>= <expr><literal type="number">52</literal></expr></init></decl>,
<decl><name>L9P_RLOCK</name></decl>,
<decl><name>L9P_TGETLOCK</name> <init>= <expr><literal type="number">54</literal></expr></init></decl>,
<decl><name>L9P_RGETLOCK</name></decl>,
<decl><name>L9P_TLINK</name> <init>= <expr><literal type="number">70</literal></expr></init></decl>,
<decl><name>L9P_RLINK</name></decl>,
<decl><name>L9P_TMKDIR</name> <init>= <expr><literal type="number">72</literal></expr></init></decl>,
<decl><name>L9P_RMKDIR</name></decl>,
<decl><name>L9P_TRENAMEAT</name> <init>= <expr><literal type="number">74</literal></expr></init></decl>,
<decl><name>L9P_RRENAMEAT</name></decl>,
<decl><name>L9P_TUNLINKAT</name> <init>= <expr><literal type="number">76</literal></expr></init></decl>,
<decl><name>L9P_RUNLINKAT</name></decl>,
<decl><name>L9P_TVERSION</name> <init>= <expr><literal type="number">100</literal></expr></init></decl>,
<decl><name>L9P_RVERSION</name></decl>,
<decl><name>L9P_TAUTH</name> <init>= <expr><literal type="number">102</literal></expr></init></decl>,
<decl><name>L9P_RAUTH</name></decl>,
<decl><name>L9P_TATTACH</name> <init>= <expr><literal type="number">104</literal></expr></init></decl>,
<decl><name>L9P_RATTACH</name></decl>,
<decl><name>L9P_TERROR</name> <init>= <expr><literal type="number">106</literal></expr></init></decl>,
<decl><name>L9P_RERROR</name></decl>,
<decl><name>L9P_TFLUSH</name> <init>= <expr><literal type="number">108</literal></expr></init></decl>,
<decl><name>L9P_RFLUSH</name></decl>,
<decl><name>L9P_TWALK</name> <init>= <expr><literal type="number">110</literal></expr></init></decl>,
<decl><name>L9P_RWALK</name></decl>,
<decl><name>L9P_TOPEN</name> <init>= <expr><literal type="number">112</literal></expr></init></decl>,
<decl><name>L9P_ROPEN</name></decl>,
<decl><name>L9P_TCREATE</name> <init>= <expr><literal type="number">114</literal></expr></init></decl>,
<decl><name>L9P_RCREATE</name></decl>,
<decl><name>L9P_TREAD</name> <init>= <expr><literal type="number">116</literal></expr></init></decl>,
<decl><name>L9P_RREAD</name></decl>,
<decl><name>L9P_TWRITE</name> <init>= <expr><literal type="number">118</literal></expr></init></decl>,
<decl><name>L9P_RWRITE</name></decl>,
<decl><name>L9P_TCLUNK</name> <init>= <expr><literal type="number">120</literal></expr></init></decl>,
<decl><name>L9P_RCLUNK</name></decl>,
<decl><name>L9P_TREMOVE</name> <init>= <expr><literal type="number">122</literal></expr></init></decl>,
<decl><name>L9P_RREMOVE</name></decl>,
<decl><name>L9P_TSTAT</name> <init>= <expr><literal type="number">124</literal></expr></init></decl>,
<decl><name>L9P_RSTAT</name></decl>,
<decl><name>L9P_TWSTAT</name> <init>= <expr><literal type="number">126</literal></expr></init></decl>,
<decl><name>L9P_RWSTAT</name></decl>,
<decl><name>L9P__LAST_PLUS_1</name></decl>,
}</block>;</enum>











































<enum>enum <name>l9p_qid_type</name> <block>{
<decl><name>L9P_QTDIR</name> <init>= <expr><literal type="number">0x80</literal></expr></init></decl>,
<decl><name>L9P_QTAPPEND</name> <init>= <expr><literal type="number">0x40</literal></expr></init></decl>,
<decl><name>L9P_QTEXCL</name> <init>= <expr><literal type="number">0x20</literal></expr></init></decl>,
<decl><name>L9P_QTMOUNT</name> <init>= <expr><literal type="number">0x10</literal></expr></init></decl>,
<decl><name>L9P_QTAUTH</name> <init>= <expr><literal type="number">0x08</literal></expr></init></decl>,
<decl><name>L9P_QTTMP</name> <init>= <expr><literal type="number">0x04</literal></expr></init></decl>,
<decl><name>L9P_QTSYMLINK</name> <init>= <expr><literal type="number">0x02</literal></expr></init></decl>,
<decl><name>L9P_QTFILE</name> <init>= <expr><literal type="number">0x00</literal></expr></init></decl>
}</block>;</enum>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>L9P_DMDIR</name></cpp:macro> <cpp:value>0x80000000</cpp:value></cpp:define>
<enum>enum <block>{
<decl><name>L9P_DMAPPEND</name> <init>= <expr><literal type="number">0x40000000</literal></expr></init></decl>,
<decl><name>L9P_DMEXCL</name> <init>= <expr><literal type="number">0x20000000</literal></expr></init></decl>,
<decl><name>L9P_DMMOUNT</name> <init>= <expr><literal type="number">0x10000000</literal></expr></init></decl>,
<decl><name>L9P_DMAUTH</name> <init>= <expr><literal type="number">0x08000000</literal></expr></init></decl>,
<decl><name>L9P_DMTMP</name> <init>= <expr><literal type="number">0x04000000</literal></expr></init></decl>,
<decl><name>L9P_DMSYMLINK</name> <init>= <expr><literal type="number">0x02000000</literal></expr></init></decl>,

<decl><name>L9P_DMDEVICE</name> <init>= <expr><literal type="number">0x00800000</literal></expr></init></decl>,
<decl><name>L9P_DMNAMEDPIPE</name> <init>= <expr><literal type="number">0x00200000</literal></expr></init></decl>,
<decl><name>L9P_DMSOCKET</name> <init>= <expr><literal type="number">0x00100000</literal></expr></init></decl>,
<decl><name>L9P_DMSETUID</name> <init>= <expr><literal type="number">0x00080000</literal></expr></init></decl>,
<decl><name>L9P_DMSETGID</name> <init>= <expr><literal type="number">0x00040000</literal></expr></init></decl>,
}</block>;</enum>






<enum>enum <name>l9p_omode</name> <block>{
<decl><name>L9P_OREAD</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>L9P_OWRITE</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>L9P_ORDWR</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>L9P_OEXEC</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
<decl><name>L9P_OACCMODE</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
<decl><name>L9P_OTRUNC</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>,
<decl><name>L9P_OCEXEC</name> <init>= <expr><literal type="number">32</literal></expr></init></decl>,
<decl><name>L9P_ORCLOSE</name> <init>= <expr><literal type="number">64</literal></expr></init></decl>,
<decl><name>L9P_ODIRECT</name> <init>= <expr><literal type="number">128</literal></expr></init></decl>,
}</block>;</enum>


















<enum>enum <name>l9p_l_o_flags</name> <block>{
<decl><name>L9P_L_O_CREAT</name> <init>= <expr><literal type="number">000000100U</literal></expr></init></decl>,
<decl><name>L9P_L_O_EXCL</name> <init>= <expr><literal type="number">000000200U</literal></expr></init></decl>,
<decl><name>L9P_L_O_NOCTTY</name> <init>= <expr><literal type="number">000000400U</literal></expr></init></decl>,
<decl><name>L9P_L_O_TRUNC</name> <init>= <expr><literal type="number">000001000U</literal></expr></init></decl>,
<decl><name>L9P_L_O_APPEND</name> <init>= <expr><literal type="number">000002000U</literal></expr></init></decl>,
<decl><name>L9P_L_O_NONBLOCK</name> <init>= <expr><literal type="number">000004000U</literal></expr></init></decl>,
<decl><name>L9P_L_O_DSYNC</name> <init>= <expr><literal type="number">000010000U</literal></expr></init></decl>,
<decl><name>L9P_L_O_FASYNC</name> <init>= <expr><literal type="number">000020000U</literal></expr></init></decl>,
<decl><name>L9P_L_O_DIRECT</name> <init>= <expr><literal type="number">000040000U</literal></expr></init></decl>,
<decl><name>L9P_L_O_LARGEFILE</name> <init>= <expr><literal type="number">000100000U</literal></expr></init></decl>,
<decl><name>L9P_L_O_DIRECTORY</name> <init>= <expr><literal type="number">000200000U</literal></expr></init></decl>,
<decl><name>L9P_L_O_NOFOLLOW</name> <init>= <expr><literal type="number">000400000U</literal></expr></init></decl>,
<decl><name>L9P_L_O_NOATIME</name> <init>= <expr><literal type="number">001000000U</literal></expr></init></decl>,
<decl><name>L9P_L_O_CLOEXEC</name> <init>= <expr><literal type="number">002000000U</literal></expr></init></decl>,
<decl><name>L9P_L_O_SYNC</name> <init>= <expr><literal type="number">004000000U</literal></expr></init></decl>,
<decl><name>L9P_L_O_PATH</name> <init>= <expr><literal type="number">010000000U</literal></expr></init></decl>,
<decl><name>L9P_L_O_TMPFILE</name> <init>= <expr><literal type="number">020000000U</literal></expr></init></decl>,
}</block>;</enum>

<struct>struct <name>l9p_hdr</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>tag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>fid</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_qid</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>path</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_stat</name> <block>{
<decl_stmt><decl><type><name>uint16_t</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>dev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_qid</name></name></type> <name>qid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>mode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>atime</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>mtime</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>uid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>gid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>muid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>extension</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>n_uid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>n_gid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>n_muid</name></decl>;</decl_stmt>
}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>L9P_FSTYPE</name></cpp:macro> <cpp:value>0x01021997</cpp:value></cpp:define>

<struct>struct <name>l9p_statfs</name> <block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>bsize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>blocks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>bfree</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>bavail</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>files</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>ffree</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>fsid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>namelen</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_version</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>msize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>version</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_tflush</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>oldtag</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_error</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>ename</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>errnum</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_ropen</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_qid</name></name></type> <name>qid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>iounit</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_rauth</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_qid</name></name></type> <name>aqid</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_attach</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>afid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>uname</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>aname</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>n_uname</name></decl>;</decl_stmt>
}</block>;</struct>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>L9P_NOFID</name></cpp:macro> <cpp:value>((uint32_t)-1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>L9P_NONUNAME</name></cpp:macro> <cpp:value>((uint32_t)-1)</cpp:value></cpp:define>

<struct>struct <name>l9p_f_tcreate</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>perm</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>mode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>extension</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_twalk</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>newfid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>nwname</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name><name>wname</name><index>[<expr><name>L9P_MAX_WELEM</name></expr>]</index></name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_rwalk</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>nwqid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_qid</name></name></type> <name><name>wqid</name><index>[<expr><name>L9P_MAX_WELEM</name></expr>]</index></name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_io</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>count</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_rstat</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_stat</name></name></type> <name>stat</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_twstat</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_stat</name></name></type> <name>stat</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_rstatfs</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_statfs</name></name></type> <name>statfs</name></decl>;</decl_stmt>
}</block>;</struct>


<struct>struct <name>l9p_f_tlcreate</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>mode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>gid</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_tsymlink</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>symtgt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>gid</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_tmknod</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>mode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>major</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>minor</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>gid</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_trename</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>dfid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_rreadlink</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>target</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_tgetattr</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>request_mask</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_rgetattr</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>valid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_qid</name></name></type> <name>qid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>mode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>uid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>gid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>nlink</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>rdev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>blksize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>blocks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>atime_sec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>atime_nsec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>mtime_sec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>mtime_nsec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>ctime_sec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>ctime_nsec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>btime_sec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>btime_nsec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>gen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>data_version</name></decl>;</decl_stmt>
}</block>;</struct>


<enum>enum <name>l9pl_getattr_flags</name> <block>{
<decl><name>L9PL_GETATTR_MODE</name> <init>= <expr><literal type="number">0x00000001</literal></expr></init></decl>,
<decl><name>L9PL_GETATTR_NLINK</name> <init>= <expr><literal type="number">0x00000002</literal></expr></init></decl>,
<decl><name>L9PL_GETATTR_UID</name> <init>= <expr><literal type="number">0x00000004</literal></expr></init></decl>,
<decl><name>L9PL_GETATTR_GID</name> <init>= <expr><literal type="number">0x00000008</literal></expr></init></decl>,
<decl><name>L9PL_GETATTR_RDEV</name> <init>= <expr><literal type="number">0x00000010</literal></expr></init></decl>,
<decl><name>L9PL_GETATTR_ATIME</name> <init>= <expr><literal type="number">0x00000020</literal></expr></init></decl>,
<decl><name>L9PL_GETATTR_MTIME</name> <init>= <expr><literal type="number">0x00000040</literal></expr></init></decl>,
<decl><name>L9PL_GETATTR_CTIME</name> <init>= <expr><literal type="number">0x00000080</literal></expr></init></decl>,
<decl><name>L9PL_GETATTR_INO</name> <init>= <expr><literal type="number">0x00000100</literal></expr></init></decl>,
<decl><name>L9PL_GETATTR_SIZE</name> <init>= <expr><literal type="number">0x00000200</literal></expr></init></decl>,
<decl><name>L9PL_GETATTR_BLOCKS</name> <init>= <expr><literal type="number">0x00000400</literal></expr></init></decl>,

<decl><name>L9PL_GETATTR_BASIC</name> <init>= <expr><name>L9PL_GETATTR_MODE</name> <operator>|</operator>
<name>L9PL_GETATTR_NLINK</name> <operator>|</operator>
<name>L9PL_GETATTR_UID</name> <operator>|</operator>
<name>L9PL_GETATTR_GID</name> <operator>|</operator>
<name>L9PL_GETATTR_RDEV</name> <operator>|</operator>
<name>L9PL_GETATTR_ATIME</name> <operator>|</operator>
<name>L9PL_GETATTR_MTIME</name> <operator>|</operator>
<name>L9PL_GETATTR_CTIME</name> <operator>|</operator>
<name>L9PL_GETATTR_INO</name> <operator>|</operator>
<name>L9PL_GETATTR_SIZE</name> <operator>|</operator>
<name>L9PL_GETATTR_BLOCKS</name></expr></init></decl>,
<decl><name>L9PL_GETATTR_BTIME</name> <init>= <expr><literal type="number">0x00000800</literal></expr></init></decl>,
<decl><name>L9PL_GETATTR_GEN</name> <init>= <expr><literal type="number">0x00001000</literal></expr></init></decl>,
<decl><name>L9PL_GETATTR_DATA_VERSION</name> <init>= <expr><literal type="number">0x00002000</literal></expr></init></decl>,

<decl><name>L9PL_GETATTR_ALL</name> <init>= <expr><name>L9PL_GETATTR_BASIC</name> <operator>|</operator>
<name>L9PL_GETATTR_BTIME</name> <operator>|</operator>
<name>L9PL_GETATTR_GEN</name> <operator>|</operator>
<name>L9PL_GETATTR_DATA_VERSION</name></expr></init></decl>,
}</block>;</enum>

<struct>struct <name>l9p_f_tsetattr</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>valid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>mode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>uid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>gid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>atime_sec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>atime_nsec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>mtime_sec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>mtime_nsec</name></decl>;</decl_stmt>
}</block>;</struct>


<enum>enum <name>l9pl_setattr_flags</name> <block>{
<decl><name>L9PL_SETATTR_MODE</name> <init>= <expr><literal type="number">0x00000001</literal></expr></init></decl>,
<decl><name>L9PL_SETATTR_UID</name> <init>= <expr><literal type="number">0x00000002</literal></expr></init></decl>,
<decl><name>L9PL_SETATTR_GID</name> <init>= <expr><literal type="number">0x00000004</literal></expr></init></decl>,
<decl><name>L9PL_SETATTR_SIZE</name> <init>= <expr><literal type="number">0x00000008</literal></expr></init></decl>,
<decl><name>L9PL_SETATTR_ATIME</name> <init>= <expr><literal type="number">0x00000010</literal></expr></init></decl>,
<decl><name>L9PL_SETATTR_MTIME</name> <init>= <expr><literal type="number">0x00000020</literal></expr></init></decl>,
<decl><name>L9PL_SETATTR_CTIME</name> <init>= <expr><literal type="number">0x00000040</literal></expr></init></decl>,
<decl><name>L9PL_SETATTR_ATIME_SET</name> <init>= <expr><literal type="number">0x00000080</literal></expr></init></decl>,
<decl><name>L9PL_SETATTR_MTIME_SET</name> <init>= <expr><literal type="number">0x00000100</literal></expr></init></decl>,
}</block>;</enum>

<struct>struct <name>l9p_f_txattrwalk</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>newfid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_rxattrwalk</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>size</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_txattrcreate</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>attr_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>flags</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_tlock</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>start</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>proc_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>client_id</name></decl>;</decl_stmt>
}</block>;</struct>

<enum>enum <name>l9pl_lock_type</name> <block>{
<decl><name>L9PL_LOCK_TYPE_RDLOCK</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>L9PL_LOCK_TYPE_WRLOCK</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>L9PL_LOCK_TYPE_UNLOCK</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
}</block>;</enum>

<enum>enum <name>l9pl_lock_flags</name> <block>{
<decl><name>L9PL_LOCK_TYPE_BLOCK</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>L9PL_LOCK_TYPE_RECLAIM</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
}</block>;</enum>

<struct>struct <name>l9p_f_rlock</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>status</name></decl>;</decl_stmt>
}</block>;</struct>

<enum>enum <name>l9pl_lock_status</name> <block>{
<decl><name>L9PL_LOCK_SUCCESS</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>L9PL_LOCK_BLOCKED</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>L9PL_LOCK_ERROR</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>L9PL_LOCK_GRACE</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
}</block>;</enum>

<struct>struct <name>l9p_f_getlock</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>start</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>proc_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>client_id</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_tlink</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>dfid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>l9p_f_trenameat</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>oldname</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>newdirfid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>newname</name></decl>;</decl_stmt>
}</block>;</struct>





<enum>enum <name>l9p_l_unlinkat_flags</name> <block>{

<decl><name>L9PL_AT_REMOVEDIR</name> <init>= <expr><literal type="number">0x0200</literal></expr></init></decl>,
}</block>;</enum>

<union>union <name>l9p_fcall</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_hdr</name></name></type> <name>hdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_version</name></name></type> <name>version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_tflush</name></name></type> <name>tflush</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_ropen</name></name></type> <name>ropen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_ropen</name></name></type> <name>rcreate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_ropen</name></name></type> <name>rattach</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_error</name></name></type> <name>error</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_rauth</name></name></type> <name>rauth</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_attach</name></name></type> <name>tattach</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_attach</name></name></type> <name>tauth</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_tcreate</name></name></type> <name>tcreate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_tcreate</name></name></type> <name>topen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_twalk</name></name></type> <name>twalk</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_rwalk</name></name></type> <name>rwalk</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_twstat</name></name></type> <name>twstat</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_rstat</name></name></type> <name>rstat</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_rstatfs</name></name></type> <name>rstatfs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_tlcreate</name></name></type> <name>tlopen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_ropen</name></name></type> <name>rlopen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_tlcreate</name></name></type> <name>tlcreate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_ropen</name></name></type> <name>rlcreate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_tsymlink</name></name></type> <name>tsymlink</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_ropen</name></name></type> <name>rsymlink</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_tmknod</name></name></type> <name>tmknod</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_ropen</name></name></type> <name>rmknod</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_trename</name></name></type> <name>trename</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_rreadlink</name></name></type> <name>rreadlink</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_tgetattr</name></name></type> <name>tgetattr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_rgetattr</name></name></type> <name>rgetattr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_tsetattr</name></name></type> <name>tsetattr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_txattrwalk</name></name></type> <name>txattrwalk</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_rxattrwalk</name></name></type> <name>rxattrwalk</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_txattrcreate</name></name></type> <name>txattrcreate</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_tlock</name></name></type> <name>tlock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_rlock</name></name></type> <name>rlock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_getlock</name></name></type> <name>getlock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_tlink</name></name></type> <name>tlink</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_tlcreate</name></name></type> <name>tmkdir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_ropen</name></name></type> <name>rmkdir</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_trenameat</name></name></type> <name>trenameat</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_tlcreate</name></name></type> <name>tunlinkat</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>l9p_f_io</name></name></type> <name>io</name></decl>;</decl_stmt>
}</block>;</union>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
