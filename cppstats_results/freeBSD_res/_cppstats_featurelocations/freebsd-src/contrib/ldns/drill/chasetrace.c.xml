<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/ldns/drill/chasetrace.c">









<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"drill.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ldns/ldns.h&gt;</cpp:file></cpp:include>




<function><type><specifier>static</specifier> <name>void</name></type> <name>add_rr_list_to_referrals</name><parameter_list>(
<parameter><decl><type><name>ldns_dnssec_zone</name> <modifier>*</modifier></type><name>referrals</name></decl></parameter>, <parameter><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_dnssec_rrsets</name> <modifier>*</modifier></type><name>rrset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_dnssec_rrs</name> <modifier>*</modifier></type><name>rrs</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>rr</name> <operator>=</operator> <call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>rrset</name> <operator>=</operator> <call><name>ldns_dnssec_zone_find_rrset</name><argument_list>(
<argument><expr><name>referrals</name></expr></argument>, <argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>rrset</name></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><expr><name>rrs</name> <operator>=</operator> <name><name>rrset</name><operator>-&gt;</operator><name>rrs</name></name></expr>;</init> <condition><expr><name>rrs</name></expr>;</condition> <incr><expr><name>rrs</name> <operator>=</operator> <name><name>rrs</name><operator>-&gt;</operator><name>next</name></name></expr></incr>)</control><block type="pseudo"><block_content>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_compare</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><name><name>rrs</name><operator>-&gt;</operator><name>rr</name></name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt></block_content></block></for>
<if_stmt><if>if <condition>(<expr><name>rrs</name></expr>)</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>LDNS_RR_TYPE_NS</name> <operator>&amp;&amp;</operator> <name>verbosity</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ldns_rr_print</name><argument_list>(<argument><expr><name>stdout</name></expr></argument>, <argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>ldns_dnssec_zone_add_rr</name><argument_list>(<argument><expr><name>referrals</name></expr></argument>, <argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>void</name></type> <name>add_referrals</name><parameter_list>(<parameter><decl><type><name>ldns_dnssec_zone</name> <modifier>*</modifier></type><name>referrals</name></decl></parameter>, <parameter><decl><type><name>ldns_pkt</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>l</name> <init>= <expr><call><name>ldns_pkt_all_noquestion</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>l</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>add_rr_list_to_referrals</name><argument_list>(<argument><expr><name>referrals</name></expr></argument>, <argument><expr><name>l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_list_free</name><argument_list>(<argument><expr><name>l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>bool</name></type> <name>set_nss_for_name</name><parameter_list>(
<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>ldns_dnssec_zone</name> <modifier>*</modifier></type><name>referrals</name></decl></parameter>, <parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,
<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>local_res</name></decl></parameter>, <parameter><decl><type><name>ldns_rr_class</name></type> <name>c</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_dnssec_rrsets</name> <modifier>*</modifier></type><name>nss</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_dnssec_rrs</name> <modifier>*</modifier></type><name>nss_rrs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_dnssec_rrsets</name> <modifier>*</modifier></type><name>as</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_dnssec_rrs</name> <modifier>*</modifier></type><name>as_rrs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>lookup</name> <init>= <expr><call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>new_lookup</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>addrs</name></decl>;</decl_stmt>


<for>for <control>(<init>;</init><condition>;</condition><incr/>)</control> <block>{<block_content>
<expr_stmt><expr><name>nss</name> <operator>=</operator> <call><name>ldns_dnssec_zone_find_rrset</name><argument_list>(
<argument><expr><name>referrals</name></expr></argument>, <argument><expr><name>lookup</name></expr></argument>, <argument><expr><name>LDNS_RR_TYPE_NS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>nss</name> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><name>lookup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>new_lookup</name> <operator>=</operator> <call><name>ldns_dname_left_chop</name><argument_list>(<argument><expr><name>lookup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><name>lookup</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>lookup</name> <operator>=</operator> <name>new_lookup</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>lookup</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>error</name><argument_list>(<argument><expr><literal type="string">"No referrals for name found"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>


<while>while <condition>(<expr><operator>(</operator><name>addr</name> <operator>=</operator> <call><name>ldns_resolver_pop_nameserver</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><name>addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>


<for>for <control>(<init><expr><name>nss_rrs</name> <operator>=</operator> <name><name>nss</name><operator>-&gt;</operator><name>rrs</name></name></expr>;</init> <condition><expr><name>nss_rrs</name></expr>;</condition> <incr><expr><name>nss_rrs</name> <operator>=</operator> <name><name>nss_rrs</name><operator>-&gt;</operator><name>next</name></name></expr></incr>)</control> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>as</name> <operator>=</operator> <call><name>ldns_dnssec_zone_find_rrset</name><argument_list>(
<argument><expr><name>referrals</name></expr></argument>, <argument><expr><call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name><name>nss_rrs</name><operator>-&gt;</operator><name>rr</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>LDNS_RR_TYPE_A</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<for>for <control>(<init><expr><name>as_rrs</name> <operator>=</operator> <name><name>as</name><operator>-&gt;</operator><name>rrs</name></name></expr>;</init> <condition><expr><name>as_rrs</name></expr>;</condition> <incr><expr><name>as_rrs</name> <operator>=</operator> <name><name>as_rrs</name><operator>-&gt;</operator><name>next</name></name></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>ldns_resolver_push_nameserver</name><argument_list>(
<argument><expr><name>res</name></expr></argument>, <argument><expr><call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name><name>as_rrs</name><operator>-&gt;</operator><name>rr</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>as</name> <operator>=</operator> <call><name>ldns_dnssec_zone_find_rrset</name><argument_list>(
<argument><expr><name>referrals</name></expr></argument>, <argument><expr><call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name><name>nss_rrs</name><operator>-&gt;</operator><name>rr</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>LDNS_RR_TYPE_AAAA</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<for>for <control>(<init><expr><name>as_rrs</name> <operator>=</operator> <name><name>as</name><operator>-&gt;</operator><name>rrs</name></name></expr>;</init> <condition><expr><name>as_rrs</name></expr>;</condition> <incr><expr><name>as_rrs</name> <operator>=</operator> <name><name>as_rrs</name><operator>-&gt;</operator><name>next</name></name></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>ldns_resolver_push_nameserver</name><argument_list>(
<argument><expr><name>res</name></expr></argument>, <argument><expr><call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name><name>as_rrs</name><operator>-&gt;</operator><name>rr</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>
</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><call><name>ldns_resolver_nameserver_count</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>true</name></expr>;</return></block_content></block></if></if_stmt>


<expr_stmt><expr><name>addrs</name> <operator>=</operator> <call><name>ldns_rr_list_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>nss_rrs</name> <operator>=</operator> <name><name>nss</name><operator>-&gt;</operator><name>rrs</name></name></expr>;</init> <condition><expr><name>nss_rrs</name></expr>;</condition> <incr><expr><name>nss_rrs</name> <operator>=</operator> <name><name>nss_rrs</name><operator>-&gt;</operator><name>next</name></name></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>addrs_by_name</name> <init>=
<expr><call><name>ldns_get_rr_list_addr_by_name</name><argument_list>(
<argument><expr><name>local_res</name></expr></argument>, <argument><expr><call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name><name>nss_rrs</name><operator>-&gt;</operator><name>rr</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>ldns_rr_list_cat</name><argument_list>(<argument><expr><name>addrs</name></expr></argument>, <argument><expr><name>addrs_by_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_list_free</name><argument_list>(<argument><expr><name>addrs_by_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>addrs</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>error</name><argument_list>(<argument><expr><literal type="string">"Could not find the nameserver ip addr; abort"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

<if type="elseif">else if <condition>(<expr><call><name>ldns_resolver_push_nameserver_rr_list</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>addrs</name></expr></argument>)</argument_list></call> <operator>!=</operator>
<name>LDNS_STATUS_OK</name></expr>)</condition><block type="pseudo"><block_content>

<expr_stmt><expr><call><name>error</name><argument_list>(<argument><expr><literal type="string">"Error adding new nameservers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_list_deep_free</name><argument_list>(<argument><expr><name>addrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><call><name>add_rr_list_to_referrals</name><argument_list>(<argument><expr><name>referrals</name></expr></argument>, <argument><expr><name>addrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_list_deep_free</name><argument_list>(<argument><expr><name>addrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>










<function><type><name>void</name></type>
<name>do_trace</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>local_res</name></decl></parameter>, <parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>ldns_rr_type</name></type> <name>t</name></decl></parameter>,
<parameter><decl><type><name>ldns_rr_class</name></type> <name>c</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<decl_stmt><decl><type><specifier>static</specifier> <name>uint8_t</name></type> <name><name>zero</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf</name></type> <name>root_dname</name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><name>LDNS_RDF_TYPE_DNAME</name></expr>, <expr><operator>&amp;</operator><name>zero</name></expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>res</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_pkt</name> <modifier>*</modifier></type><name>p</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>final_answer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>new_nss</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>cname</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>answers</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>loop_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_status</name></type> <name>status</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_dnssec_zone</name><modifier>*</modifier></type> <name>referrals</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>addr</name></decl>;</decl_stmt>

<expr_stmt><expr><name>loop_count</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>final_answer</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>res</name> <operator>=</operator> <call><name>ldns_resolver_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>res</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>error</name><argument_list>(<argument><expr><literal type="string">"Memory allocation failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>cleanup</name>;</goto>
</block_content>}</block></if></if_stmt>



<expr_stmt><expr><call><name>ldns_resolver_set_ip6</name><argument_list>(<argument><expr><name>res</name></expr></argument>,
<argument><expr><call><name>ldns_resolver_ip6</name><argument_list>(<argument><expr><name>local_res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_port</name><argument_list>(<argument><expr><name>res</name></expr></argument>,
<argument><expr><call><name>ldns_resolver_port</name><argument_list>(<argument><expr><name>local_res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_debug</name><argument_list>(<argument><expr><name>res</name></expr></argument>,
<argument><expr><call><name>ldns_resolver_debug</name><argument_list>(<argument><expr><name>local_res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_dnssec</name><argument_list>(<argument><expr><name>res</name></expr></argument>,
<argument><expr><call><name>ldns_resolver_dnssec</name><argument_list>(<argument><expr><name>local_res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_fail</name><argument_list>(<argument><expr><name>res</name></expr></argument>,
<argument><expr><call><name>ldns_resolver_fail</name><argument_list>(<argument><expr><name>local_res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_usevc</name><argument_list>(<argument><expr><name>res</name></expr></argument>,
<argument><expr><call><name>ldns_resolver_usevc</name><argument_list>(<argument><expr><name>local_res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_random</name><argument_list>(<argument><expr><name>res</name></expr></argument>,
<argument><expr><call><name>ldns_resolver_random</name><argument_list>(<argument><expr><name>local_res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_source</name><argument_list>(<argument><expr><name>res</name></expr></argument>,
<argument><expr><call><name>ldns_resolver_source</name><argument_list>(<argument><expr><name>local_res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_recursive</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>ldns_resolver_push_nameserver_rr_list</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>global_dns_root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"Error adding root servers to resolver: %s\n"</literal></expr></argument>, <argument><expr><call><name>ldns_get_errorstr_by_id</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_list_print</name><argument_list>(<argument><expr><name>stdout</name></expr></argument>, <argument><expr><name>global_dns_root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>cleanup</name>;</goto>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>ldns_resolver_send</name><argument_list>(<argument><expr><operator>&amp;</operator><name>p</name></expr></argument>, <argument><expr><name>res</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>root_dname</name></expr></argument>, <argument><expr><name>LDNS_RR_TYPE_NS</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>ldns_pkt_empty</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>warning</name><argument_list>(<argument><expr><literal type="string">"No root server information received"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>status</name> <operator>==</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>ldns_pkt_empty</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>drill_pkt_print</name><argument_list>(<argument><expr><name>stdout</name></expr></argument>, <argument><expr><name>local_res</name></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>referrals</name> <operator>=</operator> <call><name>ldns_dnssec_zone_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>add_referrals</name><argument_list>(<argument><expr><name>referrals</name></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>error</name><argument_list>(<argument><expr><literal type="string">"cannot use local resolver"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>cleanup</name>;</goto>
</block_content>}</block></else></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator> <call><name>set_nss_for_name</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>referrals</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>local_res</name></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<goto>goto <name>cleanup</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>ldns_resolver_send</name><argument_list>(<argument><expr><operator>&amp;</operator><name>p</name></expr></argument>, <argument><expr><name>res</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>t</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<while>while<condition>(<expr><name>status</name> <operator>==</operator> <name>LDNS_STATUS_OK</name> <operator>&amp;&amp;</operator>
<call><name>ldns_pkt_reply_type</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>LDNS_PACKET_REFERRAL</name></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>p</name></expr>)</condition> <block>{<block_content>

<goto>goto <name>cleanup</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>add_referrals</name><argument_list>(<argument><expr><name>referrals</name></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>drill_pkt_print_footer</name><argument_list>(<argument><expr><name>stdout</name></expr></argument>, <argument><expr><name>local_res</name></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator> <call><name>set_nss_for_name</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>referrals</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>local_res</name></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<goto>goto <name>cleanup</name>;</goto>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>loop_count</name><operator>++</operator> <operator>&gt;</operator> <literal type="number">20</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>error</name><argument_list>(<argument><expr><literal type="string">"Looks like we are looping"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<goto>goto <name>cleanup</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>ldns_resolver_send</name><argument_list>(<argument><expr><operator>&amp;</operator><name>p</name></expr></argument>, <argument><expr><name>res</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>t</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><call><name>ldns_pkt_reply_type</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_PACKET_ANSWER</name></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>


<expr_stmt><expr><name>answers</name> <operator>=</operator> <call><name>ldns_pkt_rr_list_by_type</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>t</name></expr></argument>, <argument><expr><name>LDNS_SECTION_ANSWER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>answers</name> <operator>&amp;&amp;</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>answers</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_list_free</name><argument_list>(<argument><expr><name>answers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>answers</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_rr_list_free</name><argument_list>(<argument><expr><name>answers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>answers</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>


<expr_stmt><expr><name>cname</name> <operator>=</operator> <call><name>ldns_pkt_rr_list_by_type</name><argument_list>(
<argument><expr><name>p</name></expr></argument>, <argument><expr><name>LDNS_RR_TYPE_CNAME</name></expr></argument>, <argument><expr><name>LDNS_SECTION_ANSWER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>cname</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>


<expr_stmt><expr><call><name>ldns_rr_list_print</name><argument_list>(<argument><expr><name>stdout</name></expr></argument>, <argument><expr><name>cname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>name</name> <operator>=</operator> <call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>cname</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_list_free</name><argument_list>(<argument><expr><name>cname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>cname</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>


<while>while<condition>(<expr><operator>(</operator><name>addr</name> <operator>=</operator> <call><name>ldns_resolver_pop_nameserver</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><name>addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>


<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>ldns_resolver_push_nameserver_rr_list</name><argument_list>(
<argument><expr><name>res</name></expr></argument>, <argument><expr><name>global_dns_root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>ldns_resolver_send</name><argument_list>(<argument><expr><operator>&amp;</operator><name>p</name></expr></argument>, <argument><expr><name>res</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>t</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></while>

<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>p</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>ldns_resolver_send</name><argument_list>(<argument><expr><operator>&amp;</operator><name>p</name></expr></argument>, <argument><expr><name>res</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>t</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>p</name></expr>)</condition> <block>{<block_content>
<goto>goto <name>cleanup</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>new_nss</name> <operator>=</operator> <call><name>ldns_pkt_authority</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>final_answer</name> <operator>=</operator> <call><name>ldns_pkt_answer</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>verbosity</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_list_print</name><argument_list>(<argument><expr><name>stdout</name></expr></argument>, <argument><expr><name>final_answer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_list_print</name><argument_list>(<argument><expr><name>stdout</name></expr></argument>, <argument><expr><name>new_nss</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>drill_pkt_print_footer</name><argument_list>(<argument><expr><name>stdout</name></expr></argument>, <argument><expr><name>local_res</name></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label><name>cleanup</name>:</label>
<if_stmt><if>if <condition>(<expr><name>res</name></expr>)</condition> <block>{<block_content>
<while>while<condition>(<expr><operator>(</operator><name>addr</name> <operator>=</operator> <call><name>ldns_resolver_pop_nameserver</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><name>addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>
<expr_stmt><expr><call><name>ldns_resolver_free</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>referrals</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ldns_dnssec_zone_deep_free</name><argument_list>(<argument><expr><name>referrals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>p</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function>










<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_SSL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function><type><name>ldns_status</name></type>
<name>do_chase</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>res</name></decl></parameter>,
<parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,
<parameter><decl><type><name>ldns_rr_type</name></type> <name>type</name></decl></parameter>,
<parameter><decl><type><name>ldns_rr_class</name></type> <name>c</name></decl></parameter>,
<parameter><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>trusted_keys</name></decl></parameter>,
<parameter><decl><type><name>ldns_pkt</name> <modifier>*</modifier></type><name>pkt_o</name></decl></parameter>,
<parameter><decl><type><name>uint16_t</name></type> <name>qflags</name></decl></parameter>,
<parameter><function_decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type> <name>ATTR_UNUSED</name><parameter_list>(<parameter><decl><type><name>prev_key_list</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>rrset</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_status</name></type> <name>result</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>orig_rr</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>







<decl_stmt><decl><type><name>ldns_pkt</name> <modifier>*</modifier></type><name>pkt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_status</name></type> <name>tree_result</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_dnssec_data_chain</name> <modifier>*</modifier></type><name>chain</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_dnssec_trust_tree</name> <modifier>*</modifier></type><name>tree</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>ldns_rr_descriptor</name> <modifier>*</modifier></type><name>descriptor</name></decl>;</decl_stmt>
<expr_stmt><expr><name>descriptor</name> <operator>=</operator> <call><name>ldns_rr_descript</name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_dname2canonical</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>pkt</name> <operator>=</operator> <call><name>ldns_pkt_clone</name><argument_list>(<argument><expr><name>pkt_o</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>name</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>mesg</name><argument_list>(<argument><expr><literal type="string">"No name to chase"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_EMPTY_LABEL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>verbosity</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">";; Chasing: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rdf_print</name><argument_list>(<argument><expr><name>stdout</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>descriptor</name> <operator>&amp;&amp;</operator> <name><name>descriptor</name><operator>-&gt;</operator><name>_name</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">" %s\n"</literal></expr></argument>, <argument><expr><name><name>descriptor</name><operator>-&gt;</operator><name>_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">" type %d\n"</literal></expr></argument>, <argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>trusted_keys</name> <operator>||</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>trusted_keys</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>warning</name><argument_list>(<argument><expr><literal type="string">"No trusted keys specified"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>pkt</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>rrset</name> <operator>=</operator> <call><name>ldns_pkt_rr_list_by_name_and_type</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>,
<argument><expr><name>name</name></expr></argument>,
<argument><expr><name>type</name></expr></argument>,
<argument><expr><name>LDNS_SECTION_ANSWER</name></expr></argument>
)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>rrset</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>rrset</name> <operator>=</operator> <call><name>ldns_pkt_rr_list_by_name_and_type</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>,
<argument><expr><name>name</name></expr></argument>,
<argument><expr><name>type</name></expr></argument>,
<argument><expr><name>LDNS_SECTION_AUTHORITY</name></expr></argument>
)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><name>rrset</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>rrset</name> <operator>=</operator> <call><name>ldns_pkt_rr_list_by_name_and_type</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>,
<argument><expr><name>name</name></expr></argument>,
<argument><expr><name>LDNS_RR_TYPE_CNAME</name></expr></argument>,
<argument><expr><name>LDNS_SECTION_ANSWER</name></expr></argument>
)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>rrset</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>rrset</name> <operator>=</operator> <call><name>ldns_pkt_rr_list_by_name_and_type</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>,
<argument><expr><name>name</name></expr></argument>,
<argument><expr><name>LDNS_RR_TYPE_CNAME</name></expr></argument>,
<argument><expr><name>LDNS_SECTION_AUTHORITY</name></expr></argument>
)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>verbosity</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><call><name>ldns_get_errorstr_by_id</name><argument_list>(<argument><expr><name>LDNS_STATUS_MEM_ERR</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>LDNS_STATUS_MEM_ERR</name></expr>;</return>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>rrset</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>pkt</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>pkt</name> <operator>=</operator> <call><name>ldns_resolver_query</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>type</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>qflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>pkt</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>verbosity</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"%s"</literal></expr></argument>, <argument><expr><call><name>ldns_get_errorstr_by_id</name><argument_list>(<argument><expr><name>LDNS_STATUS_NETWORK_ERR</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>LDNS_STATUS_NETWORK_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>verbosity</name> <operator>&gt;=</operator> <literal type="number">5</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_print</name><argument_list>(<argument><expr><name>stdout</name></expr></argument>, <argument><expr><name>pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>rrset</name> <operator>=</operator> <call><name>ldns_pkt_rr_list_by_name_and_type</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>,
<argument><expr><name>name</name></expr></argument>,
<argument><expr><name>type</name></expr></argument>,
<argument><expr><name>LDNS_SECTION_ANSWER</name></expr></argument>
)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>orig_rr</name> <operator>=</operator> <call><name>ldns_rr_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>



<if_stmt><if>if <condition>(<expr><call><name>ldns_pkt_ancount</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_set_type</name><argument_list>(<argument><expr><name>orig_rr</name></expr></argument>, <argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_set_owner</name><argument_list>(<argument><expr><name>orig_rr</name></expr></argument>, <argument><expr><call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>chain</name> <operator>=</operator> <call><name>ldns_dnssec_build_data_chain</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>qflags</name></expr></argument>, <argument><expr><name>rrset</name></expr></argument>, <argument><expr><name>pkt</name></expr></argument>, <argument><expr><call><name>ldns_rr_clone</name><argument_list>(<argument><expr><name>orig_rr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>chain</name> <operator>=</operator> <call><name>ldns_dnssec_build_data_chain</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>qflags</name></expr></argument>, <argument><expr><name>rrset</name></expr></argument>, <argument><expr><name>pkt</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name>verbosity</name> <operator>&gt;=</operator> <literal type="number">4</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"\n\nDNSSEC Data Chain:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_dnssec_data_chain_print</name><argument_list>(<argument><expr><name>stdout</name></expr></argument>, <argument><expr><name>chain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>result</name> <operator>=</operator> <name>LDNS_STATUS_OK</name></expr>;</expr_stmt>

<expr_stmt><expr><name>tree</name> <operator>=</operator> <call><name>ldns_dnssec_derive_trust_tree</name><argument_list>(<argument><expr><name>chain</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>verbosity</name> <operator>&gt;=</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"\n\nDNSSEC Trust tree:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_dnssec_trust_tree_print</name><argument_list>(<argument><expr><name>stdout</name></expr></argument>, <argument><expr><name>tree</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>trusted_keys</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>tree_result</name> <operator>=</operator> <call><name>ldns_dnssec_trust_tree_contains_keys</name><argument_list>(<argument><expr><name>tree</name></expr></argument>, <argument><expr><name>trusted_keys</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>tree_result</name> <operator>==</operator> <name>LDNS_STATUS_DNSSEC_EXISTENCE_DENIED</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>verbosity</name> <operator>&gt;=</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"Existence denied or verifiably insecure\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>LDNS_STATUS_OK</name></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>tree_result</name> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>verbosity</name> <operator>&gt;=</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"No trusted keys found in tree: first error was: %s\n"</literal></expr></argument>, <argument><expr><call><name>ldns_get_errorstr_by_id</name><argument_list>(<argument><expr><name>tree_result</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>tree_result</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>verbosity</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>printf</name><argument_list>(<argument><expr><literal type="string">"You have not provided any trusted keys.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>orig_rr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_dnssec_trust_tree_free</name><argument_list>(<argument><expr><name>tree</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_dnssec_data_chain_deep_free</name><argument_list>(<argument><expr><name>chain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_rr_list_deep_free</name><argument_list>(<argument><expr><name>rrset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
