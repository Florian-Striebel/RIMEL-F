<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/ldns/rr.c">








<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ldns/config.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ldns/ldns.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;strings.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;limits.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;errno.h&gt;</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LDNS_SYNTAX_DATALEN</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LDNS_TTL_DATALEN</name></cpp:macro> <cpp:value>21</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LDNS_RRLIST_INIT</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>

<function><type><name>ldns_rr</name> <modifier>*</modifier></type>
<name>ldns_rr_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl>;</decl_stmt>
<expr_stmt><expr><name>rr</name> <operator>=</operator> <call><name>LDNS_MALLOC</name><argument_list>(<argument><expr><name>ldns_rr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>rr</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ldns_rr_set_owner</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_set_question</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_set_rd_count</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rr</name><operator>-&gt;</operator><name>_rdata_fields</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_set_class</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><name>LDNS_RR_CLASS_IN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_set_ttl</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><name>LDNS_DEFAULT_TTL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>rr</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rr</name> <modifier>*</modifier></type>
<name>ldns_rr_new_frm_type</name><parameter_list>(<parameter><decl><type><name>ldns_rr_type</name></type> <name>t</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>ldns_rr_descriptor</name> <modifier>*</modifier></type><name>desc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><name>rr</name> <operator>=</operator> <call><name>LDNS_MALLOC</name><argument_list>(<argument><expr><name>ldns_rr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>rr</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>desc</name> <operator>=</operator> <call><name>ldns_rr_descript</name><argument_list>(<argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>rr</name><operator>-&gt;</operator><name>_rdata_fields</name></name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>ldns_rdf</name> <operator>*</operator></expr></argument>, <argument><expr><call><name>ldns_rr_descriptor_minimum</name><argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name><name>rr</name><operator>-&gt;</operator><name>_rdata_fields</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_rr_descriptor_minimum</name><argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>rr</name><operator>-&gt;</operator><name>_rdata_fields</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><call><name>ldns_rr_set_owner</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_set_question</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_rr_set_rd_count</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><call><name>ldns_rr_descriptor_minimum</name><argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_set_class</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><name>LDNS_RR_CLASS_IN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_set_ttl</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><name>LDNS_DEFAULT_TTL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_set_type</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>rr</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_rr_free</name><parameter_list>(<parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>rr</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_rr_rd_count</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>rr</name><operator>-&gt;</operator><name>_rdata_fields</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>


<function><type><name>INLINE</name> <name>bool</name></type>
<name>ldns_rdf_type_maybe_quoted</name><parameter_list>(<parameter><decl><type><name>ldns_rdf_type</name></type> <name>rdf_type</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name>rdf_type</name> <operator>==</operator> <name>LDNS_RDF_TYPE_STR</name> <operator>||</operator>
<name>rdf_type</name> <operator>==</operator> <name>LDNS_RDF_TYPE_LONG_STR</name></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>ldns_status</name></type>
<name>ldns_rr_new_frm_str_internal</name><parameter_list>(<parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier><modifier>*</modifier></type><name>newrr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>default_ttl</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rdf</name> <modifier>*</modifier></type><name>origin</name></decl></parameter>,
<parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type><name>prev</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>question</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>new</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>ldns_rr_descriptor</name> <modifier>*</modifier></type><name>desc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr_type</name></type> <name>rr_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_buffer</name> <modifier>*</modifier></type><name>rr_buf</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_buffer</name> <modifier>*</modifier></type><name>rd_buf</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>ttl_val</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>owner</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>ttl</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr_class</name></type> <name>clas_val</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>clas</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>type</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>rdata</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>rd</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>xtok</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>rd_strlen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>delimiters</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ssize_t</name></type> <name>c</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>owner_dname</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>endptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>was_unknown_rr_format</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_status</name></type> <name>status</name> <init>= <expr><name>LDNS_STATUS_OK</name></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><name>bool</name></type> <name>done</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>quoted</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>r</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>r_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>r_min</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>r_max</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>pre_data_pos</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>hex_data_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>hex_data_str</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>cur_hex_data_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>hex_pos</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>hex_data</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>new</name> <operator>=</operator> <call><name>ldns_rr_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>owner</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>char</name></expr></argument>, <argument><expr><name>LDNS_MAX_DOMAINLEN</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ttl</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>char</name></expr></argument>, <argument><expr><name>LDNS_TTL_DATALEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>clas</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>char</name></expr></argument>, <argument><expr><name>LDNS_SYNTAX_DATALEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>rdata</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>char</name></expr></argument>, <argument><expr><name>LDNS_MAX_PACKETLEN</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>rr_buf</name> <operator>=</operator> <call><name>LDNS_MALLOC</name><argument_list>(<argument><expr><name>ldns_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>rd_buf</name> <operator>=</operator> <call><name>LDNS_MALLOC</name><argument_list>(<argument><expr><name>ldns_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>rd</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>char</name></expr></argument>, <argument><expr><name>LDNS_MAX_RDFLEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>xtok</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>char</name></expr></argument>, <argument><expr><name>LDNS_MAX_RDFLEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>rr_buf</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>rr_buf</name><operator>-&gt;</operator><name>_data</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>rd_buf</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>rd_buf</name><operator>-&gt;</operator><name>_data</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>new</name> <operator>||</operator> <operator>!</operator><name>owner</name> <operator>||</operator> <operator>!</operator><name>ttl</name> <operator>||</operator> <operator>!</operator><name>clas</name> <operator>||</operator> <operator>!</operator><name>rdata</name> <operator>||</operator>
<operator>!</operator><name>rr_buf</name> <operator>||</operator> <operator>!</operator><name>rd_buf</name> <operator>||</operator> <operator>!</operator><name>rd</name> <operator>||</operator> <operator>!</operator><name>xtok</name></expr>)</condition> <block>{<block_content>

<goto>goto <name>memerror</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ldns_buffer_new_frm_data</name><argument_list>(<argument><expr><name>rr_buf</name></expr></argument>, <argument><expr><operator>(</operator><name>char</name><operator>*</operator><operator>)</operator><name>str</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>str</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>ldns_bget_token</name><argument_list>(<argument><expr><name>rr_buf</name></expr></argument>, <argument><expr><name>owner</name></expr></argument>, <argument><expr><literal type="string">"\t\n "</literal></expr></argument>, <argument><expr><name>LDNS_MAX_DOMAINLEN</name></expr></argument>)</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block>{<block_content>

<expr_stmt><expr><name>status</name> <operator>=</operator> <name>LDNS_STATUS_SYNTAX_ERR</name></expr>;</expr_stmt>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ldns_bget_token</name><argument_list>(<argument><expr><name>rr_buf</name></expr></argument>, <argument><expr><name>ttl</name></expr></argument>, <argument><expr><literal type="string">"\t\n "</literal></expr></argument>, <argument><expr><name>LDNS_TTL_DATALEN</name></expr></argument>)</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>status</name> <operator>=</operator> <name>LDNS_STATUS_SYNTAX_TTL_ERR</name></expr>;</expr_stmt>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>ttl_val</name> <operator>=</operator> <operator>(</operator><name>uint32_t</name><operator>)</operator> <call><name>ldns_str2period</name><argument_list>(<argument><expr><name>ttl</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>endptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>strlen</name><argument_list>(<argument><expr><name>ttl</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>isdigit</name><argument_list>(<argument><expr><operator>(</operator><name>int</name><operator>)</operator> <name><name>ttl</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>default_ttl</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>ttl_val</name> <operator>=</operator> <name>LDNS_DEFAULT_TTL</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>ttl_val</name> <operator>=</operator> <name>default_ttl</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>





<expr_stmt><expr><name>clas_val</name> <operator>=</operator> <call><name>ldns_get_rr_class_by_name</name><argument_list>(<argument><expr><name>ttl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<if_stmt><if>if <condition>(<expr><name>clas_val</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>clas_val</name> <operator>=</operator> <name>LDNS_RR_CLASS_IN</name></expr>;</expr_stmt>
<expr_stmt><expr><name>type</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>char</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>ttl</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>type</name></expr>)</condition> <block>{<block_content>
<goto>goto <name>memerror</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>strncpy</name><argument_list>(<argument><expr><name>type</name></expr></argument>, <argument><expr><name>ttl</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>ttl</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>-</operator><literal type="number">1</literal> <operator>==</operator> <call><name>ldns_bget_token</name><argument_list>(
<argument><expr><name>rr_buf</name></expr></argument>, <argument><expr><name>clas</name></expr></argument>, <argument><expr><literal type="string">"\t\n "</literal></expr></argument>, <argument><expr><name>LDNS_SYNTAX_DATALEN</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>status</name> <operator>=</operator> <name>LDNS_STATUS_SYNTAX_CLASS_ERR</name></expr>;</expr_stmt>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>clas_val</name> <operator>=</operator> <call><name>ldns_get_rr_class_by_name</name><argument_list>(<argument><expr><name>clas</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<if_stmt><if>if <condition>(<expr><name>clas_val</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>clas_val</name> <operator>=</operator> <name>LDNS_RR_CLASS_IN</name></expr>;</expr_stmt>
<expr_stmt><expr><name>type</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>char</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>clas</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>type</name></expr>)</condition> <block>{<block_content>
<goto>goto <name>memerror</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>strncpy</name><argument_list>(<argument><expr><name>type</name></expr></argument>, <argument><expr><name>clas</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>clas</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><name>type</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>type</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>char</name></expr></argument>, <argument><expr><name>LDNS_SYNTAX_DATALEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>type</name></expr>)</condition> <block>{<block_content>
<goto>goto <name>memerror</name>;</goto>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>-</operator><literal type="number">1</literal> <operator>==</operator> <call><name>ldns_bget_token</name><argument_list>(
<argument><expr><name>rr_buf</name></expr></argument>, <argument><expr><name>type</name></expr></argument>, <argument><expr><literal type="string">"\t\n "</literal></expr></argument>, <argument><expr><name>LDNS_SYNTAX_DATALEN</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>status</name> <operator>=</operator> <name>LDNS_STATUS_SYNTAX_TYPE_ERR</name></expr>;</expr_stmt>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ldns_bget_token</name><argument_list>(<argument><expr><name>rr_buf</name></expr></argument>, <argument><expr><name>rdata</name></expr></argument>, <argument><expr><literal type="string">"\0"</literal></expr></argument>, <argument><expr><name>LDNS_MAX_PACKETLEN</name></expr></argument>)</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>



</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_buffer_new_frm_data</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>, <argument><expr><name>rdata</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>rdata</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>strlen</name><argument_list>(<argument><expr><name>owner</name></expr></argument>)</argument_list></call> <operator>&lt;=</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <call><name>strncmp</name><argument_list>(<argument><expr><name>owner</name></expr></argument>, <argument><expr><literal type="string">"@"</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>origin</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_set_owner</name><argument_list>(<argument><expr><name>new</name></expr></argument>, <argument><expr><call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><name>origin</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>prev</name> <operator>&amp;&amp;</operator> <operator>*</operator><name>prev</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_set_owner</name><argument_list>(<argument><expr><name>new</name></expr></argument>, <argument><expr><call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><operator>*</operator><name>prev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>ldns_rr_set_owner</name><argument_list>(<argument><expr><name>new</name></expr></argument>, <argument><expr><call><name>ldns_dname_new_frm_str</name><argument_list>(<argument><expr><literal type="string">"."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>


<if_stmt><if>if <condition>(<expr><name>prev</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><operator>*</operator><name>prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>prev</name> <operator>=</operator> <call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>new</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>*</operator><name>prev</name></expr>)</condition> <block>{<block_content>
<goto>goto <name>memerror</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>strlen</name><argument_list>(<argument><expr><name>owner</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>


<if_stmt><if>if <condition>(<expr><name>prev</name> <operator>&amp;&amp;</operator> <operator>*</operator><name>prev</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_set_owner</name><argument_list>(<argument><expr><name>new</name></expr></argument>, <argument><expr><call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><operator>*</operator><name>prev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>origin</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_set_owner</name><argument_list>(<argument><expr><name>new</name></expr></argument>, <argument><expr><call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><name>origin</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_set_owner</name><argument_list>(<argument><expr><name>new</name></expr></argument>,
<argument><expr><call><name>ldns_dname_new_frm_str</name><argument_list>(<argument><expr><literal type="string">"."</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>new</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<goto>goto <name>memerror</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>owner_dname</name> <operator>=</operator> <call><name>ldns_dname_new_frm_str</name><argument_list>(<argument><expr><name>owner</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>owner_dname</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>status</name> <operator>=</operator> <name>LDNS_STATUS_SYNTAX_ERR</name></expr>;</expr_stmt>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ldns_rr_set_owner</name><argument_list>(<argument><expr><name>new</name></expr></argument>, <argument><expr><name>owner_dname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>ldns_dname_str_absolute</name><argument_list>(<argument><expr><name>owner</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>origin</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><call><name>ldns_dname_cat</name><argument_list>(<argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>new</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>origin</name></expr></argument>)</argument_list></call>
<operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>status</name> <operator>=</operator> <name>LDNS_STATUS_SYNTAX_ERR</name></expr>;</expr_stmt>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>prev</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><operator>*</operator><name>prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>prev</name> <operator>=</operator> <call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>new</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>*</operator><name>prev</name></expr>)</condition> <block>{<block_content>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>owner</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_rr_set_question</name><argument_list>(<argument><expr><name>new</name></expr></argument>, <argument><expr><name>question</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_rr_set_ttl</name><argument_list>(<argument><expr><name>new</name></expr></argument>, <argument><expr><name>ttl_val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>ttl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_rr_set_class</name><argument_list>(<argument><expr><name>new</name></expr></argument>, <argument><expr><name>clas_val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>clas</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>rr_type</name> <operator>=</operator> <call><name>ldns_get_rr_type_by_name</name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>desc</name> <operator>=</operator> <call><name>ldns_rr_descript</name><argument_list>(<argument><expr><operator>(</operator><name>uint16_t</name><operator>)</operator><name>rr_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_set_type</name><argument_list>(<argument><expr><name>new</name></expr></argument>, <argument><expr><name>rr_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>desc</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>r_max</name> <operator>=</operator> <call><name>ldns_rr_descriptor_maximum</name><argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>r_min</name> <operator>=</operator> <call><name>ldns_rr_descriptor_minimum</name><argument_list>(<argument><expr><name>desc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>r_min</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>r_max</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<for>for <control>(<init><expr><name>done</name> <operator>=</operator> <name>false</name></expr><operator>,</operator> <expr><name>r_cnt</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><operator>!</operator><name>done</name> <operator>&amp;&amp;</operator> <name>r_cnt</name> <operator>&lt;</operator> <name>r_max</name></expr>;</condition> <incr><expr><name>r_cnt</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>quoted</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>

<switch>switch <condition>(<expr><call><name>ldns_rr_descriptor_field_type</name><argument_list>(<argument><expr><name>desc</name></expr></argument>, <argument><expr><name>r_cnt</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<case>case <expr><name>LDNS_RDF_TYPE_B64</name></expr> :</case>
<case>case <expr><name>LDNS_RDF_TYPE_HEX</name></expr> :</case>
<case>case <expr><name>LDNS_RDF_TYPE_LOC</name></expr> :</case>
<case>case <expr><name>LDNS_RDF_TYPE_WKS</name></expr> :</case>
<case>case <expr><name>LDNS_RDF_TYPE_IPSECKEY</name></expr> :</case>
<case>case <expr><name>LDNS_RDF_TYPE_NSEC</name></expr> :</case> <if_stmt><if>if <condition>(<expr><name>r_cnt</name> <operator>==</operator> <name>r_max</name> <operator>-</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>delimiters</name> <operator>=</operator> <literal type="string">"\n"</literal></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
<default>default :</default> <expr_stmt><expr><name>delimiters</name> <operator>=</operator> <literal type="string">"\n\t "</literal></expr>;</expr_stmt>
</block_content>}</block></switch>

<if_stmt><if>if <condition>(<expr><call><name>ldns_rdf_type_maybe_quoted</name><argument_list>(
<argument><expr><call><name>ldns_rr_descriptor_field_type</name><argument_list>(
<argument><expr><name>desc</name></expr></argument>, <argument><expr><name>r_cnt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
<call><name>ldns_buffer_remaining</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block>{<block_content>


<while>while <condition>(<expr><operator>*</operator><operator>(</operator><call><name>ldns_buffer_current</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <literal type="char">' '</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_buffer_skip</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></while>

<if_stmt><if>if <condition>(<expr><operator>*</operator><operator>(</operator><call><name>ldns_buffer_current</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <literal type="char">'\"'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>delimiters</name> <operator>=</operator> <literal type="string">"\"\0"</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_buffer_skip</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>quoted</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>ldns_rr_descriptor_field_type</name><argument_list>(<argument><expr><name>desc</name></expr></argument>, <argument><expr><name>r_cnt</name></expr></argument>)</argument_list></call>
<operator>==</operator> <name>LDNS_RDF_TYPE_LONG_STR</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>status</name> <operator>=</operator> <name>LDNS_STATUS_SYNTAX_RDATA_ERR</name></expr>;</expr_stmt>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>






<while>while <condition>(<expr><call><name>ldns_buffer_position</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <call><name>ldns_buffer_limit</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>)</argument_list></call>
<operator>&amp;&amp;</operator> <operator>*</operator><operator>(</operator><call><name>ldns_buffer_current</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <literal type="char">' '</literal>
<operator>&amp;&amp;</operator> <operator>!</operator><name>quoted</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ldns_buffer_skip</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></while>

<expr_stmt><expr><name>pre_data_pos</name> <operator>=</operator> <call><name>ldns_buffer_position</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>-</operator><literal type="number">1</literal> <operator>==</operator> <operator>(</operator><name>c</name> <operator>=</operator> <call><name>ldns_bget_token</name><argument_list>(
<argument><expr><name>rd_buf</name></expr></argument>, <argument><expr><name>rd</name></expr></argument>, <argument><expr><name>delimiters</name></expr></argument>, <argument><expr><name>LDNS_MAX_RDFLEN</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>done</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>




<expr_stmt><expr><name>rd_strlen</name> <operator>=</operator> <call><name>strlen</name><argument_list>(<argument><expr><name>rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>strncmp</name><argument_list>(<argument><expr><name>rd</name></expr></argument>, <argument><expr><literal type="string">"\\#"</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <operator>!</operator><name>quoted</name> <operator>&amp;&amp;</operator>
<operator>(</operator><name>rd_strlen</name> <operator>==</operator> <literal type="number">2</literal> <operator>||</operator> <name><name>rd</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>==</operator><literal type="char">' '</literal><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>was_unknown_rr_format</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>



<expr_stmt><expr><call><name>ldns_buffer_set_position</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>, <argument><expr><name>pre_data_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>delimiters</name> <operator>=</operator> <literal type="string">"\n\t "</literal></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><call><name>ldns_bget_token</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>, <argument><expr><name>rd</name></expr></argument>,
<argument><expr><name>delimiters</name></expr></argument>, <argument><expr><name>LDNS_MAX_RDFLEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>ldns_bget_token</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>, <argument><expr><name>rd</name></expr></argument>,
<argument><expr><name>delimiters</name></expr></argument>, <argument><expr><name>LDNS_MAX_RDFLEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>c</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>status</name> <operator>=</operator> <name>LDNS_STATUS_SYNTAX_RDATA_ERR</name></expr>;</expr_stmt>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>hex_data_size</name> <operator>=</operator> <operator>(</operator><name>uint16_t</name><operator>)</operator> <call><name>atoi</name><argument_list>(<argument><expr><name>rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hex_data_str</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>char</name></expr></argument>, <argument><expr><literal type="number">2</literal><operator>*</operator><name>hex_data_size</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>hex_data_str</name></expr>)</condition> <block>{<block_content>

<goto>goto <name>memerror</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>cur_hex_data_size</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<while>while<condition>(<expr><name>cur_hex_data_size</name> <operator>&lt;</operator> <literal type="number">2</literal> <operator>*</operator> <name>hex_data_size</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>ldns_bget_token</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>, <argument><expr><name>rd</name></expr></argument>,
<argument><expr><name>delimiters</name></expr></argument>, <argument><expr><name>LDNS_MAX_RDFLEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>c</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>rd_strlen</name> <operator>=</operator> <call><name>strlen</name><argument_list>(<argument><expr><name>rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>c</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal> <operator>||</operator>
<operator>(</operator><name>size_t</name><operator>)</operator><name>cur_hex_data_size</name> <operator>+</operator> <name>rd_strlen</name> <operator>&gt;</operator>
<literal type="number">2</literal> <operator>*</operator> <operator>(</operator><name>size_t</name><operator>)</operator><name>hex_data_size</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>status</name> <operator>=</operator> <name>LDNS_STATUS_SYNTAX_RDATA_ERR</name></expr>;</expr_stmt>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>strncpy</name><argument_list>(<argument><expr><name>hex_data_str</name> <operator>+</operator> <name>cur_hex_data_size</name></expr></argument>, <argument><expr><name>rd</name></expr></argument>,
<argument><expr><name>rd_strlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>cur_hex_data_size</name> <operator>+=</operator> <name>rd_strlen</name></expr>;</expr_stmt>
</block_content>}</block></while>
<expr_stmt><expr><name><name>hex_data_str</name><index>[<expr><name>cur_hex_data_size</name></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>



<if_stmt><if>if <condition>(<expr><name>desc</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>hex_pos</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>hex_data</name> <operator>=</operator>
<call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>uint8_t</name></expr></argument>, <argument><expr><name>hex_data_size</name><operator>+</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>hex_data</name></expr>)</condition> <block>{<block_content>
<goto>goto <name>memerror</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_write_uint16</name><argument_list>(<argument><expr><name>hex_data</name></expr></argument>, <argument><expr><name>hex_data_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_hexstring_to_data</name><argument_list>(
<argument><expr><name>hex_data</name> <operator>+</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><name>hex_data_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>ldns_wire2rdf</name><argument_list>(<argument><expr><name>new</name></expr></argument>, <argument><expr><name>hex_data</name></expr></argument>,
<argument><expr><name>hex_data_size</name> <operator>+</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><operator>&amp;</operator><name>hex_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>hex_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>r</name> <operator>=</operator> <call><name>ldns_rdf_new_frm_str</name><argument_list>(<argument><expr><name>LDNS_RDF_TYPE_HEX</name></expr></argument>,
<argument><expr><name>hex_data_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>r</name></expr>)</condition> <block>{<block_content>
<goto>goto <name>memerror</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_rdf_set_type</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>LDNS_RDF_TYPE_UNKNOWN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>ldns_rr_push_rdf</name><argument_list>(<argument><expr><name>new</name></expr></argument>, <argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<goto>goto <name>memerror</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>hex_data_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if<condition>(<expr><name>rd_strlen</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>||</operator> <name>quoted</name></expr>)</condition> <block>{<block_content>

<switch>switch<condition>(<expr><call><name>ldns_rr_descriptor_field_type</name><argument_list>(<argument><expr><name>desc</name></expr></argument>, <argument><expr><name>r_cnt</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<case>case <expr><name>LDNS_RDF_TYPE_HEX</name></expr>:</case>
<case>case <expr><name>LDNS_RDF_TYPE_B64</name></expr>:</case>




<if_stmt><if>if <condition>(<expr><name>r_cnt</name> <operator>==</operator> <name>r_max</name> <operator>-</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>ldns_bget_token</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>, <argument><expr><name>xtok</name></expr></argument>,
<argument><expr><literal type="string">"\n"</literal></expr></argument>, <argument><expr><name>LDNS_MAX_RDFLEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>c</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>strncat</name><argument_list>(<argument><expr><name>rd</name></expr></argument>, <argument><expr><name>xtok</name></expr></argument>,
<argument><expr><name>LDNS_MAX_RDFLEN</name> <operator>-</operator>
<call><name>strlen</name><argument_list>(<argument><expr><name>rd</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>r</name> <operator>=</operator> <call><name>ldns_rdf_new_frm_str</name><argument_list>(
<argument><expr><call><name>ldns_rr_descriptor_field_type</name><argument_list>(
<argument><expr><name>desc</name></expr></argument>, <argument><expr><name>r_cnt</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>LDNS_RDF_TYPE_HIP</name></expr>:</case>









<do>do <block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>ldns_bget_token</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>,
<argument><expr><name>xtok</name></expr></argument>, <argument><expr><name>delimiters</name></expr></argument>,
<argument><expr><name>LDNS_MAX_RDFLEN</name></expr></argument>)</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>strncat</name><argument_list>(<argument><expr><name>rd</name></expr></argument>, <argument><expr><literal type="string">" "</literal></expr></argument>,
<argument><expr><name>LDNS_MAX_RDFLEN</name> <operator>-</operator>
<call><name>strlen</name><argument_list>(<argument><expr><name>rd</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>strncat</name><argument_list>(<argument><expr><name>rd</name></expr></argument>, <argument><expr><name>xtok</name></expr></argument>,
<argument><expr><name>LDNS_MAX_RDFLEN</name> <operator>-</operator>
<call><name>strlen</name><argument_list>(<argument><expr><name>rd</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>ldns_bget_token</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>,
<argument><expr><name>xtok</name></expr></argument>, <argument><expr><name>delimiters</name></expr></argument>,
<argument><expr><name>LDNS_MAX_RDFLEN</name></expr></argument>)</argument_list></call> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>strncat</name><argument_list>(<argument><expr><name>rd</name></expr></argument>, <argument><expr><literal type="string">" "</literal></expr></argument>,
<argument><expr><name>LDNS_MAX_RDFLEN</name> <operator>-</operator>
<call><name>strlen</name><argument_list>(<argument><expr><name>rd</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>strncat</name><argument_list>(<argument><expr><name>rd</name></expr></argument>, <argument><expr><name>xtok</name></expr></argument>,
<argument><expr><name>LDNS_MAX_RDFLEN</name> <operator>-</operator>
<call><name>strlen</name><argument_list>(<argument><expr><name>rd</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block> while <condition>(<expr><name>false</name></expr>)</condition>;</do>

<expr_stmt><expr><name>r</name> <operator>=</operator> <call><name>ldns_rdf_new_frm_str</name><argument_list>(
<argument><expr><call><name>ldns_rr_descriptor_field_type</name><argument_list>(
<argument><expr><name>desc</name></expr></argument>, <argument><expr><name>r_cnt</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>

<case>case <expr><name>LDNS_RDF_TYPE_DNAME</name></expr>:</case>
<expr_stmt><expr><name>r</name> <operator>=</operator> <call><name>ldns_rdf_new_frm_str</name><argument_list>(
<argument><expr><call><name>ldns_rr_descriptor_field_type</name><argument_list>(
<argument><expr><name>desc</name></expr></argument>, <argument><expr><name>r_cnt</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




<if_stmt><if>if <condition>(<expr><name>r</name> <operator>&amp;&amp;</operator> <call><name>ldns_rdf_size</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator>
<call><name>ldns_rdf_data</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index> <operator>==</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator>
<call><name>ldns_rdf_data</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">1</literal></expr>]</index> <operator>==</operator> <literal type="char">'@'</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>r</name> <operator>=</operator> <ternary><condition><expr><name>origin</name></expr> ?</condition><then> <expr><call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><name>origin</name></expr></argument>)</argument_list></call></expr>

</then><else>: <expr><operator>(</operator> <ternary><condition><expr><name>rr_type</name> <operator>==</operator> <name>LDNS_RR_TYPE_SOA</name></expr> ?</condition><then>

<expr><call><name>ldns_rdf_clone</name><argument_list>(
<argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>new</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>

</then><else>: <expr><call><name>ldns_rdf_new_frm_str</name><argument_list>(
<argument><expr><name>LDNS_RDF_TYPE_DNAME</name></expr></argument>, <argument><expr><literal type="string">"."</literal></expr></argument>)</argument_list></call></expr></else></ternary>
<operator>)</operator></expr></else></ternary></expr>;</expr_stmt>

</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>r</name> <operator>&amp;&amp;</operator> <name>rd_strlen</name> <operator>&gt;=</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>origin</name> <operator>&amp;&amp;</operator>
<operator>!</operator><call><name>ldns_dname_str_absolute</name><argument_list>(<argument><expr><name>rd</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>ldns_dname_cat</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>origin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<default>default:</default>
<expr_stmt><expr><name>r</name> <operator>=</operator> <call><name>ldns_rdf_new_frm_str</name><argument_list>(
<argument><expr><call><name>ldns_rr_descriptor_field_type</name><argument_list>(
<argument><expr><name>desc</name></expr></argument>, <argument><expr><name>r_cnt</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>r</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>status</name> <operator>=</operator> <name>LDNS_STATUS_SYNTAX_RDATA_ERR</name></expr>;</expr_stmt>
<goto>goto <name>error</name>;</goto>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_rr_push_rdf</name><argument_list>(<argument><expr><name>new</name></expr></argument>, <argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>quoted</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>ldns_buffer_available</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_buffer_skip</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>done</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

</block_content>}</block></for>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>xtok</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_buffer_free</name><argument_list>(<argument><expr><name>rr_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>rdata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_buffer_remaining</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_buffer_free</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>new</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_SYNTAX_SUPERFLUOUS_TEXT_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_buffer_free</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>question</name> <operator>&amp;&amp;</operator> <name>desc</name> <operator>&amp;&amp;</operator> <operator>!</operator><name>was_unknown_rr_format</name> <operator>&amp;&amp;</operator>
<call><name>ldns_rr_rd_count</name><argument_list>(<argument><expr><name>new</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <name>r_min</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>new</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_SYNTAX_MISSING_VALUE_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>newrr</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>newrr</name> <operator>=</operator> <name>new</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>new</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>LDNS_STATUS_OK</name></expr>;</return>

<label><name>memerror</name>:</label>
<expr_stmt><expr><name>status</name> <operator>=</operator> <name>LDNS_STATUS_MEM_ERR</name></expr>;</expr_stmt>
<label><name>error</name>:</label>
<if_stmt><if>if <condition>(<expr><name>rd_buf</name> <operator>&amp;&amp;</operator> <name><name>rd_buf</name><operator>-&gt;</operator><name>_data</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_buffer_free</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>rd_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<if_stmt><if>if <condition>(<expr><name>rr_buf</name> <operator>&amp;&amp;</operator> <name><name>rr_buf</name><operator>-&gt;</operator><name>_data</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_buffer_free</name><argument_list>(<argument><expr><name>rr_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>rr_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>owner</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>ttl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>clas</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>hex_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>hex_data_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>xtok</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>rdata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>new</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>status</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_status</name></type>
<name>ldns_rr_new_frm_str</name><parameter_list>(<parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier><modifier>*</modifier></type><name>newrr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>,
<parameter><decl><type><name>uint32_t</name></type> <name>default_ttl</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rdf</name> <modifier>*</modifier></type><name>origin</name></decl></parameter>,
<parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type><name>prev</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>ldns_rr_new_frm_str_internal</name><argument_list>(<argument><expr><name>newrr</name></expr></argument>,
<argument><expr><name>str</name></expr></argument>,
<argument><expr><name>default_ttl</name></expr></argument>,
<argument><expr><name>origin</name></expr></argument>,
<argument><expr><name>prev</name></expr></argument>,
<argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_status</name></type>
<name>ldns_rr_new_question_frm_str</name><parameter_list>(<parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier><modifier>*</modifier></type><name>newrr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>ldns_rdf</name> <modifier>*</modifier></type><name>origin</name></decl></parameter>, <parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type><name>prev</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>ldns_rr_new_frm_str_internal</name><argument_list>(<argument><expr><name>newrr</name></expr></argument>,
<argument><expr><name>str</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>,
<argument><expr><name>origin</name></expr></argument>,
<argument><expr><name>prev</name></expr></argument>,
<argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>char</name> <modifier>*</modifier></type>
<name>ldns_strip_ws</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>line</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>s</name> <init>= <expr><name>line</name></expr></init></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>e</name></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>s</name> <operator>=</operator> <name>line</name></expr>;</init> <condition><expr><operator>*</operator><name>s</name> <operator>&amp;&amp;</operator> <call><name>isspace</name><argument_list>(<argument><expr><operator>(</operator><name>unsigned</name> <name>char</name><operator>)</operator><operator>*</operator><name>s</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>s</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<empty_stmt>;</empty_stmt></block_content></block></for>

<for>for <control>(<init><expr><name>e</name> <operator>=</operator> <call><name>strchr</name><argument_list>(<argument><expr><name>s</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</init> <condition><expr><name>e</name> <operator>&gt;</operator> <name>s</name><operator>+</operator><literal type="number">2</literal> <operator>&amp;&amp;</operator> <call><name>isspace</name><argument_list>(<argument><expr><operator>(</operator><name>unsigned</name> <name>char</name><operator>)</operator><name><name>e</name><index>[<expr><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name><name>e</name><index>[<expr><operator>-</operator><literal type="number">2</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'\\'</literal></expr>;</condition> <incr><expr><name>e</name><operator>--</operator></expr></incr>)</control><block type="pseudo"><block_content>
<empty_stmt>;</empty_stmt></block_content></block></for>
<expr_stmt><expr><operator>*</operator><name>e</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<return>return <expr><name>s</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_status</name></type>
<name>ldns_rr_new_frm_fp</name><parameter_list>(<parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier><modifier>*</modifier></type><name>newrr</name></decl></parameter>, <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>ttl</name></decl></parameter>, <parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type><name>origin</name></decl></parameter>, <parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type><name>prev</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>ldns_rr_new_frm_fp_l</name><argument_list>(<argument><expr><name>newrr</name></expr></argument>, <argument><expr><name>fp</name></expr></argument>, <argument><expr><name>ttl</name></expr></argument>, <argument><expr><name>origin</name></expr></argument>, <argument><expr><name>prev</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_status</name></type>
<name>ldns_rr_new_frm_fp_l</name><parameter_list>(<parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier><modifier>*</modifier></type><name>newrr</name></decl></parameter>, <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type><name>default_ttl</name></decl></parameter>, <parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type><name>origin</name></decl></parameter>, <parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type><name>prev</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>line_nr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>line</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>endptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>ttl</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>tmp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_status</name></type> <name>s</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ssize_t</name></type> <name>size</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>default_ttl</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>ttl</name> <operator>=</operator> <operator>*</operator><name>default_ttl</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>ttl</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>line</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>char</name></expr></argument>, <argument><expr><name>LDNS_MAX_LINELEN</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>line</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_MEM_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><operator>(</operator><name>size</name> <operator>=</operator> <call><name>ldns_fget_token_l</name><argument_list>(<argument><expr><name>fp</name></expr></argument>, <argument><expr><name>line</name></expr></argument>, <argument><expr><name>LDNS_PARSE_SKIP_SPACE</name></expr></argument>, <argument><expr><name>LDNS_MAX_LINELEN</name></expr></argument>, <argument><expr><name>line_nr</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




<return>return <expr><name>LDNS_STATUS_SYNTAX_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>




<if_stmt><if>if <condition>(<expr><name>size</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_SYNTAX_EMPTY</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>strncmp</name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><literal type="string">"$ORIGIN"</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <call><name>isspace</name><argument_list>(<argument><expr><operator>(</operator><name>unsigned</name> <name>char</name><operator>)</operator><name><name>line</name><index>[<expr><literal type="number">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>*</operator><name>origin</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><operator>*</operator><name>origin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>origin</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <call><name>ldns_rdf_new_frm_str</name><argument_list>(<argument><expr><name>LDNS_RDF_TYPE_DNAME</name></expr></argument>,
<argument><expr><call><name>ldns_strip_ws</name><argument_list>(<argument><expr><name>line</name> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>tmp</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_SYNTAX_DNAME_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><operator>*</operator><name>origin</name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>
<expr_stmt><expr><name>s</name> <operator>=</operator> <name>LDNS_STATUS_SYNTAX_ORIGIN</name></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>strncmp</name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><literal type="string">"$TTL"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <call><name>isspace</name><argument_list>(<argument><expr><operator>(</operator><name>unsigned</name> <name>char</name><operator>)</operator><name><name>line</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>default_ttl</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>default_ttl</name> <operator>=</operator> <call><name>ldns_str2period</name><argument_list>(
<argument><expr><call><name>ldns_strip_ws</name><argument_list>(<argument><expr><name>line</name> <operator>+</operator> <literal type="number">5</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><operator>&amp;</operator><name>endptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>s</name> <operator>=</operator> <name>LDNS_STATUS_SYNTAX_TTL</name></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>strncmp</name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><literal type="string">"$INCLUDE"</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>s</name> <operator>=</operator> <name>LDNS_STATUS_SYNTAX_INCLUDE</name></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><operator>!</operator><operator>*</operator><call><name>ldns_strip_ws</name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_SYNTAX_EMPTY</name></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>origin</name> <operator>&amp;&amp;</operator> <operator>*</operator><name>origin</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>s</name> <operator>=</operator> <call><name>ldns_rr_new_frm_str</name><argument_list>(<argument><expr><operator>&amp;</operator><name>rr</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name><operator>*</operator><operator>)</operator> <name>line</name></expr></argument>, <argument><expr><name>ttl</name></expr></argument>, <argument><expr><operator>*</operator><name>origin</name></expr></argument>, <argument><expr><name>prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>s</name> <operator>=</operator> <call><name>ldns_rr_new_frm_str</name><argument_list>(<argument><expr><operator>&amp;</operator><name>rr</name></expr></argument>, <argument><expr><operator>(</operator><specifier>const</specifier> <name>char</name><operator>*</operator><operator>)</operator> <name>line</name></expr></argument>, <argument><expr><name>ttl</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>s</name> <operator>==</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>newrr</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>newrr</name> <operator>=</operator> <name>rr</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>s</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_rr_set_owner</name><parameter_list>(<parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>, <parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>owner</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>rr</name><operator>-&gt;</operator><name>_owner</name></name> <operator>=</operator> <name>owner</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_rr_set_question</name><parameter_list>(<parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>question</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>rr</name><operator>-&gt;</operator><name>_rr_question</name></name> <operator>=</operator> <name>question</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_rr_set_ttl</name><parameter_list>(<parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>ttl</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>rr</name><operator>-&gt;</operator><name>_ttl</name></name> <operator>=</operator> <name>ttl</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_rr_set_rd_count</name><parameter_list>(<parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>rr</name><operator>-&gt;</operator><name>_rd_count</name></name> <operator>=</operator> <name>count</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_rr_set_type</name><parameter_list>(<parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>, <parameter><decl><type><name>ldns_rr_type</name></type> <name>rr_type</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>rr</name><operator>-&gt;</operator><name>_rr_type</name></name> <operator>=</operator> <name>rr_type</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_rr_set_class</name><parameter_list>(<parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>, <parameter><decl><type><name>ldns_rr_class</name></type> <name>rr_class</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>rr</name><operator>-&gt;</operator><name>_rr_class</name></name> <operator>=</operator> <name>rr_class</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>ldns_rdf</name> <modifier>*</modifier></type>
<name>ldns_rr_set_rdf</name><parameter_list>(<parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rdf</name> <modifier>*</modifier></type><name>f</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>position</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>rd_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>pop</name></decl>;</decl_stmt>

<expr_stmt><expr><name>rd_count</name> <operator>=</operator> <call><name>ldns_rr_rd_count</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>position</name> <operator>&lt;</operator> <name>rd_count</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>pop</name> <operator>=</operator> <name><name>rr</name><operator>-&gt;</operator><name>_rdata_fields</name><index>[<expr><name>position</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rr</name><operator>-&gt;</operator><name>_rdata_fields</name><index>[<expr><name>position</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>ldns_rdf</name><operator>*</operator><operator>)</operator><name>f</name></expr>;</expr_stmt>
<return>return <expr><name>pop</name></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_rr_push_rdf</name><parameter_list>(<parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rdf</name> <modifier>*</modifier></type><name>f</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>rd_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type><name>rdata_fields</name></decl>;</decl_stmt>

<expr_stmt><expr><name>rd_count</name> <operator>=</operator> <call><name>ldns_rr_rd_count</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>rdata_fields</name> <operator>=</operator> <call><name>LDNS_XREALLOC</name><argument_list>(
<argument><expr><name><name>rr</name><operator>-&gt;</operator><name>_rdata_fields</name></name></expr></argument>, <argument><expr><name>ldns_rdf</name> <operator>*</operator></expr></argument>, <argument><expr><name>rd_count</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>rdata_fields</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><name><name>rr</name><operator>-&gt;</operator><name>_rdata_fields</name></name> <operator>=</operator> <name>rdata_fields</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rr</name><operator>-&gt;</operator><name>_rdata_fields</name><index>[<expr><name>rd_count</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>ldns_rdf</name><operator>*</operator><operator>)</operator><name>f</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_rr_set_rd_count</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><name>rd_count</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rdf</name> <modifier>*</modifier></type>
<name>ldns_rr_pop_rdf</name><parameter_list>(<parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>rd_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>pop</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name><modifier>*</modifier><modifier>*</modifier></type> <name>newrd</name></decl>;</decl_stmt>

<expr_stmt><expr><name>rd_count</name> <operator>=</operator> <call><name>ldns_rr_rd_count</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>rd_count</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>pop</name> <operator>=</operator> <name><name>rr</name><operator>-&gt;</operator><name>_rdata_fields</name><index>[<expr><name>rd_count</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>


<if_stmt><if>if<condition>(<expr><name>rd_count</name> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>newrd</name> <operator>=</operator> <call><name>LDNS_XREALLOC</name><argument_list>(
<argument><expr><name><name>rr</name><operator>-&gt;</operator><name>_rdata_fields</name></name></expr></argument>, <argument><expr><name>ldns_rdf</name> <operator>*</operator></expr></argument>, <argument><expr><name>rd_count</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>newrd</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>rr</name><operator>-&gt;</operator><name>_rdata_fields</name></name> <operator>=</operator> <name>newrd</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>rr</name><operator>-&gt;</operator><name>_rdata_fields</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>ldns_rr_set_rd_count</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><name>rd_count</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>pop</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rdf</name> <modifier>*</modifier></type>
<name>ldns_rr_rdf</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>nr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>rr</name> <operator>&amp;&amp;</operator> <name>nr</name> <operator>&lt;</operator> <call><name>ldns_rr_rd_count</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><name><name>rr</name><operator>-&gt;</operator><name>_rdata_fields</name><index>[<expr><name>nr</name></expr>]</index></name></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>ldns_rdf</name> <modifier>*</modifier></type>
<name>ldns_rr_owner</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>rr</name><operator>-&gt;</operator><name>_owner</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_rr_is_question</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>rr</name><operator>-&gt;</operator><name>_rr_question</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>uint32_t</name></type>
<name>ldns_rr_ttl</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>rr</name><operator>-&gt;</operator><name>_ttl</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>size_t</name></type>
<name>ldns_rr_rd_count</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>rr</name><operator>-&gt;</operator><name>_rd_count</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rr_type</name></type>
<name>ldns_rr_get_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>rr</name><operator>-&gt;</operator><name>_rr_type</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rr_class</name></type>
<name>ldns_rr_get_class</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>rr</name><operator>-&gt;</operator><name>_rr_class</name></name></expr>;</return>
</block_content>}</block></function>



<function><type><name>size_t</name></type>
<name>ldns_rr_list_rr_count</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>rr_list</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name><name>rr_list</name><operator>-&gt;</operator><name>_rr_count</name></name></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>ldns_rr</name> <modifier>*</modifier></type>
<name>ldns_rr_list_set_rr</name><parameter_list>(<parameter><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>old</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>count</name> <operator>&gt;</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>old</name> <operator>=</operator> <call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>, <argument><expr><name>count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name><name>rr_list</name><operator>-&gt;</operator><name>_rrs</name><index>[<expr><name>count</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>ldns_rr</name><operator>*</operator><operator>)</operator><name>r</name></expr>;</expr_stmt>
<return>return <expr><name>old</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_rr_list_set_rr_count</name><parameter_list>(<parameter><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>count</name> <operator>&lt;=</operator> <name><name>rr_list</name><operator>-&gt;</operator><name>_rr_capacity</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rr_list</name><operator>-&gt;</operator><name>_rr_count</name></name> <operator>=</operator> <name>count</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>ldns_rr</name> <modifier>*</modifier></type>
<name>ldns_rr_list_rr</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>nr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>nr</name> <operator>&lt;</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><name><name>rr_list</name><operator>-&gt;</operator><name>_rrs</name><index>[<expr><name>nr</name></expr>]</index></name></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>ldns_rr_list</name> <modifier>*</modifier></type>
<name>ldns_rr_list_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name> <init>= <expr><call><name>LDNS_MALLOC</name><argument_list>(<argument><expr><name>ldns_rr_list</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>rr_list</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>rr_list</name><operator>-&gt;</operator><name>_rr_count</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rr_list</name><operator>-&gt;</operator><name>_rr_capacity</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rr_list</name><operator>-&gt;</operator><name>_rrs</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<return>return <expr><name>rr_list</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_rr_list_free</name><parameter_list>(<parameter><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>rr_list</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>rr_list</name><operator>-&gt;</operator><name>_rrs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_rr_list_deep_free</name><parameter_list>(<parameter><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>rr_list</name></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>rr_list</name><operator>-&gt;</operator><name>_rrs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>



<function><type><name>bool</name></type>
<name>ldns_rr_list_cat</name><parameter_list>(<parameter><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>left</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rr_list</name> <modifier>*</modifier></type><name>right</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>r_rr_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>left</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>right</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>r_rr_count</name> <operator>=</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>right</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>r_rr_count</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>


<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>r_rr_count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_list_push_rr</name><argument_list>(<argument><expr><name>left</name></expr></argument>, <argument><expr><call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>right</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rr_list</name> <modifier>*</modifier></type>
<name>ldns_rr_list_cat_clone</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr_list</name> <modifier>*</modifier></type><name>left</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rr_list</name> <modifier>*</modifier></type><name>right</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>l_rr_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>r_rr_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>cat</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>left</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>l_rr_count</name> <operator>=</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<return>return <expr><call><name>ldns_rr_list_clone</name><argument_list>(<argument><expr><name>right</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name>right</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>r_rr_count</name> <operator>=</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>right</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>r_rr_count</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>cat</name> <operator>=</operator> <call><name>ldns_rr_list_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>cat</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>l_rr_count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_list_push_rr</name><argument_list>(<argument><expr><name>cat</name></expr></argument>,
<argument><expr><call><name>ldns_rr_clone</name><argument_list>(<argument><expr><call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>left</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>r_rr_count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_list_push_rr</name><argument_list>(<argument><expr><name>cat</name></expr></argument>,
<argument><expr><call><name>ldns_rr_clone</name><argument_list>(<argument><expr><call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>right</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<return>return <expr><name>cat</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rr_list</name> <modifier>*</modifier></type>
<name>ldns_rr_list_subtype_by_rdf</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr_list</name> <modifier>*</modifier></type><name>l</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rdf</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>pos</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>subtyped</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>list_rdf</name></decl>;</decl_stmt>

<expr_stmt><expr><name>subtyped</name> <operator>=</operator> <call><name>ldns_rr_list_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>l</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>list_rdf</name> <operator>=</operator> <call><name>ldns_rr_rdf</name><argument_list>(
<argument><expr><call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>l</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>list_rdf</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ldns_rr_list_deep_free</name><argument_list>(<argument><expr><name>subtyped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ldns_rdf_compare</name><argument_list>(<argument><expr><name>list_rdf</name></expr></argument>, <argument><expr><name>r</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ldns_rr_list_push_rr</name><argument_list>(<argument><expr><name>subtyped</name></expr></argument>,
<argument><expr><call><name>ldns_rr_clone</name><argument_list>(<argument><expr><call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>l</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>subtyped</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>subtyped</name></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_list_free</name><argument_list>(<argument><expr><name>subtyped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_rr_list_push_rr</name><parameter_list>(<parameter><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>rr_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>cap</name></decl>;</decl_stmt>

<expr_stmt><expr><name>rr_count</name> <operator>=</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>cap</name> <operator>=</operator> <name><name>rr_list</name><operator>-&gt;</operator><name>_rr_capacity</name></name></expr>;</expr_stmt>


<if_stmt><if>if<condition>(<expr><name>rr_count</name><operator>+</operator><literal type="number">1</literal> <operator>&gt;</operator> <name>cap</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier><modifier>*</modifier></type><name>rrs</name></decl>;</decl_stmt>

<if_stmt><if>if<condition>(<expr><name>cap</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>cap</name> <operator>=</operator> <name>LDNS_RRLIST_INIT</name></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <expr_stmt><expr><name>cap</name> <operator>*=</operator> <literal type="number">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
<expr_stmt><expr><name>rrs</name> <operator>=</operator> <call><name>LDNS_XREALLOC</name><argument_list>(<argument><expr><name><name>rr_list</name><operator>-&gt;</operator><name>_rrs</name></name></expr></argument>, <argument><expr><name>ldns_rr</name> <operator>*</operator></expr></argument>, <argument><expr><name>cap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>rrs</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>rr_list</name><operator>-&gt;</operator><name>_rrs</name></name> <operator>=</operator> <name>rrs</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rr_list</name><operator>-&gt;</operator><name>_rr_capacity</name></name> <operator>=</operator> <name>cap</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><name><name>rr_list</name><operator>-&gt;</operator><name>_rrs</name><index>[<expr><name>rr_count</name></expr>]</index></name> <operator>=</operator> <operator>(</operator><name>ldns_rr</name><operator>*</operator><operator>)</operator><name>rr</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_rr_list_set_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>, <argument><expr><name>rr_count</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_rr_list_push_rr_list</name><parameter_list>(<parameter><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rr_list</name> <modifier>*</modifier></type><name>push_list</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>push_list</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>ldns_rr_list_push_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>,
<argument><expr><call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>push_list</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rr</name> <modifier>*</modifier></type>
<name>ldns_rr_list_pop_rr</name><parameter_list>(<parameter><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>rr_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>cap</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>pop</name></decl>;</decl_stmt>

<expr_stmt><expr><name>rr_count</name> <operator>=</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>rr_count</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>cap</name> <operator>=</operator> <name><name>rr_list</name><operator>-&gt;</operator><name>_rr_capacity</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>pop</name> <operator>=</operator> <call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>, <argument><expr><name>rr_count</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if<condition>(<expr><name>cap</name> <operator>&gt;</operator> <name>LDNS_RRLIST_INIT</name> <operator>&amp;&amp;</operator> <name>rr_count</name><operator>-</operator><literal type="number">1</literal> <operator>&lt;=</operator> <name>cap</name><operator>/</operator><literal type="number">2</literal></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr</name><modifier>*</modifier><modifier>*</modifier></type> <name>a</name></decl>;</decl_stmt>
<expr_stmt><expr><name>cap</name> <operator>/=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>a</name> <operator>=</operator> <call><name>LDNS_XREALLOC</name><argument_list>(<argument><expr><name><name>rr_list</name><operator>-&gt;</operator><name>_rrs</name></name></expr></argument>, <argument><expr><name>ldns_rr</name> <operator>*</operator></expr></argument>, <argument><expr><name>cap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>a</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>rr_list</name><operator>-&gt;</operator><name>_rrs</name></name> <operator>=</operator> <name>a</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rr_list</name><operator>-&gt;</operator><name>_rr_capacity</name></name> <operator>=</operator> <name>cap</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ldns_rr_list_set_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>, <argument><expr><name>rr_count</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>pop</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rr_list</name> <modifier>*</modifier></type>
<name>ldns_rr_list_pop_rr_list</name><parameter_list>(<parameter><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>howmany</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>popped</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>p</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><name>howmany</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>popped</name> <operator>=</operator> <call><name>ldns_rr_list_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>popped</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<while>while<condition>(<expr><name>i</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator>
<operator>(</operator><name>p</name> <operator>=</operator> <call><name>ldns_rr_list_pop_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>!=</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_list_push_rr</name><argument_list>(<argument><expr><name>popped</name></expr></argument>, <argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>i</name><operator>--</operator></expr>;</expr_stmt>
</block_content>}</block></while>

<if_stmt><if>if <condition>(<expr><name>i</name> <operator>==</operator> <name>howmany</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_list_free</name><argument_list>(<argument><expr><name>popped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<return>return <expr><name>popped</name></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>


<function><type><name>bool</name></type>
<name>ldns_rr_list_contains_rr</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>rr_list</name> <operator>||</operator> <operator>!</operator><name>rr</name> <operator>||</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>rr</name> <operator>==</operator> <call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>ldns_rr_compare</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_is_rrset</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr_type</name></type> <name>t</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr_class</name></type> <name>c</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>o</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>tmp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>rr_list</name> <operator>||</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>tmp</name> <operator>=</operator> <call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>t</name> <operator>=</operator> <call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>ldns_rr_get_class</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>o</name> <operator>=</operator> <call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">1</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>t</name> <operator>!=</operator> <call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>c</name> <operator>!=</operator> <call><name>ldns_rr_get_class</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rdf_compare</name><argument_list>(<argument><expr><name>o</name></expr></argument>, <argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<return>return <expr><name>true</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_rr_set_push_rr</name><parameter_list>(<parameter><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name></decl></parameter>, <parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>rr_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>last</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>rr</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>rr_count</name> <operator>=</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>rr_count</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>


<return>return <expr><call><name>ldns_rr_list_push_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>, <argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>

<expr_stmt><expr><name>last</name> <operator>=</operator> <call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>, <argument><expr><name>rr_count</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_get_class</name><argument_list>(<argument><expr><name>last</name></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>ldns_rr_get_class</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>last</name></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_RR_TYPE_RRSIG</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_ttl</name><argument_list>(<argument><expr><name>last</name></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>ldns_rr_ttl</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rdf_compare</name><argument_list>(<argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>last</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>rr_count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><call><name>ldns_rr_compare</name><argument_list>(
<argument><expr><call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>rr</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>

<return>return <expr><call><name>ldns_rr_list_push_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>, <argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>ldns_rr</name> <modifier>*</modifier></type>
<name>ldns_rr_set_pop_rr</name><parameter_list>(<parameter><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>ldns_rr_list_pop_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rr_list</name> <modifier>*</modifier></type>
<name>ldns_rr_list_pop_rrset</name><parameter_list>(<parameter><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>rrset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>last_rr</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>next_rr</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>rr_list</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>rrset</name> <operator>=</operator> <call><name>ldns_rr_list_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>last_rr</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>last_rr</name> <operator>=</operator> <call><name>ldns_rr_list_pop_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>last_rr</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_list_free</name><argument_list>(<argument><expr><name>rrset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_list_push_rr</name><argument_list>(<argument><expr><name>rrset</name></expr></argument>, <argument><expr><name>last_rr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>next_rr</name> <operator>=</operator> <call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>, <argument><expr><call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>next_rr</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<while>while <condition>(<expr><name>next_rr</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(
<expr><call><name>ldns_rdf_compare</name><argument_list>(<argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>next_rr</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>last_rr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal>
<operator>&amp;&amp;</operator>
<call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>next_rr</name></expr></argument>)</argument_list></call> <operator>==</operator> <call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>last_rr</name></expr></argument>)</argument_list></call>
<operator>&amp;&amp;</operator>
<call><name>ldns_rr_get_class</name><argument_list>(<argument><expr><name>next_rr</name></expr></argument>)</argument_list></call> <operator>==</operator> <call><name>ldns_rr_get_class</name><argument_list>(<argument><expr><name>last_rr</name></expr></argument>)</argument_list></call></expr>
)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_list_push_rr</name><argument_list>(<argument><expr><name>rrset</name></expr></argument>, <argument><expr><call><name>ldns_rr_list_pop_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>last_rr</name> <operator>=</operator> <name>next_rr</name></expr>;</expr_stmt>
<expr_stmt><expr><name>next_rr</name> <operator>=</operator> <call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>, <argument><expr><call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>next_rr</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>next_rr</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></while>

<return>return <expr><name>rrset</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rr</name> <modifier>*</modifier></type>
<name>ldns_rr_clone</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>new_rr</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>rr</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>new_rr</name> <operator>=</operator> <call><name>ldns_rr_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>new_rr</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_set_owner</name><argument_list>(<argument><expr><name>new_rr</name></expr></argument>, <argument><expr><call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_rr_set_ttl</name><argument_list>(<argument><expr><name>new_rr</name></expr></argument>, <argument><expr><call><name>ldns_rr_ttl</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_set_type</name><argument_list>(<argument><expr><name>new_rr</name></expr></argument>, <argument><expr><call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_set_class</name><argument_list>(<argument><expr><name>new_rr</name></expr></argument>, <argument><expr><call><name>ldns_rr_get_class</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_set_question</name><argument_list>(<argument><expr><name>new_rr</name></expr></argument>, <argument><expr><call><name>ldns_rr_is_question</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_rr_rd_count</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name>rr</name></expr></argument>,<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_push_rdf</name><argument_list>(<argument><expr><name>new_rr</name></expr></argument>, <argument><expr><call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>

<return>return <expr><name>new_rr</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rr_list</name> <modifier>*</modifier></type>
<name>ldns_rr_list_clone</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr_list</name> <modifier>*</modifier></type><name>rrlist</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>new_list</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>r</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>rrlist</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>new_list</name> <operator>=</operator> <call><name>ldns_rr_list_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>new_list</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rrlist</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>r</name> <operator>=</operator> <call><name>ldns_rr_clone</name><argument_list>(
<argument><expr><call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>rrlist</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>
)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>r</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ldns_rr_list_deep_free</name><argument_list>(<argument><expr><name>new_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_rr_list_push_rr</name><argument_list>(<argument><expr><name>new_list</name></expr></argument>, <argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<return>return <expr><name>new_list</name></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>int</name></type>
<name>qsort_schwartz_rr_compare</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>result</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr1</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>rr2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_buffer</name> <modifier>*</modifier></type><name>rr1_buf</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>rr2_buf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>ldns_schwartzian_compare_struct</name></name> <modifier>*</modifier></type><name>sa</name> <init>= <expr><operator>*</operator><operator>(</operator>struct <name>ldns_schwartzian_compare_struct</name> <operator>*</operator><operator>*</operator><operator>)</operator> <name>a</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>ldns_schwartzian_compare_struct</name></name> <modifier>*</modifier></type><name>sb</name> <init>= <expr><operator>*</operator><operator>(</operator>struct <name>ldns_schwartzian_compare_struct</name> <operator>*</operator><operator>*</operator><operator>)</operator> <name>b</name></expr></init></decl>;</decl_stmt>




<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>canonical_a</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>canonical_b</name></decl>;</decl_stmt>

<expr_stmt><expr><name>rr1</name> <operator>=</operator> <operator>(</operator><name>ldns_rr</name> <operator>*</operator><operator>)</operator> <name><name>sa</name><operator>-&gt;</operator><name>original_object</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>rr2</name> <operator>=</operator> <operator>(</operator><name>ldns_rr</name> <operator>*</operator><operator>)</operator> <name><name>sb</name><operator>-&gt;</operator><name>original_object</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>ldns_rr_compare_no_rdata</name><argument_list>(<argument><expr><name>rr1</name></expr></argument>, <argument><expr><name>rr2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>result</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sa</name><operator>-&gt;</operator><name>transformed_object</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>canonical_a</name> <operator>=</operator> <call><name>ldns_rr_clone</name><argument_list>(<argument><expr><name><name>sa</name><operator>-&gt;</operator><name>original_object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr2canonical</name><argument_list>(<argument><expr><name>canonical_a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sa</name><operator>-&gt;</operator><name>transformed_object</name></name> <operator>=</operator> <call><name>ldns_buffer_new</name><argument_list>(<argument><expr><call><name>ldns_rr_uncompressed_size</name><argument_list>(<argument><expr><name>canonical_a</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rr2buffer_wire</name><argument_list>(<argument><expr><name><name>sa</name><operator>-&gt;</operator><name>transformed_object</name></name></expr></argument>, <argument><expr><name>canonical_a</name></expr></argument>, <argument><expr><name>LDNS_SECTION_ANY</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_buffer_free</name><argument_list>(<argument><expr><operator>(</operator><name>ldns_buffer</name> <operator>*</operator><operator>)</operator><name><name>sa</name><operator>-&gt;</operator><name>transformed_object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sa</name><operator>-&gt;</operator><name>transformed_object</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>canonical_a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>canonical_a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>sb</name><operator>-&gt;</operator><name>transformed_object</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>canonical_b</name> <operator>=</operator> <call><name>ldns_rr_clone</name><argument_list>(<argument><expr><name><name>sb</name><operator>-&gt;</operator><name>original_object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr2canonical</name><argument_list>(<argument><expr><name>canonical_b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb</name><operator>-&gt;</operator><name>transformed_object</name></name> <operator>=</operator> <call><name>ldns_buffer_new</name><argument_list>(<argument><expr><call><name>ldns_rr_uncompressed_size</name><argument_list>(<argument><expr><name>canonical_b</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rr2buffer_wire</name><argument_list>(<argument><expr><name><name>sb</name><operator>-&gt;</operator><name>transformed_object</name></name></expr></argument>, <argument><expr><name>canonical_b</name></expr></argument>, <argument><expr><name>LDNS_SECTION_ANY</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_buffer_free</name><argument_list>(<argument><expr><operator>(</operator><name>ldns_buffer</name> <operator>*</operator><operator>)</operator><name><name>sa</name><operator>-&gt;</operator><name>transformed_object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_buffer_free</name><argument_list>(<argument><expr><operator>(</operator><name>ldns_buffer</name> <operator>*</operator><operator>)</operator><name><name>sb</name><operator>-&gt;</operator><name>transformed_object</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sa</name><operator>-&gt;</operator><name>transformed_object</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sb</name><operator>-&gt;</operator><name>transformed_object</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>canonical_b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>canonical_b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>rr1_buf</name> <operator>=</operator> <operator>(</operator><name>ldns_buffer</name> <operator>*</operator><operator>)</operator> <name><name>sa</name><operator>-&gt;</operator><name>transformed_object</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>rr2_buf</name> <operator>=</operator> <operator>(</operator><name>ldns_buffer</name> <operator>*</operator><operator>)</operator> <name><name>sb</name><operator>-&gt;</operator><name>transformed_object</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>ldns_rr_compare_wire</name><argument_list>(<argument><expr><name>rr1_buf</name></expr></argument>, <argument><expr><name>rr2_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_rr_list_sort</name><parameter_list>(<parameter><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>unsorted</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>ldns_schwartzian_compare_struct</name></name> <modifier>*</modifier><modifier>*</modifier></type><name>sortables</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>item_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>unsorted</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>item_count</name> <operator>=</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>unsorted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sortables</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr>struct <name>ldns_schwartzian_compare_struct</name> <operator>*</operator></expr></argument>,
<argument><expr><name>item_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>sortables</name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>item_count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>sortables</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr>struct <name>ldns_schwartzian_compare_struct</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name><name>sortables</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition> <block>{<block_content>

<while>while<condition>(<expr><name>i</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>i</name><operator>--</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>sortables</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></while>

<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>sortables</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name><name>sortables</name><index>[<expr><name>i</name></expr>]</index></name><operator>-&gt;</operator><name>original_object</name> <operator>=</operator> <call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>unsorted</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>sortables</name><index>[<expr><name>i</name></expr>]</index></name><operator>-&gt;</operator><name>transformed_object</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>qsort</name><argument_list>(<argument><expr><name>sortables</name></expr></argument>,
<argument><expr><name>item_count</name></expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr>struct <name>ldns_schwartzian_compare_struct</name> <operator>*</operator></expr></argument>)</argument_list></sizeof></expr></argument>,
<argument><expr><name>qsort_schwartz_rr_compare</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>item_count</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name><name>unsorted</name><operator>-&gt;</operator><name>_rrs</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>sortables</name><index>[<expr><name>i</name></expr>]</index></name><operator>-&gt;</operator><name>original_object</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>sortables</name><index>[<expr><name>i</name></expr>]</index></name><operator>-&gt;</operator><name>transformed_object</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_buffer_free</name><argument_list>(<argument><expr><name><name>sortables</name><index>[<expr><name>i</name></expr>]</index></name><operator>-&gt;</operator><name>transformed_object</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>sortables</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>sortables</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>int</name></type>
<name>ldns_rr_compare_no_rdata</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>rr1</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>rr2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>rr1_len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>rr2_len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>offset</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>rr1</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>rr2</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>rr1_len</name> <operator>=</operator> <call><name>ldns_rr_uncompressed_size</name><argument_list>(<argument><expr><name>rr1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>rr2_len</name> <operator>=</operator> <call><name>ldns_rr_uncompressed_size</name><argument_list>(<argument><expr><name>rr2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ldns_dname_compare</name><argument_list>(<argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>rr1</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>rr2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>ldns_dname_compare</name><argument_list>(<argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>rr1</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>rr2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_get_class</name><argument_list>(<argument><expr><name>rr1</name></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>ldns_rr_get_class</name><argument_list>(<argument><expr><name>rr2</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><call><name>ldns_rr_get_class</name><argument_list>(<argument><expr><name>rr1</name></expr></argument>)</argument_list></call> <operator>-</operator> <call><name>ldns_rr_get_class</name><argument_list>(<argument><expr><name>rr2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>rr1</name></expr></argument>)</argument_list></call> <operator>!=</operator> <call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>rr2</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>rr1</name></expr></argument>)</argument_list></call> <operator>-</operator> <call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>rr2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><name>offset</name> <operator>=</operator> <call><name>ldns_rdf_size</name><argument_list>(<argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>rr1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">4</literal> <operator>+</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">2</literal> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>offset</name> <operator>&gt;</operator> <name>rr1_len</name> <operator>||</operator> <name>offset</name> <operator>&gt;</operator> <name>rr2_len</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>rr1_len</name> <operator>==</operator> <name>rr2_len</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><operator>(</operator><operator>(</operator><name>int</name><operator>)</operator> <name>rr2_len</name> <operator>-</operator> <operator>(</operator><name>int</name><operator>)</operator> <name>rr1_len</name><operator>)</operator></expr>;</return>
</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>ldns_rr_compare_wire</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_buffer</name> <modifier>*</modifier></type><name>rr1_buf</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_buffer</name> <modifier>*</modifier></type><name>rr2_buf</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>rr1_len</name></decl>, <decl><type ref="prev"/><name>rr2_len</name></decl>, <decl><type ref="prev"/><name>min_len</name></decl>, <decl><type ref="prev"/><name>i</name></decl>, <decl><type ref="prev"/><name>offset</name></decl>;</decl_stmt>

<expr_stmt><expr><name>rr1_len</name> <operator>=</operator> <call><name>ldns_buffer_capacity</name><argument_list>(<argument><expr><name>rr1_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>rr2_len</name> <operator>=</operator> <call><name>ldns_buffer_capacity</name><argument_list>(<argument><expr><name>rr2_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<expr_stmt><expr><name>offset</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<while>while <condition>(<expr><name>offset</name> <operator>&lt;</operator> <name>rr1_len</name> <operator>&amp;&amp;</operator> <operator>*</operator><call><name>ldns_buffer_at</name><argument_list>(<argument><expr><name>rr1_buf</name></expr></argument>, <argument><expr><name>offset</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>offset</name> <operator>+=</operator> <operator>*</operator><call><name>ldns_buffer_at</name><argument_list>(<argument><expr><name>rr1_buf</name></expr></argument>, <argument><expr><name>offset</name></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">1</literal></expr>;</expr_stmt>
</block_content>}</block></while>


<expr_stmt><expr><name>offset</name> <operator>+=</operator> <literal type="number">11</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>min_len</name> <operator>=</operator> <ternary><condition><expr><operator>(</operator><name>rr1_len</name> <operator>&lt;</operator> <name>rr2_len</name><operator>)</operator></expr> ?</condition><then> <expr><name>rr1_len</name></expr> </then><else>: <expr><name>rr2_len</name></expr></else></ternary></expr>;</expr_stmt>

<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <name>offset</name></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>min_len</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>*</operator><call><name>ldns_buffer_at</name><argument_list>(<argument><expr><name>rr1_buf</name></expr></argument>,<argument><expr><name>i</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <operator>*</operator><call><name>ldns_buffer_at</name><argument_list>(<argument><expr><name>rr2_buf</name></expr></argument>,<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><operator>*</operator><call><name>ldns_buffer_at</name><argument_list>(<argument><expr><name>rr1_buf</name></expr></argument>,<argument><expr><name>i</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <operator>*</operator><call><name>ldns_buffer_at</name><argument_list>(<argument><expr><name>rr2_buf</name></expr></argument>,<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>+</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>


<if_stmt><if>if <condition>(<expr><name>rr1_len</name> <operator>&lt;</operator> <name>rr2_len</name></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>rr1_len</name> <operator>&gt;</operator> <name>rr2_len</name></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>+</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>

</block_content>}</block></function>

<function><type><name>int</name></type>
<name>ldns_rr_compare</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>rr1</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>rr2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>result</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>rr1_len</name></decl>, <decl><type ref="prev"/><name>rr2_len</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ldns_buffer</name> <modifier>*</modifier></type><name>rr1_buf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_buffer</name> <modifier>*</modifier></type><name>rr2_buf</name></decl>;</decl_stmt>

<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>ldns_rr_compare_no_rdata</name><argument_list>(<argument><expr><name>rr1</name></expr></argument>, <argument><expr><name>rr2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>result</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>rr1_len</name> <operator>=</operator> <call><name>ldns_rr_uncompressed_size</name><argument_list>(<argument><expr><name>rr1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>rr2_len</name> <operator>=</operator> <call><name>ldns_rr_uncompressed_size</name><argument_list>(<argument><expr><name>rr2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>rr1_buf</name> <operator>=</operator> <call><name>ldns_buffer_new</name><argument_list>(<argument><expr><name>rr1_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>rr2_buf</name> <operator>=</operator> <call><name>ldns_buffer_new</name><argument_list>(<argument><expr><name>rr2_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ldns_rr2buffer_wire_canonical</name><argument_list>(<argument><expr><name>rr1_buf</name></expr></argument>,
<argument><expr><name>rr1</name></expr></argument>,
<argument><expr><name>LDNS_SECTION_ANY</name></expr></argument>)</argument_list></call>
<operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_buffer_free</name><argument_list>(<argument><expr><name>rr1_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_buffer_free</name><argument_list>(<argument><expr><name>rr2_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rr2buffer_wire_canonical</name><argument_list>(<argument><expr><name>rr2_buf</name></expr></argument>,
<argument><expr><name>rr2</name></expr></argument>,
<argument><expr><name>LDNS_SECTION_ANY</name></expr></argument>)</argument_list></call>
<operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_buffer_free</name><argument_list>(<argument><expr><name>rr1_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_buffer_free</name><argument_list>(<argument><expr><name>rr2_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>ldns_rr_compare_wire</name><argument_list>(<argument><expr><name>rr1_buf</name></expr></argument>, <argument><expr><name>rr2_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_buffer_free</name><argument_list>(<argument><expr><name>rr1_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_buffer_free</name><argument_list>(<argument><expr><name>rr2_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>int</name></type>
<name>ldns_rr_compare_ds_dnskey</name><parameter_list>(<parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>ds</name></decl></parameter>,
<parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>dnskey</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>ds_gen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>result</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_hash</name></type> <name>algo</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>dnskey</name> <operator>||</operator> <operator>!</operator><name>ds</name> <operator>||</operator>
<call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>ds</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_RR_TYPE_DS</name> <operator>||</operator>
<call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>dnskey</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_RR_TYPE_DNSKEY</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name>ds</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>algo</name> <operator>=</operator> <call><name>ldns_rdf2native_int8</name><argument_list>(<argument><expr><call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name>ds</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ds_gen</name> <operator>=</operator> <call><name>ldns_key_rr2ds</name><argument_list>(<argument><expr><name>dnskey</name></expr></argument>, <argument><expr><name>algo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ds_gen</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>ldns_rr_compare</name><argument_list>(<argument><expr><name>ds</name></expr></argument>, <argument><expr><name>ds_gen</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>ds_gen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_rr_compare_ds</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>orr1</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>orr2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>bool</name></type> <name>result</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr1</name> <init>= <expr><call><name>ldns_rr_clone</name><argument_list>(<argument><expr><name>orr1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr2</name> <init>= <expr><call><name>ldns_rr_clone</name><argument_list>(<argument><expr><name>orr2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>


<expr_stmt><expr><call><name>ldns_rr_set_ttl</name><argument_list>(<argument><expr><name>rr1</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_set_ttl</name><argument_list>(<argument><expr><name>rr2</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>rr1</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>LDNS_RR_TYPE_DS</name> <operator>&amp;&amp;</operator>
<call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>rr2</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>LDNS_RR_TYPE_DNSKEY</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>ldns_rr_compare_ds_dnskey</name><argument_list>(<argument><expr><name>rr1</name></expr></argument>, <argument><expr><name>rr2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>rr1</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>LDNS_RR_TYPE_DNSKEY</name> <operator>&amp;&amp;</operator>
<call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>rr2</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>LDNS_RR_TYPE_DS</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>ldns_rr_compare_ds_dnskey</name><argument_list>(<argument><expr><name>rr2</name></expr></argument>, <argument><expr><name>rr1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <operator>(</operator><call><name>ldns_rr_compare</name><argument_list>(<argument><expr><name>rr1</name></expr></argument>, <argument><expr><name>rr2</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>rr1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>rr2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type>
<name>ldns_rr_list_compare</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr_list</name> <modifier>*</modifier></type><name>rrl1</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rr_list</name> <modifier>*</modifier></type><name>rrl2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>rr_cmp</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>rrl1</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>rrl2</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rrl1</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>i</name> <operator>&lt;</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rrl2</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>rr_cmp</name> <operator>=</operator> <call><name>ldns_rr_compare</name><argument_list>(<argument><expr><call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>rrl1</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>rrl2</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>rr_cmp</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>rr_cmp</name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><name>i</name> <operator>==</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rrl1</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
<name>i</name> <operator>!=</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rrl2</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>i</name> <operator>==</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rrl2</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
<name>i</name> <operator>!=</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rrl1</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>size_t</name></type>
<name>ldns_rr_uncompressed_size</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>rrsize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><name>rrsize</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_rr_rd_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>rrsize</name> <operator>+=</operator> <call><name>ldns_rdf_size</name><argument_list>(<argument><expr><call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>

<expr_stmt><expr><name>rrsize</name> <operator>+=</operator> <call><name>ldns_rdf_size</name><argument_list>(<argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>rrsize</name> <operator>+=</operator> <name>LDNS_RR_OVERHEAD</name></expr>;</expr_stmt>
<return>return <expr><name>rrsize</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_rr2canonical</name><parameter_list>(<parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>i</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>rr</name></expr>)</condition> <block>{<block_content>
<return>return;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ldns_dname2canonical</name><argument_list>(<argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>








<switch>switch<condition>(<expr><call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<case>case <expr><name>LDNS_RR_TYPE_NS</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_MD</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_MF</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_CNAME</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_SOA</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_MB</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_MG</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_MR</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_PTR</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_MINFO</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_MX</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_RP</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_AFSDB</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_RT</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_SIG</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_PX</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_NXT</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_NAPTR</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_KX</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_SRV</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_DNAME</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_A6</name></expr>:</case>
<case>case <expr><name>LDNS_RR_TYPE_RRSIG</name></expr>:</case>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_rr_rd_count</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_dname2canonical</name><argument_list>(<argument><expr><call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<return>return;</return>
<default>default:</default>

<return>return;</return>
</block_content>}</block></switch>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_rr_list2canonical</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr2canonical</name><argument_list>(<argument><expr><call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
</block_content>}</block></function>

<function><type><name>uint8_t</name></type>
<name>ldns_rr_label_count</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>rr</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><call><name>ldns_dname_label_count</name><argument_list>(
<argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_0_wireformat</name><index>[]</index></name> <init>= <expr><block>{ <expr><name>LDNS_RDF_TYPE_UNKNOWN</name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_a_wireformat</name><index>[]</index></name> <init>= <expr><block>{ <expr><name>LDNS_RDF_TYPE_A</name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_ns_wireformat</name><index>[]</index></name> <init>= <expr><block>{ <expr><name>LDNS_RDF_TYPE_DNAME</name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_md_wireformat</name><index>[]</index></name> <init>= <expr><block>{ <expr><name>LDNS_RDF_TYPE_DNAME</name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_mf_wireformat</name><index>[]</index></name> <init>= <expr><block>{ <expr><name>LDNS_RDF_TYPE_DNAME</name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_cname_wireformat</name><index>[]</index></name> <init>= <expr><block>{ <expr><name>LDNS_RDF_TYPE_DNAME</name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_soa_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_DNAME</name></expr>, <expr><name>LDNS_RDF_TYPE_DNAME</name></expr>, <expr><name>LDNS_RDF_TYPE_INT32</name></expr>,
<expr><name>LDNS_RDF_TYPE_PERIOD</name></expr>, <expr><name>LDNS_RDF_TYPE_PERIOD</name></expr>, <expr><name>LDNS_RDF_TYPE_PERIOD</name></expr>,
<expr><name>LDNS_RDF_TYPE_PERIOD</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_mb_wireformat</name><index>[]</index></name> <init>= <expr><block>{ <expr><name>LDNS_RDF_TYPE_DNAME</name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_mg_wireformat</name><index>[]</index></name> <init>= <expr><block>{ <expr><name>LDNS_RDF_TYPE_DNAME</name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_mr_wireformat</name><index>[]</index></name> <init>= <expr><block>{ <expr><name>LDNS_RDF_TYPE_DNAME</name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_wks_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_A</name></expr>, <expr><name>LDNS_RDF_TYPE_WKS</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_ptr_wireformat</name><index>[]</index></name> <init>= <expr><block>{ <expr><name>LDNS_RDF_TYPE_DNAME</name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_hinfo_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_STR</name></expr>, <expr><name>LDNS_RDF_TYPE_STR</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_minfo_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_DNAME</name></expr>, <expr><name>LDNS_RDF_TYPE_DNAME</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_mx_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>, <expr><name>LDNS_RDF_TYPE_DNAME</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_rp_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_DNAME</name></expr>, <expr><name>LDNS_RDF_TYPE_DNAME</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_afsdb_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>, <expr><name>LDNS_RDF_TYPE_DNAME</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_x25_wireformat</name><index>[]</index></name> <init>= <expr><block>{ <expr><name>LDNS_RDF_TYPE_STR</name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_isdn_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_STR</name></expr>, <expr><name>LDNS_RDF_TYPE_STR</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_rt_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>, <expr><name>LDNS_RDF_TYPE_DNAME</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_nsap_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_NSAP</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_nsap_ptr_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_STR</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_sig_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_TYPE</name></expr>, <expr><name>LDNS_RDF_TYPE_ALG</name></expr>, <expr><name>LDNS_RDF_TYPE_INT8</name></expr>, <expr><name>LDNS_RDF_TYPE_INT32</name></expr>,
<expr><name>LDNS_RDF_TYPE_TIME</name></expr>, <expr><name>LDNS_RDF_TYPE_TIME</name></expr>, <expr><name>LDNS_RDF_TYPE_INT16</name></expr>,
<expr><name>LDNS_RDF_TYPE_DNAME</name></expr>, <expr><name>LDNS_RDF_TYPE_B64</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_key_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>, <expr><name>LDNS_RDF_TYPE_INT8</name></expr>, <expr><name>LDNS_RDF_TYPE_INT8</name></expr>, <expr><name>LDNS_RDF_TYPE_B64</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_px_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>, <expr><name>LDNS_RDF_TYPE_DNAME</name></expr>, <expr><name>LDNS_RDF_TYPE_DNAME</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_gpos_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_STR</name></expr>, <expr><name>LDNS_RDF_TYPE_STR</name></expr>, <expr><name>LDNS_RDF_TYPE_STR</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_aaaa_wireformat</name><index>[]</index></name> <init>= <expr><block>{ <expr><name>LDNS_RDF_TYPE_AAAA</name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_loc_wireformat</name><index>[]</index></name> <init>= <expr><block>{ <expr><name>LDNS_RDF_TYPE_LOC</name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_nxt_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_DNAME</name></expr>, <expr><name>LDNS_RDF_TYPE_UNKNOWN</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_eid_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_HEX</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_nimloc_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_HEX</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_srv_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>, <expr><name>LDNS_RDF_TYPE_INT16</name></expr>, <expr><name>LDNS_RDF_TYPE_INT16</name></expr>, <expr><name>LDNS_RDF_TYPE_DNAME</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_atma_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_ATMA</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_naptr_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>, <expr><name>LDNS_RDF_TYPE_INT16</name></expr>, <expr><name>LDNS_RDF_TYPE_STR</name></expr>, <expr><name>LDNS_RDF_TYPE_STR</name></expr>, <expr><name>LDNS_RDF_TYPE_STR</name></expr>, <expr><name>LDNS_RDF_TYPE_DNAME</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_kx_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>, <expr><name>LDNS_RDF_TYPE_DNAME</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_cert_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_CERT_ALG</name></expr>, <expr><name>LDNS_RDF_TYPE_INT16</name></expr>, <expr><name>LDNS_RDF_TYPE_ALG</name></expr>, <expr><name>LDNS_RDF_TYPE_B64</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_a6_wireformat</name><index>[]</index></name> <init>= <expr><block>{ <expr><name>LDNS_RDF_TYPE_UNKNOWN</name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_dname_wireformat</name><index>[]</index></name> <init>= <expr><block>{ <expr><name>LDNS_RDF_TYPE_DNAME</name></expr> }</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_sink_wireformat</name><index>[]</index></name> <init>= <expr><block>{ <expr><name>LDNS_RDF_TYPE_INT8</name></expr>,
<expr><name>LDNS_RDF_TYPE_INT8</name></expr>, <expr><name>LDNS_RDF_TYPE_INT8</name></expr>, <expr><name>LDNS_RDF_TYPE_B64</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_apl_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_APL</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_ds_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>, <expr><name>LDNS_RDF_TYPE_ALG</name></expr>, <expr><name>LDNS_RDF_TYPE_INT8</name></expr>, <expr><name>LDNS_RDF_TYPE_HEX</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_sshfp_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_INT8</name></expr>, <expr><name>LDNS_RDF_TYPE_INT8</name></expr>, <expr><name>LDNS_RDF_TYPE_HEX</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_ipseckey_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_IPSECKEY</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_rrsig_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_TYPE</name></expr>, <expr><name>LDNS_RDF_TYPE_ALG</name></expr>, <expr><name>LDNS_RDF_TYPE_INT8</name></expr>, <expr><name>LDNS_RDF_TYPE_INT32</name></expr>,
<expr><name>LDNS_RDF_TYPE_TIME</name></expr>, <expr><name>LDNS_RDF_TYPE_TIME</name></expr>, <expr><name>LDNS_RDF_TYPE_INT16</name></expr>, <expr><name>LDNS_RDF_TYPE_DNAME</name></expr>, <expr><name>LDNS_RDF_TYPE_B64</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_nsec_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_DNAME</name></expr>, <expr><name>LDNS_RDF_TYPE_NSEC</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_dhcid_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_B64</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_talink_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_DNAME</name></expr>, <expr><name>LDNS_RDF_TYPE_DNAME</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>RRTYPE_OPENPGPKEY</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_openpgpkey_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_B64</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_csync_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_INT32</name></expr>, <expr><name>LDNS_RDF_TYPE_INT16</name></expr>, <expr><name>LDNS_RDF_TYPE_NSEC</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_nsec3_wireformat</name><index>[]</index></name> <init>= <expr><block>{

<expr><name>LDNS_RDF_TYPE_INT8</name></expr>, <expr><name>LDNS_RDF_TYPE_INT8</name></expr>, <expr><name>LDNS_RDF_TYPE_INT16</name></expr>, <expr><name>LDNS_RDF_TYPE_NSEC3_SALT</name></expr>, <expr><name>LDNS_RDF_TYPE_NSEC3_NEXT_OWNER</name></expr>, <expr><name>LDNS_RDF_TYPE_NSEC</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_nsec3param_wireformat</name><index>[]</index></name> <init>= <expr><block>{

<expr><name>LDNS_RDF_TYPE_INT8</name></expr>,
<expr><name>LDNS_RDF_TYPE_INT8</name></expr>,
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>,
<expr><name>LDNS_RDF_TYPE_NSEC3_SALT</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_dnskey_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>,
<expr><name>LDNS_RDF_TYPE_INT8</name></expr>,
<expr><name>LDNS_RDF_TYPE_ALG</name></expr>,
<expr><name>LDNS_RDF_TYPE_B64</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_tkey_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_DNAME</name></expr>,
<expr><name>LDNS_RDF_TYPE_TIME</name></expr>,
<expr><name>LDNS_RDF_TYPE_TIME</name></expr>,
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>,
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>,
<expr><name>LDNS_RDF_TYPE_INT16_DATA</name></expr>,
<expr><name>LDNS_RDF_TYPE_INT16_DATA</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_tsig_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_DNAME</name></expr>,
<expr><name>LDNS_RDF_TYPE_TSIGTIME</name></expr>,
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>,
<expr><name>LDNS_RDF_TYPE_INT16_DATA</name></expr>,
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>,
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>,
<expr><name>LDNS_RDF_TYPE_INT16_DATA</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_tlsa_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_CERTIFICATE_USAGE</name></expr>,
<expr><name>LDNS_RDF_TYPE_SELECTOR</name></expr>,
<expr><name>LDNS_RDF_TYPE_MATCHING_TYPE</name></expr>,
<expr><name>LDNS_RDF_TYPE_HEX</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_hip_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_HIP</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_nid_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>,
<expr><name>LDNS_RDF_TYPE_ILNP64</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_l32_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>,
<expr><name>LDNS_RDF_TYPE_A</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_l64_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>,
<expr><name>LDNS_RDF_TYPE_ILNP64</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_lp_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>,
<expr><name>LDNS_RDF_TYPE_DNAME</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_eui48_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_EUI48</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_eui64_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_EUI64</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_uri_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>,
<expr><name>LDNS_RDF_TYPE_INT16</name></expr>,
<expr><name>LDNS_RDF_TYPE_LONG_STR</name></expr>
}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>ldns_rdf_type</name></type> <name><name>type_caa_wireformat</name><index>[]</index></name> <init>= <expr><block>{
<expr><name>LDNS_RDF_TYPE_INT8</name></expr>,
<expr><name>LDNS_RDF_TYPE_TAG</name></expr>,
<expr><name>LDNS_RDF_TYPE_LONG_STR</name></expr>
}</block></expr></init></decl>;</decl_stmt>







<decl_stmt><decl><type><specifier>static</specifier> <name>ldns_rr_descriptor</name></type> <name><name>rdata_field_descriptors</name><index>[]</index></name> <init>= <expr><block>{

<expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_A</name></expr>, <expr><literal type="string">"A"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_a_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_NS</name></expr>, <expr><literal type="string">"NS"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_ns_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_MD</name></expr>, <expr><literal type="string">"MD"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_md_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_MF</name></expr>, <expr><literal type="string">"MF"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_mf_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_CNAME</name></expr>, <expr><literal type="string">"CNAME"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_cname_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_SOA</name></expr>, <expr><literal type="string">"SOA"</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><name>type_soa_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_COMPRESS</name></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_MB</name></expr>, <expr><literal type="string">"MB"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_mb_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_MG</name></expr>, <expr><literal type="string">"MG"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_mg_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_MR</name></expr>, <expr><literal type="string">"MR"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_mr_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"NULL"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_WKS</name></expr>, <expr><literal type="string">"WKS"</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>type_wks_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_PTR</name></expr>, <expr><literal type="string">"PTR"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_ptr_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_HINFO</name></expr>, <expr><literal type="string">"HINFO"</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>type_hinfo_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_MINFO</name></expr>, <expr><literal type="string">"MINFO"</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>type_minfo_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_COMPRESS</name></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_MX</name></expr>, <expr><literal type="string">"MX"</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>type_mx_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_TXT</name></expr>, <expr><literal type="string">"TXT"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>, <expr><name>LDNS_RDF_TYPE_STR</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_RP</name></expr>, <expr><literal type="string">"RP"</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>type_rp_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_AFSDB</name></expr>, <expr><literal type="string">"AFSDB"</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>type_afsdb_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_X25</name></expr>, <expr><literal type="string">"X25"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_x25_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_ISDN</name></expr>, <expr><literal type="string">"ISDN"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>type_isdn_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_RT</name></expr>, <expr><literal type="string">"RT"</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>type_rt_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_NSAP</name></expr>, <expr><literal type="string">"NSAP"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_nsap_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_NSAP_PTR</name></expr>, <expr><literal type="string">"NSAP-PTR"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_nsap_ptr_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_SIG</name></expr>, <expr><literal type="string">"SIG"</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><name>type_sig_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_KEY</name></expr>, <expr><literal type="string">"KEY"</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>type_key_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_PX</name></expr>, <expr><literal type="string">"PX"</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><name>type_px_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_GPOS</name></expr>, <expr><literal type="string">"GPOS"</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><name>type_gpos_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_AAAA</name></expr>, <expr><literal type="string">"AAAA"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_aaaa_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_LOC</name></expr>, <expr><literal type="string">"LOC"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_loc_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_NXT</name></expr>, <expr><literal type="string">"NXT"</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>type_nxt_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_EID</name></expr>, <expr><literal type="string">"EID"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_eid_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_NIMLOC</name></expr>, <expr><literal type="string">"NIMLOC"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_nimloc_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_SRV</name></expr>, <expr><literal type="string">"SRV"</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>type_srv_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_ATMA</name></expr>, <expr><literal type="string">"ATMA"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_atma_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_NAPTR</name></expr>, <expr><literal type="string">"NAPTR"</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><name>type_naptr_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_KX</name></expr>, <expr><literal type="string">"KX"</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>type_kx_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_CERT</name></expr>, <expr><literal type="string">"CERT"</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>type_cert_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_A6</name></expr>, <expr><literal type="string">"A6"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_a6_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_DNAME</name></expr>, <expr><literal type="string">"DNAME"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_dname_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_SINK</name></expr>, <expr><literal type="string">"SINK"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_sink_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_OPT</name></expr>, <expr><literal type="string">"OPT"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_APL</name></expr>, <expr><literal type="string">"APL"</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>type_apl_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_APL</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_DS</name></expr>, <expr><literal type="string">"DS"</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>type_ds_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_SSHFP</name></expr>, <expr><literal type="string">"SSHFP"</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><name>type_sshfp_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_IPSECKEY</name></expr>, <expr><literal type="string">"IPSECKEY"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_ipseckey_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_RRSIG</name></expr>, <expr><literal type="string">"RRSIG"</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><literal type="number">9</literal></expr>, <expr><name>type_rrsig_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_NSEC</name></expr>, <expr><literal type="string">"NSEC"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>type_nsec_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_DNSKEY</name></expr>, <expr><literal type="string">"DNSKEY"</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>type_dnskey_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_DHCID</name></expr>, <expr><literal type="string">"DHCID"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_dhcid_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_NSEC3</name></expr>, <expr><literal type="string">"NSEC3"</literal></expr>, <expr><literal type="number">5</literal></expr>, <expr><literal type="number">6</literal></expr>, <expr><name>type_nsec3_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_NSEC3PARAM</name></expr>, <expr><literal type="string">"NSEC3PARAM"</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>type_nsec3param_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_TLSA</name></expr>, <expr><literal type="string">"TLSA"</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>type_tlsa_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_SMIMEA</name></expr>, <expr><literal type="string">"SMIMEA"</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>type_tlsa_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE54"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,






<expr><block>{<expr><name>LDNS_RR_TYPE_HIP</name></expr>, <expr><literal type="string">"HIP"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_hip_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_DNAME</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>RRTYPE_NINFO</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr><block>{<expr><name>LDNS_RR_TYPE_NINFO</name></expr>, <expr><literal type="string">"NINFO"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>, <expr><name>LDNS_RDF_TYPE_STR</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE56"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>RRTYPE_RKEY</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr><block>{<expr><name>LDNS_RR_TYPE_RKEY</name></expr>, <expr><literal type="string">"RKEY"</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>type_key_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE57"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr><block>{<expr><name>LDNS_RR_TYPE_TALINK</name></expr>, <expr><literal type="string">"TALINK"</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>type_talink_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>,


<expr><block>{<expr><name>LDNS_RR_TYPE_CDS</name></expr>, <expr><literal type="string">"CDS"</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>type_ds_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_CDNSKEY</name></expr>, <expr><literal type="string">"CDNSKEY"</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>type_dnskey_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>RRTYPE_OPENPGPKEY</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr><block>{<expr><name>LDNS_RR_TYPE_OPENPGPKEY</name></expr>, <expr><literal type="string">"OPENPGPKEY"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_openpgpkey_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE61"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr><block>{<expr><name>LDNS_RR_TYPE_CSYNC</name></expr>, <expr><literal type="string">"CSYNC"</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><name>type_csync_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE63"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE64"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE65"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE66"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE67"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE68"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE69"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE70"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE71"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE72"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE73"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE74"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE75"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE76"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE77"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE78"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE79"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE80"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE81"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE82"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE83"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE84"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE85"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE86"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE87"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE88"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE89"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE90"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE91"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE92"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE93"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE94"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE95"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE96"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE97"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE98"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,


<expr><block>{<expr><name>LDNS_RR_TYPE_SPF</name></expr>, <expr><literal type="string">"SPF"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>, <expr><name>LDNS_RDF_TYPE_STR</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,


<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE100"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE101"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE102"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE103"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,


<expr><block>{<expr><name>LDNS_RR_TYPE_NID</name></expr>, <expr><literal type="string">"NID"</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>type_nid_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_L32</name></expr>, <expr><literal type="string">"L32"</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>type_l32_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_L64</name></expr>, <expr><literal type="string">"L64"</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>type_l64_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_LP</name></expr>, <expr><literal type="string">"LP"</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><name>type_lp_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_EUI48</name></expr>, <expr><literal type="string">"EUI48"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_eui48_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_EUI64</name></expr>, <expr><literal type="string">"EUI64"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_eui64_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE110"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE111"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE112"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE113"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE114"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE115"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE116"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE117"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE118"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE119"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE120"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE121"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE122"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE123"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE124"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE125"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE126"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE127"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE128"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE129"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE130"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE131"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE132"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE133"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE134"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE135"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE136"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE137"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE138"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE139"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE140"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE141"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE142"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE143"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE144"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE145"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE146"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE147"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE148"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE149"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE150"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE151"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE152"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE153"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE154"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE155"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE156"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE157"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE158"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE159"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE160"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE161"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE162"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE163"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE164"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE165"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE166"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE167"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE168"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE169"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE170"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE171"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE172"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE173"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE174"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE175"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE176"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE177"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE178"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE179"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE180"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE181"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE182"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE183"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE184"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE185"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE186"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE187"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE188"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE189"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE190"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE191"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE192"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE193"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE194"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE195"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE196"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE197"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE198"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE199"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE200"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE201"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE202"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE203"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE204"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE205"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE206"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE207"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE208"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE209"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE210"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE211"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE212"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE213"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE214"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE215"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE216"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE217"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE218"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE219"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE220"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE221"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE222"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE223"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE224"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE225"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE226"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE227"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE228"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE229"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE230"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE231"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE232"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE233"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE234"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE235"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE236"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE237"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE238"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE239"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE240"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE241"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE242"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE243"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE244"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE245"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE246"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE247"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE248"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,





<expr><block>{<expr><name>LDNS_RR_TYPE_TKEY</name></expr>, <expr><literal type="string">"TKEY"</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><name>type_tkey_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,




<expr><block>{<expr><name>LDNS_RR_TYPE_TSIG</name></expr>, <expr><literal type="string">"TSIG"</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><literal type="number">7</literal></expr>, <expr><name>type_tsig_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">1</literal></expr> }</block></expr>,


<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE251"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE252"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE253"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE254"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE255"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,


<expr><block>{<expr><name>LDNS_RR_TYPE_URI</name></expr>, <expr><literal type="string">"URI"</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><name>type_uri_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<expr><block>{<expr><name>LDNS_RR_TYPE_CAA</name></expr>, <expr><literal type="string">"CAA"</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><literal type="number">3</literal></expr>, <expr><name>type_caa_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>RRTYPE_AVC</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr><block>{<expr><name>LDNS_RR_TYPE_AVC</name></expr>, <expr><literal type="string">"AVC"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><name>NULL</name></expr>, <expr><name>LDNS_RDF_TYPE_STR</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE258"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>



<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>RRTYPE_TA</name></expr></argument>)</argument_list></call></expr></cpp:if>

<expr><block>{<expr><name>LDNS_RR_TYPE_TA</name></expr>, <expr><literal type="string">"TA"</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>type_ds_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr><block>{<expr><name>LDNS_RR_TYPE_NULL</name></expr>, <expr><literal type="string">"TYPE32768"</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><literal type="number">1</literal></expr>, <expr><name>type_0_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<expr><block>{<expr><name>LDNS_RR_TYPE_DLV</name></expr>, <expr><literal type="string">"DLV"</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><literal type="number">4</literal></expr>, <expr><name>type_ds_wireformat</name></expr>, <expr><name>LDNS_RDF_TYPE_NONE</name></expr>, <expr><name>LDNS_RR_NO_COMPRESS</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LDNS_RDATA_FIELD_DESCRIPTORS_COUNT</name></cpp:macro> <cpp:value>(sizeof(rdata_field_descriptors)/sizeof(rdata_field_descriptors[0]))</cpp:value></cpp:define>













<decl_stmt><decl><type><specifier>static</specifier> <name>ldns_rr_descriptor</name><modifier>*</modifier></type> <name>rdata_field_descriptors_end</name> <init>=
<expr><operator>&amp;</operator><name><name>rdata_field_descriptors</name><index>[<expr><name>LDNS_RDATA_FIELD_DESCRIPTORS_COUNT</name></expr>]</index></name></expr></init></decl>;</decl_stmt>




























<function><type><specifier>static</specifier> <name>ldns_status</name></type>
<name>ldns_rdf_bitmap_known_rr_types_set</name><parameter_list>(<parameter><decl><type><name>ldns_rdf</name><modifier>*</modifier><modifier>*</modifier></type> <name>rdf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>value</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>window</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>subtype</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name><name>windows</name><index>[<expr><literal type="number">256</literal></expr>]</index></name>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>S_SPLINT_S</name></expr></argument>)</argument_list></call></expr></cpp:if>
<init>= <expr><block>{ <expr><literal type="number">0</literal></expr> }</block></expr></init></decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr_descriptor</name><modifier>*</modifier></type> <name>d</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>sz</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name><modifier>*</modifier></type> <name>data</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name><modifier>*</modifier></type> <name>dptr</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>rdf</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<for>for <control>(<init><expr><name>d</name><operator>=</operator><name>rdata_field_descriptors</name></expr>;</init> <condition><expr><name>d</name> <operator>&lt;</operator> <name>rdata_field_descriptors_end</name></expr>;</condition> <incr><expr><name>d</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>window</name> <operator>=</operator> <name><name>d</name><operator>-&gt;</operator><name>_type</name></name> <operator>&gt;&gt;</operator> <literal type="number">8</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>subtype</name> <operator>=</operator> <name><name>d</name><operator>-&gt;</operator><name>_type</name></name> <operator>&amp;</operator> <literal type="number">0xff</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>windows</name><index>[<expr><name>window</name></expr>]</index></name> <operator>&lt;</operator> <name>subtype</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>windows</name><index>[<expr><name>window</name></expr>]</index></name> <operator>=</operator> <name>subtype</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>



<expr_stmt><expr><name>sz</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">256</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>windows</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>sz</name> <operator>+=</operator> <name><name>windows</name><index>[<expr><name>i</name></expr>]</index></name> <operator>/</operator> <literal type="number">8</literal> <operator>+</operator> <literal type="number">3</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<if_stmt><if>if <condition>(<expr><name>sz</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>


<expr_stmt><expr><name>dptr</name> <operator>=</operator> <name>data</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>uint8_t</name></expr></argument>, <argument><expr><name>sz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>memset</name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><name>value</name></expr></argument>, <argument><expr><name>sz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>data</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_MEM_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">256</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>windows</name><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>dptr</name><operator>++</operator> <operator>=</operator> <operator>(</operator><name>uint8_t</name><operator>)</operator><name>i</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>dptr</name><operator>++</operator> <operator>=</operator> <operator>(</operator><name>uint8_t</name><operator>)</operator><operator>(</operator><name><name>windows</name><index>[<expr><name>i</name></expr>]</index></name> <operator>/</operator> <literal type="number">8</literal> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>dptr</name> <operator>+=</operator> <name><name>dptr</name><index>[<expr><operator>-</operator><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><operator>*</operator><name>rdf</name> <operator>=</operator> <call><name>ldns_rdf_new</name><argument_list>(<argument><expr><name>LDNS_RDF_TYPE_BITMAP</name></expr></argument>, <argument><expr><name>sz</name></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>*</operator><name>rdf</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_MEM_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>LDNS_STATUS_OK</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_status</name></type>
<name>ldns_rdf_bitmap_known_rr_types_space</name><parameter_list>(<parameter><decl><type><name>ldns_rdf</name><modifier>*</modifier><modifier>*</modifier></type> <name>rdf</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>ldns_rdf_bitmap_known_rr_types_set</name><argument_list>(<argument><expr><name>rdf</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_status</name></type>
<name>ldns_rdf_bitmap_known_rr_types</name><parameter_list>(<parameter><decl><type><name>ldns_rdf</name><modifier>*</modifier><modifier>*</modifier></type> <name>rdf</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>ldns_rdf_bitmap_known_rr_types_set</name><argument_list>(<argument><expr><name>rdf</name></expr></argument>, <argument><expr><literal type="number">255</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>const</specifier> <name>ldns_rr_descriptor</name> <modifier>*</modifier></type>
<name>ldns_rr_descript</name><parameter_list>(<parameter><decl><type><name>uint16_t</name></type> <name>type</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>type</name> <operator>&lt;</operator> <name>LDNS_RDATA_FIELD_DESCRIPTORS_COMMON</name></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>&amp;</operator><name><name>rdata_field_descriptors</name><index>[<expr><name>type</name></expr>]</index></name></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <name>LDNS_RDATA_FIELD_DESCRIPTORS_COMMON</name></expr>;</init>
<condition><expr><name>i</name> <operator>&lt;</operator> <name>LDNS_RDATA_FIELD_DESCRIPTORS_COUNT</name></expr>;</condition>
<incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>rdata_field_descriptors</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>_type</name> <operator>==</operator> <name>type</name></expr>)</condition> <block>{<block_content>
<return>return <expr><operator>&amp;</operator><name><name>rdata_field_descriptors</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<return>return <expr><operator>&amp;</operator><name><name>rdata_field_descriptors</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>size_t</name></type>
<name>ldns_rr_descriptor_minimum</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr_descriptor</name> <modifier>*</modifier></type><name>descriptor</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>descriptor</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name><name>descriptor</name><operator>-&gt;</operator><name>_minimum</name></name></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>size_t</name></type>
<name>ldns_rr_descriptor_maximum</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr_descriptor</name> <modifier>*</modifier></type><name>descriptor</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>descriptor</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>descriptor</name><operator>-&gt;</operator><name>_variable</name></name> <operator>!=</operator> <name>LDNS_RDF_TYPE_NONE</name></expr>)</condition> <block>{<block_content>

<return>return <expr><name>UINT_MAX</name></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<return>return <expr><name><name>descriptor</name><operator>-&gt;</operator><name>_maximum</name></name></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>ldns_rdf_type</name></type>
<name>ldns_rr_descriptor_field_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr_descriptor</name> <modifier>*</modifier></type><name>descriptor</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>index</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>descriptor</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>index</name> <operator>&lt;</operator> <name><name>descriptor</name><operator>-&gt;</operator><name>_maximum</name></name>
<operator>||</operator> <name><name>descriptor</name><operator>-&gt;</operator><name>_variable</name></name> <operator>!=</operator> <name>LDNS_RDF_TYPE_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>index</name> <operator>&lt;</operator> <name><name>descriptor</name><operator>-&gt;</operator><name>_maximum</name></name></expr>)</condition> <block>{<block_content>
<return>return <expr><name><name>descriptor</name><operator>-&gt;</operator><name>_wireformat</name><index>[<expr><name>index</name></expr>]</index></name></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<return>return <expr><name><name>descriptor</name><operator>-&gt;</operator><name>_variable</name></name></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>ldns_rr_type</name></type>
<name>ldns_get_rr_type_by_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>desc_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>ldns_rr_descriptor</name> <modifier>*</modifier></type><name>desc</name></decl>;</decl_stmt>


<if_stmt><if>if <condition>(<expr><call><name>strlen</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">4</literal> <operator>&amp;&amp;</operator> <call><name>strncasecmp</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"TYPE"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><call><name>atoi</name><argument_list>(<argument><expr><name>name</name> <operator>+</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if></if_stmt>


<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <operator>(</operator><name>unsigned</name> <name>int</name><operator>)</operator> <name>LDNS_RDATA_FIELD_DESCRIPTORS_COUNT</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>desc</name> <operator>=</operator> <operator>&amp;</operator><name><name>rdata_field_descriptors</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>desc_name</name> <operator>=</operator> <name><name>desc</name><operator>-&gt;</operator><name>_name</name></name></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>desc_name</name> <operator>&amp;&amp;</operator>
<call><name>strlen</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call> <operator>==</operator> <call><name>strlen</name><argument_list>(<argument><expr><name>desc_name</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator>
<call><name>strncasecmp</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>desc_name</name></expr></argument>, <argument><expr><call><name>strlen</name><argument_list>(<argument><expr><name>desc_name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<return>return <expr><name><name>desc</name><operator>-&gt;</operator><name>_type</name></name></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>


<if_stmt><if>if <condition>(<expr><call><name>strlen</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">4</literal> <operator>&amp;&amp;</operator> <call><name>strncasecmp</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"IXFR"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">251</literal></expr>;</return>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>strlen</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">4</literal> <operator>&amp;&amp;</operator> <call><name>strncasecmp</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"AXFR"</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">252</literal></expr>;</return>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>strlen</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">5</literal> <operator>&amp;&amp;</operator> <call><name>strncasecmp</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"MAILB"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">253</literal></expr>;</return>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>strlen</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">5</literal> <operator>&amp;&amp;</operator> <call><name>strncasecmp</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"MAILA"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">254</literal></expr>;</return>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>strlen</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">3</literal> <operator>&amp;&amp;</operator> <call><name>strncasecmp</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"ANY"</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">255</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rr_class</name></type>
<name>ldns_get_rr_class_by_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_lookup_table</name> <modifier>*</modifier></type><name>lt</name></decl>;</decl_stmt>


<if_stmt><if>if <condition>(<expr><call><name>strlen</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">5</literal> <operator>&amp;&amp;</operator> <call><name>strncasecmp</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><literal type="string">"CLASS"</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><call><name>atoi</name><argument_list>(<argument><expr><name>name</name> <operator>+</operator> <literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><name>lt</name> <operator>=</operator> <call><name>ldns_lookup_by_name</name><argument_list>(<argument><expr><name>ldns_rr_classes</name></expr></argument>, <argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>lt</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name><name>lt</name><operator>-&gt;</operator><name>id</name></name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>


<function><type><name>ldns_rr_type</name></type>
<name>ldns_rdf2rr_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rdf</name> <modifier>*</modifier></type><name>rd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr_type</name></type> <name>r</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>rd</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ldns_rdf_get_type</name><argument_list>(<argument><expr><name>rd</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_RDF_TYPE_TYPE</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>r</name> <operator>=</operator> <operator>(</operator><name>ldns_rr_type</name><operator>)</operator> <call><name>ldns_rdf2native_int16</name><argument_list>(<argument><expr><name>rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rr_type</name></type>
<name>ldns_rr_list_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>rr_list</name> <operator>&amp;&amp;</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>ldns_rdf</name> <modifier>*</modifier></type>
<name>ldns_rr_list_owner</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr_list</name> <modifier>*</modifier></type><name>rr_list</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>rr_list</name> <operator>&amp;&amp;</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>rr_list</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>
</unit>
