<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/ldns/higher.c">












<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ldns/config.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ldns/ldns.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_SSL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;openssl/ssl.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;openssl/sha.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><name>ldns_rr_list</name> <modifier>*</modifier></type>
<name>ldns_get_rr_list_addr_by_name</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rdf</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,
<parameter><decl><type><name>ldns_rr_class</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_pkt</name> <modifier>*</modifier></type><name>pkt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>aaaa</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>a</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>result</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>hostsfilenames</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>ip6</name></decl>;</decl_stmt>

<expr_stmt><expr><name>a</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>aaaa</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>res</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rdf_get_type</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_RDF_TYPE_DNAME</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>ip6</name> <operator>=</operator> <call><name>ldns_resolver_ip6</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>ldns_resolver_set_ip6</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>LDNS_RESOLV_INETANY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>hostsfilenames</name> <operator>=</operator> <call><name>ldns_get_rr_list_hosts_frm_file</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>hostsfilenames</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rdf_compare</name><argument_list>(<argument><expr><name>name</name></expr></argument>,
<argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>hostsfilenames</name></expr></argument>,
<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>result</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>ldns_rr_list_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_rr_list_push_rr</name><argument_list>(<argument><expr><name>result</name></expr></argument>,
<argument><expr><call><name>ldns_rr_clone</name><argument_list>(<argument><expr><call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>hostsfilenames</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>ldns_rr_list_deep_free</name><argument_list>(<argument><expr><name>hostsfilenames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>result</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><name>pkt</name> <operator>=</operator> <call><name>ldns_resolver_query</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>LDNS_RR_TYPE_AAAA</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>flags</name> <operator>|</operator> <name>LDNS_RD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>pkt</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>aaaa</name> <operator>=</operator> <call><name>ldns_pkt_rr_list_by_type</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>, <argument><expr><name>LDNS_RR_TYPE_AAAA</name></expr></argument>,
<argument><expr><name>LDNS_SECTION_ANSWER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>pkt</name> <operator>=</operator> <call><name>ldns_resolver_query</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>LDNS_RR_TYPE_A</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>flags</name> <operator>|</operator> <name>LDNS_RD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>pkt</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>a</name> <operator>=</operator> <call><name>ldns_pkt_rr_list_by_type</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>, <argument><expr><name>LDNS_RR_TYPE_A</name></expr></argument>, <argument><expr><name>LDNS_SECTION_ANSWER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_ip6</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>ip6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>aaaa</name> <operator>&amp;&amp;</operator> <name>a</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>ldns_rr_list_cat_clone</name><argument_list>(<argument><expr><name>aaaa</name></expr></argument>, <argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_list_deep_free</name><argument_list>(<argument><expr><name>aaaa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_list_deep_free</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>aaaa</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>ldns_rr_list_clone</name><argument_list>(<argument><expr><name>aaaa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>a</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>result</name> <operator>=</operator> <call><name>ldns_rr_list_clone</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ldns_rr_list_deep_free</name><argument_list>(<argument><expr><name>aaaa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_list_deep_free</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rr_list</name> <modifier>*</modifier></type>
<name>ldns_get_rr_list_name_by_addr</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rdf</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>,
<parameter><decl><type><name>ldns_rr_class</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_pkt</name> <modifier>*</modifier></type><name>pkt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>names</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>

<expr_stmt><expr><name>names</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>res</name> <operator>||</operator> <operator>!</operator><name>addr</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ldns_rdf_get_type</name><argument_list>(<argument><expr><name>addr</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_RDF_TYPE_A</name> <operator>&amp;&amp;</operator>
<call><name>ldns_rdf_get_type</name><argument_list>(<argument><expr><name>addr</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_RDF_TYPE_AAAA</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>name</name> <operator>=</operator> <call><name>ldns_rdf_address_reverse</name><argument_list>(<argument><expr><name>addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>pkt</name> <operator>=</operator> <call><name>ldns_resolver_query</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>LDNS_RR_TYPE_PTR</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>flags</name> <operator>|</operator> <name>LDNS_RD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>pkt</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>names</name> <operator>=</operator> <call><name>ldns_pkt_rr_list_by_type</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>,
<argument><expr><name>LDNS_RR_TYPE_PTR</name></expr></argument>, <argument><expr><name>LDNS_SECTION_ANSWER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>names</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>ldns_rr_list</name> <modifier>*</modifier></type>
<name>ldns_get_rr_list_hosts_frm_fp</name><parameter_list>(<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>ldns_get_rr_list_hosts_frm_fp_l</name><argument_list>(<argument><expr><name>fp</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rr_list</name> <modifier>*</modifier></type>
<name>ldns_get_rr_list_hosts_frm_fp_l</name><parameter_list>(<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>line_nr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ssize_t</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>line</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>word</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>rr_str</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_buffer</name> <modifier>*</modifier></type><name>linebuf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>list</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>tmp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>ip6</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_status</name></type> <name>parse_result</name></decl>;</decl_stmt>

<expr_stmt><expr><name>line</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>char</name></expr></argument>, <argument><expr><name>LDNS_MAX_LINELEN</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>word</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>char</name></expr></argument>, <argument><expr><name>LDNS_MAX_LINELEN</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>addr</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>char</name></expr></argument>, <argument><expr><name>LDNS_MAX_LINELEN</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>rr_str</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>char</name></expr></argument>, <argument><expr><name>LDNS_MAX_LINELEN</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ip6</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<expr_stmt><expr><name>list</name> <operator>=</operator> <call><name>ldns_rr_list_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>rr</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>line</name> <operator>||</operator> <operator>!</operator><name>word</name> <operator>||</operator> <operator>!</operator><name>addr</name> <operator>||</operator> <operator>!</operator><name>rr_str</name> <operator>||</operator> <operator>!</operator><name>list</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>word</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>rr_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_list_free</name><argument_list>(<argument><expr><name>list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <call><name>ldns_fget_token_l</name><argument_list>(<argument><expr><name>fp</name></expr></argument>, <argument><expr><name>line</name></expr></argument>, <argument><expr><literal type="string">"\n"</literal></expr></argument>, <argument><expr><name>LDNS_MAX_LINELEN</name></expr></argument>, <argument><expr><name>line_nr</name></expr></argument>)</argument_list></call></expr>;</init>
<condition><expr><name>i</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name> <operator>=</operator> <call><name>ldns_fget_token_l</name><argument_list>(<argument><expr><name>fp</name></expr></argument>, <argument><expr><name>line</name></expr></argument>, <argument><expr><literal type="string">"\n"</literal></expr></argument>, <argument><expr><name>LDNS_MAX_LINELEN</name></expr></argument>, <argument><expr><name>line_nr</name></expr></argument>)</argument_list></call></expr></incr>)</control> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>line</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'#'</literal></expr>)</condition> <block>{<block_content>
<continue>continue;</continue>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>linebuf</name> <operator>=</operator> <call><name>LDNS_MALLOC</name><argument_list>(<argument><expr><name>ldns_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>linebuf</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>word</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>rr_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_list_deep_free</name><argument_list>(<argument><expr><name>list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ldns_buffer_new_frm_data</name><argument_list>(<argument><expr><name>linebuf</name></expr></argument>, <argument><expr><name>line</name></expr></argument>, <argument><expr><operator>(</operator><name>size_t</name><operator>)</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for<control>(<init><expr><name>cnt</name> <operator>=</operator> <literal type="number">0</literal></expr><operator>,</operator> <expr><name>j</name> <operator>=</operator> <call><name>ldns_bget_token</name><argument_list>(<argument><expr><name>linebuf</name></expr></argument>, <argument><expr><name>word</name></expr></argument>, <argument><expr><name>LDNS_PARSE_NO_NL</name></expr></argument>, <argument><expr><name>LDNS_MAX_LINELEN</name></expr></argument>)</argument_list></call></expr>;</init>
<condition><expr><name>j</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</condition>
<incr><expr><name>j</name> <operator>=</operator> <call><name>ldns_bget_token</name><argument_list>(<argument><expr><name>linebuf</name></expr></argument>, <argument><expr><name>word</name></expr></argument>, <argument><expr><name>LDNS_PARSE_NO_NL</name></expr></argument>, <argument><expr><name>LDNS_MAX_LINELEN</name></expr></argument>)</argument_list></call></expr><operator>,</operator> <expr><name>cnt</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>cnt</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><operator>(</operator><name>tmp</name> <operator>=</operator> <call><name>ldns_rdf_new_frm_str</name><argument_list>(<argument><expr><name>LDNS_RDF_TYPE_AAAA</name></expr></argument>,
<argument><expr><name>word</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ip6</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>tmp</name> <operator>=</operator> <call><name>ldns_rdf_new_frm_str</name><argument_list>(<argument><expr><name>LDNS_RDF_TYPE_A</name></expr></argument>,
<argument><expr><name>word</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ip6</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>

<break>break;</break>
</block_content>}</block></else></if_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><call><name>strlcpy</name><argument_list>(<argument><expr><name>addr</name></expr></argument>, <argument><expr><name>word</name></expr></argument>, <argument><expr><name>LDNS_MAX_LINELEN</name><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>word</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'#'</literal></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>ip6</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>rr_str</name></expr></argument>, <argument><expr><name>LDNS_MAX_LINELEN</name></expr></argument>,
<argument><expr><literal type="string">"%s IN AAAA %s"</literal></expr></argument>, <argument><expr><name>word</name></expr></argument>, <argument><expr><name>addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>snprintf</name><argument_list>(<argument><expr><name>rr_str</name></expr></argument>, <argument><expr><name>LDNS_MAX_LINELEN</name></expr></argument>,
<argument><expr><literal type="string">"%s IN A %s"</literal></expr></argument>, <argument><expr><name>word</name></expr></argument>, <argument><expr><name>addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><name>parse_result</name> <operator>=</operator> <call><name>ldns_rr_new_frm_str</name><argument_list>(<argument><expr><operator>&amp;</operator><name>rr</name></expr></argument>, <argument><expr><name>rr_str</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>parse_result</name> <operator>==</operator> <name>LDNS_STATUS_OK</name> <operator>&amp;&amp;</operator> <call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>ldns_rr_rd_count</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_list_push_rr</name><argument_list>(<argument><expr><name>list</name></expr></argument>, <argument><expr><call><name>ldns_rr_clone</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>ldns_buffer_free</name><argument_list>(<argument><expr><name>linebuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>word</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>rr_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>list</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rr_list</name> <modifier>*</modifier></type>
<name>ldns_get_rr_list_hosts_frm_file</name><parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type><name>names</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>filename</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>fp</name> <operator>=</operator> <call><name>fopen</name><argument_list>(<argument><expr><name>LDNS_RESOLV_HOSTS</name></expr></argument>, <argument><expr><literal type="string">"r"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>fp</name> <operator>=</operator> <call><name>fopen</name><argument_list>(<argument><expr><name>filename</name></expr></argument>, <argument><expr><literal type="string">"r"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>fp</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>names</name> <operator>=</operator> <call><name>ldns_get_rr_list_hosts_frm_fp</name><argument_list>(<argument><expr><name>fp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fclose</name><argument_list>(<argument><expr><name>fp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>names</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>uint16_t</name></type>
<name>ldns_getaddrinfo</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rdf</name> <modifier>*</modifier></type><name>node</name></decl></parameter>,
<parameter><decl><type><name>ldns_rr_class</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>ldns_rr_list</name> <modifier>*</modifier><modifier>*</modifier></type><name>ret</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rdf_type</name></type> <name>t</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>names_found</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_status</name></type> <name>s</name></decl>;</decl_stmt>

<expr_stmt><expr><name>t</name> <operator>=</operator> <call><name>ldns_rdf_get_type</name><argument_list>(<argument><expr><name>node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>names_found</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>r</name> <operator>=</operator> <name>res</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>res</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>s</name> <operator>=</operator> <call><name>ldns_resolver_new_frm_file</name><argument_list>(<argument><expr><operator>&amp;</operator><name>r</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>s</name> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>t</name> <operator>==</operator> <name>LDNS_RDF_TYPE_DNAME</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>ret</name> <operator>=</operator> <call><name>ldns_get_rr_list_addr_by_name</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>node</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>names_found</name> <operator>=</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><operator>*</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>t</name> <operator>==</operator> <name>LDNS_RDF_TYPE_A</name> <operator>||</operator> <name>t</name> <operator>==</operator> <name>LDNS_RDF_TYPE_AAAA</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>ret</name> <operator>=</operator> <call><name>ldns_get_rr_list_name_by_addr</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>node</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>names_found</name> <operator>=</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><operator>*</operator><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>res</name> <operator>==</operator> <name>NULL</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_resolver_deep_free</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>names_found</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_nsec_type_check</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>nsec</name></decl></parameter>, <parameter><decl><type><name>ldns_rr_type</name></type> <name>t</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<switch>switch <condition>(<expr><call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>nsec</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<case>case <expr><name>LDNS_RR_TYPE_NSEC</name></expr> :</case> <if_stmt><if>if <condition>(<expr><call><name>ldns_rr_rd_count</name><argument_list>(<argument><expr><name>nsec</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><call><name>ldns_nsec_bitmap_covers_type</name><argument_list>(
<argument><expr><call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name>nsec</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</return>

<case>case <expr><name>LDNS_RR_TYPE_NSEC3</name></expr> :</case> <if_stmt><if>if <condition>(<expr><call><name>ldns_rr_rd_count</name><argument_list>(<argument><expr><name>nsec</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <literal type="number">6</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><call><name>ldns_nsec_bitmap_covers_type</name><argument_list>(
<argument><expr><call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name>nsec</name></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</return>

<default>default :</default> <return>return <expr><name>false</name></expr>;</return>
</block_content>}</block></switch>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_print_rr_rdf</name><parameter_list>(<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>, <parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rdfnum</name></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int16_t</name></type> <name>rdf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>rd</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>va_list</name></type> <name>va_rdf</name></decl>;</decl_stmt>
<expr_stmt><expr><call><name>va_start</name><argument_list>(<argument><expr><name>va_rdf</name></expr></argument>, <argument><expr><name>rdfnum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>rdf</name> <operator>=</operator> <operator>(</operator><name>int16_t</name><operator>)</operator><name>rdfnum</name></expr>;</init> <condition><expr><name>rdf</name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</condition> <incr><expr><name>rdf</name> <operator>=</operator> <operator>(</operator><name>int16_t</name><operator>)</operator><call><name>va_arg</name><argument_list>(<argument><expr><name>va_rdf</name></expr></argument>, <argument><expr><name>int</name></expr></argument>)</argument_list></call></expr></incr>)</control>
<block>{<block_content>
<expr_stmt><expr><name>rd</name> <operator>=</operator> <call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>rdf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>rd</name></expr>)</condition> <block>{<block_content>
<continue>continue;</continue>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rdf_print</name><argument_list>(<argument><expr><name>fp</name></expr></argument>, <argument><expr><name>rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>fp</name></expr></argument>, <argument><expr><literal type="string">" "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>va_end</name><argument_list>(<argument><expr><name>va_rdf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

</unit>
