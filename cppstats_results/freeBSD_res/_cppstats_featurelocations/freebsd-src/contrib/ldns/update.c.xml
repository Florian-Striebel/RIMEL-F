<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/ldns/update.c">








<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ldns/config.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ldns/ldns.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;strings.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;limits.h&gt;</cpp:file></cpp:include>









<function><type><name>ldns_pkt</name> <modifier>*</modifier></type>
<name>ldns_update_pkt_new</name><parameter_list>(<parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>zone_rdf</name></decl></parameter>, <parameter><decl><type><name>ldns_rr_class</name></type> <name>c</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>ldns_rr_list</name> <modifier>*</modifier></type><name>pr_rrlist</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rr_list</name> <modifier>*</modifier></type><name>up_rrlist</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rr_list</name> <modifier>*</modifier></type><name>ad_rrlist</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_pkt</name> <modifier>*</modifier></type><name>p</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>zone_rdf</name> <operator>||</operator> <operator>!</operator><name>up_rrlist</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>c</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>c</name> <operator>=</operator> <name>LDNS_RR_CLASS_IN</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><name>p</name> <operator>=</operator> <call><name>ldns_pkt_query_new</name><argument_list>(<argument><expr><name>zone_rdf</name></expr></argument>, <argument><expr><name>LDNS_RR_TYPE_SOA</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>LDNS_RD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>p</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>zone_rdf</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_pkt_set_opcode</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>LDNS_PACKET_UPDATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_rr_list_deep_free</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>_authority</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_pkt_set_authority</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><call><name>ldns_rr_list_clone</name><argument_list>(<argument><expr><name>up_rrlist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_update_set_upcount</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>up_rrlist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>pr_rrlist</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_list_deep_free</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>_answer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_pkt_set_answer</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><call><name>ldns_rr_list_clone</name><argument_list>(<argument><expr><name>pr_rrlist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_update_set_prcount</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>pr_rrlist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>ad_rrlist</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_list_deep_free</name><argument_list>(<argument><expr><name><name>p</name><operator>-&gt;</operator><name>_additional</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_pkt_set_additional</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><call><name>ldns_rr_list_clone</name><argument_list>(<argument><expr><name>ad_rrlist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_update_set_adcount</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>ad_rrlist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>p</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_status</name></type>
<name>ldns_update_pkt_tsig_add</name><parameter_list>(<parameter><decl><type><name>ldns_pkt</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_SSL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>fudge</name> <init>= <expr><literal type="number">300</literal></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_resolver_tsig_keyname</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>ldns_resolver_tsig_keydata</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><call><name>ldns_pkt_tsig_sign</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><call><name>ldns_resolver_tsig_keyname</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>ldns_resolver_tsig_keydata</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>fudge</name></expr></argument>,
<argument><expr><call><name>ldns_resolver_tsig_algorithm</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>p</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><name>r</name></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<return>return <expr><name>LDNS_STATUS_OK</name></expr>;</return>
</block_content>}</block></function>



<function><type><name>ldns_status</name></type>
<name>ldns_update_soa_mname</name><parameter_list>(<parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>zone</name></decl></parameter>, <parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>,
<parameter><decl><type><name>ldns_rr_class</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type><name>mname</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>soa_rr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_pkt</name> <modifier>*</modifier></type><name>query</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>resp</name></decl>;</decl_stmt>


<expr_stmt><expr><name>query</name> <operator>=</operator> <call><name>ldns_pkt_query_new</name><argument_list>(<argument><expr><call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><name>zone</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>LDNS_RR_TYPE_SOA</name></expr></argument>,
<argument><expr><name>c</name></expr></argument>, <argument><expr><name>LDNS_RD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>query</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ldns_pkt_set_random_id</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_resolver_send_pkt</name><argument_list>(<argument><expr><operator>&amp;</operator><name>resp</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>resp</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><operator>*</operator><name>mname</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<while>while <condition>(<expr><operator>(</operator><name>soa_rr</name> <operator>=</operator> <call><name>ldns_rr_list_pop_rr</name><argument_list>(<argument><expr><call><name>ldns_pkt_answer</name><argument_list>(<argument><expr><name>resp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>soa_rr</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_RR_TYPE_SOA</name>
<operator>||</operator> <call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name>soa_rr</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><operator>*</operator><name>mname</name> <operator>=</operator> <call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name>soa_rr</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></while>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>resp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><ternary><condition><expr><operator>*</operator><name>mname</name></expr> ?</condition><then> <expr><name>LDNS_STATUS_OK</name></expr> </then><else>: <expr><name>LDNS_STATUS_ERR</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>


<function><type><name>ldns_status</name></type>
<name>ldns_update_soa_zone_mname</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fqdn</name></decl></parameter>, <parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>,
<parameter><decl><type><name>ldns_rr_class</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type><name>zone_rdf</name></decl></parameter>, <parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type><name>mname_rdf</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>soa_rr</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>rr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>soa_zone</name> <init>= <expr><name>NULL</name></expr></init></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>soa_mname</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>ipaddr</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>fqdn_rdf</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>tmp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type><name>nslist</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_pkt</name> <modifier>*</modifier></type><name>query</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>resp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>tmp_r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>







<expr_stmt><expr><name>fqdn_rdf</name> <operator>=</operator> <call><name>ldns_dname_new_frm_str</name><argument_list>(<argument><expr><name>fqdn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>query</name> <operator>=</operator> <call><name>ldns_pkt_query_new</name><argument_list>(<argument><expr><name>fqdn_rdf</name></expr></argument>, <argument><expr><name>LDNS_RR_TYPE_SOA</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>LDNS_RD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>query</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>fqdn_rdf</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_pkt_set_random_id</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_resolver_send_pkt</name><argument_list>(<argument><expr><operator>&amp;</operator><name>resp</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>resp</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<while>while <condition>(<expr><operator>(</operator><name>soa_rr</name> <operator>=</operator> <call><name>ldns_rr_list_pop_rr</name><argument_list>(<argument><expr><call><name>ldns_pkt_authority</name><argument_list>(<argument><expr><name>resp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>soa_rr</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_RR_TYPE_SOA</name>
<operator>||</operator> <call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name>soa_rr</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><name>soa_mname</name> <operator>=</operator> <call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name>soa_rr</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></while>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>resp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>soa_rr</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><name>query</name> <operator>=</operator> <call><name>ldns_pkt_query_new</name><argument_list>(<argument><expr><name>soa_mname</name></expr></argument>, <argument><expr><name>LDNS_RR_TYPE_A</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>LDNS_RD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>query</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>soa_mname</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_pkt_set_random_id</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_resolver_send_pkt</name><argument_list>(<argument><expr><operator>&amp;</operator><name>resp</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>resp</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ldns_pkt_ancount</name><argument_list>(<argument><expr><name>resp</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>resp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><name>rr</name> <operator>=</operator> <call><name>ldns_rr_list_pop_rr</name><argument_list>(<argument><expr><call><name>ldns_pkt_answer</name><argument_list>(<argument><expr><name>resp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>ipaddr</name> <operator>=</operator> <call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>tmp_r</name> <operator>=</operator> <call><name>ldns_resolver_clone</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_MEM_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>nslist</name> <operator>=</operator> <call><name>ldns_resolver_nameservers</name><argument_list>(<argument><expr><name>tmp_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_resolver_nameserver_count</name><argument_list>(<argument><expr><name>tmp_r</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rdf_compare</name><argument_list>(<argument><expr><name>ipaddr</name></expr></argument>, <argument><expr><name><name>nslist</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>i</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <name><name>nslist</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>nslist</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>nslist</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>nslist</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<if_stmt><if>if <condition>(<expr><name>i</name> <operator>&gt;=</operator> <call><name>ldns_resolver_nameserver_count</name><argument_list>(<argument><expr><name>tmp_r</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>ldns_resolver_push_nameserver</name><argument_list>(<argument><expr><name>tmp_r</name></expr></argument>, <argument><expr><name>ipaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>nslist</name> <operator>=</operator> <call><name>ldns_resolver_nameservers</name><argument_list>(<argument><expr><name>tmp_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>i</name> <operator>=</operator> <call><name>ldns_resolver_nameserver_count</name><argument_list>(<argument><expr><name>tmp_r</name></expr></argument>)</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <name><name>nslist</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>nslist</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>nslist</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>nslist</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name>tmp</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>resp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>ldns_resolver_set_random</name><argument_list>(<argument><expr><name>tmp_r</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><name>fqdn_rdf</name> <operator>=</operator> <call><name>ldns_dname_new_frm_str</name><argument_list>(<argument><expr><name>fqdn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>query</name> <operator>=</operator> <call><name>ldns_pkt_query_new</name><argument_list>(<argument><expr><name>fqdn_rdf</name></expr></argument>, <argument><expr><name>LDNS_RR_TYPE_SOA</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>LDNS_RD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>query</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_resolver_free</name><argument_list>(<argument><expr><name>tmp_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>fqdn_rdf</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_pkt_set_random_id</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_resolver_send_pkt</name><argument_list>(<argument><expr><operator>&amp;</operator><name>resp</name></expr></argument>, <argument><expr><name>tmp_r</name></expr></argument>, <argument><expr><name>query</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_free</name><argument_list>(<argument><expr><name>tmp_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_resolver_free</name><argument_list>(<argument><expr><name>tmp_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>query</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>resp</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<while>while <condition>(<expr><operator>(</operator><name>soa_rr</name> <operator>=</operator> <call><name>ldns_rr_list_pop_rr</name><argument_list>(<argument><expr><call><name>ldns_pkt_authority</name><argument_list>(<argument><expr><name>resp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>soa_rr</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_RR_TYPE_SOA</name>
<operator>||</operator> <call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name>soa_rr</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>

<expr_stmt><expr><name>soa_mname</name> <operator>=</operator> <call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name>soa_rr</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>soa_zone</name> <operator>=</operator> <call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><call><name>ldns_rr_owner</name><argument_list>(<argument><expr><name>soa_rr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></while>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>resp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>soa_rr</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><operator>*</operator><name>zone_rdf</name> <operator>=</operator> <name>soa_zone</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>mname_rdf</name> <operator>=</operator> <name>soa_mname</name></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_OK</name></expr>;</return>
</block_content>}</block></function>





<function><type><name>uint16_t</name></type>
<name>ldns_update_zocount</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_pkt</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>ldns_pkt_qdcount</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>uint16_t</name></type>
<name>ldns_update_prcount</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_pkt</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>ldns_pkt_ancount</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>uint16_t</name></type>
<name>ldns_update_upcount</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_pkt</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>ldns_pkt_nscount</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>uint16_t</name></type>
<name>ldns_update_ad</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_pkt</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>ldns_pkt_arcount</name><argument_list>(<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_update_set_zo</name><parameter_list>(<parameter><decl><type><name>ldns_pkt</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>v</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_set_qdcount</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_update_set_prcount</name><parameter_list>(<parameter><decl><type><name>ldns_pkt</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>v</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_set_ancount</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_update_set_upcount</name><parameter_list>(<parameter><decl><type><name>ldns_pkt</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>v</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_set_nscount</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_update_set_adcount</name><parameter_list>(<parameter><decl><type><name>ldns_pkt</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>v</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_set_arcount</name><argument_list>(<argument><expr><name>p</name></expr></argument>, <argument><expr><name>v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
</unit>
