<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/ldns/resolver.c">











<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ldns/config.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ldns/ldns.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;strings.h&gt;</cpp:file></cpp:include>






<function><type><name>uint16_t</name></type>
<name>ldns_resolver_port</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_port</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rdf</name> <modifier>*</modifier></type>
<name>ldns_resolver_source</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_source</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>uint16_t</name></type>
<name>ldns_resolver_edns_udp_size</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_edns_udp_size</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>uint8_t</name></type>
<name>ldns_resolver_retry</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_retry</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>uint8_t</name></type>
<name>ldns_resolver_retrans</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_retrans</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_resolver_fallback</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_fallback</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>uint8_t</name></type>
<name>ldns_resolver_ip6</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_ip6</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_resolver_recursive</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_recursive</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_resolver_debug</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_debug</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_resolver_dnsrch</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_dnsrch</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_resolver_fail</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_fail</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_resolver_defnames</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_defnames</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rdf</name> <modifier>*</modifier></type>
<name>ldns_resolver_domain</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_domain</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type>
<name>ldns_resolver_searchlist</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_searchlist</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type>
<name>ldns_resolver_nameservers</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_nameservers</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>size_t</name></type>
<name>ldns_resolver_nameserver_count</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_nameserver_count</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_resolver_dnssec</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_dnssec</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_resolver_dnssec_cd</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_dnssec_cd</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rr_list</name> <modifier>*</modifier></type>
<name>ldns_resolver_dnssec_anchors</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_dnssec_anchors</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_resolver_trusted_key</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type> <name>keys</name></decl></parameter>, <parameter><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type> <name>trusted_keys</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>result</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type> <name>trust_anchors</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type> <name>cur_rr</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>r</name> <operator>||</operator> <operator>!</operator><name>keys</name></expr>)</condition> <block>{<block_content> <return>return <expr><name>false</name></expr>;</return> </block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>trust_anchors</name> <operator>=</operator> <call><name>ldns_resolver_dnssec_anchors</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>trust_anchors</name></expr>)</condition> <block>{<block_content> <return>return <expr><name>false</name></expr>;</return> </block_content>}</block></if></if_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>keys</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

<expr_stmt><expr><name>cur_rr</name> <operator>=</operator> <call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>keys</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_list_contains_rr</name><argument_list>(<argument><expr><name>trust_anchors</name></expr></argument>, <argument><expr><name>cur_rr</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>trusted_keys</name></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name>ldns_rr_list_push_rr</name><argument_list>(<argument><expr><name>trusted_keys</name></expr></argument>, <argument><expr><name>cur_rr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>result</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>

<return>return <expr><name>result</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_resolver_igntc</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_igntc</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_resolver_usevc</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_usevc</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>size_t</name> <modifier>*</modifier></type>
<name>ldns_resolver_rtt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_rtt</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>size_t</name></type>
<name>ldns_resolver_nameserver_rtt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>pos</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name> <modifier>*</modifier></type><name>rtt</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>r</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>rtt</name> <operator>=</operator> <call><name>ldns_resolver_rtt</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>pos</name> <operator>&gt;=</operator> <call><name>ldns_resolver_nameserver_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<return>return <expr><name><name>rtt</name><index>[<expr><name>pos</name></expr>]</index></name></expr>;</return>
</block_content>}</block></else></if_stmt>

</block_content>}</block></function>

<function><type><name><name>struct</name> <name>timeval</name></name></type>
<name>ldns_resolver_timeout</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_timeout</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>
<name>ldns_resolver_tsig_keyname</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_tsig_keyname</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>
<name>ldns_resolver_tsig_algorithm</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_tsig_algorithm</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type>
<name>ldns_resolver_tsig_keydata</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_tsig_keydata</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_resolver_random</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_random</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>size_t</name></type>
<name>ldns_resolver_searchlist_count</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>r</name><operator>-&gt;</operator><name>_searchlist_count</name></name></expr>;</return>
</block_content>}</block></function>


<function><type><name>void</name></type>
<name>ldns_resolver_set_port</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_port</name></name> <operator>=</operator> <name>p</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_source</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_source</name></name> <operator>=</operator> <name>s</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>ldns_rdf</name> <modifier>*</modifier></type>
<name>ldns_resolver_pop_nameserver</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type><name>nameservers</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>pop</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>ns_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name> <modifier>*</modifier></type><name>rtt</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>r</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ns_count</name> <operator>=</operator> <call><name>ldns_resolver_nameserver_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>nameservers</name> <operator>=</operator> <call><name>ldns_resolver_nameservers</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>rtt</name> <operator>=</operator> <call><name>ldns_resolver_rtt</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>ns_count</name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <operator>!</operator><name>nameservers</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>pop</name> <operator>=</operator> <name><name>nameservers</name><index>[<expr><name>ns_count</name> <operator>-</operator> <literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ns_count</name> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>nameservers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>rtt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_resolver_set_nameservers</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_rtt</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>nameservers</name> <operator>=</operator> <call><name>LDNS_XREALLOC</name><argument_list>(<argument><expr><name>nameservers</name></expr></argument>, <argument><expr><name>ldns_rdf</name> <operator>*</operator></expr></argument>,
<argument><expr><operator>(</operator><name>ns_count</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>rtt</name> <operator>=</operator> <call><name>LDNS_XREALLOC</name><argument_list>(<argument><expr><name>rtt</name></expr></argument>, <argument><expr><name>size_t</name></expr></argument>, <argument><expr><operator>(</operator><name>ns_count</name> <operator>-</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_resolver_set_nameservers</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>nameservers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_rtt</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>rtt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><call><name>ldns_resolver_dec_nameserver_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>pop</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_status</name></type>
<name>ldns_resolver_push_nameserver</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rdf</name> <modifier>*</modifier></type><name>n</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type><name>nameservers</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>ns_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name> <modifier>*</modifier></type><name>rtt</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ldns_rdf_get_type</name><argument_list>(<argument><expr><name>n</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_RDF_TYPE_A</name> <operator>&amp;&amp;</operator>
<call><name>ldns_rdf_get_type</name><argument_list>(<argument><expr><name>n</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_RDF_TYPE_AAAA</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>ns_count</name> <operator>=</operator> <call><name>ldns_resolver_nameserver_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>nameservers</name> <operator>=</operator> <call><name>ldns_resolver_nameservers</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>rtt</name> <operator>=</operator> <call><name>ldns_resolver_rtt</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><name>ns_count</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>nameservers</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>ldns_rdf</name> <operator>*</operator></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>nameservers</name> <operator>=</operator> <call><name>LDNS_XREALLOC</name><argument_list>(<argument><expr><name>nameservers</name></expr></argument>, <argument><expr><name>ldns_rdf</name> <operator>*</operator></expr></argument>, <argument><expr><operator>(</operator><name>ns_count</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>nameservers</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>LDNS_STATUS_MEM_ERR</name></expr>;</return></block_content></block></if></if_stmt>


<expr_stmt><expr><call><name>ldns_resolver_set_nameservers</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>nameservers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><name>ns_count</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>rtt</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>size_t</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>rtt</name> <operator>=</operator> <call><name>LDNS_XREALLOC</name><argument_list>(<argument><expr><name>rtt</name></expr></argument>, <argument><expr><name>size_t</name></expr></argument>, <argument><expr><operator>(</operator><name>ns_count</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>rtt</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>LDNS_STATUS_MEM_ERR</name></expr>;</return></block_content></block></if></if_stmt>




<expr_stmt><expr><name><name>nameservers</name><index>[<expr><name>ns_count</name></expr>]</index></name> <operator>=</operator> <call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><name>n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rtt</name><index>[<expr><name>ns_count</name></expr>]</index></name> <operator>=</operator> <name>LDNS_RESOLV_RTT_MIN</name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_incr_nameserver_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_rtt</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>rtt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_OK</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_status</name></type>
<name>ldns_resolver_push_nameserver_rr</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>address</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><operator>!</operator><name>rr</name><operator>)</operator> <operator>||</operator> <operator>(</operator><call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_RR_TYPE_A</name> <operator>&amp;&amp;</operator>
<call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_RR_TYPE_AAAA</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>address</name> <operator>=</operator> <call><name>ldns_rr_rdf</name><argument_list>(<argument><expr><name>rr</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>address</name></expr>)</condition> <block>{<block_content>
<return>return <expr><call><name>ldns_resolver_push_nameserver</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>address</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>ldns_status</name></type>
<name>ldns_resolver_push_nameserver_rr_list</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rr_list</name> <modifier>*</modifier></type><name>rrlist</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_status</name></type> <name>stat</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><name>stat</name> <operator>=</operator> <name>LDNS_STATUS_OK</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>rrlist</name></expr>)</condition> <block>{<block_content>
<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_rr_list_rr_count</name><argument_list>(<argument><expr><name>rrlist</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>rr</name> <operator>=</operator> <call><name>ldns_rr_list_rr</name><argument_list>(<argument><expr><name>rrlist</name></expr></argument>, <argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_resolver_push_nameserver_rr</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>rr</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>stat</name> <operator>=</operator> <name>LDNS_STATUS_ERR</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
<return>return <expr><name>stat</name></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_edns_udp_size</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_edns_udp_size</name></name> <operator>=</operator> <name>s</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_recursive</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>re</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_recursive</name></name> <operator>=</operator> <name>re</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_dnssec</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>d</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_dnssec</name></name> <operator>=</operator> <name>d</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_dnssec_cd</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>d</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_dnssec_cd</name></name> <operator>=</operator> <name>d</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_dnssec_anchors</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type> <name>l</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_dnssec_anchors</name></name> <operator>=</operator> <name>l</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>ldns_status</name></type>
<name>ldns_resolver_push_dnssec_anchor</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>rr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr_list</name> <modifier>*</modifier></type> <name>trust_anchors</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>(</operator><operator>!</operator><name>rr</name><operator>)</operator> <operator>||</operator> <operator>(</operator><call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_RR_TYPE_DNSKEY</name> <operator>&amp;&amp;</operator>
<call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_RR_TYPE_DS</name><operator>)</operator></expr>)</condition> <block>{<block_content>

<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>trust_anchors</name> <operator>=</operator> <call><name>ldns_resolver_dnssec_anchors</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>trust_anchors</name> <operator>=</operator> <call><name>ldns_rr_list_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_dnssec_anchors</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>trust_anchors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><ternary><condition><expr><operator>(</operator><call><name>ldns_rr_list_push_rr</name><argument_list>(<argument><expr><name>trust_anchors</name></expr></argument>, <argument><expr><call><name>ldns_rr_clone</name><argument_list>(<argument><expr><name>rr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator>)</operator></expr> ?</condition><then> <expr><name>LDNS_STATUS_OK</name></expr> </then><else>: <expr><name>LDNS_STATUS_ERR</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_igntc</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>i</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_igntc</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_usevc</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>vc</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_usevc</name></name> <operator>=</operator> <name>vc</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_debug</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>d</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_debug</name></name> <operator>=</operator> <name>d</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_ip6</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>ip6</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_ip6</name></name> <operator>=</operator> <name>ip6</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_fail</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>f</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_fail</name></name> <operator>=</operator><name>f</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>ldns_resolver_set_searchlist_count</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>c</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_searchlist_count</name></name> <operator>=</operator> <name>c</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_nameserver_count</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>c</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_nameserver_count</name></name> <operator>=</operator> <name>c</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_dnsrch</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>d</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_dnsrch</name></name> <operator>=</operator> <name>d</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_retry</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>retry</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_retry</name></name> <operator>=</operator> <name>retry</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_retrans</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>retrans</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_retrans</name></name> <operator>=</operator> <name>retrans</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_fallback</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>fallback</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_fallback</name></name> <operator>=</operator> <name>fallback</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_nameservers</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type><name>n</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_nameservers</name></name> <operator>=</operator> <name>n</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_defnames</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>d</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_defnames</name></name> <operator>=</operator> <name>d</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_rtt</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>rtt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_rtt</name></name> <operator>=</operator> <name>rtt</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_nameserver_rtt</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>pos</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>value</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name> <modifier>*</modifier></type><name>rtt</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>r</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>rtt</name> <operator>=</operator> <call><name>ldns_resolver_rtt</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>pos</name> <operator>&gt;=</operator> <call><name>ldns_resolver_nameserver_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>rtt</name><index>[<expr><name>pos</name></expr>]</index></name> <operator>=</operator> <name>value</name></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_incr_nameserver_count</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>c</name></decl>;</decl_stmt>

<expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>ldns_resolver_nameserver_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_nameserver_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><operator>++</operator><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_dec_nameserver_count</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>c</name></decl>;</decl_stmt>

<expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>ldns_resolver_nameserver_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>c</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<return>return;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>ldns_resolver_set_nameserver_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><operator>--</operator><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_domain</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_domain</name></name> <operator>=</operator> <name>d</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_timeout</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>timeval</name></name></type> <name>timeout</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_timeout</name><operator>.</operator><name>tv_sec</name></name> <operator>=</operator> <name><name>timeout</name><operator>.</operator><name>tv_sec</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_timeout</name><operator>.</operator><name>tv_usec</name></name> <operator>=</operator> <name><name>timeout</name><operator>.</operator><name>tv_usec</name></name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_push_searchlist</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type><name>searchlist</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>list_count</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ldns_rdf_get_type</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_RDF_TYPE_DNAME</name></expr>)</condition> <block>{<block_content>
<return>return;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>list_count</name> <operator>=</operator> <call><name>ldns_resolver_searchlist_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>searchlist</name> <operator>=</operator> <call><name>ldns_resolver_searchlist</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>searchlist</name> <operator>=</operator> <call><name>LDNS_XREALLOC</name><argument_list>(<argument><expr><name>searchlist</name></expr></argument>, <argument><expr><name>ldns_rdf</name> <operator>*</operator></expr></argument>, <argument><expr><operator>(</operator><name>list_count</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>searchlist</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_searchlist</name></name> <operator>=</operator> <name>searchlist</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>searchlist</name><index>[<expr><name>list_count</name></expr>]</index></name> <operator>=</operator> <call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_searchlist_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>list_count</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_tsig_keyname</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>tsig_keyname</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>r</name><operator>-&gt;</operator><name>_tsig_keyname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_tsig_keyname</name></name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><name>tsig_keyname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_tsig_algorithm</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>tsig_algorithm</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>r</name><operator>-&gt;</operator><name>_tsig_algorithm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_tsig_algorithm</name></name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><name>tsig_algorithm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_tsig_keydata</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>tsig_keydata</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>r</name><operator>-&gt;</operator><name>_tsig_keydata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_tsig_keydata</name></name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><name>tsig_keydata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_random</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_random</name></name> <operator>=</operator> <name>b</name></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>ldns_resolver</name> <modifier>*</modifier></type>
<name>ldns_resolver_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl>;</decl_stmt>

<expr_stmt><expr><name>r</name> <operator>=</operator> <call><name>LDNS_MALLOC</name><argument_list>(<argument><expr><name>ldns_resolver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>r</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_searchlist</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_nameservers</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_rtt</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>


<expr_stmt><expr><call><name>ldns_resolver_set_searchlist_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_nameserver_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_usevc</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_port</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>LDNS_PORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_domain</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_defnames</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_retry</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_retrans</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_fallback</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_fail</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_edns_udp_size</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_dnssec</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_dnssec_cd</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_dnssec_anchors</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_ip6</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>LDNS_RESOLV_INETANY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_igntc</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_recursive</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_dnsrch</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_source</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_ixfr_serial</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




<expr_stmt><expr><call><name>ldns_resolver_set_random</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_resolver_set_debug</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_timeout</name><operator>.</operator><name>tv_sec</name></name> <operator>=</operator> <name>LDNS_DEFAULT_TIMEOUT_SEC</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_timeout</name><operator>.</operator><name>tv_usec</name></name> <operator>=</operator> <name>LDNS_DEFAULT_TIMEOUT_USEC</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_socket</name></name> <operator>=</operator> <operator>-</operator><literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_axfr_soa_count</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_axfr_i</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_cur_axfr_pkt</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_tsig_keyname</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_tsig_keydata</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_tsig_algorithm</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_resolver</name> <modifier>*</modifier></type>
<name>ldns_resolver_clone</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>dst</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>src</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>dst</name> <operator>=</operator> <call><name>LDNS_MALLOC</name><argument_list>(<argument><expr><name>ldns_resolver</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>memcpy</name><argument_list>(<argument><expr><name>dst</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>ldns_resolver</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>dst</name><operator>-&gt;</operator><name>_searchlist_count</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>_searchlist</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt></block_content></block></if>
<else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name><name>dst</name><operator>-&gt;</operator><name>_searchlist</name></name> <operator>=</operator>
<call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>ldns_rdf</name> <operator>*</operator></expr></argument>, <argument><expr><name><name>dst</name><operator>-&gt;</operator><name>_searchlist_count</name></name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error</name>;</goto></block_content></block></if></if_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>dst</name><operator>-&gt;</operator><name>_searchlist_count</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name><name>dst</name><operator>-&gt;</operator><name>_searchlist</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator>
<call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><name><name>src</name><operator>-&gt;</operator><name>_searchlist</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>_searchlist_count</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
<goto>goto <name>error_searchlist</name>;</goto>
</block_content>}</block></if></if_stmt></block_content></block></for>
</block_content>}</block></else></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>dst</name><operator>-&gt;</operator><name>_nameserver_count</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>_nameservers</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>_rtt</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name><name>dst</name><operator>-&gt;</operator><name>_nameservers</name></name> <operator>=</operator>
<call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>ldns_rdf</name> <operator>*</operator></expr></argument>, <argument><expr><name><name>dst</name><operator>-&gt;</operator><name>_nameserver_count</name></name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error_searchlist</name>;</goto></block_content></block></if></if_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>dst</name><operator>-&gt;</operator><name>_nameserver_count</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name><name>dst</name><operator>-&gt;</operator><name>_nameservers</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator>
<call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><name><name>src</name><operator>-&gt;</operator><name>_nameservers</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>_nameserver_count</name></name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
<goto>goto <name>error_nameservers</name>;</goto>
</block_content>}</block></if></if_stmt></block_content></block></for>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name><name>dst</name><operator>-&gt;</operator><name>_rtt</name></name> <operator>=</operator>
<call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>size_t</name></expr></argument>, <argument><expr><name><name>dst</name><operator>-&gt;</operator><name>_nameserver_count</name></name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error_nameservers</name>;</goto></block_content></block></if></if_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>memcpy</name><argument_list>(<argument><expr><name><name>dst</name><operator>-&gt;</operator><name>_rtt</name></name></expr></argument>, <argument><expr><name><name>src</name><operator>-&gt;</operator><name>_rtt</name></name></expr></argument>,
<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>size_t</name></expr></argument>)</argument_list></sizeof> <operator>*</operator> <name><name>dst</name><operator>-&gt;</operator><name>_nameserver_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>dst</name><operator>-&gt;</operator><name>_domain</name></name> <operator>&amp;&amp;</operator> <operator>(</operator><operator>!</operator><operator>(</operator><name><name>dst</name><operator>-&gt;</operator><name>_domain</name></name> <operator>=</operator> <call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><name><name>src</name><operator>-&gt;</operator><name>_domain</name></name></expr></argument>)</argument_list></call><operator>)</operator><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error_rtt</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>dst</name><operator>-&gt;</operator><name>_tsig_keyname</name></name> <operator>&amp;&amp;</operator>
<operator>(</operator><operator>!</operator><operator>(</operator><name><name>dst</name><operator>-&gt;</operator><name>_tsig_keyname</name></name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><name><name>src</name><operator>-&gt;</operator><name>_tsig_keyname</name></name></expr></argument>)</argument_list></call><operator>)</operator><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error_domain</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>dst</name><operator>-&gt;</operator><name>_tsig_keydata</name></name> <operator>&amp;&amp;</operator>
<operator>(</operator><operator>!</operator><operator>(</operator><name><name>dst</name><operator>-&gt;</operator><name>_tsig_keydata</name></name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><name><name>src</name><operator>-&gt;</operator><name>_tsig_keydata</name></name></expr></argument>)</argument_list></call><operator>)</operator><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error_tsig_keyname</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>dst</name><operator>-&gt;</operator><name>_tsig_algorithm</name></name> <operator>&amp;&amp;</operator>
<operator>(</operator><operator>!</operator><operator>(</operator><name><name>dst</name><operator>-&gt;</operator><name>_tsig_algorithm</name></name> <operator>=</operator> <call><name>strdup</name><argument_list>(<argument><expr><name><name>src</name><operator>-&gt;</operator><name>_tsig_algorithm</name></name></expr></argument>)</argument_list></call><operator>)</operator><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error_tsig_keydata</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>dst</name><operator>-&gt;</operator><name>_cur_axfr_pkt</name></name> <operator>&amp;&amp;</operator>
<operator>(</operator><operator>!</operator><operator>(</operator><name><name>dst</name><operator>-&gt;</operator><name>_cur_axfr_pkt</name></name> <operator>=</operator> <call><name>ldns_pkt_clone</name><argument_list>(<argument><expr><name><name>src</name><operator>-&gt;</operator><name>_cur_axfr_pkt</name></name></expr></argument>)</argument_list></call><operator>)</operator><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error_tsig_algorithm</name>;</goto></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>dst</name><operator>-&gt;</operator><name>_dnssec_anchors</name></name> <operator>&amp;&amp;</operator>
<operator>(</operator><operator>!</operator><operator>(</operator><name><name>dst</name><operator>-&gt;</operator><name>_dnssec_anchors</name></name><operator>=</operator><call><name>ldns_rr_list_clone</name><argument_list>(<argument><expr><name><name>src</name><operator>-&gt;</operator><name>_dnssec_anchors</name></name></expr></argument>)</argument_list></call><operator>)</operator><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<goto>goto <name>error_cur_axfr_pkt</name>;</goto></block_content></block></if></if_stmt>

<return>return <expr><name>dst</name></expr>;</return>

<label><name>error_cur_axfr_pkt</name>:</label>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name><name>dst</name><operator>-&gt;</operator><name>_cur_axfr_pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label><name>error_tsig_algorithm</name>:</label>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>dst</name><operator>-&gt;</operator><name>_tsig_algorithm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label><name>error_tsig_keydata</name>:</label>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>dst</name><operator>-&gt;</operator><name>_tsig_keydata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label><name>error_tsig_keyname</name>:</label>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>dst</name><operator>-&gt;</operator><name>_tsig_keyname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label><name>error_domain</name>:</label>
<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><name><name>dst</name><operator>-&gt;</operator><name>_domain</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label><name>error_rtt</name>:</label>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>dst</name><operator>-&gt;</operator><name>_rtt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label><name>error_nameservers</name>:</label>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>dst</name><operator>-&gt;</operator><name>_nameserver_count</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><name><name>dst</name><operator>-&gt;</operator><name>_nameservers</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>dst</name><operator>-&gt;</operator><name>_nameservers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label><name>error_searchlist</name>:</label>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>dst</name><operator>-&gt;</operator><name>_searchlist_count</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><name><name>dst</name><operator>-&gt;</operator><name>_searchlist</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>dst</name><operator>-&gt;</operator><name>_searchlist</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label><name>error</name>:</label>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>ldns_status</name></type>
<name>ldns_resolver_new_frm_fp</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier><modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>ldns_resolver_new_frm_fp_l</name><argument_list>(<argument><expr><name>res</name></expr></argument>, <argument><expr><name>fp</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_status</name></type>
<name>ldns_resolver_new_frm_fp_l</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier><modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>line_nr</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name><name>keyword</name><index>[<expr><name>LDNS_RESOLV_KEYWORDS</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name></type> <name><name>word</name><index>[<expr><name>LDNS_MAX_LINELEN</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int8_t</name></type> <name>expect</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>tmp</name></decl>;</decl_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_SSL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>tmp_rr</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<decl_stmt><decl><type><name>ssize_t</name></type> <name>gtr</name></decl>, <decl><type ref="prev"/><name>bgtr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_buffer</name> <modifier>*</modifier></type><name>b</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>lnr</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><type ref="prev"/><name>oldline</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>FILE</name><modifier>*</modifier></type> <name>myfp</name> <init>= <expr><name>fp</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>line_nr</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>line_nr</name> <operator>=</operator> <operator>&amp;</operator><name>lnr</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>fp</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>myfp</name> <operator>=</operator> <call><name>fopen</name><argument_list>(<argument><expr><literal type="string">"/etc/resolv.conf"</literal></expr></argument>, <argument><expr><literal type="string">"r"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>myfp</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>LDNS_STATUS_FILE_ERR</name></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>









<expr_stmt><expr><name><name>keyword</name><index>[<expr><name>LDNS_RESOLV_NAMESERVER</name></expr>]</index></name> <operator>=</operator> <literal type="string">"nameserver"</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>keyword</name><index>[<expr><name>LDNS_RESOLV_DEFDOMAIN</name></expr>]</index></name> <operator>=</operator> <literal type="string">"domain"</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>keyword</name><index>[<expr><name>LDNS_RESOLV_SEARCH</name></expr>]</index></name> <operator>=</operator> <literal type="string">"search"</literal></expr>;</expr_stmt>

<expr_stmt><expr><name><name>keyword</name><index>[<expr><name>LDNS_RESOLV_SORTLIST</name></expr>]</index></name> <operator>=</operator> <literal type="string">"sortlist"</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>keyword</name><index>[<expr><name>LDNS_RESOLV_OPTIONS</name></expr>]</index></name> <operator>=</operator> <literal type="string">"options"</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>keyword</name><index>[<expr><name>LDNS_RESOLV_ANCHOR</name></expr>]</index></name> <operator>=</operator> <literal type="string">"anchor"</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>expect</name> <operator>=</operator> <name>LDNS_RESOLV_KEYWORD</name></expr>;</expr_stmt>

<expr_stmt><expr><name>r</name> <operator>=</operator> <call><name>ldns_resolver_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>r</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>fp</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>fclose</name><argument_list>(<argument><expr><name>myfp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name>LDNS_STATUS_MEM_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>gtr</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>word</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>oldline</name> <operator>=</operator> <operator>*</operator><name>line_nr</name></expr>;</expr_stmt>
<expr_stmt><expr><name>expect</name> <operator>=</operator> <name>LDNS_RESOLV_KEYWORD</name></expr>;</expr_stmt>
<while>while <condition>(<expr><name>gtr</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>word</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'#'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>word</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>=</operator><literal type="char">'x'</literal></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name>oldline</name> <operator>==</operator> <operator>*</operator><name>line_nr</name></expr>)</condition> <block>{<block_content>

<decl_stmt><decl><type><name>int</name></type> <name>c</name></decl>;</decl_stmt>
<do>do <block>{<block_content>
<expr_stmt><expr><name>c</name> <operator>=</operator> <call><name>fgetc</name><argument_list>(<argument><expr><name>myfp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block> while<condition>(<expr><name>c</name> <operator>!=</operator> <name>EOF</name> <operator>&amp;&amp;</operator> <name>c</name> <operator>!=</operator> <literal type="char">'\n'</literal></expr>)</condition>;</do>
<if_stmt><if>if<condition>(<expr><name>c</name><operator>==</operator><literal type="char">'\n'</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><operator>(</operator><operator>*</operator><name>line_nr</name><operator>)</operator><operator>++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>oldline</name> <operator>=</operator> <operator>*</operator><name>line_nr</name></expr>;</expr_stmt>
<continue>continue;</continue>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>oldline</name> <operator>=</operator> <operator>*</operator><name>line_nr</name></expr>;</expr_stmt>
<switch>switch<condition>(<expr><name>expect</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>LDNS_RESOLV_KEYWORD</name></expr>:</case>

<expr_stmt><expr><name>gtr</name> <operator>=</operator> <call><name>ldns_fget_token_l</name><argument_list>(<argument><expr><name>myfp</name></expr></argument>, <argument><expr><name>word</name></expr></argument>, <argument><expr><name>LDNS_PARSE_NORMAL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>line_nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>gtr</name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name><name>word</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'#'</literal></expr>)</condition><block type="pseudo"><block_content> <continue>continue;</continue></block_content></block></if></if_stmt>
<for>for<control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>LDNS_RESOLV_KEYWORDS</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>strcasecmp</name><argument_list>(<argument><expr><name><name>keyword</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>, <argument><expr><name>word</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>



<expr_stmt><expr><name>expect</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>

<if_stmt><if>if <condition>(<expr><name>expect</name> <operator>==</operator> <name>LDNS_RESOLV_KEYWORD</name></expr>)</condition> <block>{<block_content>






</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>LDNS_RESOLV_DEFDOMAIN</name></expr>:</case>

<expr_stmt><expr><name>gtr</name> <operator>=</operator> <call><name>ldns_fget_token_l</name><argument_list>(<argument><expr><name>myfp</name></expr></argument>, <argument><expr><name>word</name></expr></argument>, <argument><expr><name>LDNS_PARSE_NORMAL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>line_nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>gtr</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>fp</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>fclose</name><argument_list>(<argument><expr><name>myfp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name>LDNS_STATUS_SYNTAX_MISSING_VALUE_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>word</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'#'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>expect</name> <operator>=</operator> <name>LDNS_RESOLV_KEYWORD</name></expr>;</expr_stmt>
<continue>continue;</continue>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <call><name>ldns_rdf_new_frm_str</name><argument_list>(<argument><expr><name>LDNS_RDF_TYPE_DNAME</name></expr></argument>, <argument><expr><name>word</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>tmp</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_resolver_deep_free</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>fp</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>fclose</name><argument_list>(<argument><expr><name>myfp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name>LDNS_STATUS_SYNTAX_DNAME_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><call><name>ldns_resolver_set_domain</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>expect</name> <operator>=</operator> <name>LDNS_RESOLV_KEYWORD</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>LDNS_RESOLV_NAMESERVER</name></expr>:</case>

<expr_stmt><expr><name>gtr</name> <operator>=</operator> <call><name>ldns_fget_token_l</name><argument_list>(<argument><expr><name>myfp</name></expr></argument>, <argument><expr><name>word</name></expr></argument>, <argument><expr><name>LDNS_PARSE_NORMAL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>line_nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>gtr</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>fp</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>fclose</name><argument_list>(<argument><expr><name>myfp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name>LDNS_STATUS_SYNTAX_MISSING_VALUE_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>word</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'#'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>expect</name> <operator>=</operator> <name>LDNS_RESOLV_KEYWORD</name></expr>;</expr_stmt>
<continue>continue;</continue>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><call><name>strchr</name><argument_list>(<argument><expr><name>word</name></expr></argument>, <argument><expr><literal type="char">'%'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>


<expr_stmt><expr><call><name>strchr</name><argument_list>(<argument><expr><name>word</name></expr></argument>, <argument><expr><literal type="char">'%'</literal></expr></argument>)</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>=</operator><literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <call><name>ldns_rdf_new_frm_str</name><argument_list>(<argument><expr><name>LDNS_RDF_TYPE_AAAA</name></expr></argument>, <argument><expr><name>word</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>tmp</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><name>tmp</name> <operator>=</operator> <call><name>ldns_rdf_new_frm_str</name><argument_list>(<argument><expr><name>LDNS_RDF_TYPE_A</name></expr></argument>, <argument><expr><name>word</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>tmp</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_resolver_deep_free</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>fp</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>fclose</name><argument_list>(<argument><expr><name>myfp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name>LDNS_STATUS_SYNTAX_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator><call><name>ldns_resolver_push_nameserver</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>expect</name> <operator>=</operator> <name>LDNS_RESOLV_KEYWORD</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>LDNS_RESOLV_SEARCH</name></expr>:</case>

<expr_stmt><expr><name>gtr</name> <operator>=</operator> <call><name>ldns_fget_token_l</name><argument_list>(<argument><expr><name>myfp</name></expr></argument>, <argument><expr><name>word</name></expr></argument>, <argument><expr><name>LDNS_PARSE_SKIP_SPACE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>line_nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>b</name> <operator>=</operator> <call><name>LDNS_MALLOC</name><argument_list>(<argument><expr><name>ldns_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>b</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_resolver_deep_free</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>fp</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>fclose</name><argument_list>(<argument><expr><name>myfp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name>LDNS_STATUS_MEM_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ldns_buffer_new_frm_data</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>word</name></expr></argument>, <argument><expr><operator>(</operator><name>size_t</name><operator>)</operator> <name>gtr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><call><name>ldns_buffer_status</name><argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_deep_free</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>fp</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>fclose</name><argument_list>(<argument><expr><name>myfp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name>LDNS_STATUS_MEM_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>bgtr</name> <operator>=</operator> <call><name>ldns_bget_token</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>word</name></expr></argument>, <argument><expr><name>LDNS_PARSE_NORMAL</name></expr></argument>, <argument><expr><operator>(</operator><name>size_t</name><operator>)</operator> <name>gtr</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<while>while <condition>(<expr><name>bgtr</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>gtr</name> <operator>-=</operator> <name>bgtr</name></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><name><name>word</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'#'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>expect</name> <operator>=</operator> <name>LDNS_RESOLV_KEYWORD</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>tmp</name> <operator>=</operator> <call><name>ldns_rdf_new_frm_str</name><argument_list>(<argument><expr><name>LDNS_RDF_TYPE_DNAME</name></expr></argument>, <argument><expr><name>word</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>tmp</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_resolver_deep_free</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_buffer_free</name><argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>fp</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>fclose</name><argument_list>(<argument><expr><name>myfp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name>LDNS_STATUS_SYNTAX_DNAME_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>ldns_resolver_push_searchlist</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><name>tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>bgtr</name> <operator>=</operator> <call><name>ldns_bget_token</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>word</name></expr></argument>, <argument><expr><name>LDNS_PARSE_NORMAL</name></expr></argument>,
<argument><expr><operator>(</operator><name>size_t</name><operator>)</operator> <name>gtr</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></while>
<expr_stmt><expr><call><name>ldns_buffer_free</name><argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>expect</name> <operator>!=</operator> <name>LDNS_RESOLV_KEYWORD</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>gtr</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>expect</name> <operator>=</operator> <name>LDNS_RESOLV_KEYWORD</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>LDNS_RESOLV_SORTLIST</name></expr>:</case>
<expr_stmt><expr><name>gtr</name> <operator>=</operator> <call><name>ldns_fget_token_l</name><argument_list>(<argument><expr><name>myfp</name></expr></argument>, <argument><expr><name>word</name></expr></argument>, <argument><expr><name>LDNS_PARSE_SKIP_SPACE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>line_nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>expect</name> <operator>=</operator> <name>LDNS_RESOLV_KEYWORD</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>LDNS_RESOLV_OPTIONS</name></expr>:</case>
<expr_stmt><expr><name>gtr</name> <operator>=</operator> <call><name>ldns_fget_token_l</name><argument_list>(<argument><expr><name>myfp</name></expr></argument>, <argument><expr><name>word</name></expr></argument>, <argument><expr><name>LDNS_PARSE_SKIP_SPACE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>line_nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>expect</name> <operator>=</operator> <name>LDNS_RESOLV_KEYWORD</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>LDNS_RESOLV_ANCHOR</name></expr>:</case>

<expr_stmt><expr><name>gtr</name> <operator>=</operator> <call><name>ldns_fget_token_l</name><argument_list>(<argument><expr><name>myfp</name></expr></argument>, <argument><expr><name>word</name></expr></argument>, <argument><expr><name>LDNS_PARSE_NORMAL</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>line_nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>gtr</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_resolver_deep_free</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>fp</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>fclose</name><argument_list>(<argument><expr><name>myfp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><name>LDNS_STATUS_SYNTAX_MISSING_VALUE_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if<condition>(<expr><name><name>word</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>==</operator> <literal type="char">'#'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>expect</name> <operator>=</operator> <name>LDNS_RESOLV_KEYWORD</name></expr>;</expr_stmt>
<continue>continue;</continue>
</block_content>}</block></if></if_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_SSL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><name>tmp_rr</name> <operator>=</operator> <call><name>ldns_read_anchor_file</name><argument_list>(<argument><expr><name>word</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>(</operator><name>void</name><operator>)</operator> <call><name>ldns_resolver_push_dnssec_anchor</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>tmp_rr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>tmp_rr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr_stmt><expr><name>expect</name> <operator>=</operator> <name>LDNS_RESOLV_KEYWORD</name></expr>;</expr_stmt>
<break>break;</break>
</block_content>}</block></switch>
</block_content>}</block></while>

<if_stmt><if>if<condition>(<expr><operator>!</operator><name>fp</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>fclose</name><argument_list>(<argument><expr><name>myfp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>res</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>res</name> <operator>=</operator> <name>r</name></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_OK</name></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>ldns_resolver_deep_free</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_NULL</name></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><name>ldns_status</name></type>
<name>ldns_resolver_new_frm_file</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier><modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_status</name></type> <name>s</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>filename</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>fp</name> <operator>=</operator> <call><name>fopen</name><argument_list>(<argument><expr><name>LDNS_RESOLV_CONF</name></expr></argument>, <argument><expr><literal type="string">"r"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>fp</name> <operator>=</operator> <call><name>fopen</name><argument_list>(<argument><expr><name>filename</name></expr></argument>, <argument><expr><literal type="string">"r"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>fp</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_FILE_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>s</name> <operator>=</operator> <call><name>ldns_resolver_new_frm_fp</name><argument_list>(<argument><expr><operator>&amp;</operator><name>r</name></expr></argument>, <argument><expr><name>fp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>fclose</name><argument_list>(<argument><expr><name>fp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>s</name> <operator>==</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>res</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>res</name> <operator>=</operator> <name>r</name></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_OK</name></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>ldns_resolver_free</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_NULL</name></expr>;</return>
</block_content>}</block></else></if_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>s</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_free</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>res</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_deep_free</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>res</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>res</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>close_socket</name><argument_list>(<argument><expr><name><name>res</name><operator>-&gt;</operator><name>_socket</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>res</name><operator>-&gt;</operator><name>_searchlist</name></name></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_resolver_searchlist_count</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><name><name>res</name><operator>-&gt;</operator><name>_searchlist</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>res</name><operator>-&gt;</operator><name>_searchlist</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>res</name><operator>-&gt;</operator><name>_nameservers</name></name></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>res</name><operator>-&gt;</operator><name>_nameserver_count</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><name><name>res</name><operator>-&gt;</operator><name>_nameservers</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>res</name><operator>-&gt;</operator><name>_nameservers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_resolver_domain</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rdf_deep_free</name><argument_list>(<argument><expr><call><name>ldns_resolver_domain</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>res</name><operator>-&gt;</operator><name>_tsig_keyname</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>res</name><operator>-&gt;</operator><name>_tsig_keyname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>res</name><operator>-&gt;</operator><name>_tsig_keydata</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>res</name><operator>-&gt;</operator><name>_tsig_keydata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>res</name><operator>-&gt;</operator><name>_tsig_algorithm</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>res</name><operator>-&gt;</operator><name>_tsig_algorithm</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>res</name><operator>-&gt;</operator><name>_cur_axfr_pkt</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name><name>res</name><operator>-&gt;</operator><name>_cur_axfr_pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>res</name><operator>-&gt;</operator><name>_rtt</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name><name>res</name><operator>-&gt;</operator><name>_rtt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>res</name><operator>-&gt;</operator><name>_dnssec_anchors</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_list_deep_free</name><argument_list>(<argument><expr><name><name>res</name><operator>-&gt;</operator><name>_dnssec_anchors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>ldns_status</name></type>
<name>ldns_resolver_search_status</name><parameter_list>(<parameter><decl><type><name>ldns_pkt</name><modifier>*</modifier><modifier>*</modifier></type> <name>pkt</name></decl></parameter>,
<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rdf</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,
<parameter><decl><type><name>ldns_rr_type</name></type> <name>t</name></decl></parameter>, <parameter><decl><type><name>ldns_rr_class</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>new_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type><name>search_list</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>i</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_status</name></type> <name>s</name> <init>= <expr><name>LDNS_STATUS_OK</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name></type> <name>root_dname</name> <init>= <expr><block>{ <expr><literal type="number">1</literal></expr>, <expr><name>LDNS_RDF_TYPE_DNAME</name></expr>, <expr><operator>(</operator><name>void</name> <operator>*</operator><operator>)</operator><literal type="string">""</literal></expr> }</block></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>ldns_dname_absolute</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<return>return <expr><call><name>ldns_resolver_query_status</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>t</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>ldns_resolver_dnsrch</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>search_list</name> <operator>=</operator> <call><name>ldns_resolver_searchlist</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;=</operator> <call><name>ldns_resolver_searchlist_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>i</name> <operator>==</operator> <call><name>ldns_resolver_searchlist_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>new_name</name> <operator>=</operator> <call><name>ldns_dname_cat_clone</name><argument_list>(<argument><expr><name>name</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>root_dname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>new_name</name> <operator>=</operator> <call><name>ldns_dname_cat_clone</name><argument_list>(<argument><expr><name>name</name></expr></argument>,
<argument><expr><name><name>search_list</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>

<expr_stmt><expr><name>s</name> <operator>=</operator> <call><name>ldns_resolver_query_status</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>, <argument><expr><name>r</name></expr></argument>,
<argument><expr><name>new_name</name></expr></argument>, <argument><expr><name>t</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rdf_free</name><argument_list>(<argument><expr><name>new_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>pkt</name> <operator>&amp;&amp;</operator> <operator>*</operator><name>pkt</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>s</name> <operator>==</operator> <name>LDNS_STATUS_OK</name> <operator>&amp;&amp;</operator>
<call><name>ldns_pkt_get_rcode</name><argument_list>(<argument><expr><operator>*</operator><name>pkt</name></expr></argument>)</argument_list></call> <operator>==</operator>
<name>LDNS_RCODE_NOERROR</name></expr>)</condition> <block>{<block_content>

<return>return <expr><name>LDNS_STATUS_OK</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><operator>*</operator><name>pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>pkt</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></for>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>s</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_pkt</name> <modifier>*</modifier></type>
<name>ldns_resolver_search</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>,<parameter><decl><type><specifier>const</specifier> <name>ldns_rdf</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,
<parameter><decl><type><name>ldns_rr_type</name></type> <name>t</name></decl></parameter>, <parameter><decl><type><name>ldns_rr_class</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_pkt</name><modifier>*</modifier></type> <name>pkt</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_resolver_search_status</name><argument_list>(<argument><expr><operator>&amp;</operator><name>pkt</name></expr></argument>, <argument><expr><operator>(</operator><name>ldns_resolver</name> <operator>*</operator><operator>)</operator><name>r</name></expr></argument>,
<argument><expr><name>name</name></expr></argument>, <argument><expr><name>t</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>pkt</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_status</name></type>
<name>ldns_resolver_query_status</name><parameter_list>(<parameter><decl><type><name>ldns_pkt</name><modifier>*</modifier><modifier>*</modifier></type> <name>pkt</name></decl></parameter>,
<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rdf</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,
<parameter><decl><type><name>ldns_rr_type</name></type> <name>t</name></decl></parameter>, <parameter><decl><type><name>ldns_rr_class</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>newname</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_status</name></type> <name>status</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>ldns_resolver_defnames</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>!</operator><call><name>ldns_resolver_domain</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><call><name>ldns_resolver_send</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>t</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>newname</name> <operator>=</operator> <call><name>ldns_dname_cat_clone</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><call><name>ldns_resolver_domain</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>newname</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_MEM_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>ldns_resolver_send</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><name>newname</name></expr></argument>, <argument><expr><name>t</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rdf_free</name><argument_list>(<argument><expr><name>newname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>status</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_pkt</name> <modifier>*</modifier></type>
<name>ldns_resolver_query</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rdf</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,
<parameter><decl><type><name>ldns_rr_type</name></type> <name>t</name></decl></parameter>, <parameter><decl><type><name>ldns_rr_class</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_pkt</name><modifier>*</modifier></type> <name>pkt</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_resolver_query_status</name><argument_list>(<argument><expr><operator>&amp;</operator><name>pkt</name></expr></argument>, <argument><expr><operator>(</operator><name>ldns_resolver</name> <operator>*</operator><operator>)</operator><name>r</name></expr></argument>,
<argument><expr><name>name</name></expr></argument>, <argument><expr><name>t</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>pkt</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>size_t</name> <modifier>*</modifier></type>
<name>ldns_resolver_backup_rtt</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name> <modifier>*</modifier></type><name>new_rtt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name> <modifier>*</modifier></type><name>old_rtt</name> <init>= <expr><call><name>ldns_resolver_rtt</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>old_rtt</name> <operator>&amp;&amp;</operator> <call><name>ldns_resolver_nameserver_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>new_rtt</name> <operator>=</operator> <call><name>LDNS_XMALLOC</name><argument_list>(<argument><expr><name>size_t</name></expr></argument>
, <argument><expr><call><name>ldns_resolver_nameserver_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name>new_rtt</name></expr></argument>, <argument><expr><name>old_rtt</name></expr></argument>, <argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>size_t</name></expr></argument>)</argument_list></sizeof>
<operator>*</operator> <call><name>ldns_resolver_nameserver_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_rtt</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>new_rtt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>old_rtt</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>ldns_resolver_restore_rtt</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>old_rtt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>size_t</name> <modifier>*</modifier></type><name>cur_rtt</name> <init>= <expr><call><name>ldns_resolver_rtt</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>cur_rtt</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>cur_rtt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_rtt</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>old_rtt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>ldns_status</name></type>
<name>ldns_resolver_send_pkt</name><parameter_list>(<parameter><decl><type><name>ldns_pkt</name> <modifier>*</modifier><modifier>*</modifier></type><name>answer</name></decl></parameter>, <parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>,
<parameter><decl><type><name>ldns_pkt</name> <modifier>*</modifier></type><name>query_pkt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_pkt</name> <modifier>*</modifier></type><name>answer_pkt</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_status</name></type> <name>stat</name> <init>= <expr><name>LDNS_STATUS_OK</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name> <modifier>*</modifier></type><name>rtt</name></decl>;</decl_stmt>

<expr_stmt><expr><name>stat</name> <operator>=</operator> <call><name>ldns_send</name><argument_list>(<argument><expr><operator>&amp;</operator><name>answer_pkt</name></expr></argument>, <argument><expr><operator>(</operator><name>ldns_resolver</name> <operator>*</operator><operator>)</operator><name>r</name></expr></argument>, <argument><expr><name>query_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>stat</name> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if<condition>(<expr><name>answer_pkt</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>answer_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>answer_pkt</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>


<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>ldns_resolver_usevc</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>ldns_resolver_fallback</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>ldns_pkt_tc</name><argument_list>(<argument><expr><name>answer_pkt</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

<if_stmt><if>if <condition>(<expr><call><name>ldns_pkt_edns_udp_size</name><argument_list>(<argument><expr><name>query_pkt</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_set_edns_udp_size</name><argument_list>(<argument><expr><name>query_pkt</name></expr></argument>
, <argument><expr><literal type="number">4096</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>answer_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>answer_pkt</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>








<expr_stmt><expr><name>rtt</name> <operator>=</operator> <call><name>ldns_resolver_backup_rtt</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>stat</name> <operator>=</operator> <call><name>ldns_send</name><argument_list>(<argument><expr><operator>&amp;</operator><name>answer_pkt</name></expr></argument>, <argument><expr><name>r</name></expr></argument>
, <argument><expr><name>query_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_restore_rtt</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>rtt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>stat</name> <operator>!=</operator> <name>LDNS_STATUS_OK</name> <operator>||</operator>
<call><name>ldns_pkt_tc</name><argument_list>(<argument><expr><name>answer_pkt</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_resolver_set_usevc</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>answer_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>stat</name> <operator>=</operator> <call><name>ldns_send</name><argument_list>(<argument><expr><operator>&amp;</operator><name>answer_pkt</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><name>query_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_resolver_set_usevc</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></else></if_stmt>

<if_stmt><if>if <condition>(<expr><name>answer</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>answer</name> <operator>=</operator> <name>answer_pkt</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>stat</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_status</name></type>
<name>ldns_resolver_prepare_query_pkt</name><parameter_list>(<parameter><decl><type><name>ldns_pkt</name> <modifier>*</modifier><modifier>*</modifier></type><name>query_pkt</name></decl></parameter>, <parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>ldns_rdf</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>ldns_rr_type</name></type> <name>t</name></decl></parameter>,
<parameter><decl><type><name>ldns_rr_class</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>timeval</name></name></type> <name>now</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rr</name><modifier>*</modifier></type> <name>soa</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>



<if_stmt><if>if <condition>(<expr><name>t</name> <operator>==</operator> <name>LDNS_RR_TYPE_IXFR</name></expr>)</condition> <block>{<block_content>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>owner_rdf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>mname_rdf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>rname_rdf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>serial_rdf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>refresh_rdf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>retry_rdf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>expire_rdf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>minimum_rdf</name></decl>;</decl_stmt>
<expr_stmt><expr><name>soa</name> <operator>=</operator> <call><name>ldns_rr_new</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>soa</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>owner_rdf</name> <operator>=</operator> <call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>owner_rdf</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>soa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_rr_set_owner</name><argument_list>(<argument><expr><name>soa</name></expr></argument>, <argument><expr><name>owner_rdf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_set_type</name><argument_list>(<argument><expr><name>soa</name></expr></argument>, <argument><expr><name>LDNS_RR_TYPE_SOA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_set_class</name><argument_list>(<argument><expr><name>soa</name></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_rr_set_question</name><argument_list>(<argument><expr><name>soa</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_str2rdf_dname</name><argument_list>(<argument><expr><operator>&amp;</operator><name>mname_rdf</name></expr></argument>, <argument><expr><literal type="string">"."</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>soa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if> <else>else<block type="pseudo"><block_content> <expr_stmt><expr><call><name>ldns_rr_push_rdf</name><argument_list>(<argument><expr><name>soa</name></expr></argument>, <argument><expr><name>mname_rdf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_str2rdf_dname</name><argument_list>(<argument><expr><operator>&amp;</operator><name>rname_rdf</name></expr></argument>, <argument><expr><literal type="string">"."</literal></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>soa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if> <else>else<block type="pseudo"><block_content> <expr_stmt><expr><call><name>ldns_rr_push_rdf</name><argument_list>(<argument><expr><name>soa</name></expr></argument>, <argument><expr><name>rname_rdf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
<expr_stmt><expr><name>serial_rdf</name> <operator>=</operator> <call><name>ldns_native2rdf_int32</name><argument_list>(<argument><expr><name>LDNS_RDF_TYPE_INT32</name></expr></argument>, <argument><expr><call><name>ldns_resolver_get_ixfr_serial</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>serial_rdf</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>soa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if> <else>else<block type="pseudo"><block_content> <expr_stmt><expr><call><name>ldns_rr_push_rdf</name><argument_list>(<argument><expr><name>soa</name></expr></argument>, <argument><expr><name>serial_rdf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
<expr_stmt><expr><name>refresh_rdf</name> <operator>=</operator> <call><name>ldns_native2rdf_int32</name><argument_list>(<argument><expr><name>LDNS_RDF_TYPE_INT32</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>refresh_rdf</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>soa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if> <else>else<block type="pseudo"><block_content> <expr_stmt><expr><call><name>ldns_rr_push_rdf</name><argument_list>(<argument><expr><name>soa</name></expr></argument>, <argument><expr><name>refresh_rdf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
<expr_stmt><expr><name>retry_rdf</name> <operator>=</operator> <call><name>ldns_native2rdf_int32</name><argument_list>(<argument><expr><name>LDNS_RDF_TYPE_INT32</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>retry_rdf</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>soa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if> <else>else<block type="pseudo"><block_content> <expr_stmt><expr><call><name>ldns_rr_push_rdf</name><argument_list>(<argument><expr><name>soa</name></expr></argument>, <argument><expr><name>retry_rdf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
<expr_stmt><expr><name>expire_rdf</name> <operator>=</operator> <call><name>ldns_native2rdf_int32</name><argument_list>(<argument><expr><name>LDNS_RDF_TYPE_INT32</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>expire_rdf</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>soa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if> <else>else<block type="pseudo"><block_content> <expr_stmt><expr><call><name>ldns_rr_push_rdf</name><argument_list>(<argument><expr><name>soa</name></expr></argument>, <argument><expr><name>expire_rdf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
<expr_stmt><expr><name>minimum_rdf</name> <operator>=</operator> <call><name>ldns_native2rdf_int32</name><argument_list>(<argument><expr><name>LDNS_RDF_TYPE_INT32</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><name>minimum_rdf</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>soa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if> <else>else<block type="pseudo"><block_content> <expr_stmt><expr><call><name>ldns_rr_push_rdf</name><argument_list>(<argument><expr><name>soa</name></expr></argument>, <argument><expr><name>minimum_rdf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<expr_stmt><expr><operator>*</operator><name>query_pkt</name> <operator>=</operator> <call><name>ldns_pkt_ixfr_request_new</name><argument_list>(<argument><expr><call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>c</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>, <argument><expr><name>soa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>query_pkt</name> <operator>=</operator> <call><name>ldns_pkt_query_new</name><argument_list>(<argument><expr><call><name>ldns_rdf_clone</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>t</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>*</operator><name>query_pkt</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_rr_free</name><argument_list>(<argument><expr><name>soa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><call><name>ldns_resolver_dnssec</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><call><name>ldns_resolver_edns_udp_size</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_resolver_set_edns_udp_size</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><literal type="number">4096</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><call><name>ldns_pkt_set_edns_do</name><argument_list>(<argument><expr><operator>*</operator><name>query_pkt</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_resolver_dnssec_cd</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>(</operator><name>flags</name> <operator>&amp;</operator> <name>LDNS_CD</name><operator>)</operator></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_set_cd</name><argument_list>(<argument><expr><operator>*</operator><name>query_pkt</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><call><name>ldns_resolver_edns_udp_size</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_set_edns_udp_size</name><argument_list>(<argument><expr><operator>*</operator><name>query_pkt</name></expr></argument>, <argument><expr><call><name>ldns_resolver_edns_udp_size</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<expr_stmt><expr><name><name>now</name><operator>.</operator><name>tv_sec</name></name> <operator>=</operator> <call><name>time</name><argument_list>(<argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>now</name><operator>.</operator><name>tv_usec</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_pkt_set_timestamp</name><argument_list>(<argument><expr><operator>*</operator><name>query_pkt</name></expr></argument>, <argument><expr><name>now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><call><name>ldns_resolver_debug</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_print</name><argument_list>(<argument><expr><name>stdout</name></expr></argument>, <argument><expr><operator>*</operator><name>query_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><call><name>ldns_pkt_id</name><argument_list>(<argument><expr><operator>*</operator><name>query_pkt</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_set_random_id</name><argument_list>(<argument><expr><operator>*</operator><name>query_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><name>LDNS_STATUS_OK</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_status</name></type>
<name>ldns_resolver_send</name><parameter_list>(<parameter><decl><type><name>ldns_pkt</name> <modifier>*</modifier><modifier>*</modifier></type><name>answer</name></decl></parameter>, <parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_rdf</name> <modifier>*</modifier></type><name>name</name></decl></parameter>,
<parameter><decl><type><name>ldns_rr_type</name></type> <name>t</name></decl></parameter>, <parameter><decl><type><name>ldns_rr_class</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_pkt</name> <modifier>*</modifier></type><name>query_pkt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_pkt</name> <modifier>*</modifier></type><name>answer_pkt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_status</name></type> <name>status</name></decl>;</decl_stmt>

<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>r</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>name</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>answer_pkt</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>




<if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name>t</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>t</name><operator>=</operator> <name>LDNS_RR_TYPE_A</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <name>c</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>c</name><operator>=</operator> <name>LDNS_RR_CLASS_IN</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><literal type="number">0</literal> <operator>==</operator> <call><name>ldns_resolver_nameserver_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_RES_NO_NS</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rdf_get_type</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call> <operator>!=</operator> <name>LDNS_RDF_TYPE_DNAME</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>LDNS_STATUS_RES_QUERY</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>ldns_resolver_prepare_query_pkt</name><argument_list>(<argument><expr><operator>&amp;</operator><name>query_pkt</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><name>name</name></expr></argument>,
<argument><expr><name>t</name></expr></argument>, <argument><expr><name>c</name></expr></argument>, <argument><expr><name>flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<return>return <expr><name>status</name></expr>;</return>
</block_content>}</block></if></if_stmt>







<if_stmt><if>if <condition>(<expr><call><name>ldns_resolver_tsig_keyname</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>ldns_resolver_tsig_keydata</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_SSL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>ldns_pkt_tsig_sign</name><argument_list>(<argument><expr><name>query_pkt</name></expr></argument>,
<argument><expr><call><name>ldns_resolver_tsig_keyname</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>ldns_resolver_tsig_keydata</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><literal type="number">300</literal></expr></argument>, <argument><expr><call><name>ldns_resolver_tsig_algorithm</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>query_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_CRYPTO_TSIG_ERR</name></expr>;</return>
</block_content>}</block></if></if_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>query_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><name>LDNS_STATUS_CRYPTO_TSIG_ERR</name></expr>;</return>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>ldns_resolver_send_pkt</name><argument_list>(<argument><expr><operator>&amp;</operator><name>answer_pkt</name></expr></argument>, <argument><expr><name>r</name></expr></argument>, <argument><expr><name>query_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name>query_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><name>answer</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>answer</name> <operator>=</operator> <name>answer_pkt</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>status</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_rr</name> <modifier>*</modifier></type>
<name>ldns_axfr_next</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>resolver</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>cur_rr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>packet_wire</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>packet_wire_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_status</name></type> <name>status</name></decl>;</decl_stmt>


<if_stmt><if>if <condition>(<expr><operator>!</operator><name>resolver</name> <operator>||</operator> <name><name>resolver</name><operator>-&gt;</operator><name>_socket</name></name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>resolver</name><operator>-&gt;</operator><name>_cur_axfr_pkt</name></name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>resolver</name><operator>-&gt;</operator><name>_axfr_i</name></name> <operator>==</operator> <call><name>ldns_pkt_ancount</name><argument_list>(<argument><expr><name><name>resolver</name><operator>-&gt;</operator><name>_cur_axfr_pkt</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name><name>resolver</name><operator>-&gt;</operator><name>_cur_axfr_pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>resolver</name><operator>-&gt;</operator><name>_cur_axfr_pkt</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
<return>return <expr><call><name>ldns_axfr_next</name><argument_list>(<argument><expr><name>resolver</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>cur_rr</name> <operator>=</operator> <call><name>ldns_rr_clone</name><argument_list>(<argument><expr><call><name>ldns_rr_list_rr</name><argument_list>(
<argument><expr><call><name>ldns_pkt_answer</name><argument_list>(<argument><expr><name><name>resolver</name><operator>-&gt;</operator><name>_cur_axfr_pkt</name></name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name><name>resolver</name><operator>-&gt;</operator><name>_axfr_i</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>resolver</name><operator>-&gt;</operator><name>_axfr_i</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>ldns_rr_get_type</name><argument_list>(<argument><expr><name>cur_rr</name></expr></argument>)</argument_list></call> <operator>==</operator> <name>LDNS_RR_TYPE_SOA</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>resolver</name><operator>-&gt;</operator><name>_axfr_soa_count</name></name><operator>++</operator></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>resolver</name><operator>-&gt;</operator><name>_axfr_soa_count</name></name> <operator>&gt;=</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><call><name>close_socket</name><argument_list>(<argument><expr><name><name>resolver</name><operator>-&gt;</operator><name>_socket</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>ldns_pkt_free</name><argument_list>(<argument><expr><name><name>resolver</name><operator>-&gt;</operator><name>_cur_axfr_pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>resolver</name><operator>-&gt;</operator><name>_cur_axfr_pkt</name></name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></if></if_stmt>
<return>return <expr><name>cur_rr</name></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name>packet_wire</name> <operator>=</operator> <call><name>ldns_tcp_read_wire_timeout</name><argument_list>(<argument><expr><name><name>resolver</name><operator>-&gt;</operator><name>_socket</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name>packet_wire_size</name></expr></argument>, <argument><expr><name><name>resolver</name><operator>-&gt;</operator><name>_timeout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if<condition>(<expr><operator>!</operator><name>packet_wire</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><name>status</name> <operator>=</operator> <call><name>ldns_wire2pkt</name><argument_list>(<argument><expr><operator>&amp;</operator><name><name>resolver</name><operator>-&gt;</operator><name>_cur_axfr_pkt</name></name></expr></argument>, <argument><expr><name>packet_wire</name></expr></argument>,
<argument><expr><name>packet_wire_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>LDNS_FREE</name><argument_list>(<argument><expr><name>packet_wire</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>resolver</name><operator>-&gt;</operator><name>_axfr_i</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>LDNS_STATUS_OK</name></expr>)</condition> <block>{<block_content>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>STDERR_MSGS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"Error parsing rr during AXFR: %s\n"</literal></expr></argument>, <argument><expr><call><name>ldns_get_errorstr_by_id</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>





<expr_stmt><expr><call><name>close_socket</name><argument_list>(<argument><expr><name><name>resolver</name><operator>-&gt;</operator><name>_socket</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>ldns_pkt_get_rcode</name><argument_list>(<argument><expr><name><name>resolver</name><operator>-&gt;</operator><name>_cur_axfr_pkt</name></name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>STDERR_MSGS</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl_stmt><decl><type><name>ldns_lookup_table</name> <modifier>*</modifier></type><name>rcode</name> <init>= <expr><call><name>ldns_lookup_by_id</name><argument_list>(
<argument><expr><name>ldns_rcodes</name></expr></argument>,<argument><expr><operator>(</operator><name>int</name><operator>)</operator> <call><name>ldns_pkt_get_rcode</name><argument_list>(
<argument><expr><name><name>resolver</name><operator>-&gt;</operator><name>_cur_axfr_pkt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>rcode</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"Error in AXFR: %s\n"</literal></expr></argument>,
<argument><expr><name><name>rcode</name><operator>-&gt;</operator><name>name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>fprintf</name><argument_list>(<argument><expr><name>stderr</name></expr></argument>, <argument><expr><literal type="string">"Error in AXFR: %d\n"</literal></expr></argument>,
<argument><expr><operator>(</operator><name>int</name><operator>)</operator> <call><name>ldns_pkt_get_rcode</name><argument_list>(
<argument><expr><name><name>resolver</name><operator>-&gt;</operator><name>_cur_axfr_pkt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>





<expr_stmt><expr><call><name>close_socket</name><argument_list>(<argument><expr><name><name>resolver</name><operator>-&gt;</operator><name>_socket</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>NULL</name></expr>;</return>
</block_content>}</block></if> <else>else <block>{<block_content>
<return>return <expr><call><name>ldns_axfr_next</name><argument_list>(<argument><expr><name>resolver</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></else></if_stmt>

</block_content>}</block></else></if_stmt>

</block_content>}</block></function>






<function><type><name>void</name></type>
<name>ldns_axfr_abort</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>resolver</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name><name>resolver</name><operator>-&gt;</operator><name>_socket</name></name> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition>
<block>{<block_content>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>USE_WINSOCK</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>close</name><argument_list>(<argument><expr><name><name>resolver</name><operator>-&gt;</operator><name>_socket</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<expr_stmt><expr><call><name>closesocket</name><argument_list>(<argument><expr><name><name>resolver</name><operator>-&gt;</operator><name>_socket</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<expr_stmt><expr><name><name>resolver</name><operator>-&gt;</operator><name>_socket</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
</block_content>}</block></function>

<function><type><name>bool</name></type>
<name>ldns_axfr_complete</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>res</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<return>return <expr><name><name>res</name><operator>-&gt;</operator><name>_axfr_soa_count</name></name> <operator>==</operator> <literal type="number">2</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>ldns_pkt</name> <modifier>*</modifier></type>
<name>ldns_axfr_last_pkt</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>res</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>res</name><operator>-&gt;</operator><name>_cur_axfr_pkt</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>ldns_resolver_set_ixfr_serial</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>serial</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>r</name><operator>-&gt;</operator><name>_serial</name></name> <operator>=</operator> <name>serial</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>uint32_t</name></type>
<name>ldns_resolver_get_ixfr_serial</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_resolver</name> <modifier>*</modifier></type><name>res</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>res</name><operator>-&gt;</operator><name>_serial</name></name></expr>;</return>
</block_content>}</block></function>



<function><type><name>void</name></type>
<name>ldns_resolver_nameservers_randomize</name><parameter_list>(<parameter><decl><type><name>ldns_resolver</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>j</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier><modifier>*</modifier></type><name>ns</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>tmpns</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name> <modifier>*</modifier></type><name>rtt</name></decl>, <decl><type ref="prev"/><name>tmprtt</name></decl>;</decl_stmt>


<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>r</name> <operator>!=</operator> <name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>ns</name> <operator>=</operator> <call><name>ldns_resolver_nameservers</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>rtt</name> <operator>=</operator> <call><name>ldns_resolver_rtt</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>ldns_resolver_nameserver_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><name>j</name> <operator>=</operator> <call><name>ldns_get_random</name><argument_list>()</argument_list></call> <operator>%</operator> <call><name>ldns_resolver_nameserver_count</name><argument_list>(<argument><expr><name>r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>tmpns</name> <operator>=</operator> <name><name>ns</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ns</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>ns</name><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>ns</name><index>[<expr><name>j</name></expr>]</index></name> <operator>=</operator> <name>tmpns</name></expr>;</expr_stmt>
<expr_stmt><expr><name>tmprtt</name> <operator>=</operator> <name><name>rtt</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rtt</name><index>[<expr><name>i</name></expr>]</index></name> <operator>=</operator> <name><name>rtt</name><index>[<expr><name>j</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>rtt</name><index>[<expr><name>j</name></expr>]</index></name> <operator>=</operator> <name>tmprtt</name></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>ldns_resolver_set_nameservers</name><argument_list>(<argument><expr><name>r</name></expr></argument>, <argument><expr><name>ns</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

</unit>
