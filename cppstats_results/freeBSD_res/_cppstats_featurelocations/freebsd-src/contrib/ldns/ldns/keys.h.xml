<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/ldns/ldns/keys.h">



















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LDNS_KEYS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LDNS_KEYS_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ldns/common.h&gt;</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LDNS_BUILD_CONFIG_HAVE_SSL</name></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;openssl/ssl.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ldns/util.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;errno.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><specifier>extern</specifier> <name>ldns_lookup_table</name></type> <name><name>ldns_signing_algorithms</name><index>[]</index></name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LDNS_KEY_ZONE_KEY</name></cpp:macro> <cpp:value>0x0100</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LDNS_KEY_SEP_KEY</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LDNS_KEY_REVOKE_KEY</name></cpp:macro> <cpp:value>0x0080</cpp:value></cpp:define>




<enum>enum <name>ldns_enum_algorithm</name>
<block>{
<decl><name>LDNS_RSAMD5</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>LDNS_DH</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>LDNS_DSA</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
<decl><name>LDNS_ECC</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,
<decl><name>LDNS_RSASHA1</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,
<decl><name>LDNS_DSA_NSEC3</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,
<decl><name>LDNS_RSASHA1_NSEC3</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,
<decl><name>LDNS_RSASHA256</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,
<decl><name>LDNS_RSASHA512</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,
<decl><name>LDNS_ECC_GOST</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>,
<decl><name>LDNS_ECDSAP256SHA256</name> <init>= <expr><literal type="number">13</literal></expr></init></decl>,
<decl><name>LDNS_ECDSAP384SHA384</name> <init>= <expr><literal type="number">14</literal></expr></init></decl>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_ED25519</name></expr></argument>)</argument_list></call></expr></cpp:if>




<decl><name>LDNS_ED25519</name> <init>= <expr><literal type="number">15</literal></expr></init></decl>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_ED448</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl><name>LDNS_ED448</name> <init>= <expr><literal type="number">16</literal></expr></init></decl>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<decl><name>LDNS_INDIRECT</name> <init>= <expr><literal type="number">252</literal></expr></init></decl>,
<decl><name>LDNS_PRIVATEDNS</name> <init>= <expr><literal type="number">253</literal></expr></init></decl>,
<decl><name>LDNS_PRIVATEOID</name> <init>= <expr><literal type="number">254</literal></expr></init></decl>
}</block>;</enum>
<typedef>typedef <type><name><name>enum</name> <name>ldns_enum_algorithm</name></name></type> <name>ldns_algorithm</name>;</typedef>




<enum>enum <name>ldns_enum_hash</name>
<block>{
<decl><name>LDNS_SHA1</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>LDNS_SHA256</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>LDNS_HASH_GOST</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
<decl><name>LDNS_SHA384</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>
}</block>;</enum>
<typedef>typedef <type><name><name>enum</name> <name>ldns_enum_hash</name></name></type> <name>ldns_hash</name>;</typedef>




<enum>enum <name>ldns_enum_signing_algorithm</name>
<block>{
<decl><name>LDNS_SIGN_RSAMD5</name> <init>= <expr><name>LDNS_RSAMD5</name></expr></init></decl>,
<decl><name>LDNS_SIGN_RSASHA1</name> <init>= <expr><name>LDNS_RSASHA1</name></expr></init></decl>,
<decl><name>LDNS_SIGN_DSA</name> <init>= <expr><name>LDNS_DSA</name></expr></init></decl>,
<decl><name>LDNS_SIGN_RSASHA1_NSEC3</name> <init>= <expr><name>LDNS_RSASHA1_NSEC3</name></expr></init></decl>,
<decl><name>LDNS_SIGN_RSASHA256</name> <init>= <expr><name>LDNS_RSASHA256</name></expr></init></decl>,
<decl><name>LDNS_SIGN_RSASHA512</name> <init>= <expr><name>LDNS_RSASHA512</name></expr></init></decl>,
<decl><name>LDNS_SIGN_DSA_NSEC3</name> <init>= <expr><name>LDNS_DSA_NSEC3</name></expr></init></decl>,
<decl><name>LDNS_SIGN_ECC_GOST</name> <init>= <expr><name>LDNS_ECC_GOST</name></expr></init></decl>,
<decl><name>LDNS_SIGN_ECDSAP256SHA256</name> <init>= <expr><name>LDNS_ECDSAP256SHA256</name></expr></init></decl>,
<decl><name>LDNS_SIGN_ECDSAP384SHA384</name> <init>= <expr><name>LDNS_ECDSAP384SHA384</name></expr></init></decl>,
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_ED25519</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl><name>LDNS_SIGN_ED25519</name> <init>= <expr><name>LDNS_ED25519</name></expr></init></decl>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>USE_ED448</name></expr></argument>)</argument_list></call></expr></cpp:if>
<decl><name>LDNS_SIGN_ED448</name> <init>= <expr><name>LDNS_ED448</name></expr></init></decl>,
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<decl><name>LDNS_SIGN_HMACMD5</name> <init>= <expr><literal type="number">157</literal></expr></init></decl>,
<decl><name>LDNS_SIGN_HMACSHA1</name> <init>= <expr><literal type="number">158</literal></expr></init></decl>,
<decl><name>LDNS_SIGN_HMACSHA256</name> <init>= <expr><literal type="number">159</literal></expr></init></decl>,
<decl><name>LDNS_SIGN_HMACSHA224</name> <init>= <expr><literal type="number">162</literal></expr></init></decl>,
<decl><name>LDNS_SIGN_HMACSHA384</name> <init>= <expr><literal type="number">164</literal></expr></init></decl>,
<decl><name>LDNS_SIGN_HMACSHA512</name> <init>= <expr><literal type="number">165</literal></expr></init></decl>
}</block>;</enum>
<typedef>typedef <type><name><name>enum</name> <name>ldns_enum_signing_algorithm</name></name></type> <name>ldns_signing_algorithm</name>;</typedef>











<struct>struct <name>ldns_struct_key</name> <block>{
<decl_stmt><decl><type><name>ldns_signing_algorithm</name></type> <name>_alg</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>_use</name></decl>;</decl_stmt>


<struct>struct <block>{
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LDNS_BUILD_CONFIG_HAVE_SSL</name></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>S_SPLINT_S</name></expr></argument>)</argument_list></call></expr></cpp:if>


<decl_stmt><decl><type><name>EVP_PKEY</name> <modifier>*</modifier></type><name>key</name></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>



<struct>struct <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>key</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>size</name></decl>;</decl_stmt>
}</block> <decl><name>hmac</name></decl>;</struct>



<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>external_key</name></decl>;</decl_stmt>
}</block> <decl><name>_key</name></decl>;</struct>

<union>union <block>{

<struct>struct <block>{

<decl_stmt><decl><type><name>uint32_t</name></type> <name>orig_ttl</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>inception</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>expiration</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>keytag</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>flags</name></decl>;</decl_stmt>
}</block> <decl><name>dnssec</name></decl>;</struct>
}</block> <decl><name>_extra</name></decl>;</union>

<decl_stmt><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>_pubkey_owner</name></decl>;</decl_stmt>
}</block>;</struct>
<typedef>typedef <type><name><name>struct</name> <name>ldns_struct_key</name></name></type> <name>ldns_key</name>;</typedef>




<struct>struct <name>ldns_struct_key_list</name>
<block>{
<decl_stmt><decl><type><name>size_t</name></type> <name>_key_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>ldns_key</name> <modifier>*</modifier><modifier>*</modifier></type><name>_keys</name></decl>;</decl_stmt>
}</block>;</struct>
<typedef>typedef <type><name><name>struct</name> <name>ldns_struct_key_list</name></name></type> <name>ldns_key_list</name>;</typedef>






<function_decl><type><name>ldns_key_list</name> <modifier>*</modifier></type><name>ldns_key_list_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>ldns_key_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>ldns_key_new_frm_algorithm</name><parameter_list>(<parameter><decl><type><name>ldns_signing_algorithm</name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>ldns_status</name></type> <name>ldns_key_new_frm_fp</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier><modifier>*</modifier></type><name>k</name></decl></parameter>, <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>ldns_status</name></type> <name>ldns_key_new_frm_fp_l</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier><modifier>*</modifier></type><name>k</name></decl></parameter>, <parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>line_nr</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LDNS_BUILD_CONFIG_HAVE_SSL</name></expr></cpp:if>




<function_decl><type><name>ldns_status</name></type> <name>ldns_key_new_frm_engine</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier><modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>ENGINE</name> <modifier>*</modifier></type><name>e</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>key_id</name></decl></parameter>, <parameter><decl><type><name>ldns_algorithm</name></type></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>RSA</name> <modifier>*</modifier></type><name>ldns_key_new_frm_fp_rsa</name><parameter_list>(<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LDNS_BUILD_CONFIG_HAVE_SSL</name></expr></cpp:if>







<function_decl><type><name>RSA</name> <modifier>*</modifier></type><name>ldns_key_new_frm_fp_rsa_l</name><parameter_list>(<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>line_nr</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LDNS_BUILD_CONFIG_HAVE_SSL</name></expr></cpp:if>






<function_decl><type><name>DSA</name> <modifier>*</modifier></type><name>ldns_key_new_frm_fp_dsa</name><parameter_list>(<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LDNS_BUILD_CONFIG_HAVE_SSL</name></expr></cpp:if>







<function_decl><type><name>DSA</name> <modifier>*</modifier></type><name>ldns_key_new_frm_fp_dsa_l</name><parameter_list>(<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>line_nr</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LDNS_BUILD_CONFIG_HAVE_SSL</name></expr></cpp:if>








<function_decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>ldns_key_new_frm_fp_hmac</name><parameter_list>(<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>hmac_size</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LDNS_BUILD_CONFIG_HAVE_SSL</name></expr></cpp:if>









<function_decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>ldns_key_new_frm_fp_hmac_l</name><parameter_list>(<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>fp</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>line_nr</name></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>hmac_size</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>







<function_decl><type><name>void</name></type> <name>ldns_key_set_algorithm</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>, <parameter><decl><type><name>ldns_signing_algorithm</name></type> <name>l</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LDNS_BUILD_CONFIG_HAVE_SSL</name></expr></cpp:if>





<function_decl><type><name>void</name></type> <name>ldns_key_set_evp_key</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>, <parameter><decl><type><name>EVP_PKEY</name> <modifier>*</modifier></type><name>e</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>ldns_key_set_rsa_key</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>, <parameter><decl><type><name>RSA</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>ldns_key_set_dsa_key</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>, <parameter><decl><type><name>DSA</name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>ldns_key_assign_rsa_key</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>, <parameter><decl><type><name>RSA</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>ldns_key_assign_dsa_key</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>, <parameter><decl><type><name>DSA</name> <modifier>*</modifier></type><name>d</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>int</name></type> <name>ldns_key_EVP_load_gost_id</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>ldns_key_EVP_unload_gost</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>






<function_decl><type><name>void</name></type> <name>ldns_key_set_hmac_key</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>hmac</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>void</name></type> <name>ldns_key_set_external_key</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>external_key</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>ldns_key_set_hmac_size</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>hmac_size</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>ldns_key_set_origttl</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>t</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>ldns_key_set_inception</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>i</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>ldns_key_set_expiration</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type> <name>e</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>ldns_key_set_pubkey_owner</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>, <parameter><decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>ldns_key_set_keytag</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>tag</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>ldns_key_set_flags</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>ldns_key_list_set_key_count</name><parameter_list>(<parameter><decl><type><name>ldns_key_list</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>count</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>bool</name></type> <name>ldns_key_list_push_key</name><parameter_list>(<parameter><decl><type><name>ldns_key_list</name> <modifier>*</modifier></type><name>key_list</name></decl></parameter>, <parameter><decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>size_t</name></type> <name>ldns_key_list_key_count</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_key_list</name> <modifier>*</modifier></type><name>key_list</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>ldns_key_list_key</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_key_list</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>nr</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LDNS_BUILD_CONFIG_HAVE_SSL</name></expr></cpp:if>





<function_decl><type><name>RSA</name> <modifier>*</modifier></type><name>ldns_key_rsa_key</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>EVP_PKEY</name> <modifier>*</modifier></type><name>ldns_key_evp_key</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>




<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>LDNS_BUILD_CONFIG_HAVE_SSL</name></expr></cpp:if>
<function_decl><type><name>DSA</name> <modifier>*</modifier></type><name>ldns_key_dsa_key</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>






<function_decl><type><name>ldns_signing_algorithm</name></type> <name>ldns_key_algorithm</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>ldns_key_set_use</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>v</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>bool</name></type> <name>ldns_key_use</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>ldns_key_hmac_key</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name> <modifier>*</modifier></type><name>ldns_key_external_key</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>size_t</name></type> <name>ldns_key_hmac_size</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>uint32_t</name></type> <name>ldns_key_origttl</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>uint32_t</name></type> <name>ldns_key_inception</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>uint32_t</name></type> <name>ldns_key_expiration</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>uint16_t</name></type> <name>ldns_key_keytag</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>ldns_rdf</name> <modifier>*</modifier></type><name>ldns_key_pubkey_owner</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type>
<name>ldns_key_list_set_use</name><parameter_list>(<parameter><decl><type><name>ldns_key_list</name> <modifier>*</modifier></type><name>keys</name></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>v</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>uint16_t</name></type> <name>ldns_key_flags</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>ldns_key_list_pop_key</name><parameter_list>(<parameter><decl><type><name>ldns_key_list</name> <modifier>*</modifier></type><name>key_list</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>ldns_rr</name> <modifier>*</modifier></type><name>ldns_key2rr</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>ldns_key_print</name><parameter_list>(<parameter><decl><type><name>FILE</name> <modifier>*</modifier></type><name>output</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_key</name> <modifier>*</modifier></type><name>k</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>ldns_key_free</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>ldns_key_deep_free</name><parameter_list>(<parameter><decl><type><name>ldns_key</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>ldns_key_list_free</name><parameter_list>(<parameter><decl><type><name>ldns_key_list</name> <modifier>*</modifier></type><name>key_list</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>ldns_rr</name> <modifier>*</modifier></type> <name>ldns_read_anchor_file</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>filename</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>char</name> <modifier>*</modifier></type><name>ldns_key_get_file_base_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_key</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>int</name></type> <name>ldns_key_algo_supported</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>algo</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>ldns_signing_algorithm</name></type> <name>ldns_get_signing_algorithm_by_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>name</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
