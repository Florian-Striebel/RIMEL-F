<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/ldns/ldns/radix.h">









































<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LDNS_RADIX_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LDNS_RADIX_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ldns/error.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><name>uint16_t</name></type> <name>radix_strlen_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>ldns_radix_array_t</name></name></type> <name>ldns_radix_array_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>ldns_radix_node_t</name></name></type> <name>ldns_radix_node_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>ldns_radix_t</name></name></type> <name>ldns_radix_t</name>;</typedef>


<struct>struct <name>ldns_radix_array_t</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name><modifier>*</modifier></type> <name>str</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>radix_strlen_t</name></type> <name>len</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ldns_radix_node_t</name><modifier>*</modifier></type> <name>edge</name></decl>;</decl_stmt>
}</block>;</struct>


<struct>struct <name>ldns_radix_node_t</name> <block>{

<decl_stmt><decl><type><name>uint8_t</name><modifier>*</modifier></type> <name>key</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>radix_strlen_t</name></type> <name>klen</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name><modifier>*</modifier></type> <name>data</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ldns_radix_node_t</name><modifier>*</modifier></type> <name>parent</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name>parent_index</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>len</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>offset</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint16_t</name></type> <name>capacity</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ldns_radix_array_t</name><modifier>*</modifier></type> <name>array</name></decl>;</decl_stmt>
}</block>;</struct>


<struct>struct <name>ldns_radix_t</name> <block>{

<decl_stmt><decl><type><name>ldns_radix_node_t</name><modifier>*</modifier></type> <name>root</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>count</name></decl>;</decl_stmt>
}</block>;</struct>






<function_decl><type><name>ldns_radix_t</name><modifier>*</modifier></type> <name>ldns_radix_create</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>ldns_radix_init</name><parameter_list>(<parameter><decl><type><name>ldns_radix_t</name><modifier>*</modifier></type> <name>tree</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>void</name></type> <name>ldns_radix_free</name><parameter_list>(<parameter><decl><type><name>ldns_radix_t</name><modifier>*</modifier></type> <name>tree</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>ldns_status</name></type> <name>ldns_radix_insert</name><parameter_list>(<parameter><decl><type><name>ldns_radix_t</name><modifier>*</modifier></type> <name>tree</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name><modifier>*</modifier></type> <name>key</name></decl></parameter>,
<parameter><decl><type><name>radix_strlen_t</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>data</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name><modifier>*</modifier></type> <name>ldns_radix_delete</name><parameter_list>(<parameter><decl><type><name>ldns_radix_t</name><modifier>*</modifier></type> <name>tree</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name><modifier>*</modifier></type> <name>key</name></decl></parameter>, <parameter><decl><type><name>radix_strlen_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>ldns_radix_node_t</name><modifier>*</modifier></type> <name>ldns_radix_search</name><parameter_list>(<parameter><decl><type><name>ldns_radix_t</name><modifier>*</modifier></type> <name>tree</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name><modifier>*</modifier></type> <name>key</name></decl></parameter>,
<parameter><decl><type><name>radix_strlen_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>int</name></type> <name>ldns_radix_find_less_equal</name><parameter_list>(<parameter><decl><type><name>ldns_radix_t</name><modifier>*</modifier></type> <name>tree</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>uint8_t</name><modifier>*</modifier></type> <name>key</name></decl></parameter>,
<parameter><decl><type><name>radix_strlen_t</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>ldns_radix_node_t</name><modifier>*</modifier><modifier>*</modifier></type> <name>result</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>ldns_radix_node_t</name><modifier>*</modifier></type> <name>ldns_radix_first</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_radix_t</name><modifier>*</modifier></type> <name>tree</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>ldns_radix_node_t</name><modifier>*</modifier></type> <name>ldns_radix_last</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>ldns_radix_t</name><modifier>*</modifier></type> <name>tree</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>ldns_radix_node_t</name><modifier>*</modifier></type> <name>ldns_radix_next</name><parameter_list>(<parameter><decl><type><name>ldns_radix_node_t</name><modifier>*</modifier></type> <name>node</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>ldns_radix_node_t</name><modifier>*</modifier></type> <name>ldns_radix_prev</name><parameter_list>(<parameter><decl><type><name>ldns_radix_node_t</name><modifier>*</modifier></type> <name>node</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>ldns_status</name></type> <name>ldns_radix_split</name><parameter_list>(<parameter><decl><type><name>ldns_radix_t</name><modifier>*</modifier></type> <name>tree1</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>num</name></decl></parameter>,
<parameter><decl><type><name>ldns_radix_t</name><modifier>*</modifier><modifier>*</modifier></type> <name>tree2</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>ldns_status</name></type> <name>ldns_radix_join</name><parameter_list>(<parameter><decl><type><name>ldns_radix_t</name><modifier>*</modifier></type> <name>tree1</name></decl></parameter>, <parameter><decl><type><name>ldns_radix_t</name><modifier>*</modifier></type> <name>tree2</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>void</name></type> <name>ldns_radix_traverse_postorder</name><parameter_list>(<parameter><decl><type><name>ldns_radix_node_t</name><modifier>*</modifier></type> <name>node</name></decl></parameter>,
<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>func</name>)<parameter_list>(<parameter><decl><type><name>ldns_radix_node_t</name><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>arg</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>void</name></type> <name>ldns_radix_printf</name><parameter_list>(<parameter><decl><type><name>FILE</name><modifier>*</modifier></type> <name>fd</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ldns_radix_t</name><modifier>*</modifier></type> <name>tree</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
