<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/less/option.h">









<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>END_OPTION_STRING</name></cpp:macro> <cpp:value>('$')</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BOOL</name></cpp:macro> <cpp:value>01</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TRIPLE</name></cpp:macro> <cpp:value>02</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NUMBER</name></cpp:macro> <cpp:value>04</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRING</name></cpp:macro> <cpp:value>010</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NOVAR</name></cpp:macro> <cpp:value>020</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REPAINT</name></cpp:macro> <cpp:value>040</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NO_TOGGLE</name></cpp:macro> <cpp:value>0100</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HL_REPAINT</name></cpp:macro> <cpp:value>0200</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>NO_QUERY</name></cpp:macro> <cpp:value>0400</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INIT_HANDLER</name></cpp:macro> <cpp:value>01000</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OTYPE</name></cpp:macro> <cpp:value>(BOOL|TRIPLE|NUMBER|STRING|NOVAR)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OLETTER_NONE</name></cpp:macro> <cpp:value>'\1'</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INIT</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QUERY</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TOGGLE</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_NO_TOGGLE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_TOGGLE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_UNSET</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_SET</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_NO_PROMPT</name></cpp:macro> <cpp:value>0100</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPT_AMBIG</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<struct>struct <name>optname</name>
<block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>oname</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>optname</name></name> <modifier>*</modifier></type><name>onext</name></decl>;</decl_stmt>
}</block>;</struct>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPTNAME_MAX</name></cpp:macro> <cpp:value>32</cpp:value></cpp:define>

<struct>struct <name>loption</name>
<block>{
<decl_stmt><decl><type><name>char</name></type> <name>oletter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>optname</name></name> <modifier>*</modifier></type><name>onames</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>otype</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>odefault</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name> <modifier>*</modifier></type><name>ovar</name></decl>;</decl_stmt>
<macro><name>void</name> <argument_list>(<argument>*ofunc</argument>)</argument_list></macro> <expr_stmt><expr><call><name>LESSPARAMS</name> <argument_list>(<argument><expr><operator>(</operator><name>int</name><operator>,</operator> <name>char</name><operator>*</operator><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name><name>odesc</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl>;</decl_stmt>
}</block>;</struct>

</unit>
