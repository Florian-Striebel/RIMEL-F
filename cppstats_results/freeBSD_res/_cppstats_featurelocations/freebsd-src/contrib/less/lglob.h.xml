<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/less/lglob.h">






















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>OS2</name></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DECL_GLOB_LIST</name><parameter_list>(<parameter><type><name>list</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>char **list; char **pp;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_LIST</name><parameter_list>(<parameter><type><name>filename</name></type></parameter>,<parameter><type><name>list</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>list = _fnexplode(filename)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_LIST_FAILED</name><parameter_list>(<parameter><type><name>list</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>list == NULL</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCAN_GLOB_LIST</name><parameter_list>(<parameter><type><name>list</name></type></parameter>,<parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>pp = list; *pp != NULL; pp++</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INIT_GLOB_LIST</name><parameter_list>(<parameter><type><name>list</name></type></parameter>,<parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>p = *pp</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_LIST_DONE</name><parameter_list>(<parameter><type><name>list</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_fnexplodefree(list)</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>MSDOS_COMPILER</name><operator>==</operator><name>DJGPPC</name></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DECL_GLOB_LIST</name><parameter_list>(<parameter><type><name>list</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>glob_t list; int i;</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_LIST</name><parameter_list>(<parameter><type><name>filename</name></type></parameter>,<parameter><type><name>list</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>glob(filename,GLOB_NOCHECK,0,&amp;list)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_LIST_FAILED</name><parameter_list>(<parameter><type><name>list</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCAN_GLOB_LIST</name><parameter_list>(<parameter><type><name>list</name></type></parameter>,<parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>i = 0; i &lt; list.gl_pathc; i++</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INIT_GLOB_LIST</name><parameter_list>(<parameter><type><name>list</name></type></parameter>,<parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>p = list.gl_pathv[i]</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_LIST_DONE</name><parameter_list>(<parameter><type><name>list</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>globfree(&amp;list)</cpp:value></cpp:define>

<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>MSDOS_COMPILER</name><operator>==</operator><name>MSOFTC</name> <operator>||</operator> <name>MSDOS_COMPILER</name><operator>==</operator><name>BORLANDC</name></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_FIRST_NAME</name><parameter_list>(<parameter><type><name>filename</name></type></parameter>,<parameter><type><name>fndp</name></type></parameter>,<parameter><type><name>h</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>h = _dos_findfirst(filename, ~_A_VOLID, fndp)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_FIRST_FAILED</name><parameter_list>(<parameter><type><name>handle</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((handle) != 0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_NEXT_NAME</name><parameter_list>(<parameter><type><name>handle</name></type></parameter>,<parameter><type><name>fndp</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_dos_findnext(fndp)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_NAME_DONE</name><parameter_list>(<parameter><type><name>handle</name></type></parameter>)</parameter_list></cpp:macro></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_NAME</name></cpp:macro> <cpp:value>name</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DECL_GLOB_NAME</name><parameter_list>(<parameter><type><name>fnd</name></type></parameter>,<parameter><type><name>drive</name></type></parameter>,<parameter><type><name>dir</name></type></parameter>,<parameter><type><name>fname</name></type></parameter>,<parameter><type><name>ext</name></type></parameter>,<parameter><type><name>handle</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>struct find_t fnd; char drive[_MAX_DRIVE]; char dir[_MAX_DIR]; char fname[_MAX_FNAME]; char ext[_MAX_EXT]; int handle;</cpp:value></cpp:define>






<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>MSDOS_COMPILER</name><operator>==</operator><name>WIN32C</name> <operator>&amp;&amp;</operator> <operator>(</operator><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call> <operator>||</operator> <call><name>defined</name><argument_list>(<argument><expr><name>MINGW</name></expr></argument>)</argument_list></call><operator>)</operator></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_FIRST_NAME</name><parameter_list>(<parameter><type><name>filename</name></type></parameter>,<parameter><type><name>fndp</name></type></parameter>,<parameter><type><name>h</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>h = _findfirst(filename, fndp)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_FIRST_FAILED</name><parameter_list>(<parameter><type><name>handle</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((handle) == -1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_NEXT_NAME</name><parameter_list>(<parameter><type><name>handle</name></type></parameter>,<parameter><type><name>fndp</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_findnext(handle, fndp)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_NAME_DONE</name><parameter_list>(<parameter><type><name>handle</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_findclose(handle)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_NAME</name></cpp:macro> <cpp:value>name</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DECL_GLOB_NAME</name><parameter_list>(<parameter><type><name>fnd</name></type></parameter>,<parameter><type><name>drive</name></type></parameter>,<parameter><type><name>dir</name></type></parameter>,<parameter><type><name>fname</name></type></parameter>,<parameter><type><name>ext</name></type></parameter>,<parameter><type><name>handle</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>struct _finddata_t fnd; char drive[_MAX_DRIVE]; char dir[_MAX_DIR]; char fname[_MAX_FNAME]; char ext[_MAX_EXT]; intptr_t handle;</cpp:value></cpp:define>







<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>MSDOS_COMPILER</name><operator>==</operator><name>WIN32C</name> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_FIRST_NAME</name><parameter_list>(<parameter><type><name>filename</name></type></parameter>,<parameter><type><name>fndp</name></type></parameter>,<parameter><type><name>h</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>h = findfirst(filename, fndp, ~FA_LABEL)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_FIRST_FAILED</name><parameter_list>(<parameter><type><name>handle</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((handle) != 0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_NEXT_NAME</name><parameter_list>(<parameter><type><name>handle</name></type></parameter>,<parameter><type><name>fndp</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>findnext(fndp)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_NAME_DONE</name><parameter_list>(<parameter><type><name>handle</name></type></parameter>)</parameter_list></cpp:macro></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GLOB_NAME</name></cpp:macro> <cpp:value>ff_name</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DECL_GLOB_NAME</name><parameter_list>(<parameter><type><name>fnd</name></type></parameter>,<parameter><type><name>drive</name></type></parameter>,<parameter><type><name>dir</name></type></parameter>,<parameter><type><name>fname</name></type></parameter>,<parameter><type><name>ext</name></type></parameter>,<parameter><type><name>handle</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>struct ffblk fnd; char drive[MAXDRIVE]; char dir[MAXDIR]; char fname[MAXFILE]; char ext[MAXEXT]; int handle;</cpp:value></cpp:define>







<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
