<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/lldb/include/lldb/Core/DumpRegisterValue.h">







<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LLDB_CORE_DUMPREGISTERVALUE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLDB_CORE_DUMPREGISTERVALUE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/lldb-enumerations.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdint&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>lldb_private</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>RegisterValue</name></decl>;</decl_stmt>
<struct_decl>struct <name>RegisterInfo</name>;</struct_decl>
<decl_stmt><decl><type><name>class</name></type> <name>Stream</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>bool</name></type> <name>DumpRegisterValue</name><argument_list>(<argument><expr><specifier>const</specifier> <name>RegisterValue</name> <operator>&amp;</operator><name>reg_val</name></expr></argument>, <argument><expr><name>Stream</name> <operator>*</operator><name>s</name></expr></argument>,
<argument><expr><specifier>const</specifier> <name>RegisterInfo</name> <operator>*</operator><name>reg_info</name></expr></argument>, <argument><expr><name>bool</name> <name>prefix_with_name</name></expr></argument>,
<argument><expr><name>bool</name> <name>prefix_with_alt_name</name></expr></argument>, <argument><expr><name>lldb</name><operator>::</operator><name>Format</name> <name>format</name></expr></argument>,
<argument><expr><name>uint32_t</name> <name>reg_name_right_align_at</name> <operator>=</operator> <literal type="number">0</literal></expr></argument>)</argument_list></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
