<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/lldb/include/lldb/Target/InstrumentationRuntimeStopInfo.h">







<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LLDB_TARGET_INSTRUMENTATIONRUNTIMESTOPINFO_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLDB_TARGET_INSTRUMENTATIONRUNTIMESTOPINFO_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/Target/StopInfo.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/Utility/StructuredData.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>lldb_private</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>InstrumentationRuntimeStopInfo</name> <range>: <expr><name>public</name> <name>StopInfo</name> <block>{
<expr><name>public</name><operator>:</operator>
<operator>~</operator><macro><name>InstrumentationRuntimeStopInfo</name><argument_list>()</argument_list></macro> <name>override</name> <operator>=</operator> default</expr>;

<expr><name>lldb</name><operator>::</operator><name>StopReason</name> <macro><name>GetStopReason</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <name>override</name> <block>{
<return>return <expr><name>lldb</name><operator>::</operator><name>eStopReasonInstrumentation</name></expr>;</return>
}</block>

<specifier>const</specifier> <name>char</name> <operator>*</operator><macro><name>GetDescription</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

<expr><name>bool</name> <macro><name>DoShouldNotify</name><argument_list>(<argument>Event *event_ptr</argument>)</argument_list></macro> <name>override</name> <block>{ <return>return <expr><name>true</name></expr>;</return> }</block>

<specifier>static</specifier> <name>lldb</name><operator>::</operator><name>StopInfoSP</name> <macro><name>CreateStopReasonWithInstrumentationData</name><argument_list>(
<argument>Thread &amp;thread</argument>, <argument>std::string description</argument>,
<argument>StructuredData::ObjectSP additional_data</argument>)</argument_list></macro></expr>;

<expr><name>private</name><operator>:</operator>
<macro><name>InstrumentationRuntimeStopInfo</name><argument_list>(<argument>Thread &amp;thread</argument>, <argument>std::string description</argument>,
<argument>StructuredData::ObjectSP additional_data</argument>)</argument_list></macro></expr>;
}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
