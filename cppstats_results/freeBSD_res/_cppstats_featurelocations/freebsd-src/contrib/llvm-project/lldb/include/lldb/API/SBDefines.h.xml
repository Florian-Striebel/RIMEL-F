<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/lldb/include/lldb/API/SBDefines.h">







<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LLDB_API_SBDEFINES_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLDB_API_SBDEFINES_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/lldb-defines.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/lldb-enumerations.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/lldb-forward.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/lldb-types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/lldb-versioning.h"</cpp:file></cpp:include>


<decl_stmt><decl><type><name>namespace</name></type> <name>lldb</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBAddress</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBBlock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBBreakpoint</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBBreakpointLocation</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBBreakpointName</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBBreakpointNameImpl</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBBroadcaster</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBCommand</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBCommandInterpreter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBCommandInterpreterRunOptions</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBCommandInterpreterRunResult</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBCommandPluginInterface</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBCommandReturnObject</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBCommunication</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBCompileUnit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBData</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBDebugger</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBDeclaration</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBEnvironment</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBError</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBEvent</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBEventList</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBExecutionContext</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBExpressionOptions</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBFile</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBFileSpec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBFileSpecList</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBFrame</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBFunction</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBHostOS</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBInstruction</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBInstructionList</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBLanguageRuntime</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBLaunchInfo</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBLineEntry</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBListener</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBMemoryRegionInfo</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBMemoryRegionInfoList</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBModule</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBModuleSpec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBModuleSpecList</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBProcess</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBProcessInfo</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBQueue</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBQueueItem</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBSection</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBSourceManager</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBStream</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBStringList</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBStructuredData</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBSymbol</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBSymbolContext</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBSymbolContextList</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBTarget</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBThread</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBThreadCollection</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBThreadPlan</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBTrace</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBType</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBTypeCategory</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBTypeEnumMember</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBTypeEnumMemberList</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBTypeFilter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBTypeFormat</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBTypeMemberFunction</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBTypeNameSpecifier</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBTypeSummary</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBTypeSummaryOptions</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBTypeSynthetic</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBTypeList</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBValue</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBValueList</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBVariablesOptions</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBWatchpoint</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name> <name>LLDB_API</name></type> <name>SBUnixSignals</name></decl>;</decl_stmt>

<typedef>typedef <expr_stmt><expr><call><call><name>bool</name> <argument_list>(<argument><expr><operator>*</operator><name>SBBreakpointHitCallback</name></expr></argument>)</argument_list></call><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>baton</name></expr></argument>, <argument><expr><name>SBProcess</name> <operator>&amp;</operator><name>process</name></expr></argument>,
<argument><expr><name>SBThread</name> <operator>&amp;</operator><name>thread</name></expr></argument>,
<argument><expr><name>lldb</name><operator>::</operator><name>SBBreakpointLocation</name> <operator>&amp;</operator><name>location</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></typedef>
</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
