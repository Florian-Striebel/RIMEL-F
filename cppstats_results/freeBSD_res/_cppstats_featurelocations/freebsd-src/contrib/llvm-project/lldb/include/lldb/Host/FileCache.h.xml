<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/lldb/include/lldb/Host/FileCache.h">






<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LLDB_HOST_FILECACHE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLDB_HOST_FILECACHE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;cstdint&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;map&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/lldb-forward.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/lldb-types.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/Host/File.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/Utility/FileSpec.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/Utility/Status.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>lldb_private</name> <block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>FileCache</name> <block>{<block_content>
<label><name>private</name>:</label>
<expr_stmt><expr><call><name>FileCache</name><argument_list>()</argument_list></call> <operator>=</operator> default</expr>;</expr_stmt>

<typedef>typedef <expr_stmt><expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><expr><name>lldb</name><operator>::</operator><name>user_id_t</name></expr></argument>, <argument><expr><name>lldb</name><operator>::</operator><name>FileUP</name></expr></argument>&gt;</argument_list></name> <name>FDToFileMap</name></expr>;</expr_stmt></typedef>

<label><name>public</name>:</label>
<function_decl><type><specifier>static</specifier> <name>FileCache</name> <modifier>&amp;</modifier></type><name>GetInstance</name><parameter_list>()</parameter_list>;</function_decl>

<expr_stmt><expr><name>lldb</name><operator>::</operator><name>user_id_t</name> <macro><name>OpenFile</name><argument_list>(<argument>const FileSpec &amp;file_spec</argument>, <argument>File::OpenOptions flags</argument>,
<argument>uint32_t mode</argument>, <argument>Status &amp;error</argument>)</argument_list></macro></expr>;</expr_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>CloseFile</name><argument_list>(<argument><expr><name>lldb</name><operator>::</operator><name>user_id_t</name> <name>fd</name></expr></argument>, <argument><expr><name>Status</name> <operator>&amp;</operator><name>error</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>WriteFile</name><argument_list>(<argument><expr><name>lldb</name><operator>::</operator><name>user_id_t</name> <name>fd</name></expr></argument>, <argument><expr><name>uint64_t</name> <name>offset</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>void</name> <operator>*</operator><name>src</name></expr></argument>,
<argument><expr><name>uint64_t</name> <name>src_len</name></expr></argument>, <argument><expr><name>Status</name> <operator>&amp;</operator><name>error</name></expr></argument>)</argument_list></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>ReadFile</name><argument_list>(<argument><expr><name>lldb</name><operator>::</operator><name>user_id_t</name> <name>fd</name></expr></argument>, <argument><expr><name>uint64_t</name> <name>offset</name></expr></argument>, <argument><expr><name>void</name> <operator>*</operator><name>dst</name></expr></argument>,
<argument><expr><name>uint64_t</name> <name>dst_len</name></expr></argument>, <argument><expr><name>Status</name> <operator>&amp;</operator><name>error</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<label><name>private</name>:</label>
<decl_stmt><decl><type><specifier>static</specifier> <name>FileCache</name> <modifier>*</modifier></type><name>m_instance</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>FDToFileMap</name></type> <name>m_cache</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>
</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
