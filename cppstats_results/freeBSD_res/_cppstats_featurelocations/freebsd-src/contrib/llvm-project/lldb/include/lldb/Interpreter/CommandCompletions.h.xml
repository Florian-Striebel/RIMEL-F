<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/lldb/include/lldb/Interpreter/CommandCompletions.h">







<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LLDB_INTERPRETER_COMMANDCOMPLETIONS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLDB_INTERPRETER_COMMANDCOMPLETIONS_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;set&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/Core/FileSpecList.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/Core/SearchFilter.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/Utility/CompletionRequest.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/Utility/RegularExpression.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/lldb-private.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"llvm/ADT/Twine.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>lldb_private</name> <block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>TildeExpressionResolver</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>CommandCompletions</name> <block>{<block_content>
<label><name>public</name>:</label>
<enum>enum <name>CommonCompletionTypes</name> <block>{
<decl><name>eNoCompletion</name> <init>= <expr><literal type="number">0u</literal></expr></init></decl>,
<decl><name>eSourceFileCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">0</literal><operator>)</operator></expr></init></decl>,
<decl><name>eDiskFileCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal><operator>)</operator></expr></init></decl>,
<decl><name>eDiskDirectoryCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal><operator>)</operator></expr></init></decl>,
<decl><name>eSymbolCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">3</literal><operator>)</operator></expr></init></decl>,
<decl><name>eModuleCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal><operator>)</operator></expr></init></decl>,
<decl><name>eSettingsNameCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">5</literal><operator>)</operator></expr></init></decl>,
<decl><name>ePlatformPluginCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal><operator>)</operator></expr></init></decl>,
<decl><name>eArchitectureCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">7</literal><operator>)</operator></expr></init></decl>,
<decl><name>eVariablePathCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">8</literal><operator>)</operator></expr></init></decl>,
<decl><name>eRegisterCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">9</literal><operator>)</operator></expr></init></decl>,
<decl><name>eBreakpointCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">10</literal><operator>)</operator></expr></init></decl>,
<decl><name>eProcessPluginCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">11</literal><operator>)</operator></expr></init></decl>,
<decl><name>eDisassemblyFlavorCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">12</literal><operator>)</operator></expr></init></decl>,
<decl><name>eTypeLanguageCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">13</literal><operator>)</operator></expr></init></decl>,
<decl><name>eFrameIndexCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">14</literal><operator>)</operator></expr></init></decl>,
<decl><name>eModuleUUIDCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">15</literal><operator>)</operator></expr></init></decl>,
<decl><name>eStopHookIDCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">16</literal><operator>)</operator></expr></init></decl>,
<decl><name>eThreadIndexCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">17</literal><operator>)</operator></expr></init></decl>,
<decl><name>eWatchPointIDCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">18</literal><operator>)</operator></expr></init></decl>,
<decl><name>eBreakpointNameCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">19</literal><operator>)</operator></expr></init></decl>,
<decl><name>eProcessIDCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">20</literal><operator>)</operator></expr></init></decl>,
<decl><name>eProcessNameCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">21</literal><operator>)</operator></expr></init></decl>,
<decl><name>eRemoteDiskFileCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">22</literal><operator>)</operator></expr></init></decl>,
<decl><name>eRemoteDiskDirectoryCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">23</literal><operator>)</operator></expr></init></decl>,
<decl><name>eTypeCategoryNameCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator></expr></init></decl>,



<decl><name>eCustomCompletion</name> <init>= <expr><operator>(</operator><literal type="number">1u</literal> <operator>&lt;&lt;</operator> <literal type="number">24</literal><operator>)</operator></expr></init></decl>
}</block>;</enum>

<decl_stmt><decl><type><specifier>static</specifier> <name>bool</name></type> <name>InvokeCommonCompletionCallbacks</name><argument_list>(
<argument><expr><name>CommandInterpreter</name> <operator>&amp;</operator><name>interpreter</name></expr></argument>, <argument><expr><name>uint32_t</name> <name>completion_mask</name></expr></argument>,
<argument><expr><name>lldb_private</name><operator>::</operator><name>CompletionRequest</name> <operator>&amp;</operator><name>request</name></expr></argument>, <argument><expr><name>SearchFilter</name> <operator>*</operator><name>searcher</name></expr></argument>)</argument_list></decl>;</decl_stmt>


<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>DiskFiles</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>, <parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>static</specifier> <name>void</name></type> <name>DiskFiles</name><argument_list>(<argument><expr><specifier>const</specifier> <name>llvm</name><operator>::</operator><name>Twine</name> <operator>&amp;</operator><name>partial_file_name</name></expr></argument>,
<argument><expr><name>StringList</name> <operator>&amp;</operator><name>matches</name></expr></argument>, <argument><expr><name>TildeExpressionResolver</name> <operator>&amp;</operator><name>Resolver</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>DiskDirectories</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>,
<parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><specifier>static</specifier> <name>void</name></type> <name>DiskDirectories</name><argument_list>(<argument><expr><specifier>const</specifier> <name>llvm</name><operator>::</operator><name>Twine</name> <operator>&amp;</operator><name>partial_file_name</name></expr></argument>,
<argument><expr><name>StringList</name> <operator>&amp;</operator><name>matches</name></expr></argument>,
<argument><expr><name>TildeExpressionResolver</name> <operator>&amp;</operator><name>Resolver</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>RemoteDiskFiles</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>,
<parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>RemoteDiskDirectories</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>,
<parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>SourceFiles</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>, <parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Modules</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>, <parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>ModuleUUIDs</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>, <parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Symbols</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>, <parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>SettingsNames</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>, <parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>PlatformPluginNames</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>,
<parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>ArchitectureNames</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>,
<parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>VariablePath</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>, <parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Registers</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>, <parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>Breakpoints</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>, <parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>BreakpointNames</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>,
<parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>ProcessPluginNames</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>,
<parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>ProcessIDs</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>, <parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>ProcessNames</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>, <parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>DisassemblyFlavors</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>,
<parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>TypeLanguages</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>, <parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>FrameIndexes</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>, <parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>StopHookIDs</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>, <parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>ThreadIndexes</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>, <parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>WatchPointIDs</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>, <parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>static</specifier> <name>void</name></type> <name>TypeCategoryNames</name><parameter_list>(<parameter><decl><type><name>CommandInterpreter</name> <modifier>&amp;</modifier></type><name>interpreter</name></decl></parameter>,
<parameter><decl><type><name>CompletionRequest</name> <modifier>&amp;</modifier></type><name>request</name></decl></parameter>,
<parameter><decl><type><name>SearchFilter</name> <modifier>*</modifier></type><name>searcher</name></decl></parameter>)</parameter_list>;</function_decl>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
