<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/lldb/include/lldb/Expression/ExpressionTypeSystemHelper.h">








<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LLDB_EXPRESSION_EXPRESSIONTYPESYSTEMHELPER_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLDB_EXPRESSION_EXPRESSIONTYPESYSTEMHELPER_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"llvm/Support/Casting.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>lldb_private</name> <block>{<block_content>










<decl_stmt><decl><type><name>class</name></type> <name>ExpressionTypeSystemHelper</name> <block>{<block_content>
<label><name>public</name>:</label>
<enum>enum <name>LLVMCastKind</name> <block>{
<decl><name>eKindClangHelper</name></decl>,
<decl><name>eKindSwiftHelper</name></decl>,
<decl><name>eKindGoHelper</name></decl>,
<decl><name>kNumKinds</name></decl>
}</block>;</enum>

<expr_stmt><expr><name>LLVMCastKind</name> <macro><name>getKind</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><name>m_kind</name></expr>;</return> }</block></expr></expr_stmt>

<macro><name>ExpressionTypeSystemHelper</name><argument_list>(<argument>LLVMCastKind kind</argument>)</argument_list></macro> : <macro><name>m_kind</name><argument_list>(<argument>kind</argument>)</argument_list></macro> <block>{<block_content/>}</block>

<expr_stmt><expr><operator>~</operator><call><name>ExpressionTypeSystemHelper</name><argument_list>()</argument_list></call> <operator>=</operator> default</expr>;</expr_stmt>

<label><name>protected</name>:</label>
<decl_stmt><decl><type><name>LLVMCastKind</name></type> <name>m_kind</name></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
