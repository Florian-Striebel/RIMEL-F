<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/lldb/include/lldb/Symbol/SymbolContextScope.h">







<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LLDB_SYMBOL_SYMBOLCONTEXTSCOPE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLDB_SYMBOL_SYMBOLCONTEXTSCOPE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/lldb-private.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>lldb_private</name> <block>{<block_content>

















































<decl_stmt><decl><type><name>class</name></type> <name>SymbolContextScope</name> <block>{<block_content>
<label><name>public</name>:</label>
<expr_stmt><expr><name>virtual</name> <operator>~</operator><call><name>SymbolContextScope</name><argument_list>()</argument_list></call> <operator>=</operator> default</expr>;</expr_stmt>









<function_decl><type><name>virtual</name> <name>void</name></type> <name>CalculateSymbolContext</name><parameter_list>(<parameter><decl><type><name>SymbolContext</name> <modifier>*</modifier></type><name>sc</name></decl></parameter>)</parameter_list> <init>= <expr><literal type="number">0</literal></expr></init>;</function_decl>

<expr_stmt><expr><name>virtual</name> <name>lldb</name><operator>::</operator><name>ModuleSP</name> <macro><name>CalculateSymbolContextModule</name><argument_list>()</argument_list></macro> <block>{
<return>return <expr><name>lldb</name><operator>::</operator><call><name>ModuleSP</name><argument_list>()</argument_list></call></expr>;</return>
}</block></expr></expr_stmt>

<function><type><name>virtual</name> <name>CompileUnit</name> <modifier>*</modifier></type><name>CalculateSymbolContextCompileUnit</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><name>nullptr</name></expr>;</return> </block_content>}</block></function>

<function><type><name>virtual</name> <name>Function</name> <modifier>*</modifier></type><name>CalculateSymbolContextFunction</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><name>nullptr</name></expr>;</return> </block_content>}</block></function>

<function><type><name>virtual</name> <name>Block</name> <modifier>*</modifier></type><name>CalculateSymbolContextBlock</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><name>nullptr</name></expr>;</return> </block_content>}</block></function>

<function><type><name>virtual</name> <name>Symbol</name> <modifier>*</modifier></type><name>CalculateSymbolContextSymbol</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><name>nullptr</name></expr>;</return> </block_content>}</block></function>









<function_decl><type><name>virtual</name> <name>void</name></type> <name>DumpSymbolContext</name><parameter_list>(<parameter><decl><type><name>Stream</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list> <init>= <expr><literal type="number">0</literal></expr></init>;</function_decl>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
