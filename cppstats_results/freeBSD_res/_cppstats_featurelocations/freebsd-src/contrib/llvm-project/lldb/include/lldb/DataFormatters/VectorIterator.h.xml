<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/lldb/include/lldb/DataFormatters/VectorIterator.h">








<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LLDB_DATAFORMATTERS_VECTORITERATOR_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLDB_DATAFORMATTERS_VECTORITERATOR_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/lldb-forward.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/DataFormatters/TypeSynthetic.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/Target/ExecutionContext.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/Utility/ConstString.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>lldb_private</name> <block>{<block_content>
<decl_stmt><decl><type><name>namespace</name></type> <name>formatters</name> <block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>VectorIteratorSyntheticFrontEnd</name> <range>: <expr><name>public</name> <name>SyntheticChildrenFrontEnd</name> <block>{
<expr><name>public</name><operator>:</operator>
<macro><name>VectorIteratorSyntheticFrontEnd</name><argument_list>(<argument>lldb::ValueObjectSP valobj_sp</argument>,
<argument>ConstString item_name</argument>)</argument_list></macro></expr>;

<expr><name>size_t</name> <macro><name>CalculateNumChildren</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

<expr><name>lldb</name><operator>::</operator><name>ValueObjectSP</name> <macro><name>GetChildAtIndex</name><argument_list>(<argument>size_t idx</argument>)</argument_list></macro> <name>override</name></expr>;

<expr><name>bool</name> <macro><name>Update</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

<expr><name>bool</name> <macro><name>MightHaveChildren</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

<expr><name>size_t</name> <macro><name>GetIndexOfChildWithName</name><argument_list>(<argument>ConstString name</argument>)</argument_list></macro> <name>override</name></expr>;

<expr><name>private</name><operator>:</operator>
<name>ExecutionContextRef</name> <name>m_exe_ctx_ref</name></expr>;
<expr><name>ConstString</name> <name>m_item_name</name></expr>;
<expr><name>lldb</name><operator>::</operator><name>ValueObjectSP</name> <name>m_item_sp</name></expr>;
}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>
</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
