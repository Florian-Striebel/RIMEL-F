<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/lldb/include/lldb/Core/ValueObjectUpdater.h">







<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LLDB_CORE_VALUEOBJECTUPDATER_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLDB_CORE_VALUEOBJECTUPDATER_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/Core/ValueObject.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>lldb_private</name> <block>{<block_content>






<decl_stmt><decl><type><name>class</name></type> <name>ValueObjectUpdater</name> <block>{<block_content>

<expr_stmt><expr><name>lldb</name><operator>::</operator><name>ValueObjectSP</name> <name>m_root_valobj_sp</name></expr>;</expr_stmt>

<expr_stmt><expr><name>lldb</name><operator>::</operator><name>ValueObjectSP</name> <name>m_user_valobj_sp</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>uint32_t</name></type> <name>m_stop_id</name> <init>= <expr><name>UINT32_MAX</name></expr></init></decl>;</decl_stmt>

<label><name>public</name>:</label>
<macro><name>ValueObjectUpdater</name><argument_list>(<argument>lldb::ValueObjectSP in_valobj_sp</argument>)</argument_list></macro><empty_stmt>;</empty_stmt>





<expr_stmt><expr><name>lldb</name><operator>::</operator><name>ValueObjectSP</name> <call><name>GetSP</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>lldb</name><operator>::</operator><name>ProcessSP</name> <macro><name>GetProcessSP</name><argument_list>()</argument_list></macro> <specifier>const</specifier></expr>;</expr_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
