<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/lldb/include/lldb/Initialization/SystemInitializerCommon.h">







<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LLDB_INITIALIZATION_SYSTEMINITIALIZERCOMMON_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLDB_INITIALIZATION_SYSTEMINITIALIZERCOMMON_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"SystemInitializer.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lldb/Host/HostInfo.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>lldb_private</name> <block>{<block_content>








<decl_stmt><decl><type><name>class</name></type> <name>SystemInitializerCommon</name> <range>: <expr><name>public</name> <name>SystemInitializer</name> <block>{
<expr><name>public</name><operator>:</operator>
<call><name>SystemInitializerCommon</name><argument_list>(<argument><expr><name>HostInfo</name><operator>::</operator><name>SharedLibraryDirectoryHelper</name> <operator>*</operator><name>helper</name></expr></argument>)</argument_list></call></expr>;
<expr><operator>~</operator><macro><name>SystemInitializerCommon</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

<expr><name>llvm</name><operator>::</operator><name>Error</name> <macro><name>Initialize</name><argument_list>()</argument_list></macro> <name>override</name></expr>;
<expr><name>void</name> <macro><name>Terminate</name><argument_list>()</argument_list></macro> <name>override</name></expr>;

<expr><name>private</name><operator>:</operator>
<name>HostInfo</name><operator>::</operator><name>SharedLibraryDirectoryHelper</name> <operator>*</operator><name>m_shlib_dir_helper</name></expr>;
}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
