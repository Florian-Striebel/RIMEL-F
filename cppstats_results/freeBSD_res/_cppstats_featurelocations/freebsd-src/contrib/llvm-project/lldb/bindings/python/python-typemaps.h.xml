<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/lldb/bindings/python/python-typemaps.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LLDB_BINDINGS_PYTHON_PYTHON_TYPEMAPS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLDB_BINDINGS_PYTHON_PYTHON_TYPEMAPS_H</name></cpp:macro></cpp:define>



<struct>struct <name>Py_buffer_RAII</name> <block>{
<decl_stmt><decl><type><name>Py_buffer</name></type> <name>buffer</name> <init>= <expr><block>{}</block></expr></init></decl>;</decl_stmt>
<macro><name>Py_buffer_RAII</name><argument_list>()</argument_list></macro><block>{<block_content/>}</block><empty_stmt>;</empty_stmt>
<decl_stmt><decl><type><name>Py_buffer</name> <modifier>&amp;</modifier></type><name>operator</name><init>=<expr><operator>(</operator><specifier>const</specifier> <name>Py_buffer_RAII</name> <operator>&amp;</operator><operator>)</operator> <operator>=</operator> <name>delete</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><call><name>Py_buffer_RAII</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Py_buffer_RAII</name> <operator>&amp;</operator></expr></argument>)</argument_list></call> <operator>=</operator> <name>delete</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>~</operator><macro><name>Py_buffer_RAII</name><argument_list>()</argument_list></macro> <block>{
<if_stmt><if>if <condition>(<expr><name><name>buffer</name><operator>.</operator><name>obj</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>PyBuffer_Release</name><argument_list>(<argument><expr><operator>&amp;</operator><name>buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
}</block></expr></expr_stmt>
}</block>;</struct>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
