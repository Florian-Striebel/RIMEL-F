<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/libcxx/include/__bsd_locale_defaults.h">












<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_LIBCPP_BSD_LOCALE_DEFAULTS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_LIBCPP_BSD_LOCALE_DEFAULTS_H</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>GCC</name> <name>system_header</name></cpp:pragma>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__libcpp_mb_cur_max_l</name><parameter_list>(<parameter><type><name>loc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>MB_CUR_MAX_L(loc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__libcpp_btowc_l</name><parameter_list>(<parameter><type><name>ch</name></type></parameter>, <parameter><type><name>loc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>btowc_l(ch, loc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__libcpp_wctob_l</name><parameter_list>(<parameter><type><name>wch</name></type></parameter>, <parameter><type><name>loc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>wctob_l(wch, loc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__libcpp_wcsnrtombs_l</name><parameter_list>(<parameter><type><name>dst</name></type></parameter>, <parameter><type><name>src</name></type></parameter>, <parameter><type><name>nwc</name></type></parameter>, <parameter><type><name>len</name></type></parameter>, <parameter><type><name>ps</name></type></parameter>, <parameter><type><name>loc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>wcsnrtombs_l(dst, src, nwc, len, ps, loc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__libcpp_wcrtomb_l</name><parameter_list>(<parameter><type><name>src</name></type></parameter>, <parameter><type><name>wc</name></type></parameter>, <parameter><type><name>ps</name></type></parameter>, <parameter><type><name>loc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>wcrtomb_l(src, wc, ps, loc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__libcpp_mbsnrtowcs_l</name><parameter_list>(<parameter><type><name>dst</name></type></parameter>, <parameter><type><name>src</name></type></parameter>, <parameter><type><name>nms</name></type></parameter>, <parameter><type><name>len</name></type></parameter>, <parameter><type><name>ps</name></type></parameter>, <parameter><type><name>loc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mbsnrtowcs_l(dst, src, nms, len, ps, loc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__libcpp_mbrtowc_l</name><parameter_list>(<parameter><type><name>pwc</name></type></parameter>, <parameter><type><name>s</name></type></parameter>, <parameter><type><name>n</name></type></parameter>, <parameter><type><name>ps</name></type></parameter>, <parameter><type><name>l</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mbrtowc_l(pwc, s, n, ps, l)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__libcpp_mbtowc_l</name><parameter_list>(<parameter><type><name>pwc</name></type></parameter>, <parameter><type><name>pmb</name></type></parameter>, <parameter><type><name>max</name></type></parameter>, <parameter><type><name>l</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mbtowc_l(pwc, pmb, max, l)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__libcpp_mbrlen_l</name><parameter_list>(<parameter><type><name>s</name></type></parameter>, <parameter><type><name>n</name></type></parameter>, <parameter><type><name>ps</name></type></parameter>, <parameter><type><name>l</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mbrlen_l(s, n, ps, l)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__libcpp_localeconv_l</name><parameter_list>(<parameter><type><name>l</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>localeconv_l(l)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__libcpp_mbsrtowcs_l</name><parameter_list>(<parameter><type><name>dest</name></type></parameter>, <parameter><type><name>src</name></type></parameter>, <parameter><type><name>len</name></type></parameter>, <parameter><type><name>ps</name></type></parameter>, <parameter><type><name>l</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>mbsrtowcs_l(dest, src, len, ps, l)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__libcpp_snprintf_l</name><parameter_list>(<parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>snprintf_l(__VA_ARGS__)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__libcpp_asprintf_l</name><parameter_list>(<parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>asprintf_l(__VA_ARGS__)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__libcpp_sscanf_l</name><parameter_list>(<parameter><type><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>sscanf_l(__VA_ARGS__)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
