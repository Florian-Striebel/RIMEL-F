<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/libcxx/include/wctype.h">








<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_LIBCPP_WCTYPE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_LIBCPP_WCTYPE_H</name></cpp:macro></cpp:define>



































<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;__config&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>GCC</name> <name>system_header</name></cpp:pragma>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>










<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>__has_include_next</name><argument_list>(<argument><expr><operator>&lt;</operator><name><name>wctype</name><operator>.</operator><name>h</name></name><operator>&gt;</operator></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:empty>#include_next &lt;wctype.h&gt;</cpp:empty>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_LIBCPP_INCLUDED_C_LIBRARY_WCTYPE_H</name></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>iswalnum</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>iswalpha</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>iswblank</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>iswcntrl</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>iswdigit</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>iswgraph</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>iswlower</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>iswprint</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>iswpunct</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>iswspace</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>iswupper</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>iswxdigit</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>iswctype</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>wctype</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>towlower</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>towupper</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>towctrans</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>wctrans</name></cpp:undef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
