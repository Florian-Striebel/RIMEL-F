<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/compiler-rt/lib/tsan/rtl/tsan_interface.h">













<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>TSAN_INTERFACE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TSAN_INTERFACE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sanitizer_common/sanitizer_internal_defs.h&gt;</cpp:file></cpp:include>
<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>uptr</name></expr>;</expr_stmt>
<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>tid_t</name></expr>;</expr_stmt>




<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><name>SANITIZER_GO</name></expr></cpp:if>



<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_init</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_flush_memory</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_read1</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_read2</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_read4</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_read8</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_read16</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_write1</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_write2</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_write4</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_write8</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_write16</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_unaligned_read2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_unaligned_read4</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_unaligned_read8</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_unaligned_read16</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_unaligned_write2</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_unaligned_write4</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_unaligned_write8</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_unaligned_write16</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_read1_pc</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_read2_pc</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_read4_pc</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_read8_pc</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_read16_pc</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pc</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_write1_pc</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_write2_pc</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_write4_pc</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_write8_pc</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_write16_pc</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pc</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_vptr_read</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>vptr_p</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_vptr_update</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>vptr_p</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>new_val</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_func_entry</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>call_pc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_func_exit</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_ignore_thread_begin</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__tsan_ignore_thread_end</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name> <modifier>*</modifier></type><name>__tsan_external_register_tag</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>object_type</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_external_register_header</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>tag</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>header</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_external_assign_tag</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>tag</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_external_read</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>caller_pc</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>tag</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_external_write</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>caller_pc</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>tag</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_read_range</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>long</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_write_range</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>long</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_read_range_pc</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>long</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_write_range_pc</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>long</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>pc</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_on_report</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>report</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name> <modifier>*</modifier></type><name>__tsan_get_current_report</name><parameter_list>()</parameter_list>;</function_decl>





<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_get_report_data</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>report</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>description</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>count</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>stack_count</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>mop_count</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>loc_count</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>mutex_count</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>thread_count</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>unique_tid_count</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>sleep_trace</name></decl></parameter>,
<parameter><decl><type><name>uptr</name></type> <name>trace_size</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_get_report_tag</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>report</name></decl></parameter>, <parameter><decl><type><name>uptr</name> <modifier>*</modifier></type><name>tag</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_get_report_stack</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>report</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>trace</name></decl></parameter>,
<parameter><decl><type><name>uptr</name></type> <name>trace_size</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_get_report_mop</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>report</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>tid</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>addr</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>size</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>write</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>atomic</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>trace</name></decl></parameter>,
<parameter><decl><type><name>uptr</name></type> <name>trace_size</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_get_report_loc</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>report</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>type</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>addr</name></decl></parameter>, <parameter><decl><type><name>uptr</name> <modifier>*</modifier></type><name>start</name></decl></parameter>, <parameter><decl><type><name>uptr</name> <modifier>*</modifier></type><name>size</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>tid</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>fd</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>suppressable</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>trace</name></decl></parameter>,
<parameter><decl><type><name>uptr</name></type> <name>trace_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_get_report_loc_object_type</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>report</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>idx</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>object_type</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_get_report_mutex</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>report</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><name>uptr</name> <modifier>*</modifier></type><name>mutex_id</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>addr</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>destroyed</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>trace</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>trace_size</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_get_report_thread</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>report</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>tid</name></decl></parameter>, <parameter><decl><type><name>tid_t</name> <modifier>*</modifier></type><name>os_id</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>running</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>parent_tid</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>trace</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>trace_size</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_get_report_unique_tid</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>report</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>idx</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>tid</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>__tsan_locate_address</name><parameter_list>(<parameter><decl><type><name>uptr</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>name_size</name></decl></parameter>,
<parameter><decl><type><name>uptr</name> <modifier>*</modifier></type><name>region_address</name></decl></parameter>, <parameter><decl><type><name>uptr</name> <modifier>*</modifier></type><name>region_size</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_get_alloc_stack</name><parameter_list>(<parameter><decl><type><name>uptr</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>uptr</name> <modifier>*</modifier></type><name>trace</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>thread_id</name></decl></parameter>,
<parameter><decl><type><name>tid_t</name> <modifier>*</modifier></type><name>os_id</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name>namespace</name></type> <name>__tsan</name> <block>{<block_content>


<typedef>typedef <type><name>unsigned</name> <name>char</name></type> <name>a8</name>;</typedef>
<typedef>typedef <type><name>unsigned</name> <name>short</name></type> <name>a16</name>;</typedef>
<typedef>typedef <type><name>unsigned</name> <name>int</name></type> <name>a32</name>;</typedef>
<typedef>typedef <type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>a64</name>;</typedef>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><name>SANITIZER_GO</name> <operator>&amp;&amp;</operator> <operator>(</operator><call><name>defined</name><argument_list>(<argument><expr><name>__SIZEOF_INT128__</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>(</operator><name>__clang_major__</name> <operator>*</operator> <literal type="number">100</literal> <operator>+</operator> <name>__clang_minor__</name> <operator>&gt;=</operator> <literal type="number">302</literal><operator>)</operator><operator>)</operator> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__mips64</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__s390x__</name></expr></argument>)</argument_list></call></expr></cpp:if>


<macro><name>__extension__</name></macro> <typedef>typedef <type><name>__int128</name></type> <name>a128</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__TSAN_HAS_INT128</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__TSAN_HAS_INT128</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>



<typedef>typedef <type><enum>enum <block>{
<decl><name>mo_relaxed</name></decl>,
<decl><name>mo_consume</name></decl>,
<decl><name>mo_acquire</name></decl>,
<decl><name>mo_release</name></decl>,
<decl><name>mo_acq_rel</name></decl>,
<decl><name>mo_seq_cst</name></decl>
}</block></enum></type> <name>morder</name>;</typedef>

<struct_decl>struct <name>ThreadState</name>;</struct_decl>

<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a8</name></type> <name>__tsan_atomic8_load</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <specifier>volatile</specifier> <name>a8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a16</name></type> <name>__tsan_atomic16_load</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <specifier>volatile</specifier> <name>a16</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a32</name></type> <name>__tsan_atomic32_load</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <specifier>volatile</specifier> <name>a32</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a64</name></type> <name>__tsan_atomic64_load</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <specifier>volatile</specifier> <name>a64</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__TSAN_HAS_INT128</name></expr></cpp:if>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a128</name></type> <name>__tsan_atomic128_load</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <specifier>volatile</specifier> <name>a128</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_atomic8_store</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a8</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_atomic16_store</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a16</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a16</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_atomic32_store</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a32</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a32</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_atomic64_store</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a64</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a64</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__TSAN_HAS_INT128</name></expr></cpp:if>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_atomic128_store</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a128</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a128</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a8</name></type> <name>__tsan_atomic8_exchange</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a8</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a16</name></type> <name>__tsan_atomic16_exchange</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a16</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a16</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a32</name></type> <name>__tsan_atomic32_exchange</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a32</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a32</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a64</name></type> <name>__tsan_atomic64_exchange</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a64</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a64</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__TSAN_HAS_INT128</name></expr></cpp:if>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a128</name></type> <name>__tsan_atomic128_exchange</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a128</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a128</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a8</name></type> <name>__tsan_atomic8_fetch_add</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a8</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a16</name></type> <name>__tsan_atomic16_fetch_add</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a16</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a16</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a32</name></type> <name>__tsan_atomic32_fetch_add</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a32</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a32</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a64</name></type> <name>__tsan_atomic64_fetch_add</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a64</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a64</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__TSAN_HAS_INT128</name></expr></cpp:if>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a128</name></type> <name>__tsan_atomic128_fetch_add</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a128</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a128</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a8</name></type> <name>__tsan_atomic8_fetch_sub</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a8</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a16</name></type> <name>__tsan_atomic16_fetch_sub</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a16</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a16</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a32</name></type> <name>__tsan_atomic32_fetch_sub</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a32</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a32</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a64</name></type> <name>__tsan_atomic64_fetch_sub</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a64</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a64</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__TSAN_HAS_INT128</name></expr></cpp:if>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a128</name></type> <name>__tsan_atomic128_fetch_sub</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a128</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a128</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a8</name></type> <name>__tsan_atomic8_fetch_and</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a8</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a16</name></type> <name>__tsan_atomic16_fetch_and</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a16</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a16</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a32</name></type> <name>__tsan_atomic32_fetch_and</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a32</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a32</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a64</name></type> <name>__tsan_atomic64_fetch_and</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a64</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a64</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__TSAN_HAS_INT128</name></expr></cpp:if>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a128</name></type> <name>__tsan_atomic128_fetch_and</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a128</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a128</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a8</name></type> <name>__tsan_atomic8_fetch_or</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a8</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a16</name></type> <name>__tsan_atomic16_fetch_or</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a16</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a16</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a32</name></type> <name>__tsan_atomic32_fetch_or</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a32</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a32</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a64</name></type> <name>__tsan_atomic64_fetch_or</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a64</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a64</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__TSAN_HAS_INT128</name></expr></cpp:if>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a128</name></type> <name>__tsan_atomic128_fetch_or</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a128</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a128</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a8</name></type> <name>__tsan_atomic8_fetch_xor</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a8</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a16</name></type> <name>__tsan_atomic16_fetch_xor</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a16</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a16</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a32</name></type> <name>__tsan_atomic32_fetch_xor</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a32</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a32</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a64</name></type> <name>__tsan_atomic64_fetch_xor</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a64</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a64</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__TSAN_HAS_INT128</name></expr></cpp:if>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a128</name></type> <name>__tsan_atomic128_fetch_xor</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a128</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a128</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a8</name></type> <name>__tsan_atomic8_fetch_nand</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a8</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a16</name></type> <name>__tsan_atomic16_fetch_nand</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a16</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a16</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a32</name></type> <name>__tsan_atomic32_fetch_nand</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a32</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a32</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a64</name></type> <name>__tsan_atomic64_fetch_nand</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a64</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a64</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__TSAN_HAS_INT128</name></expr></cpp:if>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a128</name></type> <name>__tsan_atomic128_fetch_nand</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a128</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a128</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_atomic8_compare_exchange_strong</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a8</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>a8</name></type> <name>v</name></decl></parameter>,
<parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>fmo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_atomic16_compare_exchange_strong</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a16</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a16</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>a16</name></type> <name>v</name></decl></parameter>,
<parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>fmo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_atomic32_compare_exchange_strong</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a32</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a32</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>a32</name></type> <name>v</name></decl></parameter>,
<parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>fmo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_atomic64_compare_exchange_strong</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a64</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a64</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>a64</name></type> <name>v</name></decl></parameter>,
<parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>fmo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__TSAN_HAS_INT128</name></expr></cpp:if>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_atomic128_compare_exchange_strong</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a128</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a128</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>a128</name></type> <name>v</name></decl></parameter>,
<parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>fmo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_atomic8_compare_exchange_weak</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a8</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>a8</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>,
<parameter><decl><type><name>morder</name></type> <name>fmo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_atomic16_compare_exchange_weak</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a16</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a16</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>a16</name></type> <name>v</name></decl></parameter>,
<parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>fmo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_atomic32_compare_exchange_weak</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a32</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a32</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>a32</name></type> <name>v</name></decl></parameter>,
<parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>fmo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_atomic64_compare_exchange_weak</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a64</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a64</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>a64</name></type> <name>v</name></decl></parameter>,
<parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>fmo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__TSAN_HAS_INT128</name></expr></cpp:if>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_atomic128_compare_exchange_weak</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a128</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a128</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>a128</name></type> <name>v</name></decl></parameter>,
<parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>fmo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a8</name></type> <name>__tsan_atomic8_compare_exchange_val</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a8</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>a8</name></type> <name>v</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>,
<parameter><decl><type><name>morder</name></type> <name>fmo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a16</name></type> <name>__tsan_atomic16_compare_exchange_val</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a16</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a16</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>a16</name></type> <name>v</name></decl></parameter>,
<parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>fmo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a32</name></type> <name>__tsan_atomic32_compare_exchange_val</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a32</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a32</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>a32</name></type> <name>v</name></decl></parameter>,
<parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>fmo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a64</name></type> <name>__tsan_atomic64_compare_exchange_val</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a64</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a64</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>a64</name></type> <name>v</name></decl></parameter>,
<parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>fmo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>__TSAN_HAS_INT128</name></expr></cpp:if>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>a128</name></type> <name>__tsan_atomic128_compare_exchange_val</name><parameter_list>(<parameter><decl><type><specifier>volatile</specifier> <name>a128</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>a128</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>a128</name></type> <name>v</name></decl></parameter>,
<parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>, <parameter><decl><type><name>morder</name></type> <name>fmo</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_atomic_thread_fence</name><parameter_list>(<parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_atomic_signal_fence</name><parameter_list>(<parameter><decl><type><name>morder</name></type> <name>mo</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_go_atomic32_load</name><parameter_list>(<parameter><decl><type><name>ThreadState</name> <modifier>*</modifier></type><name>thr</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>cpc</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>pc</name></decl></parameter>, <parameter><decl><type><name>u8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_go_atomic64_load</name><parameter_list>(<parameter><decl><type><name>ThreadState</name> <modifier>*</modifier></type><name>thr</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>cpc</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>pc</name></decl></parameter>, <parameter><decl><type><name>u8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_go_atomic32_store</name><parameter_list>(<parameter><decl><type><name>ThreadState</name> <modifier>*</modifier></type><name>thr</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>cpc</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>pc</name></decl></parameter>, <parameter><decl><type><name>u8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_go_atomic64_store</name><parameter_list>(<parameter><decl><type><name>ThreadState</name> <modifier>*</modifier></type><name>thr</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>cpc</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>pc</name></decl></parameter>, <parameter><decl><type><name>u8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_go_atomic32_fetch_add</name><parameter_list>(<parameter><decl><type><name>ThreadState</name> <modifier>*</modifier></type><name>thr</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>cpc</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>pc</name></decl></parameter>, <parameter><decl><type><name>u8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_go_atomic64_fetch_add</name><parameter_list>(<parameter><decl><type><name>ThreadState</name> <modifier>*</modifier></type><name>thr</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>cpc</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>pc</name></decl></parameter>, <parameter><decl><type><name>u8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_go_atomic32_exchange</name><parameter_list>(<parameter><decl><type><name>ThreadState</name> <modifier>*</modifier></type><name>thr</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>cpc</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>pc</name></decl></parameter>, <parameter><decl><type><name>u8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_go_atomic64_exchange</name><parameter_list>(<parameter><decl><type><name>ThreadState</name> <modifier>*</modifier></type><name>thr</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>cpc</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>pc</name></decl></parameter>, <parameter><decl><type><name>u8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_go_atomic32_compare_exchange</name><parameter_list>(<parameter><decl><type><name>ThreadState</name> <modifier>*</modifier></type><name>thr</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>cpc</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>pc</name></decl></parameter>,
<parameter><decl><type><name>u8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_go_atomic64_compare_exchange</name><parameter_list>(<parameter><decl><type><name>ThreadState</name> <modifier>*</modifier></type><name>thr</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>cpc</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>pc</name></decl></parameter>,
<parameter><decl><type><name>u8</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__tsan_on_initialize</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__tsan_on_finalize</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>failed</name></decl></parameter>)</parameter_list>;</function_decl>

</block_content>}</block></extern>

</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
