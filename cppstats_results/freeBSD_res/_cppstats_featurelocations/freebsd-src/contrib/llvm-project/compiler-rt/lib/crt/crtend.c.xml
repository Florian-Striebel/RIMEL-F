<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/compiler-rt/lib/crt/crtend.c">







<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>


<decl_stmt><decl><type><specifier>const</specifier> <name>int32_t</name> <name><name>__EH_FRAME_LIST_END__</name><index>[]</index></name></type>
<name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><call><name>section</name><argument_list>(<argument><expr><literal type="string">".eh_frame"</literal></expr></argument>)</argument_list></call><operator>,</operator> <call><name>aligned</name><argument_list>(<argument><expr><sizeof>sizeof<argument_list>(<argument><expr><name>int32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator>,</operator>
<call><name>visibility</name><argument_list>(<argument><expr><literal type="string">"hidden"</literal></expr></argument>)</argument_list></call><operator>,</operator> <name>used</name><operator>)</operator></expr></argument>)</argument_list> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>CRT_HAS_INITFINI_ARRAY</name></expr></argument>)</argument_list></call></expr></cpp:if>
<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>fp</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<decl_stmt><decl><type><name>fp</name> <name><name>__CTOR_LIST_END__</name><index>[]</index></name></type>
<name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><call><name>section</name><argument_list>(<argument><expr><literal type="string">".ctors"</literal></expr></argument>)</argument_list></call><operator>,</operator> <call><name>visibility</name><argument_list>(<argument><expr><literal type="string">"hidden"</literal></expr></argument>)</argument_list></call><operator>,</operator> <name>used</name><operator>)</operator></expr></argument>)</argument_list> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>fp</name> <name><name>__DTOR_LIST_END__</name><index>[]</index></name></type>
<name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><call><name>section</name><argument_list>(<argument><expr><literal type="string">".dtors"</literal></expr></argument>)</argument_list></call><operator>,</operator> <call><name>visibility</name><argument_list>(<argument><expr><literal type="string">"hidden"</literal></expr></argument>)</argument_list></call><operator>,</operator> <name>used</name><operator>)</operator></expr></argument>)</argument_list> <init>= <expr><block>{<expr><literal type="number">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
