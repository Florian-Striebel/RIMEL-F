<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_interface_internal.h">















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SANITIZER_INTERFACE_INTERNAL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SANITIZER_INTERFACE_INTERNAL_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sanitizer_internal_defs.h"</cpp:file></cpp:include>

<extern>extern <literal type="string">"C"</literal> <block>{<block_content>


<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_set_report_path</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_set_report_fd</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>fd</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>__sanitizer_get_report_path</name><parameter_list>()</parameter_list>;</function_decl>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>int</name></type> <name>coverage_sandboxed</name></decl>;</decl_stmt>
<expr_stmt><expr><name>__sanitizer</name><operator>::</operator><name>sptr</name> <name>coverage_fd</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>coverage_max_block_size</name></decl>;</decl_stmt>
}</block></struct></type> <name>__sanitizer_sandbox_arguments</name>;</typedef>


<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name> <name>void</name></type>
<name>__sanitizer_sandbox_on_notify</name><parameter_list>(<parameter><decl><type><name>__sanitizer_sandbox_arguments</name> <modifier>*</modifier></type><name>args</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_report_error_summary</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>error_summary</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__sanitizer_cov_dump</name><parameter_list>()</parameter_list>;</function_decl>
<decl_stmt><decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__sanitizer_dump_coverage</name><argument_list>(
<argument><expr><specifier>const</specifier> <name>__sanitizer</name><operator>::</operator><name>uptr</name> <operator>*</operator><name>pcs</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>__sanitizer</name><operator>::</operator><name>uptr</name> <name>len</name></expr></argument>)</argument_list></decl>;</decl_stmt>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__sanitizer_dump_trace_pc_guard_coverage</name><parameter_list>()</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type> <name>__sanitizer_cov</name><argument_list>(<argument><expr><name>__sanitizer</name><operator>::</operator><name>u32</name> <operator>*</operator><name>guard</name></expr></argument>)</argument_list></decl>;</decl_stmt>




<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>int</name></type> <name>__sanitizer_acquire_crash_state</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_annotate_contiguous_container</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>beg</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>end</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>old_mid</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>new_mid</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__sanitizer_verify_contiguous_container</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>beg</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>mid</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>end</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>__sanitizer_contiguous_container_find_bad_address</name><parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>beg</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>mid</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>end</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__sanitizer_get_module_and_offset_for_pc</name><argument_list>(
<argument><expr><name>__sanitizer</name><operator>::</operator><name>uptr</name> <name>pc</name></expr></argument>, <argument><expr><name>char</name> <operator>*</operator><name>module_path</name></expr></argument>,
<argument><expr><name>__sanitizer</name><operator>::</operator><name>uptr</name> <name>module_path_len</name></expr></argument>, <argument><expr><name>__sanitizer</name><operator>::</operator><name>uptr</name> <operator>*</operator><name>pc_offset</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_cov_trace_cmp</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_cov_trace_cmp1</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_cov_trace_cmp2</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_cov_trace_cmp4</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_cov_trace_cmp8</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_cov_trace_const_cmp1</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_cov_trace_const_cmp2</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_cov_trace_const_cmp4</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_cov_trace_const_cmp8</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_cov_trace_switch</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_cov_trace_div4</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_cov_trace_div8</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_cov_trace_gep</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_cov_trace_pc_indir</name><parameter_list>()</parameter_list>;</function_decl>
<decl_stmt><decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_cov_trace_pc_guard</name><argument_list>(<argument><expr><name>__sanitizer</name><operator>::</operator><name>u32</name><operator>*</operator></expr></argument>)</argument_list></decl>;</decl_stmt>
<decl_stmt><decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_cov_trace_pc_guard_init</name><argument_list>(<argument><expr><name>__sanitizer</name><operator>::</operator><name>u32</name><operator>*</operator></expr></argument>,
<argument><expr><name>__sanitizer</name><operator>::</operator><name>u32</name><operator>*</operator></expr></argument>)</argument_list></decl>;</decl_stmt>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_cov_8bit_counters_init</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name> <name>void</name></type>
<name>__sanitizer_cov_bool_flag_init</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name> <name>void</name></type>
<name>__sanitizer_cov_pcs_init</name><parameter_list>()</parameter_list>;</function_decl>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
