<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/compiler-rt/lib/ubsan/ubsan_handlers_cxx.h">











<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>UBSAN_HANDLERS_CXX_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UBSAN_HANDLERS_CXX_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ubsan_value.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>__ubsan</name> <block>{<block_content>

<struct>struct <name>DynamicTypeCacheMissData</name> <block>{
<decl_stmt><decl><type><name>SourceLocation</name></type> <name>Loc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>TypeDescriptor</name> <modifier>&amp;</modifier></type><name>Type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>TypeInfo</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name>TypeCheckKind</name></decl>;</decl_stmt>
}</block>;</struct>




<extern>extern <literal type="string">"C"</literal> <function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__ubsan_handle_dynamic_type_cache_miss</name><parameter_list>(
<parameter><decl><type><name>DynamicTypeCacheMissData</name> <modifier>*</modifier></type><name>Data</name></decl></parameter>, <parameter><decl><type><name>ValueHandle</name></type> <name>Pointer</name></decl></parameter>, <parameter><decl><type><name>ValueHandle</name></type> <name>Hash</name></decl></parameter>)</parameter_list>;</function_decl></extern>
<extern>extern <literal type="string">"C"</literal> <function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__ubsan_handle_dynamic_type_cache_miss_abort</name><parameter_list>(
<parameter><decl><type><name>DynamicTypeCacheMissData</name> <modifier>*</modifier></type><name>Data</name></decl></parameter>, <parameter><decl><type><name>ValueHandle</name></type> <name>Pointer</name></decl></parameter>, <parameter><decl><type><name>ValueHandle</name></type> <name>Hash</name></decl></parameter>)</parameter_list>;</function_decl></extern>

<struct>struct <name>FunctionTypeMismatchData</name> <block>{
<decl_stmt><decl><type><name>SourceLocation</name></type> <name>Loc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>TypeDescriptor</name> <modifier>&amp;</modifier></type><name>Type</name></decl>;</decl_stmt>
}</block>;</struct>

<extern>extern <literal type="string">"C"</literal> <function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type>
<name>__ubsan_handle_function_type_mismatch_v1</name><parameter_list>(<parameter><decl><type><name>FunctionTypeMismatchData</name> <modifier>*</modifier></type><name>Data</name></decl></parameter>,
<parameter><decl><type><name>ValueHandle</name></type> <name>Val</name></decl></parameter>,
<parameter><decl><type><name>ValueHandle</name></type> <name>calleeRTTI</name></decl></parameter>,
<parameter><decl><type><name>ValueHandle</name></type> <name>fnRTTI</name></decl></parameter>)</parameter_list>;</function_decl></extern>
<extern>extern <literal type="string">"C"</literal> <function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>void</name></type>
<name>__ubsan_handle_function_type_mismatch_v1_abort</name><parameter_list>(<parameter><decl><type><name>FunctionTypeMismatchData</name> <modifier>*</modifier></type><name>Data</name></decl></parameter>,
<parameter><decl><type><name>ValueHandle</name></type> <name>Val</name></decl></parameter>,
<parameter><decl><type><name>ValueHandle</name></type> <name>calleeRTTI</name></decl></parameter>,
<parameter><decl><type><name>ValueHandle</name></type> <name>fnRTTI</name></decl></parameter>)</parameter_list>;</function_decl></extern>
</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
