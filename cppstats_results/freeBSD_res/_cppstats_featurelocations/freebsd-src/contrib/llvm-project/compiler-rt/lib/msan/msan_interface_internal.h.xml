<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/compiler-rt/lib/msan/msan_interface_internal.h">












<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>MSAN_INTERFACE_INTERNAL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MSAN_INTERFACE_INTERNAL_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sanitizer_common/sanitizer_internal_defs.h"</cpp:file></cpp:include>

<extern>extern <literal type="string">"C"</literal> <block>{<block_content>


<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__msan_get_track_origins</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_init</name><parameter_list>()</parameter_list>;</function_decl>



<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_warning</name><parameter_list>()</parameter_list>;</function_decl>




<decl_stmt><decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name></type> <name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>noreturn</name><operator>)</operator></expr></argument>)</argument_list>
<name>void</name> <name>__msan_warning_noreturn</name><argument_list>()</argument_list></decl>;</decl_stmt>

<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>uptr</name></expr>;</expr_stmt>
<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>sptr</name></expr>;</expr_stmt>
<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>uu64</name></expr>;</expr_stmt>
<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>uu32</name></expr>;</expr_stmt>
<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>uu16</name></expr>;</expr_stmt>
<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>u64</name></expr>;</expr_stmt>
<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>u32</name></expr>;</expr_stmt>
<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>u16</name></expr>;</expr_stmt>
<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>u8</name></expr>;</expr_stmt>


<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_warning_with_origin</name><parameter_list>(<parameter><decl><type><name>u32</name></type> <name>origin</name></decl></parameter>)</parameter_list>;</function_decl>
<decl_stmt><decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name></type> <name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>noreturn</name><operator>)</operator></expr></argument>)</argument_list> <name>void</name>
<name>__msan_warning_with_origin_noreturn</name><argument_list>(<argument><expr><name>u32</name> <name>origin</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_maybe_warning_1</name><parameter_list>(<parameter><decl><type><name>u8</name></type> <name>s</name></decl></parameter>, <parameter><decl><type><name>u32</name></type> <name>o</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_maybe_warning_2</name><parameter_list>(<parameter><decl><type><name>u16</name></type> <name>s</name></decl></parameter>, <parameter><decl><type><name>u32</name></type> <name>o</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_maybe_warning_4</name><parameter_list>(<parameter><decl><type><name>u32</name></type> <name>s</name></decl></parameter>, <parameter><decl><type><name>u32</name></type> <name>o</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_maybe_warning_8</name><parameter_list>(<parameter><decl><type><name>u64</name></type> <name>s</name></decl></parameter>, <parameter><decl><type><name>u32</name></type> <name>o</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_maybe_store_origin_1</name><parameter_list>(<parameter><decl><type><name>u8</name></type> <name>s</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>u32</name></type> <name>o</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_maybe_store_origin_2</name><parameter_list>(<parameter><decl><type><name>u16</name></type> <name>s</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>u32</name></type> <name>o</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_maybe_store_origin_4</name><parameter_list>(<parameter><decl><type><name>u32</name></type> <name>s</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>u32</name></type> <name>o</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_maybe_store_origin_8</name><parameter_list>(<parameter><decl><type><name>u64</name></type> <name>s</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>u32</name></type> <name>o</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_unpoison</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_unpoison_string</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_unpoison_param</name><parameter_list>(<parameter><decl><type><name>uptr</name></type> <name>n</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_clear_and_unpoison</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name><modifier>*</modifier></type> <name>__msan_memcpy</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name><modifier>*</modifier></type> <name>__msan_memset</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>n</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name><modifier>*</modifier></type> <name>__msan_memmove</name><parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>dest</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name><modifier>*</modifier></type> <name>src</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>n</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_poison</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_poison_stack</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_load_unpoisoned</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>sptr</name></type> <name>__msan_test_shadow</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_check_mem_is_initialized</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_set_origin</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>u32</name></type> <name>origin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_set_alloca_origin</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_set_alloca_origin4</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>descr</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>pc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>u32</name></type> <name>__msan_chain_origin</name><parameter_list>(<parameter><decl><type><name>u32</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>u32</name></type> <name>__msan_get_origin</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>a</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__msan_origin_is_descendant_or_same</name><parameter_list>(<parameter><decl><type><name>u32</name></type> <name>this_id</name></decl></parameter>, <parameter><decl><type><name>u32</name></type> <name>prev_id</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_clear_on_return</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_set_keep_going</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>keep_going</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__msan_set_poison_in_malloc</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>do_poison</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>__msan_default_options</name><parameter_list>()</parameter_list>;</function_decl>


<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_set_expect_umr</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>expect_umr</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_print_shadow</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_dump_shadow</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__msan_has_dynamic_component</name><parameter_list>()</parameter_list>;</function_decl>


<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>u32</name></type> <name>__msan_get_umr_origin</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_partial_poison</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name><modifier>*</modifier></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>shadow</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_allocated_memory</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name><modifier>*</modifier></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_dtor_callback</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name><modifier>*</modifier></type> <name>data</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>u16</name></type> <name>__sanitizer_unaligned_load16</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uu16</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>u32</name></type> <name>__sanitizer_unaligned_load32</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uu32</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>u64</name></type> <name>__sanitizer_unaligned_load64</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uu64</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_unaligned_store16</name><parameter_list>(<parameter><decl><type><name>uu16</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>u16</name></type> <name>x</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_unaligned_store32</name><parameter_list>(<parameter><decl><type><name>uu32</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>u32</name></type> <name>x</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_unaligned_store64</name><parameter_list>(<parameter><decl><type><name>uu64</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>u64</name></type> <name>x</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_set_death_callback</name><parameter_list>(<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>callback</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_copy_shadow</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_scoped_disable_interceptor_checks</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_scoped_enable_interceptor_checks</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_start_switch_fiber</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>bottom</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__msan_finish_switch_fiber</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>bottom_old</name></decl></parameter>, <parameter><decl><type><name>uptr</name> <modifier>*</modifier></type><name>size_old</name></decl></parameter>)</parameter_list>;</function_decl>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
