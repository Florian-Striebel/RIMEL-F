<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/compiler-rt/lib/tsan/rtl/tsan_suppressions.h">










<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>TSAN_SUPPRESSIONS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>TSAN_SUPPRESSIONS_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sanitizer_common/sanitizer_suppressions.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"tsan_report.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>__tsan</name> <block>{<block_content>

<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>kSuppressionNone</name><index>[]</index></name> <init>= <expr><literal type="string">"none"</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>kSuppressionRace</name><index>[]</index></name> <init>= <expr><literal type="string">"race"</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>kSuppressionRaceTop</name><index>[]</index></name> <init>= <expr><literal type="string">"race_top"</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>kSuppressionMutex</name><index>[]</index></name> <init>= <expr><literal type="string">"mutex"</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>kSuppressionThread</name><index>[]</index></name> <init>= <expr><literal type="string">"thread"</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>kSuppressionSignal</name><index>[]</index></name> <init>= <expr><literal type="string">"signal"</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>kSuppressionLib</name><index>[]</index></name> <init>= <expr><literal type="string">"called_from_lib"</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name></type> <name><name>kSuppressionDeadlock</name><index>[]</index></name> <init>= <expr><literal type="string">"deadlock"</literal></expr></init></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> <name>InitializeSuppressions</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>SuppressionContext</name> <modifier>*</modifier></type><name>Suppressions</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>PrintMatchedSuppressions</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>uptr</name></type> <name>IsSuppressed</name><parameter_list>(<parameter><decl><type><name>ReportType</name></type> <name>typ</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ReportStack</name> <modifier>*</modifier></type><name>stack</name></decl></parameter>, <parameter><decl><type><name>Suppression</name> <modifier>*</modifier><modifier>*</modifier></type><name>sp</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uptr</name></type> <name>IsSuppressed</name><parameter_list>(<parameter><decl><type><name>ReportType</name></type> <name>typ</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>ReportLocation</name> <modifier>*</modifier></type><name>loc</name></decl></parameter>, <parameter><decl><type><name>Suppression</name> <modifier>*</modifier><modifier>*</modifier></type><name>sp</name></decl></parameter>)</parameter_list>;</function_decl>

</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
