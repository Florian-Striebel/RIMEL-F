<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/compiler-rt/lib/builtins/clzsi2.c">











<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"int_lib.h"</cpp:file></cpp:include>





<function><type><name>COMPILER_RT_ABI</name> <name>int</name></type> <name>__clzsi2</name><parameter_list>(<parameter><decl><type><name>si_int</name></type> <name>a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>su_int</name></type> <name>x</name> <init>= <expr><operator>(</operator><name>su_int</name><operator>)</operator><name>a</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>si_int</name></type> <name>t</name> <init>= <expr><operator>(</operator><operator>(</operator><name>x</name> <operator>&amp;</operator> <literal type="number">0xFFFF0000</literal><operator>)</operator> <operator>==</operator> <literal type="number">0</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">4</literal></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>x</name> <operator>&gt;&gt;=</operator> <literal type="number">16</literal> <operator>-</operator> <name>t</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>su_int</name></type> <name>r</name> <init>= <expr><name>t</name></expr></init></decl>;</decl_stmt>

<expr_stmt><expr><name>t</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>x</name> <operator>&amp;</operator> <literal type="number">0xFF00</literal><operator>)</operator> <operator>==</operator> <literal type="number">0</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>x</name> <operator>&gt;&gt;=</operator> <literal type="number">8</literal> <operator>-</operator> <name>t</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r</name> <operator>+=</operator> <name>t</name></expr>;</expr_stmt>

<expr_stmt><expr><name>t</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>x</name> <operator>&amp;</operator> <literal type="number">0xF0</literal><operator>)</operator> <operator>==</operator> <literal type="number">0</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>x</name> <operator>&gt;&gt;=</operator> <literal type="number">4</literal> <operator>-</operator> <name>t</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r</name> <operator>+=</operator> <name>t</name></expr>;</expr_stmt>

<expr_stmt><expr><name>t</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>x</name> <operator>&amp;</operator> <literal type="number">0xC</literal><operator>)</operator> <operator>==</operator> <literal type="number">0</literal><operator>)</operator> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>x</name> <operator>&gt;&gt;=</operator> <literal type="number">2</literal> <operator>-</operator> <name>t</name></expr>;</expr_stmt>
<expr_stmt><expr><name>r</name> <operator>+=</operator> <name>t</name></expr>;</expr_stmt>











<return>return <expr><name>r</name> <operator>+</operator> <operator>(</operator><operator>(</operator><literal type="number">2</literal> <operator>-</operator> <name>x</name><operator>)</operator> <operator>&amp;</operator> <operator>-</operator><operator>(</operator><operator>(</operator><name>x</name> <operator>&amp;</operator> <literal type="number">2</literal><operator>)</operator> <operator>==</operator> <literal type="number">0</literal><operator>)</operator><operator>)</operator></expr>;</return>
</block_content>}</block></function>
</unit>
