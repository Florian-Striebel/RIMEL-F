<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/compiler-rt/lib/scudo/standalone/wrappers_c.h">







<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SCUDO_WRAPPERS_C_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCUDO_WRAPPERS_C_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"platform.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"stats.h"</cpp:file></cpp:include>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>SCUDO_ANDROID</name></expr></cpp:if>
<typedef>typedef <type><name>size_t</name></type> <name>__scudo_mallinfo_data_t</name>;</typedef>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<typedef>typedef <type><name>int</name></type> <name>__scudo_mallinfo_data_t</name>;</typedef>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<struct>struct <name>__scudo_mallinfo</name> <block>{
<decl_stmt><decl><type><name>__scudo_mallinfo_data_t</name></type> <name>arena</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>__scudo_mallinfo_data_t</name></type> <name>ordblks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>__scudo_mallinfo_data_t</name></type> <name>smblks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>__scudo_mallinfo_data_t</name></type> <name>hblks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>__scudo_mallinfo_data_t</name></type> <name>hblkhd</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>__scudo_mallinfo_data_t</name></type> <name>usmblks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>__scudo_mallinfo_data_t</name></type> <name>fsmblks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>__scudo_mallinfo_data_t</name></type> <name>uordblks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>__scudo_mallinfo_data_t</name></type> <name>fordblks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>__scudo_mallinfo_data_t</name></type> <name>keepcost</name></decl>;</decl_stmt>
}</block>;</struct>




<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>STRUCT_MALLINFO_DECLARED</name></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCUDO_MALLINFO</name></cpp:macro> <cpp:value>mallinfo</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCUDO_MALLINFO</name></cpp:macro> <cpp:value>__scudo_mallinfo</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
