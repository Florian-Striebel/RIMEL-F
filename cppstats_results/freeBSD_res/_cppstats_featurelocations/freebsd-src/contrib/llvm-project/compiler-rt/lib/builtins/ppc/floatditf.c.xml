<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/compiler-rt/lib/builtins/ppc/floatditf.c">






<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"DD.h"</cpp:file></cpp:include>

<function><type><name>long</name> <name>double</name></type> <name>__floatditf</name><parameter_list>(<parameter><decl><type><name>int64_t</name></type> <name>a</name></decl></parameter>)</parameter_list> <block>{<block_content>

<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>double</name></type> <name>twop32</name> <init>= <expr><literal type="number">0x1</literal><literal type="number">.0p32</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>static</specifier> <specifier>const</specifier> <name>double</name></type> <name>twop52</name> <init>= <expr><literal type="number">0x1</literal><literal type="number">.0p52</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>doublebits</name></type> <name>low</name> <init>= <expr><block>{<expr><operator>.</operator><name>d</name> <operator>=</operator> <name>twop52</name></expr>}</block></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>low</name><operator>.</operator><name>x</name></name> <operator>|=</operator> <name>a</name> <operator>&amp;</operator> <call><name>UINT64_C</name><argument_list>(<argument><expr><literal type="number">0x00000000ffffffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>const</specifier> <name>double</name></type> <name>high_addend</name> <init>= <expr><operator>(</operator><name>double</name><operator>)</operator><operator>(</operator><operator>(</operator><name>int32_t</name><operator>)</operator><operator>(</operator><name>a</name> <operator>&gt;&gt;</operator> <literal type="number">32</literal><operator>)</operator><operator>)</operator> <operator>*</operator> <name>twop32</name> <operator>-</operator> <name>twop52</name></expr></init></decl>;</decl_stmt>








<decl_stmt><decl><type><name>DD</name></type> <name>result</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>result</name><operator>.</operator><name>s</name><operator>.</operator><name>hi</name></name> <operator>=</operator> <name>high_addend</name> <operator>+</operator> <name><name>low</name><operator>.</operator><name>d</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>result</name><operator>.</operator><name>s</name><operator>.</operator><name>lo</name></name> <operator>=</operator> <operator>(</operator><name>high_addend</name> <operator>-</operator> <name><name>result</name><operator>.</operator><name>s</name><operator>.</operator><name>hi</name></name><operator>)</operator> <operator>+</operator> <name><name>low</name><operator>.</operator><name>d</name></name></expr>;</expr_stmt>

<return>return <expr><name><name>result</name><operator>.</operator><name>ld</name></name></expr>;</return>
</block_content>}</block></function>
</unit>
