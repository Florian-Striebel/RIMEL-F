<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_local_address_space_view.h">


























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SANITIZER_LOCAL_ADDRES_SPACE_VIEW_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SANITIZER_LOCAL_ADDRES_SPACE_VIEW_H</name></cpp:macro></cpp:define>

<decl_stmt><decl><type><name>namespace</name></type> <name>__sanitizer</name> <block>{<block_content>
<struct>struct <name>LocalAddressSpaceView</name> <block>{








<function><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<specifier>static</specifier> <specifier>const</specifier> <name>T</name> <modifier>*</modifier></type><name>Load</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>T</name> <modifier>*</modifier></type><name>target_address</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>num_elements</name> <init>= <expr><literal type="number">1</literal></expr></init></decl></parameter>)</parameter_list> <block>{<block_content>


<return>return <expr><name>target_address</name></expr>;</return>
</block_content>}</block></function>




















<function><type><name><name>template</name> <argument_list type="generic">&lt;<argument><expr><name>typename</name> <name>T</name></expr></argument>&gt;</argument_list></name>
<specifier>static</specifier> <name>T</name> <modifier>*</modifier></type><name>LoadWritable</name><parameter_list>(<parameter><decl><type><name>T</name> <modifier>*</modifier></type><name>target_address</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>num_elements</name> <init>= <expr><literal type="number">1</literal></expr></init></decl></parameter>)</parameter_list> <block>{<block_content>


<return>return <expr><name>target_address</name></expr>;</return>
</block_content>}</block></function>
}</block>;</struct>
</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
