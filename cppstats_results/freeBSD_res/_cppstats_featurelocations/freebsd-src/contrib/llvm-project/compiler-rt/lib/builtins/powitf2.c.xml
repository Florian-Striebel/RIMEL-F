<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/compiler-rt/lib/builtins/powitf2.c">











<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>QUAD_PRECISION</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"fp_lib.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>CRT_HAS_128BIT</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name>defined</name><argument_list>(<argument><expr><name>CRT_LDBL_128BIT</name></expr></argument>)</argument_list></call></expr></cpp:if>



<function><type><name>COMPILER_RT_ABI</name> <name>long</name> <name>double</name></type> <name>__powitf2</name><parameter_list>(<parameter><decl><type><name>long</name> <name>double</name></type> <name>a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><specifier>const</specifier> <name>int</name></type> <name>recip</name> <init>= <expr><name>b</name> <operator>&lt;</operator> <literal type="number">0</literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name> <name>double</name></type> <name>r</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
<while>while <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>b</name> <operator>&amp;</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>r</name> <operator>*=</operator> <name>a</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><name>b</name> <operator>/=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>b</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
<expr_stmt><expr><name>a</name> <operator>*=</operator> <name>a</name></expr>;</expr_stmt>
</block_content>}</block></while>
<return>return <expr><ternary><condition><expr><name>recip</name></expr> ?</condition><then> <expr><literal type="number">1</literal> <operator>/</operator> <name>r</name></expr> </then><else>: <expr><name>r</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
