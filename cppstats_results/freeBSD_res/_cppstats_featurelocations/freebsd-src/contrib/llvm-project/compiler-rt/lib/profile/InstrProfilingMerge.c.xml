<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/compiler-rt/lib/profile/InstrProfilingMerge.c">










<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"InstrProfiling.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"InstrProfilingInternal.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"InstrProfilingUtil.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INSTR_PROF_VALUE_PROF_DATA</name></cpp:macro></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"profile/InstrProfData.inc"</cpp:file></cpp:include>

<function_decl><type><name>COMPILER_RT_VISIBILITY</name>
<name>void</name></type> (<modifier>*</modifier><name>VPMergeHook</name>)<parameter_list>(<parameter><decl><type><name>ValueProfData</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>__llvm_profile_data</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function><type><name>COMPILER_RT_VISIBILITY</name>
<name>uint64_t</name></type> <name>lprofGetLoadModuleSignature</name><parameter_list>()</parameter_list> <block>{<block_content>

<decl_stmt><decl><type><name>uint64_t</name></type> <name>Version</name> <init>= <expr><call><name>__llvm_profile_get_version</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>CounterSize</name> <init>= <expr><operator>(</operator><name>uint64_t</name><operator>)</operator><operator>(</operator><call><name>__llvm_profile_end_counters</name><argument_list>()</argument_list></call> <operator>-</operator>
<call><name>__llvm_profile_begin_counters</name><argument_list>()</argument_list></call><operator>)</operator></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>DataSize</name> <init>= <expr><call><name>__llvm_profile_get_data_size</name><argument_list>(<argument><expr><call><name>__llvm_profile_begin_data</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><call><name>__llvm_profile_end_data</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>NamesSize</name> <init>=
<expr><operator>(</operator><name>uint64_t</name><operator>)</operator><operator>(</operator><call><name>__llvm_profile_end_names</name><argument_list>()</argument_list></call> <operator>-</operator> <call><name>__llvm_profile_begin_names</name><argument_list>()</argument_list></call><operator>)</operator></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>NumVnodes</name> <init>=
<expr><operator>(</operator><name>uint64_t</name><operator>)</operator><operator>(</operator><call><name>__llvm_profile_end_vnodes</name><argument_list>()</argument_list></call> <operator>-</operator> <call><name>__llvm_profile_begin_vnodes</name><argument_list>()</argument_list></call><operator>)</operator></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>__llvm_profile_data</name> <modifier>*</modifier></type><name>FirstD</name> <init>= <expr><call><name>__llvm_profile_begin_data</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><operator>(</operator><name>NamesSize</name> <operator>&lt;&lt;</operator> <literal type="number">40</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><name>CounterSize</name> <operator>&lt;&lt;</operator> <literal type="number">30</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><name>DataSize</name> <operator>&lt;&lt;</operator> <literal type="number">20</literal><operator>)</operator> <operator>+</operator>
<operator>(</operator><name>NumVnodes</name> <operator>&lt;&lt;</operator> <literal type="number">10</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><ternary><condition><expr><name>DataSize</name> <operator>&gt;</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><name><name>FirstD</name><operator>-&gt;</operator><name>NameRef</name></name></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator> <operator>+</operator> <name>Version</name></expr>;</return>
</block_content>}</block></function>


<function><type><name>COMPILER_RT_VISIBILITY</name>
<name>int</name></type> <name>__llvm_profile_check_compatibility</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ProfileData</name></decl></parameter>,
<parameter><decl><type><name>uint64_t</name></type> <name>ProfileSize</name></decl></parameter>)</parameter_list> <block>{<block_content>

<decl_stmt><decl><type><name>__llvm_profile_header</name> <modifier>*</modifier></type><name>Header</name> <init>= <expr><operator>(</operator><name>__llvm_profile_header</name> <operator>*</operator><operator>)</operator><name>ProfileData</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>__llvm_profile_data</name> <modifier>*</modifier></type><name>SrcDataStart</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>SrcDataEnd</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>SrcData</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>DstData</name></decl>;</decl_stmt>
<expr_stmt><expr><name>SrcDataStart</name> <operator>=</operator>
<operator>(</operator><name>__llvm_profile_data</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>ProfileData</name> <operator>+</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>__llvm_profile_header</name></expr></argument>)</argument_list></sizeof> <operator>+</operator>
<name><name>Header</name><operator>-&gt;</operator><name>BinaryIdsSize</name></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>SrcDataEnd</name> <operator>=</operator> <name>SrcDataStart</name> <operator>+</operator> <name><name>Header</name><operator>-&gt;</operator><name>DataSize</name></name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>ProfileSize</name> <operator>&lt;</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>__llvm_profile_header</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>


<if_stmt><if>if <condition>(<expr><name><name>Header</name><operator>-&gt;</operator><name>Magic</name></name> <operator>!=</operator> <call><name>__llvm_profile_get_magic</name><argument_list>()</argument_list></call> <operator>||</operator>
<name><name>Header</name><operator>-&gt;</operator><name>Version</name></name> <operator>!=</operator> <call><name>__llvm_profile_get_version</name><argument_list>()</argument_list></call> <operator>||</operator>
<name><name>Header</name><operator>-&gt;</operator><name>DataSize</name></name> <operator>!=</operator>
<call><name>__llvm_profile_get_data_size</name><argument_list>(<argument><expr><call><name>__llvm_profile_begin_data</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><call><name>__llvm_profile_end_data</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>||</operator>
<name><name>Header</name><operator>-&gt;</operator><name>CountersSize</name></name> <operator>!=</operator> <operator>(</operator><name>uint64_t</name><operator>)</operator><operator>(</operator><call><name>__llvm_profile_end_counters</name><argument_list>()</argument_list></call> <operator>-</operator>
<call><name>__llvm_profile_begin_counters</name><argument_list>()</argument_list></call><operator>)</operator> <operator>||</operator>
<name><name>Header</name><operator>-&gt;</operator><name>NamesSize</name></name> <operator>!=</operator> <operator>(</operator><name>uint64_t</name><operator>)</operator><operator>(</operator><call><name>__llvm_profile_end_names</name><argument_list>()</argument_list></call> <operator>-</operator>
<call><name>__llvm_profile_begin_names</name><argument_list>()</argument_list></call><operator>)</operator> <operator>||</operator>
<name><name>Header</name><operator>-&gt;</operator><name>ValueKindLast</name></name> <operator>!=</operator> <name>IPVK_Last</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>ProfileSize</name> <operator>&lt;</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>__llvm_profile_header</name></expr></argument>)</argument_list></sizeof> <operator>+</operator> <name><name>Header</name><operator>-&gt;</operator><name>BinaryIdsSize</name></name> <operator>+</operator>
<name><name>Header</name><operator>-&gt;</operator><name>DataSize</name></name> <operator>*</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>__llvm_profile_data</name></expr></argument>)</argument_list></sizeof> <operator>+</operator>
<name><name>Header</name><operator>-&gt;</operator><name>NamesSize</name></name> <operator>+</operator> <name><name>Header</name><operator>-&gt;</operator><name>CountersSize</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<for>for <control>(<init><expr><name>SrcData</name> <operator>=</operator> <name>SrcDataStart</name></expr><operator>,</operator>
<expr><name>DstData</name> <operator>=</operator> <operator>(</operator><name>__llvm_profile_data</name> <operator>*</operator><operator>)</operator><call><name>__llvm_profile_begin_data</name><argument_list>()</argument_list></call></expr>;</init>
<condition><expr><name>SrcData</name> <operator>&lt;</operator> <name>SrcDataEnd</name></expr>;</condition> <incr><expr><operator>++</operator><name>SrcData</name></expr><operator>,</operator> <expr><operator>++</operator><name>DstData</name></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>SrcData</name><operator>-&gt;</operator><name>NameRef</name></name> <operator>!=</operator> <name><name>DstData</name><operator>-&gt;</operator><name>NameRef</name></name> <operator>||</operator>
<name><name>SrcData</name><operator>-&gt;</operator><name>FuncHash</name></name> <operator>!=</operator> <name><name>DstData</name><operator>-&gt;</operator><name>FuncHash</name></name> <operator>||</operator>
<name><name>SrcData</name><operator>-&gt;</operator><name>NumCounters</name></name> <operator>!=</operator> <name><name>DstData</name><operator>-&gt;</operator><name>NumCounters</name></name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
</block_content>}</block></for>


<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>COMPILER_RT_VISIBILITY</name>
<name>int</name></type> <name>__llvm_profile_merge_from_buffer</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ProfileData</name></decl></parameter>,
<parameter><decl><type><name>uint64_t</name></type> <name>ProfileSize</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>__llvm_profile_data</name> <modifier>*</modifier></type><name>SrcDataStart</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>SrcDataEnd</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>SrcData</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>DstData</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>__llvm_profile_header</name> <modifier>*</modifier></type><name>Header</name> <init>= <expr><operator>(</operator><name>__llvm_profile_header</name> <operator>*</operator><operator>)</operator><name>ProfileData</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name> <modifier>*</modifier></type><name>SrcCountersStart</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>SrcNameStart</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>SrcValueProfDataStart</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>SrcValueProfData</name></decl>;</decl_stmt>

<expr_stmt><expr><name>SrcDataStart</name> <operator>=</operator>
<operator>(</operator><name>__llvm_profile_data</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>ProfileData</name> <operator>+</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>__llvm_profile_header</name></expr></argument>)</argument_list></sizeof> <operator>+</operator>
<name><name>Header</name><operator>-&gt;</operator><name>BinaryIdsSize</name></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>SrcDataEnd</name> <operator>=</operator> <name>SrcDataStart</name> <operator>+</operator> <name><name>Header</name><operator>-&gt;</operator><name>DataSize</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>SrcCountersStart</name> <operator>=</operator> <operator>(</operator><name>uint64_t</name> <operator>*</operator><operator>)</operator><name>SrcDataEnd</name></expr>;</expr_stmt>
<expr_stmt><expr><name>SrcNameStart</name> <operator>=</operator> <operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>SrcCountersStart</name> <operator>+</operator> <name><name>Header</name><operator>-&gt;</operator><name>CountersSize</name></name><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name>SrcValueProfDataStart</name> <operator>=</operator>
<name>SrcNameStart</name> <operator>+</operator> <name><name>Header</name><operator>-&gt;</operator><name>NamesSize</name></name> <operator>+</operator>
<call><name>__llvm_profile_get_num_padding_bytes</name><argument_list>(<argument><expr><name><name>Header</name><operator>-&gt;</operator><name>NamesSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>SrcNameStart</name> <operator>&lt;</operator> <operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name>SrcCountersStart</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>

<for>for <control>(<init><expr><name>SrcData</name> <operator>=</operator> <name>SrcDataStart</name></expr><operator>,</operator>
<expr><name>DstData</name> <operator>=</operator> <operator>(</operator><name>__llvm_profile_data</name> <operator>*</operator><operator>)</operator><call><name>__llvm_profile_begin_data</name><argument_list>()</argument_list></call></expr><operator>,</operator>
<expr><name>SrcValueProfData</name> <operator>=</operator> <name>SrcValueProfDataStart</name></expr>;</init>
<condition><expr><name>SrcData</name> <operator>&lt;</operator> <name>SrcDataEnd</name></expr>;</condition> <incr><expr><operator>++</operator><name>SrcData</name></expr><operator>,</operator> <expr><operator>++</operator><name>DstData</name></expr></incr>)</control> <block>{<block_content>
<decl_stmt><decl><type><name>uint64_t</name> <modifier>*</modifier></type><name>DstCounters</name> <init>= <expr><operator>(</operator><name>uint64_t</name> <operator>*</operator><operator>)</operator><name><name>DstData</name><operator>-&gt;</operator><name>CounterPtr</name></name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name></type> <name>NVK</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name>unsigned</name></type> <name>NC</name> <init>= <expr><name><name>SrcData</name><operator>-&gt;</operator><name>NumCounters</name></name></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>NC</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
<decl_stmt><decl><type><name>uint64_t</name> <modifier>*</modifier></type><name>SrcCounters</name> <init>= <expr><name>SrcCountersStart</name> <operator>+</operator> <operator>(</operator><operator>(</operator><name>size_t</name><operator>)</operator><name><name>SrcData</name><operator>-&gt;</operator><name>CounterPtr</name></name> <operator>-</operator>
<name><name>Header</name><operator>-&gt;</operator><name>CountersDelta</name></name><operator>)</operator> <operator>/</operator>
<sizeof>sizeof<argument_list>(<argument><expr><name>uint64_t</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name><name>SrcCounters</name> <argument_list type="generic">&lt; <argument><expr><name>SrcCountersStart</name> <operator>||</operator>
<operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><name>SrcCounters</name> <operator>&gt;=</operator> <name>SrcNameStart</name> <operator>||</operator>
<operator>(</operator><specifier>const</specifier> <name>char</name> <operator>*</operator><operator>)</operator><operator>(</operator><name>SrcCounters</name> <operator>+</operator> <name>NC</name><operator>)</operator></expr></argument> &gt;</argument_list></name> <name>SrcNameStart</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
<for>for <control>(<init><decl><type><name>unsigned</name></type> <name>I</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>I</name> <operator>&lt;</operator> <name>NC</name></expr>;</condition> <incr><expr><name>I</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>DstCounters</name><index>[<expr><name>I</name></expr>]</index></name> <operator>+=</operator> <name><name>SrcCounters</name><index>[<expr><name>I</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>


<if_stmt><if>if <condition>(<expr><operator>!</operator><name>VPMergeHook</name></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>

<for>for <control>(<init><decl><type><name>unsigned</name></type> <name>I</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>I</name> <operator>&lt;=</operator> <name>IPVK_Last</name></expr>;</condition> <incr><expr><name>I</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><name>NVK</name> <operator>+=</operator> <operator>(</operator><name><name>SrcData</name><operator>-&gt;</operator><name>NumValueSites</name><index>[<expr><name>I</name></expr>]</index></name> <operator>!=</operator> <literal type="number">0</literal><operator>)</operator></expr>;</expr_stmt></block_content></block></for>

<if_stmt><if>if <condition>(<expr><operator>!</operator><name>NVK</name></expr>)</condition><block type="pseudo"><block_content>
<continue>continue;</continue></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>SrcValueProfData</name> <operator>&gt;=</operator> <name>ProfileData</name> <operator>+</operator> <name>ProfileSize</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>VPMergeHook</name><argument_list>(<argument><expr><operator>(</operator><name>ValueProfData</name> <operator>*</operator><operator>)</operator><name>SrcValueProfData</name></expr></argument>, <argument><expr><name>DstData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>SrcValueProfData</name> <operator>=</operator>
<name>SrcValueProfData</name> <operator>+</operator> <operator>(</operator><operator>(</operator><name>ValueProfData</name> <operator>*</operator><operator>)</operator><name>SrcValueProfData</name><operator>)</operator><operator>-&gt;</operator><name>TotalSize</name></expr>;</expr_stmt>
</block_content>}</block></for>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>
</unit>
