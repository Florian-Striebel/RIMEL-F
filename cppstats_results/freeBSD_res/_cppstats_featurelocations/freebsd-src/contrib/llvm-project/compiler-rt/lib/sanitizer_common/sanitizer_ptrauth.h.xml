<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/compiler-rt/lib/sanitizer_common/sanitizer_ptrauth.h">







<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>SANITIZER_PTRAUTH_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SANITIZER_PTRAUTH_H</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>__has_feature</name><argument_list>(<argument><expr><name>ptrauth_calls</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ptrauth.h&gt;</cpp:file></cpp:include>
<cpp:elif>#<cpp:directive>elif</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__ARM_FEATURE_PAC_DEFAULT</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__APPLE__</name></expr></argument>)</argument_list></call></expr></cpp:elif>
<function><type><specifier>inline</specifier> <name>unsigned</name> <name>long</name></type> <name>ptrauth_strip</name><parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>__value</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__key</name></decl></parameter>)</parameter_list> <block>{<block_content>




<decl_stmt><decl><type><name>unsigned</name> <name>long</name></type> <name>ret</name></decl>;</decl_stmt>
<asm>asm <specifier>volatile</specifier>(
"mov x30, %1\n\t"
"hint #7\n\t"
"mov %0, x30\n\t"
: "=r"(ret)
: "r"(__value)
: "x30");</asm>
<return>return <expr><name>ret</name></expr>;</return>
</block_content>}</block></function>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ptrauth_auth_data</name><parameter_list>(<parameter><type><name>__value</name></type></parameter>, <parameter><type><name>__old_key</name></type></parameter>, <parameter><type><name>__old_data</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__value</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ptrauth_string_discriminator</name><parameter_list>(<parameter><type><name>__string</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((int)0)</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ptrauth_strip</name><parameter_list>(<parameter><type><name>__value</name></type></parameter>, <parameter><type><name>__key</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__value</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ptrauth_auth_data</name><parameter_list>(<parameter><type><name>__value</name></type></parameter>, <parameter><type><name>__old_key</name></type></parameter>, <parameter><type><name>__old_data</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__value</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ptrauth_string_discriminator</name><parameter_list>(<parameter><type><name>__string</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((int)0)</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STRIP_PAC_PC</name><parameter_list>(<parameter><type><name>pc</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((uptr)ptrauth_strip(pc, 0))</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
