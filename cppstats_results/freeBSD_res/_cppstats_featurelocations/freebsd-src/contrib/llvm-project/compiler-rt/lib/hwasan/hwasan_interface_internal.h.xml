<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/compiler-rt/lib/hwasan/hwasan_interface_internal.h">












<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>HWASAN_INTERFACE_INTERNAL_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HWASAN_INTERFACE_INTERNAL_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sanitizer_common/sanitizer_internal_defs.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"sanitizer_common/sanitizer_platform_limits_posix.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;link.h&gt;</cpp:file></cpp:include>

<extern>extern <literal type="string">"C"</literal> <block>{<block_content>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_init_static</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_init</name><parameter_list>()</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_library_loaded</name><argument_list>(<argument><expr><macro><name>ElfW</name><argument_list>(<argument>Addr</argument>)</argument_list></macro> <name>base</name></expr></argument>, <argument><expr><specifier>const</specifier> <call><name>ElfW</name><argument_list>(<argument><expr><name>Phdr</name></expr></argument>)</argument_list></call> <operator>*</operator> <name>phdr</name></expr></argument>,
<argument><expr><macro><name>ElfW</name><argument_list>(<argument>Half</argument>)</argument_list></macro> <name>phnum</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<decl_stmt><decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_library_unloaded</name><argument_list>(<argument><expr><macro><name>ElfW</name><argument_list>(<argument>Addr</argument>)</argument_list></macro> <name>base</name></expr></argument>, <argument><expr><specifier>const</specifier> <call><name>ElfW</name><argument_list>(<argument><expr><name>Phdr</name></expr></argument>)</argument_list></call> <operator>*</operator> <name>phdr</name></expr></argument>,
<argument><expr><macro><name>ElfW</name><argument_list>(<argument>Half</argument>)</argument_list></macro> <name>phnum</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>uptr</name></expr>;</expr_stmt>
<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>sptr</name></expr>;</expr_stmt>
<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>uu64</name></expr>;</expr_stmt>
<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>uu32</name></expr>;</expr_stmt>
<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>uu16</name></expr>;</expr_stmt>
<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>u64</name></expr>;</expr_stmt>
<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>u32</name></expr>;</expr_stmt>
<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>u16</name></expr>;</expr_stmt>
<expr_stmt><expr><name>using</name> <name>__sanitizer</name><operator>::</operator><name>u8</name></expr>;</expr_stmt>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_init_frames</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>, <parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<specifier>extern</specifier> <name>uptr</name></type> <name>__hwasan_shadow_memory_dynamic_address</name></decl>;</decl_stmt>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_loadN</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>, <parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_load1</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_load2</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_load4</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_load8</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_load16</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_loadN_noabort</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>, <parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_load1_noabort</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_load2_noabort</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_load4_noabort</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_load8_noabort</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_load16_noabort</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_storeN</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>, <parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_store1</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_store2</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_store4</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_store8</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_store16</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_storeN_noabort</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>, <parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_store1_noabort</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_store2_noabort</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_store4_noabort</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_store8_noabort</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_store16_noabort</name><parameter_list>(<parameter><decl><type><name>uptr</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_tag_memory</name><parameter_list>(<parameter><decl><type><name>uptr</name></type> <name>p</name></decl></parameter>, <parameter><decl><type><name>u8</name></type> <name>tag</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>sz</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>uptr</name></type> <name>__hwasan_tag_pointer</name><parameter_list>(<parameter><decl><type><name>uptr</name></type> <name>p</name></decl></parameter>, <parameter><decl><type><name>u8</name></type> <name>tag</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_tag_mismatch</name><parameter_list>(<parameter><decl><type><name>uptr</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>u8</name></type> <name>ts</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_tag_mismatch4</name><parameter_list>(<parameter><decl><type><name>uptr</name></type> <name>addr</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>access_info</name></decl></parameter>, <parameter><decl><type><name>uptr</name> <modifier>*</modifier></type><name>registers_frame</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>outsize</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>u8</name></type> <name>__hwasan_generate_tag</name><parameter_list>()</parameter_list>;</function_decl>



<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>sptr</name></type> <name>__hwasan_test_shadow</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name> <name>SANITIZER_WEAK_ATTRIBUTE</name>
<specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>__hwasan_default_options</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_print_shadow</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>x</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_handle_longjmp</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>sp_dst</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_handle_vfork</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>sp_dst</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>u16</name></type> <name>__sanitizer_unaligned_load16</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uu16</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>u32</name></type> <name>__sanitizer_unaligned_load32</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uu32</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>u64</name></type> <name>__sanitizer_unaligned_load64</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>uu64</name> <modifier>*</modifier></type><name>p</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_unaligned_store16</name><parameter_list>(<parameter><decl><type><name>uu16</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>u16</name></type> <name>x</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_unaligned_store32</name><parameter_list>(<parameter><decl><type><name>uu32</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>u32</name></type> <name>x</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_unaligned_store64</name><parameter_list>(<parameter><decl><type><name>uu64</name> <modifier>*</modifier></type><name>p</name></decl></parameter>, <parameter><decl><type><name>u64</name></type> <name>x</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_enable_allocator_tagging</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_disable_allocator_tagging</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_thread_enter</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_thread_exit</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_print_memory_usage</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__sanitizer_posix_memalign</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>memptr</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>alignment</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name> <modifier>*</modifier></type> <name>__sanitizer_memalign</name><parameter_list>(<parameter><decl><type><name>uptr</name></type> <name>alignment</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name> <modifier>*</modifier></type> <name>__sanitizer_aligned_alloc</name><parameter_list>(<parameter><decl><type><name>uptr</name></type> <name>alignment</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name> <modifier>*</modifier></type> <name>__sanitizer___libc_memalign</name><parameter_list>(<parameter><decl><type><name>uptr</name></type> <name>alignment</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name> <modifier>*</modifier></type> <name>__sanitizer_valloc</name><parameter_list>(<parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name> <modifier>*</modifier></type> <name>__sanitizer_pvalloc</name><parameter_list>(<parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_free</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_cfree</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>uptr</name></type> <name>__sanitizer_malloc_usable_size</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>;</function_decl>

<expr_stmt><expr><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>__hwasan</name><operator>::</operator><name>__sanitizer_struct_mallinfo</name> <call><name>__sanitizer_mallinfo</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>int</name></type> <name>__sanitizer_mallopt</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>cmd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>value</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__sanitizer_malloc_stats</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name> <modifier>*</modifier></type> <name>__sanitizer_calloc</name><parameter_list>(<parameter><decl><type><name>uptr</name></type> <name>nmemb</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name> <modifier>*</modifier></type> <name>__sanitizer_realloc</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name> <modifier>*</modifier></type> <name>__sanitizer_reallocarray</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>nmemb</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name> <modifier>*</modifier></type> <name>__sanitizer_malloc</name><parameter_list>(<parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name> <modifier>*</modifier></type><name>__hwasan_memcpy</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>size</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name> <modifier>*</modifier></type><name>__hwasan_memset</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>c</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>n</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name> <modifier>*</modifier></type><name>__hwasan_memmove</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>dest</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>uptr</name></type> <name>n</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>SANITIZER_INTERFACE_ATTRIBUTE</name>
<name>void</name></type> <name>__hwasan_set_error_report_callback</name><parameter_list>(<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>callback</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>
</block_content>}</block></extern>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
