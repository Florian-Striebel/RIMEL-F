<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/lib/Headers/limits.h">







<cpp:if>#<cpp:directive>if</cpp:directive> <expr><ternary><condition><expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__CLANG_LIMITS_H</name></expr></argument>)</argument_list></call></expr></condition></ternary></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__CLANG_LIMITS_H</name></cpp:macro></cpp:define>



<cpp:if>#<cpp:directive>if</cpp:directive> <expr><ternary><condition><expr><name>defined</name> <name>__GNUC__</name> <operator>&amp;&amp;</operator> <operator>!</operator><name>defined</name> <name>_GCC_LIMITS_H_</name></expr></condition></ternary></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_GCC_LIMITS_H_</name></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>



<cpp:if>#<cpp:directive>if</cpp:directive> <expr><ternary><condition><expr><name>__STDC_HOSTED__</name> <operator>&amp;&amp;</operator> <call><name>__has_include_next</name><argument_list>(<argument><expr><operator>&lt;</operator><name><name>limits</name><operator>.</operator><name>h</name></name><operator>&gt;</operator></expr></argument>)</argument_list></call></expr></condition></ternary></expr></cpp:if>
<cpp:empty>#include_next &lt;limits.h&gt;</cpp:empty>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>



<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SCHAR_MIN</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SCHAR_MAX</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>UCHAR_MAX</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SHRT_MIN</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SHRT_MAX</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>USHRT_MAX</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>INT_MIN</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>INT_MAX</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>UINT_MAX</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>LONG_MIN</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>LONG_MAX</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>ULONG_MAX</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CHAR_BIT</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CHAR_MIN</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>CHAR_MAX</name></cpp:undef>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCHAR_MAX</name></cpp:macro> <cpp:value>__SCHAR_MAX__</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHRT_MAX</name></cpp:macro> <cpp:value>__SHRT_MAX__</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INT_MAX</name></cpp:macro> <cpp:value>__INT_MAX__</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LONG_MAX</name></cpp:macro> <cpp:value>__LONG_MAX__</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCHAR_MIN</name></cpp:macro> <cpp:value>(-__SCHAR_MAX__-1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SHRT_MIN</name></cpp:macro> <cpp:value>(-__SHRT_MAX__ -1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INT_MIN</name></cpp:macro> <cpp:value>(-__INT_MAX__ -1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LONG_MIN</name></cpp:macro> <cpp:value>(-__LONG_MAX__ -1L)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UCHAR_MAX</name></cpp:macro> <cpp:value>(__SCHAR_MAX__*2 +1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>USHRT_MAX</name></cpp:macro> <cpp:value>(__SHRT_MAX__ *2 +1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UINT_MAX</name></cpp:macro> <cpp:value>(__INT_MAX__ *2U +1U)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ULONG_MAX</name></cpp:macro> <cpp:value>(__LONG_MAX__ *2UL+1UL)</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><ternary><condition><expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>MB_LEN_MAX</name></expr></argument>)</argument_list></call></expr></condition></ternary></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MB_LEN_MAX</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHAR_BIT</name></cpp:macro> <cpp:value>__CHAR_BIT__</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><ternary><condition><expr><call><name>defined</name><argument_list>(<argument><expr><name>__CHAR_UNSIGNED__</name></expr></argument>)</argument_list></call></expr></condition></ternary></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHAR_MIN</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHAR_MAX</name></cpp:macro> <cpp:value>UCHAR_MAX</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHAR_MIN</name></cpp:macro> <cpp:value>SCHAR_MIN</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CHAR_MAX</name></cpp:macro> <cpp:value>__SCHAR_MAX__</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>




<cpp:if>#<cpp:directive>if</cpp:directive> <expr><ternary><condition><expr><name>__STDC_VERSION__</name> <operator>&gt;=</operator> <literal type="number">199901L</literal> <operator>||</operator> <name>__cplusplus</name> <operator>&gt;=</operator> <literal type="number">201103L</literal></expr></condition></ternary></expr></cpp:if>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>LLONG_MIN</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>LLONG_MAX</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>ULLONG_MAX</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLONG_MAX</name></cpp:macro> <cpp:value>__LONG_LONG_MAX__</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLONG_MIN</name></cpp:macro> <cpp:value>(-__LONG_LONG_MAX__-1LL)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ULLONG_MAX</name></cpp:macro> <cpp:value>(__LONG_LONG_MAX__*2ULL+1ULL)</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>





<cpp:if>#<cpp:directive>if</cpp:directive> <expr><ternary><condition><expr><call><name>defined</name><argument_list>(<argument><expr><name>__GNU_LIBRARY__</name></expr></argument>)</argument_list></call></expr> ?</condition><then> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__USE_GNU</name></expr></argument>)</argument_list></call> : <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__STRICT_ANSI__</name></expr></argument>)</argument_list></call></expr></then></ternary></expr></cpp:if>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>LONG_LONG_MIN</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>LONG_LONG_MAX</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>ULONG_LONG_MAX</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LONG_LONG_MAX</name></cpp:macro> <cpp:value>__LONG_LONG_MAX__</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LONG_LONG_MIN</name></cpp:macro> <cpp:value>(-__LONG_LONG_MAX__-1LL)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ULONG_LONG_MAX</name></cpp:macro> <cpp:value>(__LONG_LONG_MAX__*2ULL+1ULL)</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
