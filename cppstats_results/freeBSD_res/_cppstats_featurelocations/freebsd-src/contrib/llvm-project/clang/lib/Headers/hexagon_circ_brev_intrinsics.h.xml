<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/lib/Headers/hexagon_circ_brev_intrinsics.h">







<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_HEXAGON_CIRC_BREV_INTRINSICS_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_HEXAGON_CIRC_BREV_INTRINSICS_H_</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;hexagon_protos.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_circ_load_update_D</name><parameter_list>(<parameter><type><name>dest</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>incr</name></type></parameter>,<parameter><type><name>bufsize</name></type></parameter>,<parameter><type><name>K</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (int64_t *) HEXAGON_circ_ldd (ptr, &amp;(dest), ((((K)+1)&lt;&lt;24)|((bufsize)&lt;&lt;3)), ((incr)*8)); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_circ_load_update_W</name><parameter_list>(<parameter><type><name>dest</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>incr</name></type></parameter>,<parameter><type><name>bufsize</name></type></parameter>,<parameter><type><name>K</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (int *) HEXAGON_circ_ldw (ptr, &amp;(dest), (((K)&lt;&lt;24)|((bufsize)&lt;&lt;2)), ((incr)*4)); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_circ_load_update_H</name><parameter_list>(<parameter><type><name>dest</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>incr</name></type></parameter>,<parameter><type><name>bufsize</name></type></parameter>,<parameter><type><name>K</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (int16_t *) HEXAGON_circ_ldh (ptr, &amp;(dest), ((((K)-1)&lt;&lt;24)|((bufsize)&lt;&lt;1)), ((incr)*2)); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_circ_load_update_UH</name><parameter_list>(<parameter><type><name>dest</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>incr</name></type></parameter>,<parameter><type><name>bufsize</name></type></parameter>,<parameter><type><name>K</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (uint16_t *) HEXAGON_circ_lduh (ptr, &amp;(dest), ((((K)-1)&lt;&lt;24)|((bufsize)&lt;&lt;1)), ((incr)*2)); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_circ_load_update_B</name><parameter_list>(<parameter><type><name>dest</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>incr</name></type></parameter>,<parameter><type><name>bufsize</name></type></parameter>,<parameter><type><name>K</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (int8_t *) HEXAGON_circ_ldb (ptr, &amp;(dest), ((((K)-2)&lt;&lt;24)|(bufsize)), incr); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_circ_load_update_UB</name><parameter_list>(<parameter><type><name>dest</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>incr</name></type></parameter>,<parameter><type><name>bufsize</name></type></parameter>,<parameter><type><name>K</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (uint8_t *) HEXAGON_circ_ldub (ptr, &amp;(dest), ((((K)-2)&lt;&lt;24)|(bufsize)), incr); }</cpp:value></cpp:define>









<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_circ_store_update_D</name><parameter_list>(<parameter><type><name>src</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>incr</name></type></parameter>,<parameter><type><name>bufsize</name></type></parameter>,<parameter><type><name>K</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (int64_t *) HEXAGON_circ_std (ptr, src, ((((K)+1)&lt;&lt;24)|((bufsize)&lt;&lt;3)), ((incr)*8)); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_circ_store_update_W</name><parameter_list>(<parameter><type><name>src</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>incr</name></type></parameter>,<parameter><type><name>bufsize</name></type></parameter>,<parameter><type><name>K</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (int *) HEXAGON_circ_stw (ptr, src, (((K)&lt;&lt;24)|((bufsize)&lt;&lt;2)), ((incr)*4)); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_circ_store_update_HL</name><parameter_list>(<parameter><type><name>src</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>incr</name></type></parameter>,<parameter><type><name>bufsize</name></type></parameter>,<parameter><type><name>K</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (int16_t *) HEXAGON_circ_sth (ptr, src, ((((K)-1)&lt;&lt;24)|((bufsize)&lt;&lt;1)), ((incr)*2)); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_circ_store_update_HH</name><parameter_list>(<parameter><type><name>src</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>incr</name></type></parameter>,<parameter><type><name>bufsize</name></type></parameter>,<parameter><type><name>K</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (int16_t *) HEXAGON_circ_sthhi (ptr, src, ((((K)-1)&lt;&lt;24)|((bufsize)&lt;&lt;1)), ((incr)*2)); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_circ_store_update_B</name><parameter_list>(<parameter><type><name>src</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>incr</name></type></parameter>,<parameter><type><name>bufsize</name></type></parameter>,<parameter><type><name>K</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (int8_t *) HEXAGON_circ_stb (ptr, src, ((((K)-2)&lt;&lt;24)|(bufsize)), incr); }</cpp:value></cpp:define>










<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_bitrev_load_update_D</name><parameter_list>(<parameter><type><name>dest</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>log2bufsize</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (int64_t *) HEXAGON_brev_ldd (ptr, &amp;(dest), (1&lt;&lt;(16-((log2bufsize) + 3)))); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_bitrev_load_update_W</name><parameter_list>(<parameter><type><name>dest</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>log2bufsize</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (int *) HEXAGON_brev_ldw (ptr, &amp;(dest), (1&lt;&lt;(16-((log2bufsize) + 2)))); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_bitrev_load_update_H</name><parameter_list>(<parameter><type><name>dest</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>log2bufsize</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (int16_t *) HEXAGON_brev_ldh (ptr, &amp;(dest), (1&lt;&lt;(16-((log2bufsize) + 1)))); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_bitrev_load_update_UH</name><parameter_list>(<parameter><type><name>dest</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>log2bufsize</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (uint16_t *) HEXAGON_brev_lduh (ptr, &amp;(dest), (1&lt;&lt;(16-((log2bufsize) + 1)))); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_bitrev_load_update_B</name><parameter_list>(<parameter><type><name>dest</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>log2bufsize</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (int8_t *) HEXAGON_brev_ldb (ptr, &amp;(dest), (1&lt;&lt;(16-((log2bufsize))))); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_bitrev_load_update_UB</name><parameter_list>(<parameter><type><name>dest</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>log2bufsize</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (uint8_t *) HEXAGON_brev_ldub (ptr, &amp;(dest), (1&lt;&lt;(16-((log2bufsize))))); }</cpp:value></cpp:define>










<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_bitrev_store_update_D</name><parameter_list>(<parameter><type><name>src</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>log2bufsize</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (int64_t *) HEXAGON_brev_std (ptr, src, (1&lt;&lt;(16-((log2bufsize) + 3)))); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_bitrev_store_update_W</name><parameter_list>(<parameter><type><name>src</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>log2bufsize</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (int *) HEXAGON_brev_stw (ptr, src, (1&lt;&lt;(16-((log2bufsize) + 2)))); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_bitrev_store_update_HL</name><parameter_list>(<parameter><type><name>src</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>log2bufsize</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (int16_t *) HEXAGON_brev_sth (ptr, src, (1&lt;&lt;(16-((log2bufsize) + 1)))); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_bitrev_store_update_HH</name><parameter_list>(<parameter><type><name>src</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>log2bufsize</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (int16_t *) HEXAGON_brev_sthhi (ptr, src, (1&lt;&lt;(16-((log2bufsize) + 1)))); }</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_bitrev_store_update_B</name><parameter_list>(<parameter><type><name>src</name></type></parameter>,<parameter><type><name>ptr</name></type></parameter>,<parameter><type><name>log2bufsize</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>{ ptr = (int8_t *) HEXAGON_brev_stb (ptr, src, (1&lt;&lt;(16-((log2bufsize))))); }</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_circ_ldd</name></cpp:macro> <cpp:value>__builtin_circ_ldd</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_circ_ldw</name></cpp:macro> <cpp:value>__builtin_circ_ldw</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_circ_ldh</name></cpp:macro> <cpp:value>__builtin_circ_ldh</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_circ_lduh</name></cpp:macro> <cpp:value>__builtin_circ_lduh</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_circ_ldb</name></cpp:macro> <cpp:value>__builtin_circ_ldb</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_circ_ldub</name></cpp:macro> <cpp:value>__builtin_circ_ldub</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_circ_std</name></cpp:macro> <cpp:value>__builtin_circ_std</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_circ_stw</name></cpp:macro> <cpp:value>__builtin_circ_stw</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_circ_sth</name></cpp:macro> <cpp:value>__builtin_circ_sth</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_circ_sthhi</name></cpp:macro> <cpp:value>__builtin_circ_sthhi</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_circ_stb</name></cpp:macro> <cpp:value>__builtin_circ_stb</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_brev_ldd</name></cpp:macro> <cpp:value>__builtin_brev_ldd</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_brev_ldw</name></cpp:macro> <cpp:value>__builtin_brev_ldw</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_brev_ldh</name></cpp:macro> <cpp:value>__builtin_brev_ldh</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_brev_lduh</name></cpp:macro> <cpp:value>__builtin_brev_lduh</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_brev_ldb</name></cpp:macro> <cpp:value>__builtin_brev_ldb</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_brev_ldub</name></cpp:macro> <cpp:value>__builtin_brev_ldub</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_brev_std</name></cpp:macro> <cpp:value>__builtin_brev_std</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_brev_stw</name></cpp:macro> <cpp:value>__builtin_brev_stw</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_brev_sth</name></cpp:macro> <cpp:value>__builtin_brev_sth</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_brev_sthhi</name></cpp:macro> <cpp:value>__builtin_brev_sthhi</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HEXAGON_brev_stb</name></cpp:macro> <cpp:value>__builtin_brev_stb</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__HVX__</name></expr></argument>)</argument_list></call></expr></cpp:if>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_vmaskedstoreq_QAV</name></cpp:macro> <cpp:value>__BUILTIN_VECTOR_WRAP(__builtin_HEXAGON_V6_vmaskedstoreq)</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_vmaskedstorenq_QAV</name></cpp:macro> <cpp:value>__BUILTIN_VECTOR_WRAP(__builtin_HEXAGON_V6_vmaskedstorenq)</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_vmaskedstorentq_QAV</name></cpp:macro> <cpp:value>__BUILTIN_VECTOR_WRAP(__builtin_HEXAGON_V6_vmaskedstorentq)</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>Q6_vmaskedstorentnq_QAV</name></cpp:macro> <cpp:value>__BUILTIN_VECTOR_WRAP(__builtin_HEXAGON_V6_vmaskedstorentnq)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__NOT_DEFINED__</name></expr></argument>)</argument_list></call></expr></cpp:if>







<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
