<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/lib/Headers/avx512vlintrin.h">








<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__IMMINTRIN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:error>#<cpp:directive>error</cpp:directive> <cpp:literal>"Never use &lt;avx512vlintrin.h&gt; directly; include &lt;immintrin.h&gt; instead."</cpp:literal></cpp:error>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__AVX512VLINTRIN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__AVX512VLINTRIN_H</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEFAULT_FN_ATTRS128</name></cpp:macro> <cpp:value>__attribute__((__always_inline__, __nodebug__, __target__("avx512vl"), __min_vector_width__(128)))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEFAULT_FN_ATTRS256</name></cpp:macro> <cpp:value>__attribute__((__always_inline__, __nodebug__, __target__("avx512vl"), __min_vector_width__(256)))</cpp:value></cpp:define>

<typedef>typedef <type><name>short</name> <name>__v2hi</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(4)));</typedef>
<typedef>typedef <type><name>char</name> <name>__v4qi</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(4)));</typedef>
<typedef>typedef <type><name>char</name> <name>__v2qi</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(2)));</typedef>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmpeq_epi32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epi32_mask((A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmpeq_epi32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epi32_mask((k), (A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmpge_epi32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epi32_mask((A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmpge_epi32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epi32_mask((k), (A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmpgt_epi32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epi32_mask((A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmpgt_epi32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epi32_mask((k), (A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmple_epi32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epi32_mask((A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmple_epi32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epi32_mask((k), (A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmplt_epi32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epi32_mask((A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmplt_epi32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epi32_mask((k), (A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmpneq_epi32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epi32_mask((A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmpneq_epi32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epi32_mask((k), (A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmpeq_epi32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epi32_mask((A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmpeq_epi32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epi32_mask((k), (A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmpge_epi32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epi32_mask((A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmpge_epi32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epi32_mask((k), (A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmpgt_epi32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epi32_mask((A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmpgt_epi32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epi32_mask((k), (A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmple_epi32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epi32_mask((A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmple_epi32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epi32_mask((k), (A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmplt_epi32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epi32_mask((A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmplt_epi32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epi32_mask((k), (A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmpneq_epi32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epi32_mask((A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmpneq_epi32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epi32_mask((k), (A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmpeq_epu32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epu32_mask((A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmpeq_epu32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epu32_mask((k), (A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmpge_epu32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epu32_mask((A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmpge_epu32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epu32_mask((k), (A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmpgt_epu32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epu32_mask((A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmpgt_epu32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epu32_mask((k), (A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmple_epu32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epu32_mask((A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmple_epu32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epu32_mask((k), (A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmplt_epu32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epu32_mask((A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmplt_epu32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epu32_mask((k), (A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmpneq_epu32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epu32_mask((A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmpneq_epu32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epu32_mask((k), (A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmpeq_epu32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epu32_mask((A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmpeq_epu32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epu32_mask((k), (A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmpge_epu32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epu32_mask((A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmpge_epu32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epu32_mask((k), (A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmpgt_epu32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epu32_mask((A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmpgt_epu32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epu32_mask((k), (A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmple_epu32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epu32_mask((A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmple_epu32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epu32_mask((k), (A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmplt_epu32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epu32_mask((A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmplt_epu32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epu32_mask((k), (A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmpneq_epu32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epu32_mask((A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmpneq_epu32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epu32_mask((k), (A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmpeq_epi64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epi64_mask((A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmpeq_epi64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epi64_mask((k), (A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmpge_epi64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epi64_mask((A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmpge_epi64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epi64_mask((k), (A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmpgt_epi64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epi64_mask((A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmpgt_epi64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epi64_mask((k), (A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmple_epi64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epi64_mask((A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmple_epi64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epi64_mask((k), (A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmplt_epi64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epi64_mask((A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmplt_epi64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epi64_mask((k), (A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmpneq_epi64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epi64_mask((A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmpneq_epi64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epi64_mask((k), (A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmpeq_epi64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epi64_mask((A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmpeq_epi64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epi64_mask((k), (A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmpge_epi64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epi64_mask((A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmpge_epi64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epi64_mask((k), (A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmpgt_epi64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epi64_mask((A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmpgt_epi64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epi64_mask((k), (A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmple_epi64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epi64_mask((A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmple_epi64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epi64_mask((k), (A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmplt_epi64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epi64_mask((A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmplt_epi64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epi64_mask((k), (A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmpneq_epi64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epi64_mask((A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmpneq_epi64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epi64_mask((k), (A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmpeq_epu64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epu64_mask((A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmpeq_epu64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epu64_mask((k), (A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmpge_epu64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epu64_mask((A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmpge_epu64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epu64_mask((k), (A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmpgt_epu64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epu64_mask((A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmpgt_epu64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epu64_mask((k), (A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmple_epu64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epu64_mask((A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmple_epu64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epu64_mask((k), (A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmplt_epu64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epu64_mask((A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmplt_epu64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epu64_mask((k), (A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmpneq_epu64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_cmp_epu64_mask((A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmpneq_epu64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_mask_cmp_epu64_mask((k), (A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmpeq_epu64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epu64_mask((A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmpeq_epu64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epu64_mask((k), (A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmpge_epu64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epu64_mask((A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmpge_epu64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epu64_mask((k), (A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmpgt_epu64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epu64_mask((A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmpgt_epu64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epu64_mask((k), (A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmple_epu64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epu64_mask((A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmple_epu64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epu64_mask((k), (A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmplt_epu64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epu64_mask((A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmplt_epu64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epu64_mask((k), (A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmpneq_epu64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_cmp_epu64_mask((A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmpneq_epu64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_mask_cmp_epu64_mask((k), (A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_add_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_add_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_add_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_add_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_add_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_add_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_add_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_add_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_sub_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_sub_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_sub_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_sub_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_sub_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_sub_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_sub_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_sub_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_add_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_add_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_add_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_add_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_add_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_add_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_add_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_add_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_sub_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_sub_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_sub_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_sub_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_sub_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_sub_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_sub_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_sub_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_mul_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_mul_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_mul_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_mul_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_mul_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_mul_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_mul_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_mul_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_mul_epu32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_mul_epu32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_mul_epu32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_mul_epu32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_mul_epu32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_mul_epu32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_mul_epu32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_mul_epu32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_mullo_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_mullo_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_mullo_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_mullo_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_mullo_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_mullo_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_mullo_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_mullo_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_and_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8su</name><operator>)</operator><name>__a</name> <operator>&amp;</operator> <operator>(</operator><name>__v8su</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_and_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_and_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_and_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>_mm256_mask_and_epi32</name><argument_list>(<argument><expr><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_and_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v4su</name><operator>)</operator><name>__a</name> <operator>&amp;</operator> <operator>(</operator><name>__v4su</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_and_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_and_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_and_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>_mm_mask_and_epi32</name><argument_list>(<argument><expr><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_andnot_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>~</operator><operator>(</operator><name>__v8su</name><operator>)</operator><name>__A</name> <operator>&amp;</operator> <operator>(</operator><name>__v8su</name><operator>)</operator><name>__B</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_andnot_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_andnot_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_andnot_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>_mm256_mask_andnot_epi32</name><argument_list>(<argument><expr><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_andnot_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>~</operator><operator>(</operator><name>__v4su</name><operator>)</operator><name>__A</name> <operator>&amp;</operator> <operator>(</operator><name>__v4su</name><operator>)</operator><name>__B</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_andnot_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_andnot_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_andnot_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>_mm_mask_andnot_epi32</name><argument_list>(<argument><expr><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_or_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8su</name><operator>)</operator><name>__a</name> <operator>|</operator> <operator>(</operator><name>__v8su</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_or_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_or_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_or_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>_mm256_mask_or_epi32</name><argument_list>(<argument><expr><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_or_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v4su</name><operator>)</operator><name>__a</name> <operator>|</operator> <operator>(</operator><name>__v4su</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_or_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_or_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_or_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>_mm_mask_or_epi32</name><argument_list>(<argument><expr><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_xor_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8su</name><operator>)</operator><name>__a</name> <operator>^</operator> <operator>(</operator><name>__v8su</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_xor_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_xor_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_xor_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>_mm256_mask_xor_epi32</name><argument_list>(<argument><expr><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_xor_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v4su</name><operator>)</operator><name>__a</name> <operator>^</operator> <operator>(</operator><name>__v4su</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_xor_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_xor_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_xor_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>_mm_mask_xor_epi32</name><argument_list>(<argument><expr><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_and_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v4du</name><operator>)</operator><name>__a</name> <operator>&amp;</operator> <operator>(</operator><name>__v4du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_and_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_and_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_and_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>_mm256_mask_and_epi64</name><argument_list>(<argument><expr><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_and_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v2du</name><operator>)</operator><name>__a</name> <operator>&amp;</operator> <operator>(</operator><name>__v2du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_and_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_and_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_and_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>_mm_mask_and_epi64</name><argument_list>(<argument><expr><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_andnot_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>~</operator><operator>(</operator><name>__v4du</name><operator>)</operator><name>__A</name> <operator>&amp;</operator> <operator>(</operator><name>__v4du</name><operator>)</operator><name>__B</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_andnot_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_andnot_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_andnot_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>_mm256_mask_andnot_epi64</name><argument_list>(<argument><expr><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_andnot_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>~</operator><operator>(</operator><name>__v2du</name><operator>)</operator><name>__A</name> <operator>&amp;</operator> <operator>(</operator><name>__v2du</name><operator>)</operator><name>__B</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_andnot_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_andnot_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_andnot_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>_mm_mask_andnot_epi64</name><argument_list>(<argument><expr><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_or_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v4du</name><operator>)</operator><name>__a</name> <operator>|</operator> <operator>(</operator><name>__v4du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_or_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_or_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_or_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>_mm256_mask_or_epi64</name><argument_list>(<argument><expr><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_or_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v2du</name><operator>)</operator><name>__a</name> <operator>|</operator> <operator>(</operator><name>__v2du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_or_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_or_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_or_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>_mm_mask_or_epi64</name><argument_list>(<argument><expr><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_xor_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v4du</name><operator>)</operator><name>__a</name> <operator>^</operator> <operator>(</operator><name>__v4du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_xor_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_xor_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_xor_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>_mm256_mask_xor_epi64</name><argument_list>(<argument><expr><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_xor_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v2du</name><operator>)</operator><name>__a</name> <operator>^</operator> <operator>(</operator><name>__v2du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_xor_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>,
<parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_xor_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_xor_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>_mm_mask_xor_epi64</name><argument_list>(<argument><expr><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmp_epi32_mask</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpd128_mask((__v4si)(__m128i)(a), (__v4si)(__m128i)(b), (int)(p), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmp_epi32_mask</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpd128_mask((__v4si)(__m128i)(a), (__v4si)(__m128i)(b), (int)(p), (__mmask8)(m))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmp_epu32_mask</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_ucmpd128_mask((__v4si)(__m128i)(a), (__v4si)(__m128i)(b), (int)(p), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmp_epu32_mask</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_ucmpd128_mask((__v4si)(__m128i)(a), (__v4si)(__m128i)(b), (int)(p), (__mmask8)(m))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmp_epi32_mask</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpd256_mask((__v8si)(__m256i)(a), (__v8si)(__m256i)(b), (int)(p), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmp_epi32_mask</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpd256_mask((__v8si)(__m256i)(a), (__v8si)(__m256i)(b), (int)(p), (__mmask8)(m))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmp_epu32_mask</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_ucmpd256_mask((__v8si)(__m256i)(a), (__v8si)(__m256i)(b), (int)(p), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmp_epu32_mask</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_ucmpd256_mask((__v8si)(__m256i)(a), (__v8si)(__m256i)(b), (int)(p), (__mmask8)(m))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmp_epi64_mask</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpq128_mask((__v2di)(__m128i)(a), (__v2di)(__m128i)(b), (int)(p), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmp_epi64_mask</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpq128_mask((__v2di)(__m128i)(a), (__v2di)(__m128i)(b), (int)(p), (__mmask8)(m))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmp_epu64_mask</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_ucmpq128_mask((__v2di)(__m128i)(a), (__v2di)(__m128i)(b), (int)(p), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmp_epu64_mask</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_ucmpq128_mask((__v2di)(__m128i)(a), (__v2di)(__m128i)(b), (int)(p), (__mmask8)(m))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmp_epi64_mask</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpq256_mask((__v4di)(__m256i)(a), (__v4di)(__m256i)(b), (int)(p), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmp_epi64_mask</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpq256_mask((__v4di)(__m256i)(a), (__v4di)(__m256i)(b), (int)(p), (__mmask8)(m))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmp_epu64_mask</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_ucmpq256_mask((__v4di)(__m256i)(a), (__v4di)(__m256i)(b), (int)(p), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmp_epu64_mask</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_ucmpq256_mask((__v4di)(__m256i)(a), (__v4di)(__m256i)(b), (int)(p), (__mmask8)(m))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmp_ps_mask</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpps256_mask((__v8sf)(__m256)(a), (__v8sf)(__m256)(b), (int)(p), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmp_ps_mask</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpps256_mask((__v8sf)(__m256)(a), (__v8sf)(__m256)(b), (int)(p), (__mmask8)(m))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_cmp_pd_mask</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmppd256_mask((__v4df)(__m256d)(a), (__v4df)(__m256d)(b), (int)(p), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cmp_pd_mask</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmppd256_mask((__v4df)(__m256d)(a), (__v4df)(__m256d)(b), (int)(p), (__mmask8)(m))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmp_ps_mask</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpps128_mask((__v4sf)(__m128)(a), (__v4sf)(__m128)(b), (int)(p), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmp_ps_mask</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpps128_mask((__v4sf)(__m128)(a), (__v4sf)(__m128)(b), (int)(p), (__mmask8)(m))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmp_pd_mask</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmppd128_mask((__v2df)(__m128d)(a), (__v2df)(__m128d)(b), (int)(p), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmp_pd_mask</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmppd128_mask((__v2df)(__m128d)(a), (__v2df)(__m128d)(b), (int)(p), (__mmask8)(m))</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fmadd_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fmadd_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fmadd_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fmsub_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fmsub_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fnmadd_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fnmadd_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fnmsub_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_fmadd_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask3_fmadd_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_fmadd_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_fmsub_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_fmsub_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask3_fnmadd_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd256</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_fnmadd_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd256</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_fnmsub_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd256</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fmadd_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fmadd_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fmadd_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fmsub_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fmsub_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fnmadd_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fnmadd_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fnmsub_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_fmadd_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask3_fmadd_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_fmadd_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_fmsub_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_fmsub_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask3_fnmadd_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps256</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_fnmadd_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps256</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_fnmsub_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps256</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fmaddsub_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubpd</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fmaddsub_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubpd</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fmaddsub_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubpd</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fmsubadd_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubpd</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fmsubadd_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubpd</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_fmaddsub_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubpd256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask3_fmaddsub_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubpd256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_fmaddsub_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubpd256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_fmsubadd_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubpd256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_fmsubadd_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubpd256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fmaddsub_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubps</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fmaddsub_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubps</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fmaddsub_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubps</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fmsubadd_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubps</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fmsubadd_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubps</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_fmaddsub_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>,
<parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubps256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask3_fmaddsub_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubps256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_fmaddsub_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubps256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_fmsubadd_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubps256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_fmsubadd_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubps256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fmsub_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask3_fmsub_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fmsub_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask3_fmsub_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fmsubadd_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubpd</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask3_fmsubadd_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubpd256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fmsubadd_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubps</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask3_fmsubadd_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddsubps256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fnmadd_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_fnmadd_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fnmadd_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_fnmadd_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fnmsub_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fnmsub_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_fnmsub_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask3_fnmsub_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddpd256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fnmsub_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fnmsub_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_fnmsub_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask3_fnmsub_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><call><name>__builtin_ia32_vfmaddps256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_add_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_add_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_add_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_add_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_add_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_add_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_add_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_add_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_add_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_add_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_add_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_add_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_add_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_add_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_add_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_add_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_blend_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_selectd_128</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_blend_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_selectd_256</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_blend_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_blend_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_blend_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_blend_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_blend_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_selectq_128</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_blend_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_selectq_256</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_compress_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_compressdf128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_compress_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_compressdf128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator>
<call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_compress_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_compressdf256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_compress_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_compressdf256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator>
<call><name>_mm256_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_compress_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_compressdi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_compress_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_compressdi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_compress_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_compressdi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_compress_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_compressdi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator>
<call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_compress_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_compresssf128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_compress_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_compresssf128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator>
<call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_compress_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_compresssf256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_compress_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_compresssf256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator>
<call><name>_mm256_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_compress_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_compresssi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_compress_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_compresssi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_compress_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_compresssi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_compress_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_compresssi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator>
<call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_compressstoreu_pd</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_compressstoredf128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_compressstoreu_pd</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_compressstoredf256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_compressstoreu_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_compressstoredi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_compressstoreu_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_compressstoredi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_compressstoreu_ps</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_compressstoresf128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_compressstoreu_ps</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_compressstoresf256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_compressstoreu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_compressstoresi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_compressstoreu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_compressstoresi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepi32_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_cvtepi32_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepi32_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_cvtepi32_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepi32_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_cvtepi32_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepi32_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_cvtepi32_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepi32_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_cvtepi32_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepi32_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_cvtepi32_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepi32_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_cvtepi32_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepi32_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_cvtepi32_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtpd_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2dq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtpd_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2dq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtpd_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm256_cvtpd_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtpd_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm256_cvtpd_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtpd_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2ps_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtpd_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2ps_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator>
<call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtpd_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm256_cvtpd_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtpd_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm256_cvtpd_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtpd_epu32</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2udq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtpd_epu32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2udq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtpd_epu32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2udq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtpd_epu32</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2udq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtpd_epu32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2udq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtpd_epu32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2udq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtps_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_cvtps_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtps_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_cvtps_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtps_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_cvtps_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtps_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_cvtps_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtps_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_cvtps_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtps_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_cvtps_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtps_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_cvtps_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtps_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_cvtps_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtps_epu32</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2udq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtps_epu32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2udq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtps_epu32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2udq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtps_epu32</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2udq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator>
<call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtps_epu32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2udq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtps_epu32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2udq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator>
<call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvttpd_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2dq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvttpd_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2dq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvttpd_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm256_cvttpd_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvttpd_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm256_cvttpd_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvttpd_epu32</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2udq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvttpd_epu32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2udq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvttpd_epu32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2udq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvttpd_epu32</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2udq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvttpd_epu32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2udq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvttpd_epu32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2udq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvttps_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_cvttps_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvttps_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_cvttps_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvttps_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_cvttps_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvttps_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_cvttps_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvttps_epu32</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2udq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvttps_epu32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2udq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvttps_epu32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2udq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvttps_epu32</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2udq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator>
<call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvttps_epu32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2udq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvttps_epu32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2udq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator>
<call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtepu32_pd</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_convertvector</name><argument_list>(
<argument><expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4su</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4su</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__v2df</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepu32_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_cvtepu32_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepu32_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_cvtepu32_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepu32_pd</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4su</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v4df</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepu32_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_cvtepu32_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepu32_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_cvtepu32_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtepu32_ps</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4su</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v4sf</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepu32_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_cvtepu32_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepu32_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_cvtepu32_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepu32_ps</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8su</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v8sf</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepu32_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_cvtepu32_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepu32_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_cvtepu32_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_div_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_div_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_div_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_div_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_div_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_div_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_div_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_div_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_div_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_div_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_div_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_div_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_div_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_div_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_div_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_div_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_expand_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_expanddf128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_expand_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_expanddf128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator>
<call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_expand_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_expanddf256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_expand_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_expanddf256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator>
<call><name>_mm256_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_expand_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_expanddi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_expand_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_expanddi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_expand_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_expanddi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_expand_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_expanddi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator>
<call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_expandloadu_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_expandloaddf128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v2df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_expandloadu_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_expandloaddf128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v2df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator>
<call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_expandloadu_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_expandloaddf256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_expandloadu_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_expandloaddf256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator>
<call><name>_mm256_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_expandloadu_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_expandloaddi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v2di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_expandloadu_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_expandloaddi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v2di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_expandloadu_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,
<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_expandloaddi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_expandloadu_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_expandloaddi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator>
<call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_expandloadu_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_expandloadsf128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_expandloadu_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_expandloadsf128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator>
<call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_expandloadu_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_expandloadsf256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_expandloadu_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_expandloadsf256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator>
<call><name>_mm256_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_expandloadu_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_expandloadsi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_expandloadu_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_expandloadsi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_expandloadu_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,
<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_expandloadsi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_expandloadu_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_expandloadsi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator>
<call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_expand_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_expandsf128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_expand_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_expandsf128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator>
<call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_expand_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_expandsf256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_expand_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_expandsf256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator>
<call><name>_mm256_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_expand_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_expandsi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_expand_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_expandsi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_expand_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_expandsi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_expand_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_expandsi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator>
<call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_getexp_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_getexppd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator>
<call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_getexp_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_getexppd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_getexp_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_getexppd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator>
<call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_getexp_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_getexppd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator>
<call><name>_mm256_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_getexp_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_getexppd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_getexp_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_getexppd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator>
<call><name>_mm256_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_getexp_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_getexpps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator>
<call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_getexp_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_getexpps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_getexp_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_getexpps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator>
<call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_getexp_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_getexpps256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator>
<call><name>_mm256_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_getexp_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_getexpps256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_getexp_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_getexpps256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator>
<call><name>_mm256_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_max_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_max_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_max_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_max_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_max_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_max_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_max_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_max_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_max_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_max_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_max_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_max_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_max_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_max_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_max_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_max_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_min_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_min_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_min_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_min_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_min_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_min_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_min_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_min_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_min_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_min_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_min_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_min_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_min_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_min_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_min_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_min_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_mul_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_mul_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_mul_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_mul_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_mul_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_mul_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_mul_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_mul_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_mul_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_mul_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_mul_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_mul_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_mul_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_mul_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_mul_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_mul_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_abs_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_abs_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_abs_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_abs_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_abs_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_abs_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_abs_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_abs_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_abs_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_pabsq128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_abs_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_abs_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_abs_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_abs_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_abs_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pabsq256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_abs_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_abs_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_abs_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_abs_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_max_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_max_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_max_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_max_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_max_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_max_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_max_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_max_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_max_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_pmaxsq128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_max_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_max_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_max_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_max_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_max_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pmaxsq256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_max_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_max_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_max_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_max_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_max_epu32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_max_epu32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_max_epu32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_max_epu32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_max_epu32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_max_epu32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_max_epu32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_max_epu32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_max_epu64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_pmaxuq128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_max_epu64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_max_epu64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_max_epu64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_max_epu64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_max_epu64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pmaxuq256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_max_epu64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_max_epu64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_max_epu64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_max_epu64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_min_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_min_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_min_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_min_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_min_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_min_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_min_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_min_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_min_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_pminsq128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_min_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_min_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_min_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_min_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_min_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pminsq256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_min_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_min_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_min_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_min_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_min_epu32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_min_epu32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_min_epu32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_min_epu32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_min_epu32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_min_epu32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_min_epu32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_min_epu32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_min_epu64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_pminuq128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_min_epu64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_min_epu64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_min_epu64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_min_epu64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_min_epu64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pminuq256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_min_epu64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_min_epu64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_min_epu64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_min_epu64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_roundscale_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_rndscalepd_128_mask((__v2df)(__m128d)(A), (int)(imm), (__v2df)_mm_setzero_pd(), (__mmask8)-1)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_roundscale_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_rndscalepd_128_mask((__v2df)(__m128d)(A), (int)(imm), (__v2df)(__m128d)(W), (__mmask8)(U))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_roundscale_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_rndscalepd_128_mask((__v2df)(__m128d)(A), (int)(imm), (__v2df)_mm_setzero_pd(), (__mmask8)(U))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_roundscale_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_rndscalepd_256_mask((__v4df)(__m256d)(A), (int)(imm), (__v4df)_mm256_setzero_pd(), (__mmask8)-1)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_roundscale_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_rndscalepd_256_mask((__v4df)(__m256d)(A), (int)(imm), (__v4df)(__m256d)(W), (__mmask8)(U))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_roundscale_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_rndscalepd_256_mask((__v4df)(__m256d)(A), (int)(imm), (__v4df)_mm256_setzero_pd(), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_roundscale_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_rndscaleps_128_mask((__v4sf)(__m128)(A), (int)(imm), (__v4sf)_mm_setzero_ps(), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_roundscale_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_rndscaleps_128_mask((__v4sf)(__m128)(A), (int)(imm), (__v4sf)(__m128)(W), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_roundscale_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_rndscaleps_128_mask((__v4sf)(__m128)(A), (int)(imm), (__v4sf)_mm_setzero_ps(), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_roundscale_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_rndscaleps_256_mask((__v8sf)(__m256)(A), (int)(imm), (__v8sf)_mm256_setzero_ps(), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_roundscale_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_rndscaleps_256_mask((__v8sf)(__m256)(A), (int)(imm), (__v8sf)(__m256)(W), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_roundscale_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_rndscaleps_256_mask((__v8sf)(__m256)(A), (int)(imm), (__v8sf)_mm256_setzero_ps(), (__mmask8)(U))</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_scalef_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_scalefpd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator>
<call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_scalef_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>,
<parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_scalefpd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_scalef_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_scalefpd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator>
<call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_scalef_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_scalefpd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator>
<call><name>_mm256_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_scalef_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>,
<parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_scalefpd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_scalef_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_scalefpd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator>
<call><name>_mm256_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_scalef_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_scalefps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator>
<call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_scalef_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_scalefps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_scalef_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_scalefps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator>
<call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_scalef_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_scalefps256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator>
<call><name>_mm256_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_scalef_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>,
<parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_scalefps256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_scalef_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_scalefps256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator>
<call><name>_mm256_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_i64scatter_pd</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv2df((void *)(addr), (__mmask8)-1, (__v2di)(__m128i)(index), (__v2df)(__m128d)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_i64scatter_pd</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv2df((void *)(addr), (__mmask8)(mask), (__v2di)(__m128i)(index), (__v2df)(__m128d)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_i64scatter_epi64</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv2di((void *)(addr), (__mmask8)-1, (__v2di)(__m128i)(index), (__v2di)(__m128i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_i64scatter_epi64</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv2di((void *)(addr), (__mmask8)(mask), (__v2di)(__m128i)(index), (__v2di)(__m128i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_i64scatter_pd</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv4df((void *)(addr), (__mmask8)-1, (__v4di)(__m256i)(index), (__v4df)(__m256d)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_i64scatter_pd</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv4df((void *)(addr), (__mmask8)(mask), (__v4di)(__m256i)(index), (__v4df)(__m256d)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_i64scatter_epi64</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv4di((void *)(addr), (__mmask8)-1, (__v4di)(__m256i)(index), (__v4di)(__m256i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_i64scatter_epi64</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv4di((void *)(addr), (__mmask8)(mask), (__v4di)(__m256i)(index), (__v4di)(__m256i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_i64scatter_ps</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv4sf((void *)(addr), (__mmask8)-1, (__v2di)(__m128i)(index), (__v4sf)(__m128)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_i64scatter_ps</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv4sf((void *)(addr), (__mmask8)(mask), (__v2di)(__m128i)(index), (__v4sf)(__m128)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_i64scatter_epi32</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv4si((void *)(addr), (__mmask8)-1, (__v2di)(__m128i)(index), (__v4si)(__m128i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_i64scatter_epi32</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv4si((void *)(addr), (__mmask8)(mask), (__v2di)(__m128i)(index), (__v4si)(__m128i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_i64scatter_ps</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv8sf((void *)(addr), (__mmask8)-1, (__v4di)(__m256i)(index), (__v4sf)(__m128)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_i64scatter_ps</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv8sf((void *)(addr), (__mmask8)(mask), (__v4di)(__m256i)(index), (__v4sf)(__m128)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_i64scatter_epi32</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv8si((void *)(addr), (__mmask8)-1, (__v4di)(__m256i)(index), (__v4si)(__m128i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_i64scatter_epi32</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv8si((void *)(addr), (__mmask8)(mask), (__v4di)(__m256i)(index), (__v4si)(__m128i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_i32scatter_pd</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv2df((void *)(addr), (__mmask8)-1, (__v4si)(__m128i)(index), (__v2df)(__m128d)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_i32scatter_pd</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv2df((void *)(addr), (__mmask8)(mask), (__v4si)(__m128i)(index), (__v2df)(__m128d)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_i32scatter_epi64</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv2di((void *)(addr), (__mmask8)-1, (__v4si)(__m128i)(index), (__v2di)(__m128i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_i32scatter_epi64</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv2di((void *)(addr), (__mmask8)(mask), (__v4si)(__m128i)(index), (__v2di)(__m128i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_i32scatter_pd</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv4df((void *)(addr), (__mmask8)-1, (__v4si)(__m128i)(index), (__v4df)(__m256d)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_i32scatter_pd</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv4df((void *)(addr), (__mmask8)(mask), (__v4si)(__m128i)(index), (__v4df)(__m256d)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_i32scatter_epi64</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv4di((void *)(addr), (__mmask8)-1, (__v4si)(__m128i)(index), (__v4di)(__m256i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_i32scatter_epi64</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv4di((void *)(addr), (__mmask8)(mask), (__v4si)(__m128i)(index), (__v4di)(__m256i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_i32scatter_ps</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv4sf((void *)(addr), (__mmask8)-1, (__v4si)(__m128i)(index), (__v4sf)(__m128)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_i32scatter_ps</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv4sf((void *)(addr), (__mmask8)(mask), (__v4si)(__m128i)(index), (__v4sf)(__m128)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_i32scatter_epi32</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv4si((void *)(addr), (__mmask8)-1, (__v4si)(__m128i)(index), (__v4si)(__m128i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_i32scatter_epi32</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv4si((void *)(addr), (__mmask8)(mask), (__v4si)(__m128i)(index), (__v4si)(__m128i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_i32scatter_ps</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv8sf((void *)(addr), (__mmask8)-1, (__v8si)(__m256i)(index), (__v8sf)(__m256)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_i32scatter_ps</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv8sf((void *)(addr), (__mmask8)(mask), (__v8si)(__m256i)(index), (__v8sf)(__m256)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_i32scatter_epi32</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv8si((void *)(addr), (__mmask8)-1, (__v8si)(__m256i)(index), (__v8si)(__m256i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_i32scatter_epi32</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv8si((void *)(addr), (__mmask8)(mask), (__v8si)(__m256i)(index), (__v8si)(__m256i)(v1), (int)(scale))</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_sqrt_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_sqrt_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_sqrt_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_sqrt_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_sqrt_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_sqrt_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_sqrt_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_sqrt_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_sqrt_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_sqrt_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_sqrt_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_sqrt_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_sqrt_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_sqrt_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_sqrt_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_sqrt_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_sub_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_sub_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_sub_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_sub_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_sub_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_sub_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_sub_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_sub_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_sub_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_sub_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_sub_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_sub_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_sub_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_sub_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_sub_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_sub_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_permutex2var_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_vpermi2vard128</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__I</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_permutex2var_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__I</name></decl></parameter>,
<parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_permutex2var_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask2_permutex2var_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,
<parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_permutex2var_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__I</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_permutex2var_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__I</name></decl></parameter>,
<parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_permutex2var_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_permutex2var_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_vpermi2vard256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__I</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_permutex2var_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__I</name></decl></parameter>,
<parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_permutex2var_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask2_permutex2var_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,
<parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_permutex2var_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__I</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_permutex2var_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__I</name></decl></parameter>,
<parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_permutex2var_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_permutex2var_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_vpermi2varpd128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__I</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_permutex2var_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_permutex2var_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask2_permutex2var_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_permutex2var_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><operator>(</operator><name>__m128d</name><operator>)</operator><name>__I</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_permutex2var_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_permutex2var_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_permutex2var_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_vpermi2varpd256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__I</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_permutex2var_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__I</name></decl></parameter>,
<parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_permutex2var_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask2_permutex2var_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,
<parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_permutex2var_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><operator>(</operator><name>__m256d</name><operator>)</operator><name>__I</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_permutex2var_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__I</name></decl></parameter>,
<parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_permutex2var_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_permutex2var_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_vpermi2varps128</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__I</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_permutex2var_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_permutex2var_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask2_permutex2var_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_permutex2var_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><operator>(</operator><name>__m128</name><operator>)</operator><name>__I</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_permutex2var_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_permutex2var_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_permutex2var_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_vpermi2varps256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__I</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_permutex2var_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_permutex2var_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask2_permutex2var_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,
<parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_permutex2var_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><operator>(</operator><name>__m256</name><operator>)</operator><name>__I</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_permutex2var_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__I</name></decl></parameter>,
<parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_permutex2var_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_permutex2var_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_vpermi2varq128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__I</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_permutex2var_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__I</name></decl></parameter>,
<parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_permutex2var_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask2_permutex2var_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,
<parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_permutex2var_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__I</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_permutex2var_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__I</name></decl></parameter>,
<parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_permutex2var_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_permutex2var_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_vpermi2varq256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__I</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_permutex2var_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__I</name></decl></parameter>,
<parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_permutex2var_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask2_permutex2var_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,
<parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_permutex2var_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__I</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_permutex2var_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__I</name></decl></parameter>,
<parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_permutex2var_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepi8_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_cvtepi8_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepi8_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_cvtepi8_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepi8_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_cvtepi8_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepi8_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_cvtepi8_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepi8_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_cvtepi8_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepi8_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_cvtepi8_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepi8_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_cvtepi8_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepi8_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_cvtepi8_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepi32_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_cvtepi32_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepi32_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_cvtepi32_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepi32_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_cvtepi32_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepi32_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_cvtepi32_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepi16_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_cvtepi16_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepi16_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_cvtepi16_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepi16_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_cvtepi16_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepi16_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_cvtepi16_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepi16_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_cvtepi16_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepi16_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_cvtepi16_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepi16_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_cvtepi16_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepi16_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_cvtepi16_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepu8_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_cvtepu8_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepu8_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_cvtepu8_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepu8_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_cvtepu8_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepu8_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_cvtepu8_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepu8_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_cvtepu8_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepu8_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_cvtepu8_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepu8_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_cvtepu8_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepu8_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_cvtepu8_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepu32_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_cvtepu32_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepu32_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_cvtepu32_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepu32_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_cvtepu32_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepu32_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_cvtepu32_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepu16_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_cvtepu16_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepu16_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_cvtepu16_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepu16_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_cvtepu16_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepu16_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_cvtepu16_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepu16_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_cvtepu16_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepu16_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_cvtepu16_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepu16_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_cvtepu16_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepu16_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_cvtepu16_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_rol_epi32</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_prold128((__v4si)(__m128i)(a), (int)(b))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_rol_epi32</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>u</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_selectd_128((__mmask8)(u), (__v4si)_mm_rol_epi32((a), (b)), (__v4si)(__m128i)(w))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_rol_epi32</name><parameter_list>(<parameter><type><name>u</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_selectd_128((__mmask8)(u), (__v4si)_mm_rol_epi32((a), (b)), (__v4si)_mm_setzero_si128())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_rol_epi32</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_prold256((__v8si)(__m256i)(a), (int)(b))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_rol_epi32</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>u</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectd_256((__mmask8)(u), (__v8si)_mm256_rol_epi32((a), (b)), (__v8si)(__m256i)(w))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_rol_epi32</name><parameter_list>(<parameter><type><name>u</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectd_256((__mmask8)(u), (__v8si)_mm256_rol_epi32((a), (b)), (__v8si)_mm256_setzero_si256())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_rol_epi64</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_prolq128((__v2di)(__m128i)(a), (int)(b))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_rol_epi64</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>u</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_selectq_128((__mmask8)(u), (__v2di)_mm_rol_epi64((a), (b)), (__v2di)(__m128i)(w))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_rol_epi64</name><parameter_list>(<parameter><type><name>u</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_selectq_128((__mmask8)(u), (__v2di)_mm_rol_epi64((a), (b)), (__v2di)_mm_setzero_si128())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_rol_epi64</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_prolq256((__v4di)(__m256i)(a), (int)(b))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_rol_epi64</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>u</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectq_256((__mmask8)(u), (__v4di)_mm256_rol_epi64((a), (b)), (__v4di)(__m256i)(w))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_rol_epi64</name><parameter_list>(<parameter><type><name>u</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectq_256((__mmask8)(u), (__v4di)_mm256_rol_epi64((a), (b)), (__v4di)_mm256_setzero_si256())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_rolv_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_prolvd128</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_rolv_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_rolv_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_rolv_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_rolv_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_rolv_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_prolvd256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_rolv_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_rolv_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_rolv_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_rolv_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_rolv_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_prolvq128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_rolv_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_rolv_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_rolv_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_rolv_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_rolv_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_prolvq256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_rolv_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_rolv_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_rolv_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_rolv_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_ror_epi32</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_prord128((__v4si)(__m128i)(a), (int)(b))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_ror_epi32</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>u</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_selectd_128((__mmask8)(u), (__v4si)_mm_ror_epi32((a), (b)), (__v4si)(__m128i)(w))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_ror_epi32</name><parameter_list>(<parameter><type><name>u</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_selectd_128((__mmask8)(u), (__v4si)_mm_ror_epi32((a), (b)), (__v4si)_mm_setzero_si128())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_ror_epi32</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_prord256((__v8si)(__m256i)(a), (int)(b))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_ror_epi32</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>u</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectd_256((__mmask8)(u), (__v8si)_mm256_ror_epi32((a), (b)), (__v8si)(__m256i)(w))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_ror_epi32</name><parameter_list>(<parameter><type><name>u</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectd_256((__mmask8)(u), (__v8si)_mm256_ror_epi32((a), (b)), (__v8si)_mm256_setzero_si256())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_ror_epi64</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_prorq128((__v2di)(__m128i)(a), (int)(b))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_ror_epi64</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>u</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_selectq_128((__mmask8)(u), (__v2di)_mm_ror_epi64((a), (b)), (__v2di)(__m128i)(w))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_ror_epi64</name><parameter_list>(<parameter><type><name>u</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_selectq_128((__mmask8)(u), (__v2di)_mm_ror_epi64((a), (b)), (__v2di)_mm_setzero_si128())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_ror_epi64</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_prorq256((__v4di)(__m256i)(a), (int)(b))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_ror_epi64</name><parameter_list>(<parameter><type><name>w</name></type></parameter>, <parameter><type><name>u</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectq_256((__mmask8)(u), (__v4di)_mm256_ror_epi64((a), (b)), (__v4di)(__m256i)(w))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_ror_epi64</name><parameter_list>(<parameter><type><name>u</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectq_256((__mmask8)(u), (__v4di)_mm256_ror_epi64((a), (b)), (__v4di)_mm256_setzero_si256())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_sll_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_sll_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_sll_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_sll_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_sll_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_sll_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_sll_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_sll_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_slli_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_slli_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_slli_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_slli_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_slli_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_slli_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_slli_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_slli_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_sll_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_sll_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_sll_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_sll_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_sll_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_sll_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_sll_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_sll_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_slli_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_slli_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_slli_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_slli_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_slli_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_slli_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_slli_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_slli_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_rorv_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_prorvd128</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_rorv_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_rorv_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_rorv_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_rorv_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_rorv_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_prorvd256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_rorv_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_rorv_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_rorv_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_rorv_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_rorv_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_prorvq128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_rorv_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_rorv_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_rorv_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_rorv_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_rorv_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_prorvq256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_rorv_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_rorv_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_rorv_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_rorv_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_sllv_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_sllv_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_sllv_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_sllv_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_sllv_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_sllv_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_sllv_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_sllv_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_sllv_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_sllv_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_sllv_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_sllv_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_sllv_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_sllv_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_sllv_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_sllv_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_srlv_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_srlv_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_srlv_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_srlv_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_srlv_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_srlv_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_srlv_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_srlv_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_srlv_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_srlv_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_srlv_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_srlv_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_srlv_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_srlv_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_srlv_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_srlv_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_srl_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_srl_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_srl_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_srl_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_srl_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_srl_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_srl_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_srl_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_srli_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_srli_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_srli_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_srli_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_srli_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_srli_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_srli_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_srli_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_srl_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_srl_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_srl_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_srl_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_srl_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_srl_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_srl_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_srl_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_srli_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_srli_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_srli_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_srli_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_srli_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_srli_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_srli_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_srli_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_srav_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_srav_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_srav_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_srav_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_srav_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_srav_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_srav_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_srav_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_srav_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psravq128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_srav_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_srav_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_srav_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_srav_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_srav_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psravq256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_srav_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_srav_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_srav_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_srav_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_mov_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_selectd_128</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_mov_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_selectd_128</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_mov_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_selectd_256</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_mov_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_selectd_256</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_load_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>*</operator><operator>(</operator><specifier>const</specifier> <name>__m128i</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_load_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_movdqa32load128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_load_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_movdqa32load128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_load_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>*</operator><operator>(</operator><specifier>const</specifier> <name>__m256i</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_load_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_movdqa32load256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_load_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_movdqa32load256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator>
<call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_store_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>*</operator><operator>(</operator><name>__m128i</name> <operator>*</operator><operator>)</operator> <name>__P</name> <operator>=</operator> <name>__A</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_store_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_movdqa32store128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_store_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>*</operator><operator>(</operator><name>__m256i</name> <operator>*</operator><operator>)</operator> <name>__P</name> <operator>=</operator> <name>__A</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_store_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_movdqa32store256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_mov_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_selectq_128</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_mov_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_selectq_128</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_mov_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_selectq_256</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_mov_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_selectq_256</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_load_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>*</operator><operator>(</operator><specifier>const</specifier> <name>__m128i</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_load_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_movdqa64load128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v2di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_load_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_movdqa64load128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v2di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_load_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>*</operator><operator>(</operator><specifier>const</specifier> <name>__m256i</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_load_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_movdqa64load256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_load_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_movdqa64load256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator>
<call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator>
<name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_store_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>*</operator><operator>(</operator><name>__m128i</name> <operator>*</operator><operator>)</operator> <name>__P</name> <operator>=</operator> <name>__A</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_store_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_movdqa64store128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_store_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>*</operator><operator>(</operator><name>__m256i</name> <operator>*</operator><operator>)</operator> <name>__P</name> <operator>=</operator> <name>__A</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_store_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_movdqa64store256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_movedup_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_movedup_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_movedup_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_movedup_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_movedup_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_movedup_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_movedup_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_movedup_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_set1_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <call><name>_mm_set1_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_set1_epi32</name><parameter_list>( <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <call><name>_mm_set1_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_set1_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <call><name>_mm256_set1_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_set1_epi32</name><parameter_list>( <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <call><name>_mm256_set1_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_set1_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_set1_epi64x</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_set1_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_set1_epi64x</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_set1_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_set1_epi64x</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__O</name></expr></argument>)</argument_list></call></expr> ;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_set1_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_set1_epi64x</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_fixupimm_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_fixupimmpd128_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2di)(__m128i)(C), (int)(imm), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_fixupimm_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_fixupimmpd128_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2di)(__m128i)(C), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_fixupimm_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_fixupimmpd128_maskz((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2di)(__m128i)(C), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_fixupimm_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_fixupimmpd256_mask((__v4df)(__m256d)(A), (__v4df)(__m256d)(B), (__v4di)(__m256i)(C), (int)(imm), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_fixupimm_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_fixupimmpd256_mask((__v4df)(__m256d)(A), (__v4df)(__m256d)(B), (__v4di)(__m256i)(C), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_fixupimm_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_fixupimmpd256_maskz((__v4df)(__m256d)(A), (__v4df)(__m256d)(B), (__v4di)(__m256i)(C), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_fixupimm_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_fixupimmps128_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4si)(__m128i)(C), (int)(imm), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_fixupimm_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_fixupimmps128_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4si)(__m128i)(C), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_fixupimm_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_fixupimmps128_maskz((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4si)(__m128i)(C), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_fixupimm_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_fixupimmps256_mask((__v8sf)(__m256)(A), (__v8sf)(__m256)(B), (__v8si)(__m256i)(C), (int)(imm), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_fixupimm_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_fixupimmps256_mask((__v8sf)(__m256)(A), (__v8sf)(__m256)(B), (__v8si)(__m256i)(C), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_fixupimm_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_fixupimmps256_maskz((__v8sf)(__m256)(A), (__v8sf)(__m256)(B), (__v8si)(__m256i)(C), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_load_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_loadapd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v2df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_load_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_loadapd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v2df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator>
<call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_load_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_loadapd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_load_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_loadapd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator>
<call><name>_mm256_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_load_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_loadaps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_load_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_loadaps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator>
<call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_load_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_loadaps256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_load_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_loadaps256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator>
<call><name>_mm256_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_loadu_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__loadu_epi64</name> <block>{
<decl_stmt><decl><type><name>__m128i_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<return>return <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__loadu_epi64</name><operator>*</operator><operator>)</operator><name>__P</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_loadu_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_loaddqudi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v2di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_loadu_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_loaddqudi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v2di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_loadu_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__loadu_epi64</name> <block>{
<decl_stmt><decl><type><name>__m256i_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<return>return <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__loadu_epi64</name><operator>*</operator><operator>)</operator><name>__P</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_loadu_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_loaddqudi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_loadu_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_loaddqudi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator>
<call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_loadu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__loadu_epi32</name> <block>{
<decl_stmt><decl><type><name>__m128i_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<return>return <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__loadu_epi32</name><operator>*</operator><operator>)</operator><name>__P</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_loadu_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_loaddqusi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_loadu_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_loaddqusi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_loadu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__loadu_epi32</name> <block>{
<decl_stmt><decl><type><name>__m256i_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<return>return <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__loadu_epi32</name><operator>*</operator><operator>)</operator><name>__P</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_loadu_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_loaddqusi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_loadu_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_loaddqusi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator>
<call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_loadu_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_loadupd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v2df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_loadu_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_loadupd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v2df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator>
<call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_loadu_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_loadupd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_loadu_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_loadupd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator>
<call><name>_mm256_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_loadu_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_loadups128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_loadu_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_loadups128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator>
<call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_loadu_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_loadups256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_loadu_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_loadups256_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator>
<call><name>_mm256_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_store_pd</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storeapd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_store_pd</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storeapd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_store_ps</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storeaps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_store_ps</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storeaps256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_storeu_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__storeu_epi64</name> <block>{
<decl_stmt><decl><type><name>__m128i_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__storeu_epi64</name><operator>*</operator><operator>)</operator><name>__P</name><operator>)</operator><operator>-&gt;</operator><name>__v</name> <operator>=</operator> <name>__A</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_storeu_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storedqudi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_storeu_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__storeu_epi64</name> <block>{
<decl_stmt><decl><type><name>__m256i_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__storeu_epi64</name><operator>*</operator><operator>)</operator><name>__P</name><operator>)</operator><operator>-&gt;</operator><name>__v</name> <operator>=</operator> <name>__A</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_storeu_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storedqudi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_storeu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__storeu_epi32</name> <block>{
<decl_stmt><decl><type><name>__m128i_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__storeu_epi32</name><operator>*</operator><operator>)</operator><name>__P</name><operator>)</operator><operator>-&gt;</operator><name>__v</name> <operator>=</operator> <name>__A</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_storeu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storedqusi128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_storeu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__storeu_epi32</name> <block>{
<decl_stmt><decl><type><name>__m256i_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__storeu_epi32</name><operator>*</operator><operator>)</operator><name>__P</name><operator>)</operator><operator>-&gt;</operator><name>__v</name> <operator>=</operator> <name>__A</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_storeu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storedqusi256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_storeu_pd</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storeupd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_storeu_pd</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storeupd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_storeu_ps</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storeups128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_storeu_ps</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storeups256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_unpackhi_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_unpackhi_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_unpackhi_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_unpackhi_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_unpackhi_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_unpackhi_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_unpackhi_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_unpackhi_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_unpackhi_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_unpackhi_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_unpackhi_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_unpackhi_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_unpackhi_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_unpackhi_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_unpackhi_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_unpackhi_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_unpacklo_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_unpacklo_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_unpacklo_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_unpacklo_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_unpacklo_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_unpacklo_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_unpacklo_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_unpacklo_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_unpacklo_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_unpacklo_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_unpacklo_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_unpacklo_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_unpacklo_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_unpacklo_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_unpacklo_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_unpacklo_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_rcp14_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_rcp14pd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator>
<call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_rcp14_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_rcp14pd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_rcp14_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_rcp14pd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator>
<call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_rcp14_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_rcp14pd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator>
<call><name>_mm256_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_rcp14_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_rcp14pd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_rcp14_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_rcp14pd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator>
<call><name>_mm256_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_rcp14_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_rcp14ps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator>
<call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_rcp14_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_rcp14ps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_rcp14_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_rcp14ps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator>
<call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_rcp14_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_rcp14ps256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator>
<call><name>_mm256_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_rcp14_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_rcp14ps256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_rcp14_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_rcp14ps256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator>
<call><name>_mm256_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_permute_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_selectpd_128((__mmask8)(U), (__v2df)_mm_permute_pd((X), (C)), (__v2df)(__m128d)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_permute_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_selectpd_128((__mmask8)(U), (__v2df)_mm_permute_pd((X), (C)), (__v2df)_mm_setzero_pd())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_permute_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_selectpd_256((__mmask8)(U), (__v4df)_mm256_permute_pd((X), (C)), (__v4df)(__m256d)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_permute_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_selectpd_256((__mmask8)(U), (__v4df)_mm256_permute_pd((X), (C)), (__v4df)_mm256_setzero_pd())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_permute_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_selectps_128((__mmask8)(U), (__v4sf)_mm_permute_ps((X), (C)), (__v4sf)(__m128)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_permute_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_selectps_128((__mmask8)(U), (__v4sf)_mm_permute_ps((X), (C)), (__v4sf)_mm_setzero_ps())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_permute_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_selectps_256((__mmask8)(U), (__v8sf)_mm256_permute_ps((X), (C)), (__v8sf)(__m256)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_permute_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_selectps_256((__mmask8)(U), (__v8sf)_mm256_permute_ps((X), (C)), (__v8sf)_mm256_setzero_ps())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_permutevar_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_permutevar_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_permutevar_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_permutevar_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_permutevar_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_permutevar_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_permutevar_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_permutevar_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_permutevar_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_permutevar_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_permutevar_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_permutevar_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_permutevar_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_permutevar_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_permutevar_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_permutevar_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_test_epi32_mask</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_cmpneq_epi32_mask</name> <argument_list>(<argument><expr><call><name>_mm_and_si128</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_test_epi32_mask</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_mask_cmpneq_epi32_mask</name> <argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><call><name>_mm_and_si128</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_test_epi32_mask</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm256_cmpneq_epi32_mask</name> <argument_list>(<argument><expr><call><name>_mm256_and_si256</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_test_epi32_mask</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm256_mask_cmpneq_epi32_mask</name> <argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><call><name>_mm256_and_si256</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_test_epi64_mask</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_cmpneq_epi64_mask</name> <argument_list>(<argument><expr><call><name>_mm_and_si128</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_test_epi64_mask</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_mask_cmpneq_epi64_mask</name> <argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><call><name>_mm_and_si128</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_test_epi64_mask</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm256_cmpneq_epi64_mask</name> <argument_list>(<argument><expr><call><name>_mm256_and_si256</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_test_epi64_mask</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm256_mask_cmpneq_epi64_mask</name> <argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><call><name>_mm256_and_si256</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_testn_epi32_mask</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_cmpeq_epi32_mask</name> <argument_list>(<argument><expr><call><name>_mm_and_si128</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_testn_epi32_mask</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_mask_cmpeq_epi32_mask</name> <argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><call><name>_mm_and_si128</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_testn_epi32_mask</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm256_cmpeq_epi32_mask</name> <argument_list>(<argument><expr><call><name>_mm256_and_si256</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_testn_epi32_mask</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm256_mask_cmpeq_epi32_mask</name> <argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><call><name>_mm256_and_si256</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_testn_epi64_mask</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_cmpeq_epi64_mask</name> <argument_list>(<argument><expr><call><name>_mm_and_si128</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_testn_epi64_mask</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_mask_cmpeq_epi64_mask</name> <argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><call><name>_mm_and_si128</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_testn_epi64_mask</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm256_cmpeq_epi64_mask</name> <argument_list>(<argument><expr><call><name>_mm256_and_si256</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_testn_epi64_mask</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm256_mask_cmpeq_epi64_mask</name> <argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><call><name>_mm256_and_si256</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_unpackhi_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_unpackhi_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_unpackhi_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_unpackhi_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_unpackhi_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_unpackhi_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_unpackhi_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_unpackhi_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_unpackhi_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_unpackhi_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_unpackhi_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_unpackhi_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_unpackhi_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_unpackhi_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_unpackhi_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_unpackhi_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_unpacklo_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_unpacklo_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_unpacklo_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_unpacklo_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_unpacklo_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_unpacklo_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_unpacklo_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_unpacklo_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_unpacklo_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_unpacklo_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_unpacklo_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_unpacklo_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_unpacklo_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_unpacklo_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_unpacklo_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_unpacklo_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_sra_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_sra_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_sra_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_sra_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_sra_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_sra_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_sra_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_sra_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_srai_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_srai_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_srai_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_srai_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_srai_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_srai_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_srai_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_srai_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_sra_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psraq128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_sra_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>, \
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_sra_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>, \
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_sra_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>, \
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_sra_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>, \
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_sra_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psraq256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_sra_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>, \
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_sra_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>, \
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_sra_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>, \
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_sra_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>, \
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_srai_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__imm</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psraqi128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__imm</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_srai_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__imm</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>, \
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_srai_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__imm</name></expr></argument>)</argument_list></call></expr></argument>, \
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_srai_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__imm</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>, \
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_srai_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__imm</name></expr></argument>)</argument_list></call></expr></argument>, \
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_srai_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__imm</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psraqi256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__imm</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_srai_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__imm</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>, \
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_srai_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__imm</name></expr></argument>)</argument_list></call></expr></argument>, \
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_srai_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__imm</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>, \
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_srai_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__imm</name></expr></argument>)</argument_list></call></expr></argument>, \
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_ternarylogic_epi32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_pternlogd128_mask((__v4si)(__m128i)(A), (__v4si)(__m128i)(B), (__v4si)(__m128i)(C), (int)(imm), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_ternarylogic_epi32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_pternlogd128_mask((__v4si)(__m128i)(A), (__v4si)(__m128i)(B), (__v4si)(__m128i)(C), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_ternarylogic_epi32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_pternlogd128_maskz((__v4si)(__m128i)(A), (__v4si)(__m128i)(B), (__v4si)(__m128i)(C), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_ternarylogic_epi32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_pternlogd256_mask((__v8si)(__m256i)(A), (__v8si)(__m256i)(B), (__v8si)(__m256i)(C), (int)(imm), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_ternarylogic_epi32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_pternlogd256_mask((__v8si)(__m256i)(A), (__v8si)(__m256i)(B), (__v8si)(__m256i)(C), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_ternarylogic_epi32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_pternlogd256_maskz((__v8si)(__m256i)(A), (__v8si)(__m256i)(B), (__v8si)(__m256i)(C), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_ternarylogic_epi64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_pternlogq128_mask((__v2di)(__m128i)(A), (__v2di)(__m128i)(B), (__v2di)(__m128i)(C), (int)(imm), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_ternarylogic_epi64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_pternlogq128_mask((__v2di)(__m128i)(A), (__v2di)(__m128i)(B), (__v2di)(__m128i)(C), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_ternarylogic_epi64</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_pternlogq128_maskz((__v2di)(__m128i)(A), (__v2di)(__m128i)(B), (__v2di)(__m128i)(C), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_ternarylogic_epi64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_pternlogq256_mask((__v4di)(__m256i)(A), (__v4di)(__m256i)(B), (__v4di)(__m256i)(C), (int)(imm), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_ternarylogic_epi64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_pternlogq256_mask((__v4di)(__m256i)(A), (__v4di)(__m256i)(B), (__v4di)(__m256i)(C), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_ternarylogic_epi64</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_pternlogq256_maskz((__v4di)(__m256i)(A), (__v4di)(__m256i)(B), (__v4di)(__m256i)(C), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_shuffle_f32x4</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_shuf_f32x4_256((__v8sf)(__m256)(A), (__v8sf)(__m256)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_shuffle_f32x4</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_selectps_256((__mmask8)(U), (__v8sf)_mm256_shuffle_f32x4((A), (B), (imm)), (__v8sf)(__m256)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_shuffle_f32x4</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_selectps_256((__mmask8)(U), (__v8sf)_mm256_shuffle_f32x4((A), (B), (imm)), (__v8sf)_mm256_setzero_ps())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_shuffle_f64x2</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_shuf_f64x2_256((__v4df)(__m256d)(A), (__v4df)(__m256d)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_shuffle_f64x2</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_selectpd_256((__mmask8)(U), (__v4df)_mm256_shuffle_f64x2((A), (B), (imm)), (__v4df)(__m256d)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_shuffle_f64x2</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_selectpd_256((__mmask8)(U), (__v4df)_mm256_shuffle_f64x2((A), (B), (imm)), (__v4df)_mm256_setzero_pd())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_shuffle_i32x4</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_shuf_i32x4_256((__v8si)(__m256i)(A), (__v8si)(__m256i)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_shuffle_i32x4</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectd_256((__mmask8)(U), (__v8si)_mm256_shuffle_i32x4((A), (B), (imm)), (__v8si)(__m256i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_shuffle_i32x4</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectd_256((__mmask8)(U), (__v8si)_mm256_shuffle_i32x4((A), (B), (imm)), (__v8si)_mm256_setzero_si256())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_shuffle_i64x2</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_shuf_i64x2_256((__v4di)(__m256i)(A), (__v4di)(__m256i)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_shuffle_i64x2</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectq_256((__mmask8)(U), (__v4di)_mm256_shuffle_i64x2((A), (B), (imm)), (__v4di)(__m256i)(W))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_shuffle_i64x2</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectq_256((__mmask8)(U), (__v4di)_mm256_shuffle_i64x2((A), (B), (imm)), (__v4di)_mm256_setzero_si256())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_shuffle_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_selectpd_128((__mmask8)(U), (__v2df)_mm_shuffle_pd((A), (B), (M)), (__v2df)(__m128d)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_shuffle_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_selectpd_128((__mmask8)(U), (__v2df)_mm_shuffle_pd((A), (B), (M)), (__v2df)_mm_setzero_pd())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_shuffle_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_selectpd_256((__mmask8)(U), (__v4df)_mm256_shuffle_pd((A), (B), (M)), (__v4df)(__m256d)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_shuffle_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_selectpd_256((__mmask8)(U), (__v4df)_mm256_shuffle_pd((A), (B), (M)), (__v4df)_mm256_setzero_pd())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_shuffle_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_selectps_128((__mmask8)(U), (__v4sf)_mm_shuffle_ps((A), (B), (M)), (__v4sf)(__m128)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_shuffle_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_selectps_128((__mmask8)(U), (__v4sf)_mm_shuffle_ps((A), (B), (M)), (__v4sf)_mm_setzero_ps())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_shuffle_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_selectps_256((__mmask8)(U), (__v8sf)_mm256_shuffle_ps((A), (B), (M)), (__v8sf)(__m256)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_shuffle_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_selectps_256((__mmask8)(U), (__v8sf)_mm256_shuffle_ps((A), (B), (M)), (__v8sf)_mm256_setzero_ps())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_rsqrt14_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14pd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator>
<call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_rsqrt14_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14pd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_rsqrt14_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14pd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator>
<call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_rsqrt14_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14pd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator>
<call><name>_mm256_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_rsqrt14_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14pd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_rsqrt14_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14pd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator>
<call><name>_mm256_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_rsqrt14_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14ps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator>
<call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_rsqrt14_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14ps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_rsqrt14_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14ps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator>
<call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_rsqrt14_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14ps256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator>
<call><name>_mm256_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_rsqrt14_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14ps256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_rsqrt14_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14ps256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator>
<call><name>_mm256_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_broadcast_f32x4</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_broadcast_f32x4</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_broadcast_f32x4</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_broadcast_f32x4</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_broadcast_f32x4</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_broadcast_i32x4</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_broadcast_i32x4</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_broadcast_i32x4</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_broadcast_i32x4</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_broadcast_i32x4</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_broadcastsd_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <call><name>_mm256_broadcastsd_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_broadcastsd_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <call><name>_mm256_broadcastsd_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_broadcastss_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <call><name>_mm_broadcastss_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_broadcastss_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <call><name>_mm_broadcastss_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_broadcastss_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <call><name>_mm256_broadcastss_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_broadcastss_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <call><name>_mm256_broadcastss_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_broadcastd_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <call><name>_mm_broadcastd_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_broadcastd_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <call><name>_mm_broadcastd_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_broadcastd_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <call><name>_mm256_broadcastd_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_broadcastd_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <call><name>_mm256_broadcastd_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_broadcastq_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_broadcastq_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_broadcastq_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_broadcastq_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_broadcastq_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_broadcastq_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_broadcastq_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_broadcastq_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtsepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsdb128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><call><name>_mm_undefined_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtsepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsdb128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtsepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsdb128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtsepi32_storeu_epi8</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovsdb128mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtsepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsdb256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><call><name>_mm_undefined_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtsepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsdb256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtsepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsdb256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtsepi32_storeu_epi8</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovsdb256mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtsepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsdw128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtsepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsdw128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__O</name></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtsepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsdw128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtsepi32_storeu_epi16</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovsdw128mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtsepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsdw256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><call><name>_mm_undefined_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtsepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsdw256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtsepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsdw256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtsepi32_storeu_epi16</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovsdw256mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtsepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqb128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><call><name>_mm_undefined_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtsepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqb128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtsepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqb128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtsepi64_storeu_epi8</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovsqb128mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtsepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqb256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><call><name>_mm_undefined_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtsepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqb256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtsepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqb256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtsepi64_storeu_epi8</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovsqb256mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtsepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_undefined_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtsepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtsepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtsepi64_storeu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovsqd128mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtsepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_undefined_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtsepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__O</name></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtsepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtsepi64_storeu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovsqd256mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtsepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqw128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><call><name>_mm_undefined_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtsepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqw128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtsepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqw128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtsepi64_storeu_epi16</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovsqw128mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtsepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqw256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><call><name>_mm_undefined_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtsepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqw256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtsepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqw256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtsepi64_storeu_epi16</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovsqw256mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtusepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusdb128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><call><name>_mm_undefined_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtusepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusdb128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <name>__O</name></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtusepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusdb128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtusepi32_storeu_epi8</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovusdb128mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtusepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusdb256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><call><name>_mm_undefined_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtusepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusdb256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <name>__O</name></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtusepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusdb256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtusepi32_storeu_epi8</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovusdb256mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name><operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtusepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusdw128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><call><name>_mm_undefined_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtusepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusdw128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtusepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusdw128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtusepi32_storeu_epi16</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovusdw128mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtusepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusdw256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <call><name>_mm_undefined_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtusepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusdw256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtusepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusdw256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtusepi32_storeu_epi16</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovusdw256mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtusepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqb128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><call><name>_mm_undefined_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtusepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqb128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <name>__O</name></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtusepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqb128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtusepi64_storeu_epi8</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovusqb128mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtusepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqb256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><call><name>_mm_undefined_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtusepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqb256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <name>__O</name></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtusepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqb256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtusepi64_storeu_epi8</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovusqb256mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtusepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_undefined_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtusepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtusepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtusepi64_storeu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovusqd128mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtusepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_undefined_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtusepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtusepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqd256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtusepi64_storeu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovusqd256mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtusepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqw128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><call><name>_mm_undefined_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtusepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqw128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtusepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqw128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtusepi64_storeu_epi16</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovusqw128mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtusepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqw256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><call><name>_mm_undefined_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtusepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqw256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtusepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqw256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtusepi64_storeu_epi16</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovusqw256mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><macro><name>__builtin_shufflevector</name><argument_list>(
<argument>__builtin_convertvector((__v4si)__A, __v4qi)</argument>, <argument>(__v4qi){<literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal>}</argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">1</literal></argument>,
<argument><literal type="number">2</literal></argument>, <argument><literal type="number">3</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">5</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument><literal type="number">7</literal></argument>, <argument><literal type="number">7</literal></argument>, <argument><literal type="number">7</literal></argument>, <argument><literal type="number">7</literal></argument>, <argument><literal type="number">7</literal></argument>, <argument><literal type="number">7</literal></argument>, <argument><literal type="number">7</literal></argument>, <argument><literal type="number">7</literal></argument>, <argument><literal type="number">7</literal></argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovdb128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovdb128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator>
<call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepi32_storeu_epi8</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovdb128mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><macro><name>__builtin_shufflevector</name><argument_list>(
<argument>__builtin_convertvector((__v8si)__A, __v8qi)</argument>,
<argument>(__v8qi){<literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal>}</argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument><literal type="number">2</literal></argument>, <argument><literal type="number">3</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">5</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument><literal type="number">7</literal></argument>, <argument><literal type="number">8</literal></argument>, <argument><literal type="number">9</literal></argument>, <argument><literal type="number">10</literal></argument>, <argument><literal type="number">11</literal></argument>,
<argument><literal type="number">12</literal></argument>, <argument><literal type="number">13</literal></argument>, <argument><literal type="number">14</literal></argument>, <argument><literal type="number">15</literal></argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovdb256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovdb256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepi32_storeu_epi8</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovdb256mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><macro><name>__builtin_shufflevector</name><argument_list>(
<argument>__builtin_convertvector((__v4si)__A, __v4hi)</argument>, <argument>(__v4hi){<literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal>}</argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">1</literal></argument>,
<argument><literal type="number">2</literal></argument>, <argument><literal type="number">3</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">5</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument><literal type="number">7</literal></argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovdw128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovdw128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepi32_storeu_epi16</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovdw128mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v8hi</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovdw256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovdw256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepi32_storeu_epi16</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovdw256mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><macro><name>__builtin_shufflevector</name><argument_list>(
<argument>__builtin_convertvector((__v2di)__A, __v2qi)</argument>, <argument>(__v2qi){<literal type="number">0</literal></argument>, <argument><literal type="number">0</literal>}</argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument><literal type="number">2</literal></argument>, <argument><literal type="number">3</literal></argument>,
<argument><literal type="number">3</literal></argument>, <argument><literal type="number">3</literal></argument>, <argument><literal type="number">3</literal></argument>, <argument><literal type="number">3</literal></argument>, <argument><literal type="number">3</literal></argument>, <argument><literal type="number">3</literal></argument>, <argument><literal type="number">3</literal></argument>, <argument><literal type="number">3</literal></argument>, <argument><literal type="number">3</literal></argument>, <argument><literal type="number">3</literal></argument>, <argument><literal type="number">3</literal></argument>, <argument><literal type="number">3</literal></argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovqb128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovqb128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepi64_storeu_epi8</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovqb128mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><macro><name>__builtin_shufflevector</name><argument_list>(
<argument>__builtin_convertvector((__v4di)__A, __v4qi)</argument>, <argument>(__v4qi){<literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal>}</argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">1</literal></argument>,
<argument><literal type="number">2</literal></argument>, <argument><literal type="number">3</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">5</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument><literal type="number">7</literal></argument>, <argument><literal type="number">7</literal></argument>, <argument><literal type="number">7</literal></argument>, <argument><literal type="number">7</literal></argument>, <argument><literal type="number">7</literal></argument>, <argument><literal type="number">7</literal></argument>, <argument><literal type="number">7</literal></argument>, <argument><literal type="number">7</literal></argument>, <argument><literal type="number">7</literal></argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovqb256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovqb256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepi64_storeu_epi8</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovqb256mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><macro><name>__builtin_shufflevector</name><argument_list>(
<argument>__builtin_convertvector((__v2di)__A, __v2si)</argument>, <argument>(__v2si){<literal type="number">0</literal></argument>, <argument><literal type="number">0</literal>}</argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument><literal type="number">2</literal></argument>, <argument><literal type="number">3</literal></argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovqd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovqd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepi64_storeu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovqd128mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v4si</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm256_cvtepi64_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm256_cvtepi64_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepi64_storeu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovqd256mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><macro><name>__builtin_shufflevector</name><argument_list>(
<argument>__builtin_convertvector((__v2di)__A, __v2hi)</argument>, <argument>(__v2hi){<literal type="number">0</literal></argument>, <argument><literal type="number">0</literal>}</argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">1</literal></argument>, <argument><literal type="number">2</literal></argument>, <argument><literal type="number">3</literal></argument>,
<argument><literal type="number">3</literal></argument>, <argument><literal type="number">3</literal></argument>, <argument><literal type="number">3</literal></argument>, <argument><literal type="number">3</literal></argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovqw128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__O</name></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovqw128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepi64_storeu_epi16</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovqw128mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><macro><name>__builtin_shufflevector</name><argument_list>(
<argument>__builtin_convertvector((__v4di)__A, __v4hi)</argument>, <argument>(__v4hi){<literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">0</literal>}</argument>, <argument><literal type="number">0</literal></argument>, <argument><literal type="number">1</literal></argument>,
<argument><literal type="number">2</literal></argument>, <argument><literal type="number">3</literal></argument>, <argument><literal type="number">4</literal></argument>, <argument><literal type="number">5</literal></argument>, <argument><literal type="number">6</literal></argument>, <argument><literal type="number">7</literal></argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovqw256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovqw256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepi64_storeu_epi16</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovqw256mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_extractf32x4_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_extractf32x4_256_mask((__v8sf)(__m256)(A), (int)(imm), (__v4sf)_mm_undefined_ps(), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_extractf32x4_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_extractf32x4_256_mask((__v8sf)(__m256)(A), (int)(imm), (__v4sf)(__m128)(W), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_extractf32x4_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_extractf32x4_256_mask((__v8sf)(__m256)(A), (int)(imm), (__v4sf)_mm_setzero_ps(), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_extracti32x4_epi32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_extracti32x4_256_mask((__v8si)(__m256i)(A), (int)(imm), (__v4si)_mm_undefined_si128(), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_extracti32x4_epi32</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_extracti32x4_256_mask((__v8si)(__m256i)(A), (int)(imm), (__v4si)(__m128i)(W), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_extracti32x4_epi32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_extracti32x4_256_mask((__v8si)(__m256i)(A), (int)(imm), (__v4si)_mm_setzero_si128(), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_insertf32x4</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_insertf32x4_256((__v8sf)(__m256)(A), (__v4sf)(__m128)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_insertf32x4</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_selectps_256((__mmask8)(U), (__v8sf)_mm256_insertf32x4((A), (B), (imm)), (__v8sf)(__m256)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_insertf32x4</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_selectps_256((__mmask8)(U), (__v8sf)_mm256_insertf32x4((A), (B), (imm)), (__v8sf)_mm256_setzero_ps())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_inserti32x4</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_inserti32x4_256((__v8si)(__m256i)(A), (__v4si)(__m128i)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_inserti32x4</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectd_256((__mmask8)(U), (__v8si)_mm256_inserti32x4((A), (B), (imm)), (__v8si)(__m256i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_inserti32x4</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectd_256((__mmask8)(U), (__v8si)_mm256_inserti32x4((A), (B), (imm)), (__v8si)_mm256_setzero_si256())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_getmant_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_getmantpd128_mask((__v2df)(__m128d)(A), (int)(((C)&lt;&lt;2) | (B)), (__v2df)_mm_setzero_pd(), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_getmant_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_getmantpd128_mask((__v2df)(__m128d)(A), (int)(((C)&lt;&lt;2) | (B)), (__v2df)(__m128d)(W), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_getmant_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_getmantpd128_mask((__v2df)(__m128d)(A), (int)(((C)&lt;&lt;2) | (B)), (__v2df)_mm_setzero_pd(), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_getmant_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_getmantpd256_mask((__v4df)(__m256d)(A), (int)(((C)&lt;&lt;2) | (B)), (__v4df)_mm256_setzero_pd(), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_getmant_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_getmantpd256_mask((__v4df)(__m256d)(A), (int)(((C)&lt;&lt;2) | (B)), (__v4df)(__m256d)(W), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_getmant_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_getmantpd256_mask((__v4df)(__m256d)(A), (int)(((C)&lt;&lt;2) | (B)), (__v4df)_mm256_setzero_pd(), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_getmant_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_getmantps128_mask((__v4sf)(__m128)(A), (int)(((C)&lt;&lt;2) | (B)), (__v4sf)_mm_setzero_ps(), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_getmant_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_getmantps128_mask((__v4sf)(__m128)(A), (int)(((C)&lt;&lt;2) | (B)), (__v4sf)(__m128)(W), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_getmant_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_getmantps128_mask((__v4sf)(__m128)(A), (int)(((C)&lt;&lt;2) | (B)), (__v4sf)_mm_setzero_ps(), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_getmant_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_getmantps256_mask((__v8sf)(__m256)(A), (int)(((C)&lt;&lt;2) | (B)), (__v8sf)_mm256_setzero_ps(), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_getmant_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_getmantps256_mask((__v8sf)(__m256)(A), (int)(((C)&lt;&lt;2) | (B)), (__v8sf)(__m256)(W), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_getmant_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_getmantps256_mask((__v8sf)(__m256)(A), (int)(((C)&lt;&lt;2) | (B)), (__v8sf)_mm256_setzero_ps(), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mmask_i64gather_pd</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_gather3div2df((__v2df)(__m128d)(v1_old), (void const *)(addr), (__v2di)(__m128i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mmask_i64gather_epi64</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_gather3div2di((__v2di)(__m128i)(v1_old), (void const *)(addr), (__v2di)(__m128i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mmask_i64gather_pd</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_gather3div4df((__v4df)(__m256d)(v1_old), (void const *)(addr), (__v4di)(__m256i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mmask_i64gather_epi64</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_gather3div4di((__v4di)(__m256i)(v1_old), (void const *)(addr), (__v4di)(__m256i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mmask_i64gather_ps</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_gather3div4sf((__v4sf)(__m128)(v1_old), (void const *)(addr), (__v2di)(__m128i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mmask_i64gather_epi32</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_gather3div4si((__v4si)(__m128i)(v1_old), (void const *)(addr), (__v2di)(__m128i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mmask_i64gather_ps</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_gather3div8sf((__v4sf)(__m128)(v1_old), (void const *)(addr), (__v4di)(__m256i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mmask_i64gather_epi32</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_gather3div8si((__v4si)(__m128i)(v1_old), (void const *)(addr), (__v4di)(__m256i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mmask_i32gather_pd</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_gather3siv2df((__v2df)(__m128d)(v1_old), (void const *)(addr), (__v4si)(__m128i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mmask_i32gather_epi64</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_gather3siv2di((__v2di)(__m128i)(v1_old), (void const *)(addr), (__v4si)(__m128i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mmask_i32gather_pd</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_gather3siv4df((__v4df)(__m256d)(v1_old), (void const *)(addr), (__v4si)(__m128i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mmask_i32gather_epi64</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_gather3siv4di((__v4di)(__m256i)(v1_old), (void const *)(addr), (__v4si)(__m128i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mmask_i32gather_ps</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_gather3siv4sf((__v4sf)(__m128)(v1_old), (void const *)(addr), (__v4si)(__m128i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mmask_i32gather_epi32</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_gather3siv4si((__v4si)(__m128i)(v1_old), (void const *)(addr), (__v4si)(__m128i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mmask_i32gather_ps</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_gather3siv8sf((__v8sf)(__m256)(v1_old), (void const *)(addr), (__v8si)(__m256i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mmask_i32gather_epi32</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_gather3siv8si((__v8si)(__m256i)(v1_old), (void const *)(addr), (__v8si)(__m256i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_permutex_pd</name><parameter_list>(<parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_permdf256((__v4df)(__m256d)(X), (int)(C))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_permutex_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_selectpd_256((__mmask8)(U), (__v4df)_mm256_permutex_pd((X), (C)), (__v4df)(__m256d)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_permutex_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_selectpd_256((__mmask8)(U), (__v4df)_mm256_permutex_pd((X), (C)), (__v4df)_mm256_setzero_pd())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_permutex_epi64</name><parameter_list>(<parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_permdi256((__v4di)(__m256i)(X), (int)(C))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_permutex_epi64</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectq_256((__mmask8)(U), (__v4di)_mm256_permutex_epi64((X), (C)), (__v4di)(__m256i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_permutex_epi64</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectq_256((__mmask8)(U), (__v4di)_mm256_permutex_epi64((X), (C)), (__v4di)_mm256_setzero_si256())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_permutexvar_pd</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_permvardf256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__Y</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__X</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_permutexvar_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>,
<parameter><decl><type><name>__m256d</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_permutexvar_pd</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_permutexvar_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_permutexvar_pd</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_permutexvar_epi64</name> <parameter_list>( <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_permvardi256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__Y</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__X</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_permutexvar_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_permutexvar_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_permutexvar_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>,
<parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_permutexvar_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_permutexvar_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_permutevar8x32_ps((B), (A))</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_permutexvar_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_permutexvar_ps</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_permutexvar_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_permutexvar_ps</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_permutexvar_epi32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_permutevar8x32_epi32((B), (A))</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_permutexvar_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>,
<parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_permutexvar_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_permutexvar_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_permutexvar_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_alignr_epi32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_alignd128((__v4si)(__m128i)(A), (__v4si)(__m128i)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_alignr_epi32</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_selectd_128((__mmask8)(U), (__v4si)_mm_alignr_epi32((A), (B), (imm)), (__v4si)(__m128i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_alignr_epi32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_selectd_128((__mmask8)(U), (__v4si)_mm_alignr_epi32((A), (B), (imm)), (__v4si)_mm_setzero_si128())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_alignr_epi32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_alignd256((__v8si)(__m256i)(A), (__v8si)(__m256i)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_alignr_epi32</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectd_256((__mmask8)(U), (__v8si)_mm256_alignr_epi32((A), (B), (imm)), (__v8si)(__m256i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_alignr_epi32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectd_256((__mmask8)(U), (__v8si)_mm256_alignr_epi32((A), (B), (imm)), (__v8si)_mm256_setzero_si256())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_alignr_epi64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_alignq128((__v2di)(__m128i)(A), (__v2di)(__m128i)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_alignr_epi64</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_selectq_128((__mmask8)(U), (__v2di)_mm_alignr_epi64((A), (B), (imm)), (__v2di)(__m128i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_alignr_epi64</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_selectq_128((__mmask8)(U), (__v2di)_mm_alignr_epi64((A), (B), (imm)), (__v2di)_mm_setzero_si128())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_alignr_epi64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_alignq256((__v4di)(__m256i)(A), (__v4di)(__m256i)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_alignr_epi64</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectq_256((__mmask8)(U), (__v4di)_mm256_alignr_epi64((A), (B), (imm)), (__v4di)(__m256i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_alignr_epi64</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectq_256((__mmask8)(U), (__v4di)_mm256_alignr_epi64((A), (B), (imm)), (__v4di)_mm256_setzero_si256())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_movehdup_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_movehdup_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_movehdup_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_movehdup_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_movehdup_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_movehdup_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_movehdup_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_movehdup_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_moveldup_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_moveldup_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_moveldup_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_moveldup_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_moveldup_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_moveldup_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_moveldup_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_moveldup_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_shuffle_epi32</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectd_256((__mmask8)(U), (__v8si)_mm256_shuffle_epi32((A), (I)), (__v8si)(__m256i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_shuffle_epi32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectd_256((__mmask8)(U), (__v8si)_mm256_shuffle_epi32((A), (I)), (__v8si)_mm256_setzero_si256())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_shuffle_epi32</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_selectd_128((__mmask8)(U), (__v4si)_mm_shuffle_epi32((A), (I)), (__v4si)(__m128i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_shuffle_epi32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_selectd_128((__mmask8)(U), (__v4si)_mm_shuffle_epi32((A), (I)), (__v4si)_mm_setzero_si128())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_mov_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_mov_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_128</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_mov_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_mov_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_256</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <call><name>_mm256_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_mov_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_mov_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_selectps_128</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_mov_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_mov_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_selectps_256</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <call><name>_mm256_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtph_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_vcvtph2ps_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtph_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_vcvtph2ps_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator>
<call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtph_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_vcvtph2ps256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtph_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_vcvtph2ps256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator>
<call><name>_mm256_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cvt_roundps_ph</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_vcvtps2ph_mask((__v4sf)(__m128)(A), (int)(I), (__v8hi)(__m128i)(W), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_cvt_roundps_ph</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_vcvtps2ph_mask((__v4sf)(__m128)(A), (int)(I), (__v8hi)_mm_setzero_si128(), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cvtps_ph</name></cpp:macro> <cpp:value>_mm_mask_cvt_roundps_ph</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_cvtps_ph</name></cpp:macro> <cpp:value>_mm_maskz_cvt_roundps_ph</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cvt_roundps_ph</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_vcvtps2ph256_mask((__v8sf)(__m256)(A), (int)(I), (__v8hi)(__m128i)(W), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_cvt_roundps_ph</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_vcvtps2ph256_mask((__v8sf)(__m256)(A), (int)(I), (__v8hi)_mm_setzero_si128(), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_cvtps_ph</name></cpp:macro> <cpp:value>_mm256_mask_cvt_roundps_ph</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_cvtps_ph</name></cpp:macro> <cpp:value>_mm256_maskz_cvt_roundps_ph</cpp:value></cpp:define>


<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__DEFAULT_FN_ATTRS128</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__DEFAULT_FN_ATTRS256</name></cpp:undef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
