<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/lib/Headers/inttypes.h">







<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__CLANG_INTTYPES_H</name></expr></argument>)</argument_list></call></expr></cpp:if>



<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_AIX</name></expr></argument>)</argument_list></call> <operator>||</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_STD_TYPES_T</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__CLANG_INTTYPES_H</name></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>_MSC_VER</name> <operator>&lt;</operator> <literal type="number">1800</literal></expr></cpp:if>
<cpp:error>#<cpp:directive>error</cpp:directive> MSVC does not have inttypes.h prior to Visual Studio 2013</cpp:error>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:empty>#include_next &lt;inttypes.h&gt;</cpp:empty>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <name>_MSC_VER</name> <operator>&lt;</operator> <literal type="number">1900</literal></expr></cpp:if>


<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PRId32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PRIdLEAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PRIdFAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PRIi32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PRIiLEAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PRIiFAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PRIo32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PRIoLEAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PRIoFAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PRIu32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PRIuLEAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PRIuFAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PRIx32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PRIxLEAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PRIxFAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PRIX32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PRIXLEAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>PRIXFAST32</name></cpp:undef>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SCNd32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SCNdLEAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SCNdFAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SCNi32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SCNiLEAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SCNiFAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SCNo32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SCNoLEAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SCNoFAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SCNu32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SCNuLEAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SCNuFAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SCNx32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SCNxLEAST32</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>SCNxFAST32</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRId32</name></cpp:macro> <cpp:value>"d"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRIdLEAST32</name></cpp:macro> <cpp:value>"d"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRIdFAST32</name></cpp:macro> <cpp:value>"d"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRIi32</name></cpp:macro> <cpp:value>"i"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRIiLEAST32</name></cpp:macro> <cpp:value>"i"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRIiFAST32</name></cpp:macro> <cpp:value>"i"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRIo32</name></cpp:macro> <cpp:value>"o"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRIoLEAST32</name></cpp:macro> <cpp:value>"o"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRIoFAST32</name></cpp:macro> <cpp:value>"o"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRIu32</name></cpp:macro> <cpp:value>"u"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRIuLEAST32</name></cpp:macro> <cpp:value>"u"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRIuFAST32</name></cpp:macro> <cpp:value>"u"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRIx32</name></cpp:macro> <cpp:value>"x"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRIxLEAST32</name></cpp:macro> <cpp:value>"x"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRIxFAST32</name></cpp:macro> <cpp:value>"x"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRIX32</name></cpp:macro> <cpp:value>"X"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRIXLEAST32</name></cpp:macro> <cpp:value>"X"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PRIXFAST32</name></cpp:macro> <cpp:value>"X"</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCNd32</name></cpp:macro> <cpp:value>"d"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCNdLEAST32</name></cpp:macro> <cpp:value>"d"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCNdFAST32</name></cpp:macro> <cpp:value>"d"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCNi32</name></cpp:macro> <cpp:value>"i"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCNiLEAST32</name></cpp:macro> <cpp:value>"i"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCNiFAST32</name></cpp:macro> <cpp:value>"i"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCNo32</name></cpp:macro> <cpp:value>"o"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCNoLEAST32</name></cpp:macro> <cpp:value>"o"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCNoFAST32</name></cpp:macro> <cpp:value>"o"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCNu32</name></cpp:macro> <cpp:value>"u"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCNuLEAST32</name></cpp:macro> <cpp:value>"u"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCNuFAST32</name></cpp:macro> <cpp:value>"u"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCNx32</name></cpp:macro> <cpp:value>"x"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCNxLEAST32</name></cpp:macro> <cpp:value>"x"</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCNxFAST32</name></cpp:macro> <cpp:value>"x"</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
