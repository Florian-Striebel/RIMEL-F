<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/lib/Headers/avx512vp2intersectintrin.h">






















<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__IMMINTRIN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:error>#<cpp:directive>error</cpp:directive> <cpp:literal>"Never use &lt;avx512vp2intersect.h&gt; directly; include &lt;immintrin.h&gt; instead."</cpp:literal></cpp:error>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_AVX512VP2INTERSECT_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_AVX512VP2INTERSECT_H</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEFAULT_FN_ATTRS</name></cpp:macro> <cpp:value>__attribute__((__always_inline__, __nodebug__, __target__("avx512vp2intersect"), __min_vector_width__(512)))</cpp:value></cpp:define>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm512_2intersect_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name> <modifier>*</modifier></type><name>__m0</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name> <modifier>*</modifier></type><name>__m1</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_vp2intersect_d_512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><name>__m0</name></expr></argument>, <argument><expr><name>__m1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm512_2intersect_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name> <modifier>*</modifier></type><name>__m0</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name> <modifier>*</modifier></type><name>__m1</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_vp2intersect_q_512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><name>__m0</name></expr></argument>, <argument><expr><name>__m1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__DEFAULT_FN_ATTRS</name></cpp:undef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
