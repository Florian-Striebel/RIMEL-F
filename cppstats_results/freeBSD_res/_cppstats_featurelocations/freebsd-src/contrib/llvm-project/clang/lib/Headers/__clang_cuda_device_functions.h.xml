<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/lib/Headers/__clang_cuda_device_functions.h">








<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__CLANG_CUDA_DEVICE_FUNCTIONS_H__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__CLANG_CUDA_DEVICE_FUNCTIONS_H__</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__OPENMP_NVPTX__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CUDA_VERSION</name> <operator>&lt;</operator> <literal type="number">9000</literal></expr></cpp:if>
<cpp:error>#<cpp:directive>error</cpp:directive> This file is intended to be used with CUDA-9+ only.</cpp:error>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>




<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>push_macro</name><name>(</name><cpp:literal>"__DEVICE__"</cpp:literal><name>)</name></cpp:pragma>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__OPENMP_NVPTX__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEVICE__</name></cpp:macro> <cpp:value>static __attribute__((always_inline, nothrow))</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEVICE__</name></cpp:macro> <cpp:value>static __device__ __forceinline__</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__all</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nvvm_vote_all</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__any</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nvvm_vote_any</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__ballot</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nvvm_vote_ballot</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__brev</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_brev</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__brevll</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_brevll</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function><type><name>__DEVICE__</name> <name>void</name></type> <name>__brkpt</name><parameter_list>()</parameter_list> <block>{<block_content> <asm>__asm__ <specifier>__volatile__</specifier>("brkpt;");</asm> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>void</name></type> <name>__brkpt</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <expr_stmt><expr><call><name>__brkpt</name><argument_list>()</argument_list></call></expr>;</expr_stmt> </block_content>}</block></function>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<decl_stmt><decl><type><name>__DEVICE__</name> <name>void</name></type> <name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>overloadable</name><operator>)</operator></expr></argument>)</argument_list> <name>__brkpt</name><argument_list>(<argument><expr><name>void</name></expr></argument>)</argument_list> <block>{<block_content>
<asm>__asm__ <specifier>__volatile__</specifier>("brkpt;");</asm>
</block_content>}</block></decl></decl_stmt>
<decl_stmt><decl><type><name>__DEVICE__</name> <name>void</name></type> <name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>overloadable</name><operator>)</operator></expr></argument>)</argument_list> <name>__brkpt</name><argument_list>(<argument><expr><name>int</name> <name>__a</name></expr></argument>)</argument_list> <block>{<block_content> <expr_stmt><expr><call><name>__brkpt</name><argument_list>()</argument_list></call></expr>;</expr_stmt> </block_content>}</block></decl></decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__byte_perm</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__c</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_byte_perm</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__c</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__clz</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_clz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__clzll</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_clzll</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__cosf</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_fast_cosf</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__dAtomicAdd</name><parameter_list>(<parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_add_gen_d</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__dAtomicAdd_block</name><parameter_list>(<parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_add_gen_d</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__dAtomicAdd_system</name><parameter_list>(<parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_add_gen_d</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__dadd_rd</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_dadd_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__dadd_rn</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_dadd_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__dadd_ru</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_dadd_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__dadd_rz</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_dadd_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__ddiv_rd</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_ddiv_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__ddiv_rn</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_ddiv_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__ddiv_ru</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_ddiv_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__ddiv_rz</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_ddiv_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__dmul_rd</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_dmul_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__dmul_rn</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_dmul_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__dmul_ru</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_dmul_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__dmul_rz</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_dmul_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__double2float_rd</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_double2float_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__double2float_rn</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_double2float_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__double2float_ru</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_double2float_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__double2float_rz</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_double2float_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__double2hiint</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_double2hiint</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__double2int_rd</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_double2int_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__double2int_rn</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_double2int_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__double2int_ru</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_double2int_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__double2int_rz</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_double2int_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__double2ll_rd</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_double2ll_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__double2ll_rn</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_double2ll_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__double2ll_ru</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_double2ll_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__double2ll_rz</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_double2ll_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__double2loint</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_double2loint</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__double2uint_rd</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_double2uint_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__double2uint_rn</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_double2uint_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__double2uint_ru</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_double2uint_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__double2uint_rz</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_double2uint_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__double2ull_rd</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_double2ull_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__double2ull_rn</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_double2ull_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__double2ull_ru</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_double2ull_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__double2ull_rz</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_double2ull_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__double_as_longlong</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_double_as_longlong</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__drcp_rd</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_drcp_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__drcp_rn</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_drcp_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__drcp_ru</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_drcp_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__drcp_rz</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_drcp_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__dsqrt_rd</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_dsqrt_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__dsqrt_rn</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_dsqrt_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__dsqrt_ru</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_dsqrt_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__dsqrt_rz</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_dsqrt_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__dsub_rd</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_dsub_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__dsub_rn</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_dsub_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__dsub_ru</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_dsub_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__dsub_rz</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_dsub_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__exp10f</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_fast_exp10f</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__expf</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_fast_expf</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fAtomicAdd</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_add_gen_f</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fAtomicAdd_block</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_add_gen_f</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fAtomicAdd_system</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_add_gen_f</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fAtomicExch</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_int_as_float</name><argument_list>(
<argument><expr><call><name>__nvvm_atom_xchg_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><call><name>__nv_float_as_int</name><argument_list>(<argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fAtomicExch_block</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_int_as_float</name><argument_list>(
<argument><expr><call><name>__nvvm_atom_cta_xchg_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><call><name>__nv_float_as_int</name><argument_list>(<argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fAtomicExch_system</name><parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_int_as_float</name><argument_list>(
<argument><expr><call><name>__nvvm_atom_sys_xchg_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><call><name>__nv_float_as_int</name><argument_list>(<argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fadd_rd</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fadd_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fadd_rn</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fadd_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fadd_ru</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fadd_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fadd_rz</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fadd_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fdiv_rd</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fdiv_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fdiv_rn</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fdiv_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fdiv_ru</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fdiv_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fdiv_rz</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fdiv_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fdividef</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fast_fdividef</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__ffs</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_ffs</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__ffsll</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_ffsll</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__finite</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_isfinited</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__finitef</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_finitef</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>__DEVICE__</name> <name>int</name></type> <name>__finitel</name><parameter_list>(<parameter><decl><type><name>long</name> <name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__float2int_rd</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_float2int_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__float2int_rn</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_float2int_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__float2int_ru</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_float2int_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__float2int_rz</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_float2int_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__float2ll_rd</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_float2ll_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__float2ll_rn</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_float2ll_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__float2ll_ru</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_float2ll_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__float2ll_rz</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_float2ll_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__float2uint_rd</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_float2uint_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__float2uint_rn</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_float2uint_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__float2uint_ru</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_float2uint_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__float2uint_rz</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_float2uint_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__float2ull_rd</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_float2ull_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__float2ull_rn</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_float2ull_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__float2ull_ru</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_float2ull_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__float2ull_rz</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_float2ull_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__float_as_int</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_float_as_int</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__float_as_uint</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_float_as_uint</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__fma_rd</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__c</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fma_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__c</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__fma_rn</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__c</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fma_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__c</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__fma_ru</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__c</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fma_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__c</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__fma_rz</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__c</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fma_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__c</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fmaf_ieee_rd</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__c</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fmaf_ieee_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__c</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fmaf_ieee_rn</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__c</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fmaf_ieee_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__c</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fmaf_ieee_ru</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__c</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fmaf_ieee_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__c</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fmaf_ieee_rz</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__c</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fmaf_ieee_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__c</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fmaf_rd</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__c</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fmaf_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__c</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fmaf_rn</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__c</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fmaf_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__c</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fmaf_ru</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__c</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fmaf_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__c</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fmaf_rz</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__c</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fmaf_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__c</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fmul_rd</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fmul_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fmul_rn</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fmul_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fmul_ru</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fmul_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fmul_rz</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fmul_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__frcp_rd</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_frcp_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__frcp_rn</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_frcp_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__frcp_ru</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_frcp_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__frcp_rz</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_frcp_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__frsqrt_rn</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_frsqrt_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fsqrt_rd</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_fsqrt_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fsqrt_rn</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_fsqrt_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fsqrt_ru</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_fsqrt_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fsqrt_rz</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_fsqrt_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fsub_rd</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fsub_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fsub_rn</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fsub_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fsub_ru</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fsub_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__fsub_rz</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fsub_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__hadd</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_hadd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__hiloint2double</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_hiloint2double</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicAdd</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_add_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicAdd_block</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_add_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicAdd_system</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_add_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicAnd</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_and_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicAnd_block</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_and_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicAnd_system</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_and_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicCAS</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__cmp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cas_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__cmp</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicCAS_block</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__cmp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_cas_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__cmp</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicCAS_system</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__cmp</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_cas_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__cmp</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicExch</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_xchg_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicExch_block</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_xchg_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicExch_system</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_xchg_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicMax</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_max_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicMax_block</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_max_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicMax_system</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_max_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicMin</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_min_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicMin_block</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_min_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicMin_system</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_min_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicOr</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_or_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicOr_block</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_or_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicOr_system</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_or_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicXor</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_xor_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicXor_block</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_xor_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__iAtomicXor_system</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_xor_gen_i</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__illAtomicMax</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_max_gen_ll</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__illAtomicMax_block</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_max_gen_ll</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__illAtomicMax_system</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_max_gen_ll</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__illAtomicMin</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_min_gen_ll</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__illAtomicMin_block</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_min_gen_ll</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__illAtomicMin_system</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_min_gen_ll</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__int2double_rn</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_int2double_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__int2float_rd</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_int2float_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__int2float_rn</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_int2float_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__int2float_ru</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_int2float_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__int2float_rz</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_int2float_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__int_as_float</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_int_as_float</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__isfinited</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_isfinited</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__isinf</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_isinfd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__isinff</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_isinff</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>__DEVICE__</name> <name>int</name></type> <name>__isinfl</name><parameter_list>(<parameter><decl><type><name>long</name> <name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__isnan</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_isnand</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__isnanf</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_isnanf</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_MSC_VER</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>__DEVICE__</name> <name>int</name></type> <name>__isnanl</name><parameter_list>(<parameter><decl><type><name>long</name> <name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__ll2double_rd</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_ll2double_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__ll2double_rn</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_ll2double_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__ll2double_ru</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_ll2double_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__ll2double_rz</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_ll2double_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__ll2float_rd</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_ll2float_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__ll2float_rn</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_ll2float_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__ll2float_ru</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_ll2float_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__ll2float_rz</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_ll2float_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__llAtomicAnd</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_and_gen_ll</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__llAtomicAnd_block</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_and_gen_ll</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__llAtomicAnd_system</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_and_gen_ll</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__llAtomicOr</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_or_gen_ll</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__llAtomicOr_block</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_or_gen_ll</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__llAtomicOr_system</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_or_gen_ll</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__llAtomicXor</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_xor_gen_ll</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__llAtomicXor_block</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_xor_gen_ll</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__llAtomicXor_system</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_xor_gen_ll</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__log10f</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_fast_log10f</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__log2f</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_fast_log2f</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__logf</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_fast_logf</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__longlong_as_double</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_longlong_as_double</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__mul24</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_mul24</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>__mul64hi</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_mul64hi</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__mulhi</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_mulhi</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__pm0</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nvvm_read_ptx_sreg_pm0</name><argument_list>()</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__pm1</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nvvm_read_ptx_sreg_pm1</name><argument_list>()</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__pm2</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nvvm_read_ptx_sreg_pm2</name><argument_list>()</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__pm3</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nvvm_read_ptx_sreg_pm3</name><argument_list>()</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__popc</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_popc</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__popcll</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_popcll</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__powf</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fast_powf</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__prof_trigger</name><parameter_list>(<parameter><type><name>__a</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__asm__ __volatile__("pmevent \t%0;" ::"i"(__a))</cpp:value></cpp:define>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__rhadd</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_rhadd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__sad</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__b</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__c</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_sad</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__c</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__saturatef</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_saturatef</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__signbitd</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_signbitd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__signbitf</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_signbitf</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>void</name></type> <name>__sincosf</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>__s</name></decl></parameter>, <parameter><decl><type><name>float</name> <modifier>*</modifier></type><name>__c</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_fast_sincosf</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__s</name></expr></argument>, <argument><expr><name>__c</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__sinf</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_fast_sinf</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__syncthreads_and</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nvvm_bar0_and</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__syncthreads_count</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nvvm_bar0_popc</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>__syncthreads_or</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nvvm_bar0_or</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__tanf</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_fast_tanf</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>void</name></type> <name>__threadfence</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content> <expr_stmt><expr><call><name>__nvvm_membar_gl</name><argument_list>()</argument_list></call></expr>;</expr_stmt> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>void</name></type> <name>__threadfence_block</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content> <expr_stmt><expr><call><name>__nvvm_membar_cta</name><argument_list>()</argument_list></call></expr>;</expr_stmt> </block_content>}</block></function><empty_stmt>;</empty_stmt>
<function><type><name>__DEVICE__</name> <name>void</name></type> <name>__threadfence_system</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content> <expr_stmt><expr><call><name>__nvvm_membar_sys</name><argument_list>()</argument_list></call></expr>;</expr_stmt> </block_content>}</block></function><empty_stmt>;</empty_stmt>
<function><type><name>__DEVICE__</name> <name>void</name></type> <name>__trap</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list> <block>{<block_content> <asm>__asm__ <specifier>__volatile__</specifier>("trap;");</asm> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicAdd</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_add_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicAdd_block</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_add_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicAdd_system</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_add_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicAnd</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_and_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicAnd_block</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_and_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicAnd_system</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_and_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicCAS</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__cmp</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cas_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__cmp</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type>
<name>__uAtomicCAS_block</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__cmp</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_cas_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__cmp</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type>
<name>__uAtomicCAS_system</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__cmp</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_cas_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__cmp</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicDec</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_dec_gen_ui</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicDec_block</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_dec_gen_ui</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicDec_system</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_dec_gen_ui</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicExch</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_xchg_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicExch_block</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_xchg_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicExch_system</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_xchg_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicInc</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_inc_gen_ui</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicInc_block</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_inc_gen_ui</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicInc_system</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_inc_gen_ui</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicMax</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_max_gen_ui</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicMax_block</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_max_gen_ui</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicMax_system</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_max_gen_ui</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicMin</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_min_gen_ui</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicMin_block</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_min_gen_ui</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicMin_system</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_min_gen_ui</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicOr</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_or_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicOr_block</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_or_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicOr_system</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_or_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicXor</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_xor_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicXor_block</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_xor_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uAtomicXor_system</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_xor_gen_i</name><argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__uhadd</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_uhadd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__uint2double_rn</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_uint2double_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__uint2float_rd</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_uint2float_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__uint2float_rn</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_uint2float_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__uint2float_ru</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_uint2float_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__uint2float_rz</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_uint2float_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__uint_as_float</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_uint_as_float</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__ull2double_rd</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_ull2double_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__ull2double_rn</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_ull2double_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__ull2double_ru</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_ull2double_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>double</name></type> <name>__ull2double_rz</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_ull2double_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__ull2float_rd</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_ull2float_rd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__ull2float_rn</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_ull2float_rn</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__ull2float_ru</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_ull2float_ru</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>float</name></type> <name>__ull2float_rz</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_ull2float_rz</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicAdd</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_add_gen_ll</name><argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicAdd_block</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_add_gen_ll</name><argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicAdd_system</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_add_gen_ll</name><argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicAnd</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_and_gen_ll</name><argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicAnd_block</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_and_gen_ll</name><argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicAnd_system</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_and_gen_ll</name><argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicCAS</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__cmp</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cas_gen_ll</name><argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__cmp</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicCAS_block</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__cmp</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_cas_gen_ll</name><argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__cmp</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicCAS_system</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__cmp</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_cas_gen_ll</name><argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__cmp</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicExch</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_xchg_gen_ll</name><argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicExch_block</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_xchg_gen_ll</name><argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicExch_system</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_xchg_gen_ll</name><argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicMax</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_max_gen_ull</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicMax_block</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_max_gen_ull</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicMax_system</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_max_gen_ull</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicMin</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_min_gen_ull</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicMin_block</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_min_gen_ull</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicMin_system</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_min_gen_ull</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicOr</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_or_gen_ll</name><argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicOr_block</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_or_gen_ll</name><argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicOr_system</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_or_gen_ll</name><argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicXor</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_xor_gen_ll</name><argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicXor_block</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_cta_xor_gen_ll</name><argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__ullAtomicXor_system</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__v</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nvvm_atom_sys_xor_gen_ll</name><argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>, <argument><expr><name>__v</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__umul24</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_umul24</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>__umul64hi</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_umul64hi</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__umulhi</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_umulhi</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__urhadd</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_urhadd</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__usad</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__c</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_usad</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__c</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>CUDA_VERSION</name> <operator>&gt;=</operator> <literal type="number">9000</literal> <operator>&amp;&amp;</operator> <name>CUDA_VERSION</name> <operator>&lt;</operator> <literal type="number">9020</literal></expr></cpp:if>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vabs2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_vabs2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vabs4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_vabs4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vabsdiffs2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vabsdiffs2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vabsdiffs4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vabsdiffs4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vabsdiffu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vabsdiffu2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vabsdiffu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vabsdiffu4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vabsss2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vabsss2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vabsss4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vabsss4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vadd2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vadd2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vadd4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vadd4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vaddss2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vaddss2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vaddss4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vaddss4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vaddus2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vaddus2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vaddus4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vaddus4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vavgs2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vavgs2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vavgs4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vavgs4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vavgu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vavgu2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vavgu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vavgu4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpeq2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmpeq2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpeq4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmpeq4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpges2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmpges2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpges4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmpges4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpgeu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmpgeu2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpgeu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmpgeu4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpgts2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmpgts2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpgts4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmpgts4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpgtu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmpgtu2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpgtu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmpgtu4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmples2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmples2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmples4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmples4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpleu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmpleu2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpleu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmpleu4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmplts2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmplts2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmplts4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmplts4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpltu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmpltu2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpltu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmpltu4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpne2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmpne2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpne4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vcmpne4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vhaddu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vhaddu2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vhaddu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vhaddu4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vmaxs2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vmaxs2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vmaxs4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vmaxs4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vmaxu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vmaxu2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vmaxu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vmaxu4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vmins2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vmins2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vmins4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vmins4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vminu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vminu2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vminu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vminu4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vneg2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_vneg2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vneg4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nv_vneg4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vnegss2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vnegss2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vnegss4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vnegss4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsads2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsads2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsads4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsads4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsadu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsadu2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsadu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsadu4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vseteq2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vseteq2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vseteq4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vseteq4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetges2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsetges2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetges4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsetges4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetgeu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsetgeu2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetgeu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsetgeu4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetgts2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsetgts2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetgts4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsetgts4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetgtu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsetgtu2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetgtu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsetgtu4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetles2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsetles2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetles4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsetles4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetleu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsetleu2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetleu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsetleu4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetlts2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsetlts2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetlts4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsetlts4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetltu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsetltu2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetltu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsetltu4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetne2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsetne2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetne4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsetne4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsub2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsub2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsub4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsub4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsubss2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsubss2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsubss4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsubss4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsubus2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsubus2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsubus4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__nv_vsubus4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>







<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__bool2mask</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>shift</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__a</name> <operator>&lt;&lt;</operator> <name>shift</name><operator>)</operator> <operator>-</operator> <name>__a</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vabs2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vabsdiff2.s32.s32.s32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(0), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vabs4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vabsdiff4.s32.s32.s32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(0), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vabsdiffs2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vabsdiff2.s32.s32.s32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vabsdiffs4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vabsdiff4.s32.s32.s32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vabsdiffu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vabsdiff2.u32.u32.u32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vabsdiffu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vabsdiff4.u32.u32.u32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vabsss2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vabsdiff2.s32.s32.s32.sat %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(0), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vabsss4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vabsdiff4.s32.s32.s32.sat %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(0), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vadd2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vadd2.u32.u32.u32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vadd4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vadd4.u32.u32.u32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vaddss2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vadd2.s32.s32.s32.sat %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vaddss4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vadd4.s32.s32.s32.sat %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vaddus2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vadd2.u32.u32.u32.sat %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vaddus4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vadd4.u32.u32.u32.sat %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vavgs2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vavrg2.s32.s32.s32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vavgs4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vavrg4.s32.s32.s32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vavgu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vavrg2.u32.u32.u32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vavgu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vavrg4.u32.u32.u32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vseteq2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset2.u32.u32.eq %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpeq2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vseteq2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vseteq4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset4.u32.u32.eq %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpeq4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vseteq4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetges2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset2.s32.s32.ge %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpges2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vsetges2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetges4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset4.s32.s32.ge %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpges4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vsetges4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetgeu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset2.u32.u32.ge %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpgeu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vsetgeu2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetgeu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset4.u32.u32.ge %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpgeu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vsetgeu4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetgts2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset2.s32.s32.gt %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpgts2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vsetgts2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetgts4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset4.s32.s32.gt %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpgts4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vsetgts4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetgtu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset2.u32.u32.gt %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpgtu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vsetgtu2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetgtu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset4.u32.u32.gt %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpgtu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vsetgtu4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetles2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset2.s32.s32.le %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmples2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vsetles2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetles4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset4.s32.s32.le %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmples4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vsetles4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetleu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset2.u32.u32.le %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpleu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vsetleu2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetleu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset4.u32.u32.le %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpleu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vsetleu4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetlts2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset2.s32.s32.lt %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmplts2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vsetlts2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetlts4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset4.s32.s32.lt %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmplts4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vsetlts4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetltu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset2.u32.u32.lt %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpltu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vsetltu2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetltu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset4.u32.u32.lt %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpltu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vsetltu4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetne2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset2.u32.u32.ne %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpne2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vsetne2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsetne4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vset4.u32.u32.ne %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vcmpne4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__bool2mask</name><argument_list>(<argument><expr><call><name>__vsetne4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>






<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vhaddu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><operator>(</operator><operator>(</operator><name>__a</name> <operator>^</operator> <name>__b</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>&amp;</operator> <operator>~</operator><literal type="number">0x80008000u</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><name>__a</name> <operator>&amp;</operator> <name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vhaddu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><operator>(</operator><operator>(</operator><name>__a</name> <operator>^</operator> <name>__b</name><operator>)</operator> <operator>&gt;&gt;</operator> <literal type="number">1</literal><operator>)</operator> <operator>&amp;</operator> <operator>~</operator><literal type="number">0x80808080u</literal><operator>)</operator> <operator>+</operator> <operator>(</operator><name>__a</name> <operator>&amp;</operator> <name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vmaxs2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>__a</name> <operator>&amp;</operator> <literal type="number">0x8000</literal><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name>__b</name> <operator>&amp;</operator> <literal type="number">0x8000</literal><operator>)</operator></expr>)</condition> <block>{<block_content>


<decl_stmt><decl><type><name>unsigned</name></type> <name>mask</name> <init>= <expr><call><name>__vcmpgts2</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name>r</name> <operator>=</operator> <operator>(</operator><name>__a</name> <operator>&amp;</operator> <name>mask</name><operator>)</operator> <operator>|</operator> <operator>(</operator><name>__b</name> <operator>&amp;</operator> <operator>~</operator><name>mask</name><operator>)</operator></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<asm>__asm__("vmax2.s32.s32.s32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
</block_content>}</block></else></if_stmt>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vmaxs4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vmax4.s32.s32.s32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vmaxu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vmax2.u32.u32.u32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vmaxu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vmax4.u32.u32.u32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vmins2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vmin2.s32.s32.s32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vmins4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vmin4.s32.s32.s32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vminu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vmin2.u32.u32.u32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vminu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vmin4.u32.u32.u32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsads2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vabsdiff2.s32.s32.s32.add %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsads4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vabsdiff4.s32.s32.s32.add %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsadu2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vabsdiff2.u32.u32.u32.add %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsadu4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vabsdiff4.u32.u32.u32.add %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsub2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vsub2.u32.u32.u32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vneg2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__vsub2</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>

<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsub4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vsub4.u32.u32.u32 %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vneg4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><call><name>__vsub4</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return> </block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsubss2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vsub2.s32.s32.s32.sat %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vnegss2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__vsubss2</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsubss4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vsub4.s32.s32.s32.sat %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vnegss4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__vsubss4</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsubus2</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vsub2.u32.u32.u32.sat %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>unsigned</name> <name>int</name></type> <name>__vsubus4</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>r</name></decl>;</decl_stmt>
<asm>__asm__("vsub4.u32.u32.u32.sat %0,%1,%2,%3;"
: "=r"(r)
: "r"(__a), "r"(__b), "r"(0));</asm>
<return>return <expr><name>r</name></expr>;</return>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>



<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__OPENMP_NVPTX__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function><type><name>__DEVICE__</name> <name>int</name></type> <name>clock</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nvvm_read_ptx_sreg_clock</name><argument_list>()</argument_list></call></expr>;</return> </block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function><type><name>__DEVICE__</name> <name>long</name> <name>long</name></type> <name>clock64</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><call><name>__nvvm_read_ptx_sreg_clock64</name><argument_list>()</argument_list></call></expr>;</return> </block_content>}</block></function>



<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__OPENMP_NVPTX__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function><type><name>__DEVICE__</name> <name>void</name> <modifier>*</modifier></type><name>memcpy</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__a</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>__b</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>__c</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_memcpy</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__c</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><name>__DEVICE__</name> <name>void</name> <modifier>*</modifier></type><name>memset</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__b</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>__c</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_memset</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__c</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:pragma>#<cpp:directive>pragma</cpp:directive> <name>pop_macro</name><name>(</name><cpp:literal>"__DEVICE__"</cpp:literal><name>)</name></cpp:pragma>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
