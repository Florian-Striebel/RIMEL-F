<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/lib/Headers/emmintrin.h">








<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__EMMINTRIN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__EMMINTRIN_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;xmmintrin.h&gt;</cpp:file></cpp:include>

<typedef>typedef <type><name>double</name> <name>__m128d</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(16)<operator>,</operator> __aligned__(16)));</typedef>
<typedef>typedef <type><name>long</name> <name>long</name> <name>__m128i</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(16)<operator>,</operator> __aligned__(16)));</typedef>

<typedef>typedef <type><name>double</name> <name>__m128d_u</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(16)<operator>,</operator> __aligned__(1)));</typedef>
<typedef>typedef <type><name>long</name> <name>long</name> <name>__m128i_u</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(16)<operator>,</operator> __aligned__(1)));</typedef>


<typedef>typedef <type><name>double</name> <name>__v2df</name></type> <name>__attribute__</name> ((<name>__vector_size__</name> (16)));</typedef>
<typedef>typedef <type><name>long</name> <name>long</name> <name>__v2di</name></type> <name>__attribute__</name> ((<name>__vector_size__</name> (16)));</typedef>
<typedef>typedef <type><name>short</name> <name>__v8hi</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(16)));</typedef>
<typedef>typedef <type><name>char</name> <name>__v16qi</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(16)));</typedef>


<typedef>typedef <type><name>unsigned</name> <name>long</name> <name>long</name> <name>__v2du</name></type> <name>__attribute__</name> ((<name>__vector_size__</name> (16)));</typedef>
<typedef>typedef <type><name>unsigned</name> <name>short</name> <name>__v8hu</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(16)));</typedef>
<typedef>typedef <type><name>unsigned</name> <name>char</name> <name>__v16qu</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(16)));</typedef>



<typedef>typedef <type><name>signed</name> <name>char</name> <name>__v16qs</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(16)));</typedef>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEFAULT_FN_ATTRS</name></cpp:macro> <cpp:value>__attribute__((__always_inline__, __nodebug__, __target__("sse2"), __min_vector_width__(128)))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEFAULT_FN_ATTRS_MMX</name></cpp:macro> <cpp:value>__attribute__((__always_inline__, __nodebug__, __target__("mmx,sse2"), __min_vector_width__(64)))</cpp:value></cpp:define>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_add_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>__a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>+=</operator> <name><name>__b</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<return>return <expr><name>__a</name></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_add_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name> <operator>+</operator> <operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sub_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>__a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>-=</operator> <name><name>__b</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<return>return <expr><name>__a</name></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sub_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name> <operator>-</operator> <operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_mul_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>__a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>*=</operator> <name><name>__b</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<return>return <expr><name>__a</name></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_mul_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name> <operator>*</operator> <operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_div_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>__a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>/=</operator> <name><name>__b</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<return>return <expr><name>__a</name></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_div_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name> <operator>/</operator> <operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>




















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sqrt_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>__m128d</name></type> <name>__c</name> <init>= <expr><call><name>__builtin_ia32_sqrtsd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128d</argument>)</argument_list></macro> <expr><block>{ <expr><name><name>__c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>, <expr><name><name>__a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> }</block></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sqrt_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_sqrtpd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_min_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_minsd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_min_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_minpd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_max_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_maxsd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_max_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_maxpd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_and_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v2du</name><operator>)</operator><name>__a</name> <operator>&amp;</operator> <operator>(</operator><name>__v2du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_andnot_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><operator>(</operator><operator>~</operator><operator>(</operator><name>__v2du</name><operator>)</operator><name>__a</name> <operator>&amp;</operator> <operator>(</operator><name>__v2du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_or_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v2du</name><operator>)</operator><name>__a</name> <operator>|</operator> <operator>(</operator><name>__v2du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_xor_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v2du</name><operator>)</operator><name>__a</name> <operator>^</operator> <operator>(</operator><name>__v2du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpeq_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmpeqpd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmplt_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmpltpd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmple_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmplepd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpgt_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmpltpd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpge_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmplepd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpord_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmpordpd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpunord_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmpunordpd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpneq_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmpneqpd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpnlt_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmpnltpd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpnle_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmpnlepd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpngt_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmpnltpd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpnge_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmpnlepd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpeq_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmpeqsd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>




















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmplt_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmpltsd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>




















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmple_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmplesd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>




















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpgt_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>__m128d</name></type> <name>__c</name> <init>= <expr><call><name>__builtin_ia32_cmpltsd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128d</argument>)</argument_list></macro> <expr><block>{ <expr><name><name>__c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>, <expr><name><name>__a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> }</block></expr>;</return>
</block_content>}</block></function>




















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpge_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>__m128d</name></type> <name>__c</name> <init>= <expr><call><name>__builtin_ia32_cmplesd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128d</argument>)</argument_list></macro> <expr><block>{ <expr><name><name>__c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>, <expr><name><name>__a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> }</block></expr>;</return>
</block_content>}</block></function>






















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpord_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmpordsd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>























<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpunord_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmpunordsd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>




















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpneq_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmpneqsd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>




















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpnlt_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmpnltsd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>




















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpnle_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_cmpnlesd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>




















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpngt_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>__m128d</name></type> <name>__c</name> <init>= <expr><call><name>__builtin_ia32_cmpnltsd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128d</argument>)</argument_list></macro> <expr><block>{ <expr><name><name>__c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>, <expr><name><name>__a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> }</block></expr>;</return>
</block_content>}</block></function>




















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpnge_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>__m128d</name></type> <name>__c</name> <init>= <expr><call><name>__builtin_ia32_cmpnlesd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128d</argument>)</argument_list></macro> <expr><block>{ <expr><name><name>__c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>, <expr><name><name>__a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> }</block></expr>;</return>
</block_content>}</block></function>



















<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_comieq_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_comisdeq</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>





















<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_comilt_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_comisdlt</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>





















<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_comile_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_comisdle</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>





















<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_comigt_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_comisdgt</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>





















<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_comige_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_comisdge</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>





















<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_comineq_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_comisdneq</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



















<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_ucomieq_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_ucomisdeq</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>





















<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_ucomilt_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_ucomisdlt</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>





















<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_ucomile_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_ucomisdle</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>





















<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_ucomigt_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_ucomisdgt</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>





















<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_ucomige_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_ucomisdge</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>





















<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_ucomineq_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_ucomisdneq</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtpd_ps</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_cvtpd2ps</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtps_pd</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_convertvector</name><argument_list>(
<argument><expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__v2df</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtepi32_pd</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_convertvector</name><argument_list>(
<argument><expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__v2df</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtpd_epi32</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_cvtpd2dq</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtsd_si32</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_cvtsd2si</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>




















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtsd_ss</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_cvtsd2ss</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtsi32_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>__a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>__b</name></expr>;</expr_stmt>
<return>return <expr><name>__a</name></expr>;</return>
</block_content>}</block></function>




















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtss_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>__a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>__b</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<return>return <expr><name>__a</name></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvttpd_epi32</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_cvttpd2dq</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvttsd_si32</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_cvttsd2si</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS_MMX</name></type>
<name>_mm_cvtpd_pi32</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_cvtpd2pi</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS_MMX</name></type>
<name>_mm_cvttpd_pi32</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_cvttpd2pi</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS_MMX</name></type>
<name>_mm_cvtpi32_pd</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_cvtpi2pd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>double</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtsd_f64</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>__a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_load_pd</name><parameter_list>(<parameter><decl><type><name>double</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__dp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>*</operator><operator>(</operator><specifier>const</specifier> <name>__m128d</name><operator>*</operator><operator>)</operator><name>__dp</name></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_load1_pd</name><parameter_list>(<parameter><decl><type><name>double</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__dp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__mm_load1_pd_struct</name> <block>{
<decl_stmt><decl><type><name>double</name></type> <name>__u</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>double</name></type> <name>__u</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__mm_load1_pd_struct</name><operator>*</operator><operator>)</operator><name>__dp</name><operator>)</operator><operator>-&gt;</operator><name>__u</name></expr></init></decl>;</decl_stmt>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128d</argument>)</argument_list></macro><expr><block>{ <expr><name>__u</name></expr>, <expr><name>__u</name></expr> }</block></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_load_pd1</name><parameter_list>(<parameter><type><name>dp</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_load1_pd(dp)</cpp:value></cpp:define>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_loadr_pd</name><parameter_list>(<parameter><decl><type><name>double</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__dp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>__m128d</name></type> <name>__u</name> <init>= <expr><operator>*</operator><operator>(</operator><specifier>const</specifier> <name>__m128d</name><operator>*</operator><operator>)</operator><name>__dp</name></expr></init></decl>;</decl_stmt>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__u</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__u</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_loadu_pd</name><parameter_list>(<parameter><decl><type><name>double</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__dp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__loadu_pd</name> <block>{
<decl_stmt><decl><type><name>__m128d_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<return>return <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__loadu_pd</name><operator>*</operator><operator>)</operator><name>__dp</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_loadu_si64</name><parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__loadu_si64</name> <block>{
<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>__u</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__loadu_si64</name><operator>*</operator><operator>)</operator><name>__a</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr></init></decl>;</decl_stmt>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v2di</name><operator>)</operator><block>{<expr><name>__u</name></expr>, <expr><literal type="number">0LL</literal></expr>}</block></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_loadu_si32</name><parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__loadu_si32</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>int</name></type> <name>__u</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__loadu_si32</name><operator>*</operator><operator>)</operator><name>__a</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr></init></decl>;</decl_stmt>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v4si</name><operator>)</operator><block>{<expr><name>__u</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_loadu_si16</name><parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__loadu_si16</name> <block>{
<decl_stmt><decl><type><name>short</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>short</name></type> <name>__u</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__loadu_si16</name><operator>*</operator><operator>)</operator><name>__a</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr></init></decl>;</decl_stmt>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><block>{<expr><name>__u</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_load_sd</name><parameter_list>(<parameter><decl><type><name>double</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__dp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__mm_load_sd_struct</name> <block>{
<decl_stmt><decl><type><name>double</name></type> <name>__u</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>double</name></type> <name>__u</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__mm_load_sd_struct</name><operator>*</operator><operator>)</operator><name>__dp</name><operator>)</operator><operator>-&gt;</operator><name>__u</name></expr></init></decl>;</decl_stmt>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128d</argument>)</argument_list></macro><expr><block>{ <expr><name>__u</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_loadh_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__dp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__mm_loadh_pd_struct</name> <block>{
<decl_stmt><decl><type><name>double</name></type> <name>__u</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>double</name></type> <name>__u</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__mm_loadh_pd_struct</name><operator>*</operator><operator>)</operator><name>__dp</name><operator>)</operator><operator>-&gt;</operator><name>__u</name></expr></init></decl>;</decl_stmt>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128d</argument>)</argument_list></macro><expr><block>{ <expr><name><name>__a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>, <expr><name>__u</name></expr> }</block></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_loadl_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>double</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__dp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__mm_loadl_pd_struct</name> <block>{
<decl_stmt><decl><type><name>double</name></type> <name>__u</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>double</name></type> <name>__u</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__mm_loadl_pd_struct</name><operator>*</operator><operator>)</operator><name>__dp</name><operator>)</operator><operator>-&gt;</operator><name>__u</name></expr></init></decl>;</decl_stmt>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128d</argument>)</argument_list></macro><expr><block>{ <expr><name>__u</name></expr>, <expr><name><name>__a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr> }</block></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_undefined_pd</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_undef128</name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set_sd</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__w</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128d</argument>)</argument_list></macro><expr><block>{ <expr><name>__w</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set1_pd</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__w</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128d</argument>)</argument_list></macro><expr><block>{ <expr><name>__w</name></expr>, <expr><name>__w</name></expr> }</block></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set_pd1</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__w</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_set1_pd</name><argument_list>(<argument><expr><name>__w</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set_pd</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__w</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__x</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128d</argument>)</argument_list></macro><expr><block>{ <expr><name>__x</name></expr>, <expr><name>__w</name></expr> }</block></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_setr_pd</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__w</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__x</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128d</argument>)</argument_list></macro><expr><block>{ <expr><name>__w</name></expr>, <expr><name>__x</name></expr> }</block></expr>;</return>
</block_content>}</block></function>










<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_setzero_pd</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128d</argument>)</argument_list></macro><expr><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_move_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>__a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name><name>__b</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
<return>return <expr><name>__a</name></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_store_sd</name><parameter_list>(<parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>__dp</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__mm_store_sd_struct</name> <block>{
<decl_stmt><decl><type><name>double</name></type> <name>__u</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__mm_store_sd_struct</name><operator>*</operator><operator>)</operator><name>__dp</name><operator>)</operator><operator>-&gt;</operator><name>__u</name> <operator>=</operator> <name><name>__a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_store_pd</name><parameter_list>(<parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>__dp</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>*</operator><operator>(</operator><name>__m128d</name><operator>*</operator><operator>)</operator><name>__dp</name> <operator>=</operator> <name>__a</name></expr>;</expr_stmt>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_store1_pd</name><parameter_list>(<parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>__dp</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name>__a</name> <operator>=</operator> <call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>_mm_store_pd</name><argument_list>(<argument><expr><name>__dp</name></expr></argument>, <argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_store_pd1</name><parameter_list>(<parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>__dp</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>_mm_store1_pd</name><argument_list>(<argument><expr><name>__dp</name></expr></argument>, <argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_storeu_pd</name><parameter_list>(<parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>__dp</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__storeu_pd</name> <block>{
<decl_stmt><decl><type><name>__m128d_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__storeu_pd</name><operator>*</operator><operator>)</operator><name>__dp</name><operator>)</operator><operator>-&gt;</operator><name>__v</name> <operator>=</operator> <name>__a</name></expr>;</expr_stmt>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_storer_pd</name><parameter_list>(<parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>__dp</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name>__a</name> <operator>=</operator> <call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><operator>(</operator><name>__m128d</name> <operator>*</operator><operator>)</operator><name>__dp</name> <operator>=</operator> <name>__a</name></expr>;</expr_stmt>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_storeh_pd</name><parameter_list>(<parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>__dp</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__mm_storeh_pd_struct</name> <block>{
<decl_stmt><decl><type><name>double</name></type> <name>__u</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__mm_storeh_pd_struct</name><operator>*</operator><operator>)</operator><name>__dp</name><operator>)</operator><operator>-&gt;</operator><name>__u</name> <operator>=</operator> <name><name>__a</name><index>[<expr><literal type="number">1</literal></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_storel_pd</name><parameter_list>(<parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>__dp</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__mm_storeh_pd_struct</name> <block>{
<decl_stmt><decl><type><name>double</name></type> <name>__u</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__mm_storeh_pd_struct</name><operator>*</operator><operator>)</operator><name>__dp</name><operator>)</operator><operator>-&gt;</operator><name>__u</name> <operator>=</operator> <name><name>__a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_add_epi8</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v16qu</name><operator>)</operator><name>__a</name> <operator>+</operator> <operator>(</operator><name>__v16qu</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_add_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8hu</name><operator>)</operator><name>__a</name> <operator>+</operator> <operator>(</operator><name>__v8hu</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_add_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v4su</name><operator>)</operator><name>__a</name> <operator>+</operator> <operator>(</operator><name>__v4su</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS_MMX</name></type>
<name>_mm_add_si64</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_paddq</name><argument_list>(<argument><expr><operator>(</operator><name>__v1di</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v1di</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_add_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v2du</name><operator>)</operator><name>__a</name> <operator>+</operator> <operator>(</operator><name>__v2du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_adds_epi8</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_paddsb128</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_adds_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_paddsw128</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_adds_epu8</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_paddusb128</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_adds_epu16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_paddusw128</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_avg_epu8</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_pavgb128</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_avg_epu16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_pavgw128</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>





















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_madd_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_pmaddwd128</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_max_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_pmaxsw128</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_max_epu8</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_pmaxub128</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_min_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_pminsw128</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_min_epu8</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_pminub128</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_mulhi_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_pmulhw128</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_mulhi_epu16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_pmulhuw128</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_mullo_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8hu</name><operator>)</operator><name>__a</name> <operator>*</operator> <operator>(</operator><name>__v8hu</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS_MMX</name></type>
<name>_mm_mul_su32</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_pmuludq</name><argument_list>(<argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_mul_epu32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_pmuludq128</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sad_epu8</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_psadbw128</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sub_epi8</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v16qu</name><operator>)</operator><name>__a</name> <operator>-</operator> <operator>(</operator><name>__v16qu</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sub_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8hu</name><operator>)</operator><name>__a</name> <operator>-</operator> <operator>(</operator><name>__v8hu</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sub_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v4su</name><operator>)</operator><name>__a</name> <operator>-</operator> <operator>(</operator><name>__v4su</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS_MMX</name></type>
<name>_mm_sub_si64</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psubq</name><argument_list>(<argument><expr><operator>(</operator><name>__v1di</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v1di</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sub_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v2du</name><operator>)</operator><name>__a</name> <operator>-</operator> <operator>(</operator><name>__v2du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_subs_epi8</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psubsb128</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_subs_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psubsw128</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_subs_epu8</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psubusb128</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_subs_epu16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psubusw128</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_and_si128</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v2du</name><operator>)</operator><name>__a</name> <operator>&amp;</operator> <operator>(</operator><name>__v2du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_andnot_si128</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>~</operator><operator>(</operator><name>__v2du</name><operator>)</operator><name>__a</name> <operator>&amp;</operator> <operator>(</operator><name>__v2du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_or_si128</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v2du</name><operator>)</operator><name>__a</name> <operator>|</operator> <operator>(</operator><name>__v2du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_xor_si128</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v2du</name><operator>)</operator><name>__a</name> <operator>^</operator> <operator>(</operator><name>__v2du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>


















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_slli_si128</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_pslldqi128_byteshift((__v2di)(__m128i)(a), (int)(imm))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_bslli_si128</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_pslldqi128_byteshift((__v2di)(__m128i)(a), (int)(imm))</cpp:value></cpp:define>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_slli_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psllwi128</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sll_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psllw128</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_slli_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_pslldi128</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sll_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_pslld128</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_slli_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_psllqi128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sll_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_psllq128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_srai_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psrawi128</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sra_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psraw128</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_srai_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psradi128</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sra_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psrad128</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_srli_si128</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a), (int)(imm))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_bsrli_si128</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_psrldqi128_byteshift((__v2di)(__m128i)(a), (int)(imm))</cpp:value></cpp:define>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_srli_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psrlwi128</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_srl_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psrlw128</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_srli_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psrldi128</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_srl_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psrld128</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_srli_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_psrlqi128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_srl_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_psrlq128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpeq_epi8</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__a</name> <operator>==</operator> <operator>(</operator><name>__v16qi</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpeq_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name> <operator>==</operator> <operator>(</operator><name>__v8hi</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpeq_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v4si</name><operator>)</operator><name>__a</name> <operator>==</operator> <operator>(</operator><name>__v4si</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpgt_epi8</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>


<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v16qs</name><operator>)</operator><name>__a</name> <operator>&gt;</operator> <operator>(</operator><name>__v16qs</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpgt_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name> <operator>&gt;</operator> <operator>(</operator><name>__v8hi</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpgt_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v4si</name><operator>)</operator><name>__a</name> <operator>&gt;</operator> <operator>(</operator><name>__v4si</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmplt_epi8</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_cmpgt_epi8</name><argument_list>(<argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmplt_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_cmpgt_epi16</name><argument_list>(<argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmplt_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_cmpgt_epi32</name><argument_list>(<argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtsi64_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>__a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>__b</name></expr>;</expr_stmt>
<return>return <expr><name>__a</name></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtsd_si64</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_cvtsd2si64</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvttsd_si64</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_cvttsd2si64</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>










<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtepi32_ps</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__v4sf</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>











<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtps_epi32</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_cvtps2dq</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvttps_epi32</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_cvttps2dq</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>











<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtsi32_si128</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v4si</name><operator>)</operator><block>{ <expr><name>__a</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>










<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtsi64_si128</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v2di</name><operator>)</operator><block>{ <expr><name>__a</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>;</return>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtsi128_si32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>__v4si</name></type> <name>__b</name> <init>= <expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__a</name></expr></init></decl>;</decl_stmt>
<return>return <expr><name><name>__b</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>











<function><type><specifier>static</specifier> <name>__inline__</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtsi128_si64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>__a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</return>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>











<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_load_si128</name><parameter_list>(<parameter><decl><type><name>__m128i</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>*</operator><name>__p</name></expr>;</return>
</block_content>}</block></function>











<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_loadu_si128</name><parameter_list>(<parameter><decl><type><name>__m128i_u</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__loadu_si128</name> <block>{
<decl_stmt><decl><type><name>__m128i_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<return>return <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__loadu_si128</name><operator>*</operator><operator>)</operator><name>__p</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_loadl_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i_u</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__mm_loadl_epi64_struct</name> <block>{
<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>__u</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128i</argument>)</argument_list></macro> <expr><block>{ <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__mm_loadl_epi64_struct</name><operator>*</operator><operator>)</operator><name>__p</name><operator>)</operator><operator>-&gt;</operator><name>__u</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>;</return>
</block_content>}</block></function>










<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_undefined_si128</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_undef128</name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set_epi64x</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__q1</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__q0</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v2di</name><operator>)</operator><block>{ <expr><name>__q0</name></expr>, <expr><name>__q1</name></expr> }</block></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set_epi64</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__q1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__q0</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_set_epi64x</name><argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name><operator>)</operator><name>__q1</name></expr></argument>, <argument><expr><operator>(</operator><name>long</name> <name>long</name><operator>)</operator><name>__q0</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>























<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set_epi32</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__i3</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__i2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__i1</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__i0</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v4si</name><operator>)</operator><block>{ <expr><name>__i0</name></expr>, <expr><name>__i1</name></expr>, <expr><name>__i2</name></expr>, <expr><name>__i3</name></expr>}</block></expr>;</return>
</block_content>}</block></function>



































<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set_epi16</name><parameter_list>(<parameter><decl><type><name>short</name></type> <name>__w7</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__w6</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__w5</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__w4</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__w3</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__w2</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__w1</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__w0</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><block>{ <expr><name>__w0</name></expr>, <expr><name>__w1</name></expr>, <expr><name>__w2</name></expr>, <expr><name>__w3</name></expr>, <expr><name>__w4</name></expr>, <expr><name>__w5</name></expr>, <expr><name>__w6</name></expr>, <expr><name>__w7</name></expr> }</block></expr>;</return>
</block_content>}</block></function>











































<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set_epi8</name><parameter_list>(<parameter><decl><type><name>char</name></type> <name>__b15</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b14</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b13</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b12</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b11</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b10</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b9</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b8</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b7</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b6</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b5</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b4</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b3</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b2</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b1</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b0</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><block>{ <expr><name>__b0</name></expr>, <expr><name>__b1</name></expr>, <expr><name>__b2</name></expr>, <expr><name>__b3</name></expr>, <expr><name>__b4</name></expr>, <expr><name>__b5</name></expr>, <expr><name>__b6</name></expr>, <expr><name>__b7</name></expr>, <expr><name>__b8</name></expr>, <expr><name>__b9</name></expr>, <expr><name>__b10</name></expr>, <expr><name>__b11</name></expr>, <expr><name>__b12</name></expr>, <expr><name>__b13</name></expr>, <expr><name>__b14</name></expr>, <expr><name>__b15</name></expr> }</block></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set1_epi64x</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__q</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_set_epi64x</name><argument_list>(<argument><expr><name>__q</name></expr></argument>, <argument><expr><name>__q</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set1_epi64</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__q</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_set_epi64</name><argument_list>(<argument><expr><name>__q</name></expr></argument>, <argument><expr><name>__q</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set1_epi32</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_set_epi32</name><argument_list>(<argument><expr><name>__i</name></expr></argument>, <argument><expr><name>__i</name></expr></argument>, <argument><expr><name>__i</name></expr></argument>, <argument><expr><name>__i</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set1_epi16</name><parameter_list>(<parameter><decl><type><name>short</name></type> <name>__w</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_set_epi16</name><argument_list>(<argument><expr><name>__w</name></expr></argument>, <argument><expr><name>__w</name></expr></argument>, <argument><expr><name>__w</name></expr></argument>, <argument><expr><name>__w</name></expr></argument>, <argument><expr><name>__w</name></expr></argument>, <argument><expr><name>__w</name></expr></argument>, <argument><expr><name>__w</name></expr></argument>, <argument><expr><name>__w</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set1_epi8</name><parameter_list>(<parameter><decl><type><name>char</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_set_epi8</name><argument_list>(<argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_setr_epi64</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__q0</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__q1</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_set_epi64</name><argument_list>(<argument><expr><name>__q1</name></expr></argument>, <argument><expr><name>__q0</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_setr_epi32</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__i0</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__i1</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__i2</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__i3</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_set_epi32</name><argument_list>(<argument><expr><name>__i3</name></expr></argument>, <argument><expr><name>__i2</name></expr></argument>, <argument><expr><name>__i1</name></expr></argument>, <argument><expr><name>__i0</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


























<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_setr_epi16</name><parameter_list>(<parameter><decl><type><name>short</name></type> <name>__w0</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__w1</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__w2</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__w3</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__w4</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__w5</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__w6</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__w7</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_set_epi16</name><argument_list>(<argument><expr><name>__w7</name></expr></argument>, <argument><expr><name>__w6</name></expr></argument>, <argument><expr><name>__w5</name></expr></argument>, <argument><expr><name>__w4</name></expr></argument>, <argument><expr><name>__w3</name></expr></argument>, <argument><expr><name>__w2</name></expr></argument>, <argument><expr><name>__w1</name></expr></argument>, <argument><expr><name>__w0</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>










































<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_setr_epi8</name><parameter_list>(<parameter><decl><type><name>char</name></type> <name>__b0</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b1</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b2</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b3</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b4</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b5</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b6</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b7</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b8</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b9</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b10</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b11</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b12</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b13</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b14</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b15</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_set_epi8</name><argument_list>(<argument><expr><name>__b15</name></expr></argument>, <argument><expr><name>__b14</name></expr></argument>, <argument><expr><name>__b13</name></expr></argument>, <argument><expr><name>__b12</name></expr></argument>, <argument><expr><name>__b11</name></expr></argument>, <argument><expr><name>__b10</name></expr></argument>, <argument><expr><name>__b9</name></expr></argument>, <argument><expr><name>__b8</name></expr></argument>, <argument><expr><name>__b7</name></expr></argument>, <argument><expr><name>__b6</name></expr></argument>, <argument><expr><name>__b5</name></expr></argument>, <argument><expr><name>__b4</name></expr></argument>, <argument><expr><name>__b3</name></expr></argument>, <argument><expr><name>__b2</name></expr></argument>, <argument><expr><name>__b1</name></expr></argument>, <argument><expr><name>__b0</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>









<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_setzero_si128</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v2di</name><operator>)</operator><block>{ <expr><literal type="number">0LL</literal></expr>, <expr><literal type="number">0LL</literal></expr> }</block></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_store_si128</name><parameter_list>(<parameter><decl><type><name>__m128i</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>__p</name> <operator>=</operator> <name>__b</name></expr>;</expr_stmt>
</block_content>}</block></function>











<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_storeu_si128</name><parameter_list>(<parameter><decl><type><name>__m128i_u</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__storeu_si128</name> <block>{
<decl_stmt><decl><type><name>__m128i_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__storeu_si128</name><operator>*</operator><operator>)</operator><name>__p</name><operator>)</operator><operator>-&gt;</operator><name>__v</name> <operator>=</operator> <name>__b</name></expr>;</expr_stmt>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_storeu_si64</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__storeu_si64</name> <block>{
<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__storeu_si64</name><operator>*</operator><operator>)</operator><name>__p</name><operator>)</operator><operator>-&gt;</operator><name>__v</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>__v2di</name><operator>)</operator><name>__b</name><operator>)</operator><index>[<expr><literal type="number">0</literal></expr>]</index></expr>;</expr_stmt>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_storeu_si32</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__storeu_si32</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__storeu_si32</name><operator>*</operator><operator>)</operator><name>__p</name><operator>)</operator><operator>-&gt;</operator><name>__v</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>__v4si</name><operator>)</operator><name>__b</name><operator>)</operator><index>[<expr><literal type="number">0</literal></expr>]</index></expr>;</expr_stmt>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_storeu_si16</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__storeu_si16</name> <block>{
<decl_stmt><decl><type><name>short</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__storeu_si16</name><operator>*</operator><operator>)</operator><name>__p</name><operator>)</operator><operator>-&gt;</operator><name>__v</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__b</name><operator>)</operator><index>[<expr><literal type="number">0</literal></expr>]</index></expr>;</expr_stmt>
</block_content>}</block></function>






















<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_maskmoveu_si128</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__d</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__n</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_maskmovdqu</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__d</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__n</name></expr></argument>, <argument><expr><name>__p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_storel_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i_u</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__mm_storel_epi64_struct</name> <block>{
<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>__u</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__mm_storel_epi64_struct</name><operator>*</operator><operator>)</operator><name>__p</name><operator>)</operator><operator>-&gt;</operator><name>__u</name> <operator>=</operator> <name><name>__a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</expr_stmt>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_stream_pd</name><parameter_list>(<parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_nontemporal_store</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>*</operator><operator>)</operator><name>__p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_stream_si128</name><parameter_list>(<parameter><decl><type><name>__m128i</name> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_nontemporal_store</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>*</operator><operator>)</operator><name>__p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>














<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>void</name></type> <name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__always_inline__</name><operator>,</operator> <name>__nodebug__</name><operator>,</operator> <call><name>__target__</name><argument_list>(<argument><expr><literal type="string">"sse2"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list>
<name>_mm_stream_si32</name><argument_list>(<argument><expr><name>int</name> <operator>*</operator><name>__p</name></expr></argument>, <argument><expr><name>int</name> <name>__a</name></expr></argument>)</argument_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_movnti</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></decl></decl_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>













<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>void</name></type> <name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__always_inline__</name><operator>,</operator> <name>__nodebug__</name><operator>,</operator> <call><name>__target__</name><argument_list>(<argument><expr><literal type="string">"sse2"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list>
<name>_mm_stream_si64</name><argument_list>(<argument><expr><name>long</name> <name>long</name> <operator>*</operator><name>__p</name></expr></argument>, <argument><expr><name>long</name> <name>long</name> <name>__a</name></expr></argument>)</argument_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_movnti64</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></decl></decl_stmt>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>











<function_decl><type><name>void</name></type> <name>_mm_clflush</name><parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type> <name>__p</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>_mm_lfence</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>void</name></type> <name>_mm_mfence</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>























<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_packs_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_packsswb128</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>























<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_packs_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_packssdw128</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>























<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_packus_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_packuswb128</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>























<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_extract_epi16</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(int)(unsigned short)__builtin_ia32_vec_ext_v8hi((__v8hi)(__m128i)(a), (int)(imm))</cpp:value></cpp:define>























<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_insert_epi16</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_vec_set_v8hi((__v8hi)(__m128i)(a), (int)(b), (int)(imm))</cpp:value></cpp:define>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_movemask_epi8</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_pmovmskb128</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>





























<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_shuffle_epi32</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_pshufd((__v4si)(__m128i)(a), (int)(imm))</cpp:value></cpp:define>





























<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_shufflelo_epi16</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_pshuflw((__v8hi)(__m128i)(a), (int)(imm))</cpp:value></cpp:define>





























<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_shufflehi_epi16</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_pshufhw((__v8hi)(__m128i)(a), (int)(imm))</cpp:value></cpp:define>































<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_unpackhi_epi8</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">11</literal></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">13</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">14</literal></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">15</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>






















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_unpackhi_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_unpackhi_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">4</literal><operator>+</operator><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal><operator>+</operator><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_unpackhi_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>






























<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_unpacklo_epi8</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>























<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_unpacklo_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_unpacklo_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal><operator>+</operator><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_unpacklo_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal><operator>+</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_movepi64_pi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><name><name>__a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_movpi64_epi64</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m128i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v2di</name><operator>)</operator><block>{ <expr><operator>(</operator><name>long</name> <name>long</name><operator>)</operator><name>__a</name></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_move_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_unpackhi_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_unpacklo_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal><operator>+</operator><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_movemask_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_movmskpd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


























<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_shuffle_pd</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_shufpd((__v2df)(__m128d)(a), (__v2df)(__m128d)(b), (int)(i))</cpp:value></cpp:define>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_castpd_ps</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><name>__a</name></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_castpd_si128</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><name>__a</name></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_castps_pd</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><name>__a</name></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_castps_si128</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><name>__a</name></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_castsi128_ps</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><name>__a</name></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_castsi128_pd</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><name>__a</name></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>








<function_decl><type><name>void</name></type> <name>_mm_pause</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__DEFAULT_FN_ATTRS</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__DEFAULT_FN_ATTRS_MMX</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_MM_SHUFFLE2</name><parameter_list>(<parameter><type><name>x</name></type></parameter>, <parameter><type><name>y</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((x) &lt;&lt; 1) | (y))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_MM_DENORMALS_ZERO_ON</name></cpp:macro> <cpp:value>(0x0040U)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_MM_DENORMALS_ZERO_OFF</name></cpp:macro> <cpp:value>(0x0000U)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_MM_DENORMALS_ZERO_MASK</name></cpp:macro> <cpp:value>(0x0040U)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_MM_GET_DENORMALS_ZERO_MODE</name><parameter_list>()</parameter_list></cpp:macro> <cpp:value>(_mm_getcsr() &amp; _MM_DENORMALS_ZERO_MASK)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_MM_SET_DENORMALS_ZERO_MODE</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(_mm_setcsr((_mm_getcsr() &amp; ~_MM_DENORMALS_ZERO_MASK) | (x)))</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
