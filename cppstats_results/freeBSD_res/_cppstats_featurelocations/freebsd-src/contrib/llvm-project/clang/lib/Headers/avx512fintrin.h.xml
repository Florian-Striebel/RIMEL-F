<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/lib/Headers/avx512fintrin.h">







<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__IMMINTRIN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:error>#<cpp:directive>error</cpp:directive> <cpp:literal>"Never use &lt;avx512fintrin.h&gt; directly; include &lt;immintrin.h&gt; instead."</cpp:literal></cpp:error>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__AVX512FINTRIN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__AVX512FINTRIN_H</name></cpp:macro></cpp:define>

<typedef>typedef <type><name>char</name> <name>__v64qi</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(64)));</typedef>
<typedef>typedef <type><name>short</name> <name>__v32hi</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(64)));</typedef>
<typedef>typedef <type><name>double</name> <name>__v8df</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(64)));</typedef>
<typedef>typedef <type><name>float</name> <name>__v16sf</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(64)));</typedef>
<typedef>typedef <type><name>long</name> <name>long</name> <name>__v8di</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(64)));</typedef>
<typedef>typedef <type><name>int</name> <name>__v16si</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(64)));</typedef>


<typedef>typedef <type><name>unsigned</name> <name>char</name> <name>__v64qu</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(64)));</typedef>
<typedef>typedef <type><name>unsigned</name> <name>short</name> <name>__v32hu</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(64)));</typedef>
<typedef>typedef <type><name>unsigned</name> <name>long</name> <name>long</name> <name>__v8du</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(64)));</typedef>
<typedef>typedef <type><name>unsigned</name> <name>int</name> <name>__v16su</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(64)));</typedef>

<typedef>typedef <type><name>float</name> <name>__m512</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(64)<operator>,</operator> __aligned__(64)));</typedef>
<typedef>typedef <type><name>double</name> <name>__m512d</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(64)<operator>,</operator> __aligned__(64)));</typedef>
<typedef>typedef <type><name>long</name> <name>long</name> <name>__m512i</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(64)<operator>,</operator> __aligned__(64)));</typedef>

<typedef>typedef <type><name>float</name> <name>__m512_u</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(64)<operator>,</operator> __aligned__(1)));</typedef>
<typedef>typedef <type><name>double</name> <name>__m512d_u</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(64)<operator>,</operator> __aligned__(1)));</typedef>
<typedef>typedef <type><name>long</name> <name>long</name> <name>__m512i_u</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(64)<operator>,</operator> __aligned__(1)));</typedef>

<typedef>typedef <type><name>unsigned</name> <name>char</name></type> <name>__mmask8</name>;</typedef>
<typedef>typedef <type><name>unsigned</name> <name>short</name></type> <name>__mmask16</name>;</typedef>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_MM_FROUND_TO_NEAREST_INT</name></cpp:macro> <cpp:value>0x00</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_MM_FROUND_TO_NEG_INF</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_MM_FROUND_TO_POS_INF</name></cpp:macro> <cpp:value>0x02</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_MM_FROUND_TO_ZERO</name></cpp:macro> <cpp:value>0x03</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_MM_FROUND_CUR_DIRECTION</name></cpp:macro> <cpp:value>0x04</cpp:value></cpp:define>


<typedef>typedef <type><enum>enum <block>{
<decl><name>_MM_CMPINT_EQ</name></decl>,
<decl><name>_MM_CMPINT_LT</name></decl>,
<decl><name>_MM_CMPINT_LE</name></decl>,
<decl><name>_MM_CMPINT_UNUSED</name></decl>,
<decl><name>_MM_CMPINT_NE</name></decl>,
<decl><name>_MM_CMPINT_NLT</name></decl>,
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_MM_CMPINT_GE</name></cpp:macro> <cpp:value>_MM_CMPINT_NLT</cpp:value></cpp:define>
<decl><name>_MM_CMPINT_NLE</name></decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_MM_CMPINT_GT</name></cpp:macro> <cpp:value>_MM_CMPINT_NLE</cpp:value></cpp:define>
}</block></enum></type> <name>_MM_CMPINT_ENUM</name>;</typedef>

<typedef>typedef <type><enum>enum
<block>{
<decl><name>_MM_PERM_AAAA</name> <init>= <expr><literal type="number">0x00</literal></expr></init></decl>, <decl><name>_MM_PERM_AAAB</name> <init>= <expr><literal type="number">0x01</literal></expr></init></decl>, <decl><name>_MM_PERM_AAAC</name> <init>= <expr><literal type="number">0x02</literal></expr></init></decl>,
<decl><name>_MM_PERM_AAAD</name> <init>= <expr><literal type="number">0x03</literal></expr></init></decl>, <decl><name>_MM_PERM_AABA</name> <init>= <expr><literal type="number">0x04</literal></expr></init></decl>, <decl><name>_MM_PERM_AABB</name> <init>= <expr><literal type="number">0x05</literal></expr></init></decl>,
<decl><name>_MM_PERM_AABC</name> <init>= <expr><literal type="number">0x06</literal></expr></init></decl>, <decl><name>_MM_PERM_AABD</name> <init>= <expr><literal type="number">0x07</literal></expr></init></decl>, <decl><name>_MM_PERM_AACA</name> <init>= <expr><literal type="number">0x08</literal></expr></init></decl>,
<decl><name>_MM_PERM_AACB</name> <init>= <expr><literal type="number">0x09</literal></expr></init></decl>, <decl><name>_MM_PERM_AACC</name> <init>= <expr><literal type="number">0x0A</literal></expr></init></decl>, <decl><name>_MM_PERM_AACD</name> <init>= <expr><literal type="number">0x0B</literal></expr></init></decl>,
<decl><name>_MM_PERM_AADA</name> <init>= <expr><literal type="number">0x0C</literal></expr></init></decl>, <decl><name>_MM_PERM_AADB</name> <init>= <expr><literal type="number">0x0D</literal></expr></init></decl>, <decl><name>_MM_PERM_AADC</name> <init>= <expr><literal type="number">0x0E</literal></expr></init></decl>,
<decl><name>_MM_PERM_AADD</name> <init>= <expr><literal type="number">0x0F</literal></expr></init></decl>, <decl><name>_MM_PERM_ABAA</name> <init>= <expr><literal type="number">0x10</literal></expr></init></decl>, <decl><name>_MM_PERM_ABAB</name> <init>= <expr><literal type="number">0x11</literal></expr></init></decl>,
<decl><name>_MM_PERM_ABAC</name> <init>= <expr><literal type="number">0x12</literal></expr></init></decl>, <decl><name>_MM_PERM_ABAD</name> <init>= <expr><literal type="number">0x13</literal></expr></init></decl>, <decl><name>_MM_PERM_ABBA</name> <init>= <expr><literal type="number">0x14</literal></expr></init></decl>,
<decl><name>_MM_PERM_ABBB</name> <init>= <expr><literal type="number">0x15</literal></expr></init></decl>, <decl><name>_MM_PERM_ABBC</name> <init>= <expr><literal type="number">0x16</literal></expr></init></decl>, <decl><name>_MM_PERM_ABBD</name> <init>= <expr><literal type="number">0x17</literal></expr></init></decl>,
<decl><name>_MM_PERM_ABCA</name> <init>= <expr><literal type="number">0x18</literal></expr></init></decl>, <decl><name>_MM_PERM_ABCB</name> <init>= <expr><literal type="number">0x19</literal></expr></init></decl>, <decl><name>_MM_PERM_ABCC</name> <init>= <expr><literal type="number">0x1A</literal></expr></init></decl>,
<decl><name>_MM_PERM_ABCD</name> <init>= <expr><literal type="number">0x1B</literal></expr></init></decl>, <decl><name>_MM_PERM_ABDA</name> <init>= <expr><literal type="number">0x1C</literal></expr></init></decl>, <decl><name>_MM_PERM_ABDB</name> <init>= <expr><literal type="number">0x1D</literal></expr></init></decl>,
<decl><name>_MM_PERM_ABDC</name> <init>= <expr><literal type="number">0x1E</literal></expr></init></decl>, <decl><name>_MM_PERM_ABDD</name> <init>= <expr><literal type="number">0x1F</literal></expr></init></decl>, <decl><name>_MM_PERM_ACAA</name> <init>= <expr><literal type="number">0x20</literal></expr></init></decl>,
<decl><name>_MM_PERM_ACAB</name> <init>= <expr><literal type="number">0x21</literal></expr></init></decl>, <decl><name>_MM_PERM_ACAC</name> <init>= <expr><literal type="number">0x22</literal></expr></init></decl>, <decl><name>_MM_PERM_ACAD</name> <init>= <expr><literal type="number">0x23</literal></expr></init></decl>,
<decl><name>_MM_PERM_ACBA</name> <init>= <expr><literal type="number">0x24</literal></expr></init></decl>, <decl><name>_MM_PERM_ACBB</name> <init>= <expr><literal type="number">0x25</literal></expr></init></decl>, <decl><name>_MM_PERM_ACBC</name> <init>= <expr><literal type="number">0x26</literal></expr></init></decl>,
<decl><name>_MM_PERM_ACBD</name> <init>= <expr><literal type="number">0x27</literal></expr></init></decl>, <decl><name>_MM_PERM_ACCA</name> <init>= <expr><literal type="number">0x28</literal></expr></init></decl>, <decl><name>_MM_PERM_ACCB</name> <init>= <expr><literal type="number">0x29</literal></expr></init></decl>,
<decl><name>_MM_PERM_ACCC</name> <init>= <expr><literal type="number">0x2A</literal></expr></init></decl>, <decl><name>_MM_PERM_ACCD</name> <init>= <expr><literal type="number">0x2B</literal></expr></init></decl>, <decl><name>_MM_PERM_ACDA</name> <init>= <expr><literal type="number">0x2C</literal></expr></init></decl>,
<decl><name>_MM_PERM_ACDB</name> <init>= <expr><literal type="number">0x2D</literal></expr></init></decl>, <decl><name>_MM_PERM_ACDC</name> <init>= <expr><literal type="number">0x2E</literal></expr></init></decl>, <decl><name>_MM_PERM_ACDD</name> <init>= <expr><literal type="number">0x2F</literal></expr></init></decl>,
<decl><name>_MM_PERM_ADAA</name> <init>= <expr><literal type="number">0x30</literal></expr></init></decl>, <decl><name>_MM_PERM_ADAB</name> <init>= <expr><literal type="number">0x31</literal></expr></init></decl>, <decl><name>_MM_PERM_ADAC</name> <init>= <expr><literal type="number">0x32</literal></expr></init></decl>,
<decl><name>_MM_PERM_ADAD</name> <init>= <expr><literal type="number">0x33</literal></expr></init></decl>, <decl><name>_MM_PERM_ADBA</name> <init>= <expr><literal type="number">0x34</literal></expr></init></decl>, <decl><name>_MM_PERM_ADBB</name> <init>= <expr><literal type="number">0x35</literal></expr></init></decl>,
<decl><name>_MM_PERM_ADBC</name> <init>= <expr><literal type="number">0x36</literal></expr></init></decl>, <decl><name>_MM_PERM_ADBD</name> <init>= <expr><literal type="number">0x37</literal></expr></init></decl>, <decl><name>_MM_PERM_ADCA</name> <init>= <expr><literal type="number">0x38</literal></expr></init></decl>,
<decl><name>_MM_PERM_ADCB</name> <init>= <expr><literal type="number">0x39</literal></expr></init></decl>, <decl><name>_MM_PERM_ADCC</name> <init>= <expr><literal type="number">0x3A</literal></expr></init></decl>, <decl><name>_MM_PERM_ADCD</name> <init>= <expr><literal type="number">0x3B</literal></expr></init></decl>,
<decl><name>_MM_PERM_ADDA</name> <init>= <expr><literal type="number">0x3C</literal></expr></init></decl>, <decl><name>_MM_PERM_ADDB</name> <init>= <expr><literal type="number">0x3D</literal></expr></init></decl>, <decl><name>_MM_PERM_ADDC</name> <init>= <expr><literal type="number">0x3E</literal></expr></init></decl>,
<decl><name>_MM_PERM_ADDD</name> <init>= <expr><literal type="number">0x3F</literal></expr></init></decl>, <decl><name>_MM_PERM_BAAA</name> <init>= <expr><literal type="number">0x40</literal></expr></init></decl>, <decl><name>_MM_PERM_BAAB</name> <init>= <expr><literal type="number">0x41</literal></expr></init></decl>,
<decl><name>_MM_PERM_BAAC</name> <init>= <expr><literal type="number">0x42</literal></expr></init></decl>, <decl><name>_MM_PERM_BAAD</name> <init>= <expr><literal type="number">0x43</literal></expr></init></decl>, <decl><name>_MM_PERM_BABA</name> <init>= <expr><literal type="number">0x44</literal></expr></init></decl>,
<decl><name>_MM_PERM_BABB</name> <init>= <expr><literal type="number">0x45</literal></expr></init></decl>, <decl><name>_MM_PERM_BABC</name> <init>= <expr><literal type="number">0x46</literal></expr></init></decl>, <decl><name>_MM_PERM_BABD</name> <init>= <expr><literal type="number">0x47</literal></expr></init></decl>,
<decl><name>_MM_PERM_BACA</name> <init>= <expr><literal type="number">0x48</literal></expr></init></decl>, <decl><name>_MM_PERM_BACB</name> <init>= <expr><literal type="number">0x49</literal></expr></init></decl>, <decl><name>_MM_PERM_BACC</name> <init>= <expr><literal type="number">0x4A</literal></expr></init></decl>,
<decl><name>_MM_PERM_BACD</name> <init>= <expr><literal type="number">0x4B</literal></expr></init></decl>, <decl><name>_MM_PERM_BADA</name> <init>= <expr><literal type="number">0x4C</literal></expr></init></decl>, <decl><name>_MM_PERM_BADB</name> <init>= <expr><literal type="number">0x4D</literal></expr></init></decl>,
<decl><name>_MM_PERM_BADC</name> <init>= <expr><literal type="number">0x4E</literal></expr></init></decl>, <decl><name>_MM_PERM_BADD</name> <init>= <expr><literal type="number">0x4F</literal></expr></init></decl>, <decl><name>_MM_PERM_BBAA</name> <init>= <expr><literal type="number">0x50</literal></expr></init></decl>,
<decl><name>_MM_PERM_BBAB</name> <init>= <expr><literal type="number">0x51</literal></expr></init></decl>, <decl><name>_MM_PERM_BBAC</name> <init>= <expr><literal type="number">0x52</literal></expr></init></decl>, <decl><name>_MM_PERM_BBAD</name> <init>= <expr><literal type="number">0x53</literal></expr></init></decl>,
<decl><name>_MM_PERM_BBBA</name> <init>= <expr><literal type="number">0x54</literal></expr></init></decl>, <decl><name>_MM_PERM_BBBB</name> <init>= <expr><literal type="number">0x55</literal></expr></init></decl>, <decl><name>_MM_PERM_BBBC</name> <init>= <expr><literal type="number">0x56</literal></expr></init></decl>,
<decl><name>_MM_PERM_BBBD</name> <init>= <expr><literal type="number">0x57</literal></expr></init></decl>, <decl><name>_MM_PERM_BBCA</name> <init>= <expr><literal type="number">0x58</literal></expr></init></decl>, <decl><name>_MM_PERM_BBCB</name> <init>= <expr><literal type="number">0x59</literal></expr></init></decl>,
<decl><name>_MM_PERM_BBCC</name> <init>= <expr><literal type="number">0x5A</literal></expr></init></decl>, <decl><name>_MM_PERM_BBCD</name> <init>= <expr><literal type="number">0x5B</literal></expr></init></decl>, <decl><name>_MM_PERM_BBDA</name> <init>= <expr><literal type="number">0x5C</literal></expr></init></decl>,
<decl><name>_MM_PERM_BBDB</name> <init>= <expr><literal type="number">0x5D</literal></expr></init></decl>, <decl><name>_MM_PERM_BBDC</name> <init>= <expr><literal type="number">0x5E</literal></expr></init></decl>, <decl><name>_MM_PERM_BBDD</name> <init>= <expr><literal type="number">0x5F</literal></expr></init></decl>,
<decl><name>_MM_PERM_BCAA</name> <init>= <expr><literal type="number">0x60</literal></expr></init></decl>, <decl><name>_MM_PERM_BCAB</name> <init>= <expr><literal type="number">0x61</literal></expr></init></decl>, <decl><name>_MM_PERM_BCAC</name> <init>= <expr><literal type="number">0x62</literal></expr></init></decl>,
<decl><name>_MM_PERM_BCAD</name> <init>= <expr><literal type="number">0x63</literal></expr></init></decl>, <decl><name>_MM_PERM_BCBA</name> <init>= <expr><literal type="number">0x64</literal></expr></init></decl>, <decl><name>_MM_PERM_BCBB</name> <init>= <expr><literal type="number">0x65</literal></expr></init></decl>,
<decl><name>_MM_PERM_BCBC</name> <init>= <expr><literal type="number">0x66</literal></expr></init></decl>, <decl><name>_MM_PERM_BCBD</name> <init>= <expr><literal type="number">0x67</literal></expr></init></decl>, <decl><name>_MM_PERM_BCCA</name> <init>= <expr><literal type="number">0x68</literal></expr></init></decl>,
<decl><name>_MM_PERM_BCCB</name> <init>= <expr><literal type="number">0x69</literal></expr></init></decl>, <decl><name>_MM_PERM_BCCC</name> <init>= <expr><literal type="number">0x6A</literal></expr></init></decl>, <decl><name>_MM_PERM_BCCD</name> <init>= <expr><literal type="number">0x6B</literal></expr></init></decl>,
<decl><name>_MM_PERM_BCDA</name> <init>= <expr><literal type="number">0x6C</literal></expr></init></decl>, <decl><name>_MM_PERM_BCDB</name> <init>= <expr><literal type="number">0x6D</literal></expr></init></decl>, <decl><name>_MM_PERM_BCDC</name> <init>= <expr><literal type="number">0x6E</literal></expr></init></decl>,
<decl><name>_MM_PERM_BCDD</name> <init>= <expr><literal type="number">0x6F</literal></expr></init></decl>, <decl><name>_MM_PERM_BDAA</name> <init>= <expr><literal type="number">0x70</literal></expr></init></decl>, <decl><name>_MM_PERM_BDAB</name> <init>= <expr><literal type="number">0x71</literal></expr></init></decl>,
<decl><name>_MM_PERM_BDAC</name> <init>= <expr><literal type="number">0x72</literal></expr></init></decl>, <decl><name>_MM_PERM_BDAD</name> <init>= <expr><literal type="number">0x73</literal></expr></init></decl>, <decl><name>_MM_PERM_BDBA</name> <init>= <expr><literal type="number">0x74</literal></expr></init></decl>,
<decl><name>_MM_PERM_BDBB</name> <init>= <expr><literal type="number">0x75</literal></expr></init></decl>, <decl><name>_MM_PERM_BDBC</name> <init>= <expr><literal type="number">0x76</literal></expr></init></decl>, <decl><name>_MM_PERM_BDBD</name> <init>= <expr><literal type="number">0x77</literal></expr></init></decl>,
<decl><name>_MM_PERM_BDCA</name> <init>= <expr><literal type="number">0x78</literal></expr></init></decl>, <decl><name>_MM_PERM_BDCB</name> <init>= <expr><literal type="number">0x79</literal></expr></init></decl>, <decl><name>_MM_PERM_BDCC</name> <init>= <expr><literal type="number">0x7A</literal></expr></init></decl>,
<decl><name>_MM_PERM_BDCD</name> <init>= <expr><literal type="number">0x7B</literal></expr></init></decl>, <decl><name>_MM_PERM_BDDA</name> <init>= <expr><literal type="number">0x7C</literal></expr></init></decl>, <decl><name>_MM_PERM_BDDB</name> <init>= <expr><literal type="number">0x7D</literal></expr></init></decl>,
<decl><name>_MM_PERM_BDDC</name> <init>= <expr><literal type="number">0x7E</literal></expr></init></decl>, <decl><name>_MM_PERM_BDDD</name> <init>= <expr><literal type="number">0x7F</literal></expr></init></decl>, <decl><name>_MM_PERM_CAAA</name> <init>= <expr><literal type="number">0x80</literal></expr></init></decl>,
<decl><name>_MM_PERM_CAAB</name> <init>= <expr><literal type="number">0x81</literal></expr></init></decl>, <decl><name>_MM_PERM_CAAC</name> <init>= <expr><literal type="number">0x82</literal></expr></init></decl>, <decl><name>_MM_PERM_CAAD</name> <init>= <expr><literal type="number">0x83</literal></expr></init></decl>,
<decl><name>_MM_PERM_CABA</name> <init>= <expr><literal type="number">0x84</literal></expr></init></decl>, <decl><name>_MM_PERM_CABB</name> <init>= <expr><literal type="number">0x85</literal></expr></init></decl>, <decl><name>_MM_PERM_CABC</name> <init>= <expr><literal type="number">0x86</literal></expr></init></decl>,
<decl><name>_MM_PERM_CABD</name> <init>= <expr><literal type="number">0x87</literal></expr></init></decl>, <decl><name>_MM_PERM_CACA</name> <init>= <expr><literal type="number">0x88</literal></expr></init></decl>, <decl><name>_MM_PERM_CACB</name> <init>= <expr><literal type="number">0x89</literal></expr></init></decl>,
<decl><name>_MM_PERM_CACC</name> <init>= <expr><literal type="number">0x8A</literal></expr></init></decl>, <decl><name>_MM_PERM_CACD</name> <init>= <expr><literal type="number">0x8B</literal></expr></init></decl>, <decl><name>_MM_PERM_CADA</name> <init>= <expr><literal type="number">0x8C</literal></expr></init></decl>,
<decl><name>_MM_PERM_CADB</name> <init>= <expr><literal type="number">0x8D</literal></expr></init></decl>, <decl><name>_MM_PERM_CADC</name> <init>= <expr><literal type="number">0x8E</literal></expr></init></decl>, <decl><name>_MM_PERM_CADD</name> <init>= <expr><literal type="number">0x8F</literal></expr></init></decl>,
<decl><name>_MM_PERM_CBAA</name> <init>= <expr><literal type="number">0x90</literal></expr></init></decl>, <decl><name>_MM_PERM_CBAB</name> <init>= <expr><literal type="number">0x91</literal></expr></init></decl>, <decl><name>_MM_PERM_CBAC</name> <init>= <expr><literal type="number">0x92</literal></expr></init></decl>,
<decl><name>_MM_PERM_CBAD</name> <init>= <expr><literal type="number">0x93</literal></expr></init></decl>, <decl><name>_MM_PERM_CBBA</name> <init>= <expr><literal type="number">0x94</literal></expr></init></decl>, <decl><name>_MM_PERM_CBBB</name> <init>= <expr><literal type="number">0x95</literal></expr></init></decl>,
<decl><name>_MM_PERM_CBBC</name> <init>= <expr><literal type="number">0x96</literal></expr></init></decl>, <decl><name>_MM_PERM_CBBD</name> <init>= <expr><literal type="number">0x97</literal></expr></init></decl>, <decl><name>_MM_PERM_CBCA</name> <init>= <expr><literal type="number">0x98</literal></expr></init></decl>,
<decl><name>_MM_PERM_CBCB</name> <init>= <expr><literal type="number">0x99</literal></expr></init></decl>, <decl><name>_MM_PERM_CBCC</name> <init>= <expr><literal type="number">0x9A</literal></expr></init></decl>, <decl><name>_MM_PERM_CBCD</name> <init>= <expr><literal type="number">0x9B</literal></expr></init></decl>,
<decl><name>_MM_PERM_CBDA</name> <init>= <expr><literal type="number">0x9C</literal></expr></init></decl>, <decl><name>_MM_PERM_CBDB</name> <init>= <expr><literal type="number">0x9D</literal></expr></init></decl>, <decl><name>_MM_PERM_CBDC</name> <init>= <expr><literal type="number">0x9E</literal></expr></init></decl>,
<decl><name>_MM_PERM_CBDD</name> <init>= <expr><literal type="number">0x9F</literal></expr></init></decl>, <decl><name>_MM_PERM_CCAA</name> <init>= <expr><literal type="number">0xA0</literal></expr></init></decl>, <decl><name>_MM_PERM_CCAB</name> <init>= <expr><literal type="number">0xA1</literal></expr></init></decl>,
<decl><name>_MM_PERM_CCAC</name> <init>= <expr><literal type="number">0xA2</literal></expr></init></decl>, <decl><name>_MM_PERM_CCAD</name> <init>= <expr><literal type="number">0xA3</literal></expr></init></decl>, <decl><name>_MM_PERM_CCBA</name> <init>= <expr><literal type="number">0xA4</literal></expr></init></decl>,
<decl><name>_MM_PERM_CCBB</name> <init>= <expr><literal type="number">0xA5</literal></expr></init></decl>, <decl><name>_MM_PERM_CCBC</name> <init>= <expr><literal type="number">0xA6</literal></expr></init></decl>, <decl><name>_MM_PERM_CCBD</name> <init>= <expr><literal type="number">0xA7</literal></expr></init></decl>,
<decl><name>_MM_PERM_CCCA</name> <init>= <expr><literal type="number">0xA8</literal></expr></init></decl>, <decl><name>_MM_PERM_CCCB</name> <init>= <expr><literal type="number">0xA9</literal></expr></init></decl>, <decl><name>_MM_PERM_CCCC</name> <init>= <expr><literal type="number">0xAA</literal></expr></init></decl>,
<decl><name>_MM_PERM_CCCD</name> <init>= <expr><literal type="number">0xAB</literal></expr></init></decl>, <decl><name>_MM_PERM_CCDA</name> <init>= <expr><literal type="number">0xAC</literal></expr></init></decl>, <decl><name>_MM_PERM_CCDB</name> <init>= <expr><literal type="number">0xAD</literal></expr></init></decl>,
<decl><name>_MM_PERM_CCDC</name> <init>= <expr><literal type="number">0xAE</literal></expr></init></decl>, <decl><name>_MM_PERM_CCDD</name> <init>= <expr><literal type="number">0xAF</literal></expr></init></decl>, <decl><name>_MM_PERM_CDAA</name> <init>= <expr><literal type="number">0xB0</literal></expr></init></decl>,
<decl><name>_MM_PERM_CDAB</name> <init>= <expr><literal type="number">0xB1</literal></expr></init></decl>, <decl><name>_MM_PERM_CDAC</name> <init>= <expr><literal type="number">0xB2</literal></expr></init></decl>, <decl><name>_MM_PERM_CDAD</name> <init>= <expr><literal type="number">0xB3</literal></expr></init></decl>,
<decl><name>_MM_PERM_CDBA</name> <init>= <expr><literal type="number">0xB4</literal></expr></init></decl>, <decl><name>_MM_PERM_CDBB</name> <init>= <expr><literal type="number">0xB5</literal></expr></init></decl>, <decl><name>_MM_PERM_CDBC</name> <init>= <expr><literal type="number">0xB6</literal></expr></init></decl>,
<decl><name>_MM_PERM_CDBD</name> <init>= <expr><literal type="number">0xB7</literal></expr></init></decl>, <decl><name>_MM_PERM_CDCA</name> <init>= <expr><literal type="number">0xB8</literal></expr></init></decl>, <decl><name>_MM_PERM_CDCB</name> <init>= <expr><literal type="number">0xB9</literal></expr></init></decl>,
<decl><name>_MM_PERM_CDCC</name> <init>= <expr><literal type="number">0xBA</literal></expr></init></decl>, <decl><name>_MM_PERM_CDCD</name> <init>= <expr><literal type="number">0xBB</literal></expr></init></decl>, <decl><name>_MM_PERM_CDDA</name> <init>= <expr><literal type="number">0xBC</literal></expr></init></decl>,
<decl><name>_MM_PERM_CDDB</name> <init>= <expr><literal type="number">0xBD</literal></expr></init></decl>, <decl><name>_MM_PERM_CDDC</name> <init>= <expr><literal type="number">0xBE</literal></expr></init></decl>, <decl><name>_MM_PERM_CDDD</name> <init>= <expr><literal type="number">0xBF</literal></expr></init></decl>,
<decl><name>_MM_PERM_DAAA</name> <init>= <expr><literal type="number">0xC0</literal></expr></init></decl>, <decl><name>_MM_PERM_DAAB</name> <init>= <expr><literal type="number">0xC1</literal></expr></init></decl>, <decl><name>_MM_PERM_DAAC</name> <init>= <expr><literal type="number">0xC2</literal></expr></init></decl>,
<decl><name>_MM_PERM_DAAD</name> <init>= <expr><literal type="number">0xC3</literal></expr></init></decl>, <decl><name>_MM_PERM_DABA</name> <init>= <expr><literal type="number">0xC4</literal></expr></init></decl>, <decl><name>_MM_PERM_DABB</name> <init>= <expr><literal type="number">0xC5</literal></expr></init></decl>,
<decl><name>_MM_PERM_DABC</name> <init>= <expr><literal type="number">0xC6</literal></expr></init></decl>, <decl><name>_MM_PERM_DABD</name> <init>= <expr><literal type="number">0xC7</literal></expr></init></decl>, <decl><name>_MM_PERM_DACA</name> <init>= <expr><literal type="number">0xC8</literal></expr></init></decl>,
<decl><name>_MM_PERM_DACB</name> <init>= <expr><literal type="number">0xC9</literal></expr></init></decl>, <decl><name>_MM_PERM_DACC</name> <init>= <expr><literal type="number">0xCA</literal></expr></init></decl>, <decl><name>_MM_PERM_DACD</name> <init>= <expr><literal type="number">0xCB</literal></expr></init></decl>,
<decl><name>_MM_PERM_DADA</name> <init>= <expr><literal type="number">0xCC</literal></expr></init></decl>, <decl><name>_MM_PERM_DADB</name> <init>= <expr><literal type="number">0xCD</literal></expr></init></decl>, <decl><name>_MM_PERM_DADC</name> <init>= <expr><literal type="number">0xCE</literal></expr></init></decl>,
<decl><name>_MM_PERM_DADD</name> <init>= <expr><literal type="number">0xCF</literal></expr></init></decl>, <decl><name>_MM_PERM_DBAA</name> <init>= <expr><literal type="number">0xD0</literal></expr></init></decl>, <decl><name>_MM_PERM_DBAB</name> <init>= <expr><literal type="number">0xD1</literal></expr></init></decl>,
<decl><name>_MM_PERM_DBAC</name> <init>= <expr><literal type="number">0xD2</literal></expr></init></decl>, <decl><name>_MM_PERM_DBAD</name> <init>= <expr><literal type="number">0xD3</literal></expr></init></decl>, <decl><name>_MM_PERM_DBBA</name> <init>= <expr><literal type="number">0xD4</literal></expr></init></decl>,
<decl><name>_MM_PERM_DBBB</name> <init>= <expr><literal type="number">0xD5</literal></expr></init></decl>, <decl><name>_MM_PERM_DBBC</name> <init>= <expr><literal type="number">0xD6</literal></expr></init></decl>, <decl><name>_MM_PERM_DBBD</name> <init>= <expr><literal type="number">0xD7</literal></expr></init></decl>,
<decl><name>_MM_PERM_DBCA</name> <init>= <expr><literal type="number">0xD8</literal></expr></init></decl>, <decl><name>_MM_PERM_DBCB</name> <init>= <expr><literal type="number">0xD9</literal></expr></init></decl>, <decl><name>_MM_PERM_DBCC</name> <init>= <expr><literal type="number">0xDA</literal></expr></init></decl>,
<decl><name>_MM_PERM_DBCD</name> <init>= <expr><literal type="number">0xDB</literal></expr></init></decl>, <decl><name>_MM_PERM_DBDA</name> <init>= <expr><literal type="number">0xDC</literal></expr></init></decl>, <decl><name>_MM_PERM_DBDB</name> <init>= <expr><literal type="number">0xDD</literal></expr></init></decl>,
<decl><name>_MM_PERM_DBDC</name> <init>= <expr><literal type="number">0xDE</literal></expr></init></decl>, <decl><name>_MM_PERM_DBDD</name> <init>= <expr><literal type="number">0xDF</literal></expr></init></decl>, <decl><name>_MM_PERM_DCAA</name> <init>= <expr><literal type="number">0xE0</literal></expr></init></decl>,
<decl><name>_MM_PERM_DCAB</name> <init>= <expr><literal type="number">0xE1</literal></expr></init></decl>, <decl><name>_MM_PERM_DCAC</name> <init>= <expr><literal type="number">0xE2</literal></expr></init></decl>, <decl><name>_MM_PERM_DCAD</name> <init>= <expr><literal type="number">0xE3</literal></expr></init></decl>,
<decl><name>_MM_PERM_DCBA</name> <init>= <expr><literal type="number">0xE4</literal></expr></init></decl>, <decl><name>_MM_PERM_DCBB</name> <init>= <expr><literal type="number">0xE5</literal></expr></init></decl>, <decl><name>_MM_PERM_DCBC</name> <init>= <expr><literal type="number">0xE6</literal></expr></init></decl>,
<decl><name>_MM_PERM_DCBD</name> <init>= <expr><literal type="number">0xE7</literal></expr></init></decl>, <decl><name>_MM_PERM_DCCA</name> <init>= <expr><literal type="number">0xE8</literal></expr></init></decl>, <decl><name>_MM_PERM_DCCB</name> <init>= <expr><literal type="number">0xE9</literal></expr></init></decl>,
<decl><name>_MM_PERM_DCCC</name> <init>= <expr><literal type="number">0xEA</literal></expr></init></decl>, <decl><name>_MM_PERM_DCCD</name> <init>= <expr><literal type="number">0xEB</literal></expr></init></decl>, <decl><name>_MM_PERM_DCDA</name> <init>= <expr><literal type="number">0xEC</literal></expr></init></decl>,
<decl><name>_MM_PERM_DCDB</name> <init>= <expr><literal type="number">0xED</literal></expr></init></decl>, <decl><name>_MM_PERM_DCDC</name> <init>= <expr><literal type="number">0xEE</literal></expr></init></decl>, <decl><name>_MM_PERM_DCDD</name> <init>= <expr><literal type="number">0xEF</literal></expr></init></decl>,
<decl><name>_MM_PERM_DDAA</name> <init>= <expr><literal type="number">0xF0</literal></expr></init></decl>, <decl><name>_MM_PERM_DDAB</name> <init>= <expr><literal type="number">0xF1</literal></expr></init></decl>, <decl><name>_MM_PERM_DDAC</name> <init>= <expr><literal type="number">0xF2</literal></expr></init></decl>,
<decl><name>_MM_PERM_DDAD</name> <init>= <expr><literal type="number">0xF3</literal></expr></init></decl>, <decl><name>_MM_PERM_DDBA</name> <init>= <expr><literal type="number">0xF4</literal></expr></init></decl>, <decl><name>_MM_PERM_DDBB</name> <init>= <expr><literal type="number">0xF5</literal></expr></init></decl>,
<decl><name>_MM_PERM_DDBC</name> <init>= <expr><literal type="number">0xF6</literal></expr></init></decl>, <decl><name>_MM_PERM_DDBD</name> <init>= <expr><literal type="number">0xF7</literal></expr></init></decl>, <decl><name>_MM_PERM_DDCA</name> <init>= <expr><literal type="number">0xF8</literal></expr></init></decl>,
<decl><name>_MM_PERM_DDCB</name> <init>= <expr><literal type="number">0xF9</literal></expr></init></decl>, <decl><name>_MM_PERM_DDCC</name> <init>= <expr><literal type="number">0xFA</literal></expr></init></decl>, <decl><name>_MM_PERM_DDCD</name> <init>= <expr><literal type="number">0xFB</literal></expr></init></decl>,
<decl><name>_MM_PERM_DDDA</name> <init>= <expr><literal type="number">0xFC</literal></expr></init></decl>, <decl><name>_MM_PERM_DDDB</name> <init>= <expr><literal type="number">0xFD</literal></expr></init></decl>, <decl><name>_MM_PERM_DDDC</name> <init>= <expr><literal type="number">0xFE</literal></expr></init></decl>,
<decl><name>_MM_PERM_DDDD</name> <init>= <expr><literal type="number">0xFF</literal></expr></init></decl>
}</block></enum></type> <name>_MM_PERM_ENUM</name>;</typedef>

<typedef>typedef <type><enum>enum
<block>{
<decl><name>_MM_MANT_NORM_1_2</name></decl>,
<decl><name>_MM_MANT_NORM_p5_2</name></decl>,
<decl><name>_MM_MANT_NORM_p5_1</name></decl>,
<decl><name>_MM_MANT_NORM_p75_1p5</name></decl>
}</block></enum></type> <name>_MM_MANTISSA_NORM_ENUM</name>;</typedef>

<typedef>typedef <type><enum>enum
<block>{
<decl><name>_MM_MANT_SIGN_src</name></decl>,
<decl><name>_MM_MANT_SIGN_zero</name></decl>,
<decl><name>_MM_MANT_SIGN_nan</name></decl>
}</block></enum></type> <name>_MM_MANTISSA_SIGN_ENUM</name>;</typedef>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEFAULT_FN_ATTRS512</name></cpp:macro> <cpp:value>__attribute__((__always_inline__, __nodebug__, __target__("avx512f"), __min_vector_width__(512)))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEFAULT_FN_ATTRS128</name></cpp:macro> <cpp:value>__attribute__((__always_inline__, __nodebug__, __target__("avx512f"), __min_vector_width__(128)))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEFAULT_FN_ATTRS</name></cpp:macro> <cpp:value>__attribute__((__always_inline__, __nodebug__, __target__("avx512f")))</cpp:value></cpp:define>



<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_setzero_si512</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m512i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v8di</name><operator>)</operator><block>{ <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr> }</block></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_setzero_epi32</name></cpp:macro> <cpp:value>_mm512_setzero_si512</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_undefined_pd</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_undef512</name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_undefined</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_undef512</name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_undefined_ps</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_undef512</name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_undefined_epi32</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_undef512</name><argument_list>()</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_broadcastd_epi32</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_broadcastd_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <call><name>_mm512_broadcastd_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_broadcastd_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <call><name>_mm512_broadcastd_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_broadcastq_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_broadcastq_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <call><name>_mm512_broadcastq_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__O</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_broadcastq_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <call><name>_mm512_broadcastq_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_setzero_ps</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m512</argument>)</argument_list></macro><expr><block>{ <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>,
<expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr> }</block></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_setzero</name></cpp:macro> <cpp:value>_mm512_setzero_ps</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_setzero_pd</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m512d</argument>)</argument_list></macro><expr><block>{ <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr>, <expr><literal type="number">0.0</literal></expr> }</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_set1_ps</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__w</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m512</argument>)</argument_list></macro><expr><block>{ <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>,
<expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr> }</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_set1_pd</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__w</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m512d</argument>)</argument_list></macro><expr><block>{ <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr> }</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_set1_epi8</name><parameter_list>(<parameter><decl><type><name>char</name></type> <name>__w</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m512i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v64qi</name><operator>)</operator><block>{
<expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>,
<expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>,
<expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>,
<expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>,
<expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>,
<expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>,
<expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>,
<expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr> }</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_set1_epi16</name><parameter_list>(<parameter><decl><type><name>short</name></type> <name>__w</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m512i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v32hi</name><operator>)</operator><block>{
<expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>,
<expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>,
<expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>,
<expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr>, <expr><name>__w</name></expr> }</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_set1_epi32</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__s</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m512i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v16si</name><operator>)</operator><block>{
<expr><name>__s</name></expr>, <expr><name>__s</name></expr>, <expr><name>__s</name></expr>, <expr><name>__s</name></expr>, <expr><name>__s</name></expr>, <expr><name>__s</name></expr>, <expr><name>__s</name></expr>, <expr><name>__s</name></expr>,
<expr><name>__s</name></expr>, <expr><name>__s</name></expr>, <expr><name>__s</name></expr>, <expr><name>__s</name></expr>, <expr><name>__s</name></expr>, <expr><name>__s</name></expr>, <expr><name>__s</name></expr>, <expr><name>__s</name></expr> }</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_set1_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_set1_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_set1_epi64</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__d</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name><argument_list>(<argument>__m512i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v8di</name><operator>)</operator><block>{ <expr><name>__d</name></expr>, <expr><name>__d</name></expr>, <expr><name>__d</name></expr>, <expr><name>__d</name></expr>, <expr><name>__d</name></expr>, <expr><name>__d</name></expr>, <expr><name>__d</name></expr>, <expr><name>__d</name></expr> }</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_set1_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_set1_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_broadcastss_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_set4_epi32</name> <parameter_list>(<parameter><decl><type><name>int</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__D</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m512i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v16si</name><operator>)</operator>
<block>{ <expr><name>__D</name></expr>, <expr><name>__C</name></expr>, <expr><name>__B</name></expr>, <expr><name>__A</name></expr>, <expr><name>__D</name></expr>, <expr><name>__C</name></expr>, <expr><name>__B</name></expr>, <expr><name>__A</name></expr>,
<expr><name>__D</name></expr>, <expr><name>__C</name></expr>, <expr><name>__B</name></expr>, <expr><name>__A</name></expr>, <expr><name>__D</name></expr>, <expr><name>__C</name></expr>, <expr><name>__B</name></expr>, <expr><name>__A</name></expr> }</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_set4_epi64</name> <parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__C</name></decl></parameter>,
<parameter><decl><type><name>long</name> <name>long</name></type> <name>__D</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m512i</argument>)</argument_list></macro> <expr><operator>(</operator><name>__v8di</name><operator>)</operator>
<block>{ <expr><name>__D</name></expr>, <expr><name>__C</name></expr>, <expr><name>__B</name></expr>, <expr><name>__A</name></expr>, <expr><name>__D</name></expr>, <expr><name>__C</name></expr>, <expr><name>__B</name></expr>, <expr><name>__A</name></expr> }</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_set4_pd</name> <parameter_list>(<parameter><decl><type><name>double</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__D</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m512d</argument>)</argument_list></macro>
<expr><block>{ <expr><name>__D</name></expr>, <expr><name>__C</name></expr>, <expr><name>__B</name></expr>, <expr><name>__A</name></expr>, <expr><name>__D</name></expr>, <expr><name>__C</name></expr>, <expr><name>__B</name></expr>, <expr><name>__A</name></expr> }</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_set4_ps</name> <parameter_list>(<parameter><decl><type><name>float</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__D</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m512</argument>)</argument_list></macro>
<expr><block>{ <expr><name>__D</name></expr>, <expr><name>__C</name></expr>, <expr><name>__B</name></expr>, <expr><name>__A</name></expr>, <expr><name>__D</name></expr>, <expr><name>__C</name></expr>, <expr><name>__B</name></expr>, <expr><name>__A</name></expr>,
<expr><name>__D</name></expr>, <expr><name>__C</name></expr>, <expr><name>__B</name></expr>, <expr><name>__A</name></expr>, <expr><name>__D</name></expr>, <expr><name>__C</name></expr>, <expr><name>__B</name></expr>, <expr><name>__A</name></expr> }</block></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_setr4_epi32</name><parameter_list>(<parameter><type><name>e0</name></type></parameter>,<parameter><type><name>e1</name></type></parameter>,<parameter><type><name>e2</name></type></parameter>,<parameter><type><name>e3</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_set4_epi32((e3),(e2),(e1),(e0))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_setr4_epi64</name><parameter_list>(<parameter><type><name>e0</name></type></parameter>,<parameter><type><name>e1</name></type></parameter>,<parameter><type><name>e2</name></type></parameter>,<parameter><type><name>e3</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_set4_epi64((e3),(e2),(e1),(e0))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_setr4_pd</name><parameter_list>(<parameter><type><name>e0</name></type></parameter>,<parameter><type><name>e1</name></type></parameter>,<parameter><type><name>e2</name></type></parameter>,<parameter><type><name>e3</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_set4_pd((e3),(e2),(e1),(e0))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_setr4_ps</name><parameter_list>(<parameter><type><name>e0</name></type></parameter>,<parameter><type><name>e1</name></type></parameter>,<parameter><type><name>e2</name></type></parameter>,<parameter><type><name>e3</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_set4_ps((e3),(e2),(e1),(e0))</cpp:value></cpp:define>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_broadcastsd_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_castpd256_pd512</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__a</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_castps256_ps512</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__a</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>,
<argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_castpd512_pd128</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__a</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_castpd512_pd256</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_castps512_ps128</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__a</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_castps512_ps256</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_castpd_ps</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <operator>(</operator><name>__A</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_castpd_si512</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <operator>(</operator><name>__A</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_castpd128_pd512</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>( <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_castps_pd</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <operator>(</operator><name>__A</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_castps_si512</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <operator>(</operator><name>__A</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_castps128_ps512</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>( <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_castsi128_si512</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>( <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_castsi256_si512</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>( <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_castsi512_ps</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <operator>(</operator><name>__A</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_castsi512_pd</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <operator>(</operator><name>__A</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_castsi512_si128</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__A</name></expr></argument> , <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_castsi512_si256</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__A</name></expr></argument> , <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask16</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm512_int2mask</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__a</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm512_mask2int</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>int</name><operator>)</operator><name>__a</name></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_zextpd128_pd512</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_zextpd256_pd512</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_zextps128_ps512</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_zextps256_ps512</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_zextsi128_si512</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_zextsi256_si512</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_and_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v16su</name><operator>)</operator><name>__a</name> <operator>&amp;</operator> <operator>(</operator><name>__v16su</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_and_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__src</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__k</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__k</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <call><name>_mm512_and_epi32</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__src</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_and_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__k</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>_mm512_mask_and_epi32</name><argument_list>(<argument><expr><call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__k</name></expr></argument>, <argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_and_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8du</name><operator>)</operator><name>__a</name> <operator>&amp;</operator> <operator>(</operator><name>__v8du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_and_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__src</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__k</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_selectq_512</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__k</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <call><name>_mm512_and_epi64</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__src</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_and_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__k</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>_mm512_mask_and_epi64</name><argument_list>(<argument><expr><call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__k</name></expr></argument>, <argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_andnot_si512</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><operator>(</operator><operator>~</operator><operator>(</operator><name>__v8du</name><operator>)</operator><name>__A</name> <operator>&amp;</operator> <operator>(</operator><name>__v8du</name><operator>)</operator><name>__B</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_andnot_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><operator>(</operator><operator>~</operator><operator>(</operator><name>__v16su</name><operator>)</operator><name>__A</name> <operator>&amp;</operator> <operator>(</operator><name>__v16su</name><operator>)</operator><name>__B</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_andnot_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_andnot_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_andnot_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>_mm512_mask_andnot_epi32</name><argument_list>(<argument><expr><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_andnot_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><operator>(</operator><operator>~</operator><operator>(</operator><name>__v8du</name><operator>)</operator><name>__A</name> <operator>&amp;</operator> <operator>(</operator><name>__v8du</name><operator>)</operator><name>__B</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_andnot_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_andnot_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_andnot_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>_mm512_mask_andnot_epi64</name><argument_list>(<argument><expr><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_or_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v16su</name><operator>)</operator><name>__a</name> <operator>|</operator> <operator>(</operator><name>__v16su</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_or_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__src</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__k</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__k</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_or_epi32</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__src</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_or_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__k</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>_mm512_mask_or_epi32</name><argument_list>(<argument><expr><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>__k</name></expr></argument>, <argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_or_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8du</name><operator>)</operator><name>__a</name> <operator>|</operator> <operator>(</operator><name>__v8du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_or_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__src</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__k</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__k</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_or_epi64</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__src</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_or_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__k</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>_mm512_mask_or_epi64</name><argument_list>(<argument><expr><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>__k</name></expr></argument>, <argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_xor_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v16su</name><operator>)</operator><name>__a</name> <operator>^</operator> <operator>(</operator><name>__v16su</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_xor_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__src</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__k</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__k</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_xor_epi32</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__src</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_xor_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__k</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>_mm512_mask_xor_epi32</name><argument_list>(<argument><expr><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>__k</name></expr></argument>, <argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_xor_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8du</name><operator>)</operator><name>__a</name> <operator>^</operator> <operator>(</operator><name>__v8du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_xor_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__src</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__k</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__k</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_xor_epi64</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__src</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_xor_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__k</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>_mm512_mask_xor_epi64</name><argument_list>(<argument><expr><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>__k</name></expr></argument>, <argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_and_si512</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8du</name><operator>)</operator><name>__a</name> <operator>&amp;</operator> <operator>(</operator><name>__v8du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_or_si512</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8du</name><operator>)</operator><name>__a</name> <operator>|</operator> <operator>(</operator><name>__v8du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_xor_si512</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8du</name><operator>)</operator><name>__a</name> <operator>^</operator> <operator>(</operator><name>__v8du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_add_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8df</name><operator>)</operator><name>__a</name> <operator>+</operator> <operator>(</operator><name>__v8df</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_add_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__a</name> <operator>+</operator> <operator>(</operator><name>__v16sf</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mul_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8df</name><operator>)</operator><name>__a</name> <operator>*</operator> <operator>(</operator><name>__v8df</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mul_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__a</name> <operator>*</operator> <operator>(</operator><name>__v16sf</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_sub_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8df</name><operator>)</operator><name>__a</name> <operator>-</operator> <operator>(</operator><name>__v8df</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_sub_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__a</name> <operator>-</operator> <operator>(</operator><name>__v16sf</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_add_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <operator>(</operator><operator>(</operator><name>__v8du</name><operator>)</operator> <name>__A</name> <operator>+</operator> <operator>(</operator><name>__v8du</name><operator>)</operator> <name>__B</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_add_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_add_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_add_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_add_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_sub_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <operator>(</operator><operator>(</operator><name>__v8du</name><operator>)</operator> <name>__A</name> <operator>-</operator> <operator>(</operator><name>__v8du</name><operator>)</operator> <name>__B</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_sub_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_sub_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_sub_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_sub_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_add_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <operator>(</operator><operator>(</operator><name>__v16su</name><operator>)</operator> <name>__A</name> <operator>+</operator> <operator>(</operator><name>__v16su</name><operator>)</operator> <name>__B</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_add_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_add_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_add_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_add_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_sub_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <operator>(</operator><operator>(</operator><name>__v16su</name><operator>)</operator> <name>__A</name> <operator>-</operator> <operator>(</operator><name>__v16su</name><operator>)</operator> <name>__B</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_sub_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_sub_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_sub_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_sub_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_max_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_maxpd512((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (int)(R))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_max_round_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_max_round_pd((A), (B), (R)), (__v8df)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_max_round_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_max_round_pd((A), (B), (R)), (__v8df)_mm512_setzero_pd())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_max_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_maxpd512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_max_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_max_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_max_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_max_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_max_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_maxps512((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (int)(R))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_max_round_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_max_round_ps((A), (B), (R)), (__v16sf)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_max_round_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_max_round_ps((A), (B), (R)), (__v16sf)_mm512_setzero_ps())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_max_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_maxps512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_max_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_max_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_max_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_max_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_max_ss</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_maxss_round_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_max_ss</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_maxss_round_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_max_round_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_maxss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_max_round_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_maxss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)(__m128)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_max_round_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_maxss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_max_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_maxsd_round_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_max_sd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_maxsd_round_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_max_round_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_maxsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_max_round_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_maxsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)(__m128d)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_max_round_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_maxsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name>
<name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_max_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_pmaxsd512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_max_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_max_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_max_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_max_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_max_epu32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_pmaxud512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_max_epu32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_max_epu32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_max_epu32</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_max_epu32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_max_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_pmaxsq512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_max_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_max_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_max_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_max_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_max_epu64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_pmaxuq512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_max_epu64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_max_epu64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_max_epu64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_max_epu64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_min_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_minpd512((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (int)(R))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_min_round_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_min_round_pd((A), (B), (R)), (__v8df)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_min_round_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_min_round_pd((A), (B), (R)), (__v8df)_mm512_setzero_pd())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_min_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_minpd512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_min_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_min_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_min_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_min_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_min_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_minps512((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (int)(R))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_min_round_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_min_round_ps((A), (B), (R)), (__v16sf)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_min_round_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_min_round_ps((A), (B), (R)), (__v16sf)_mm512_setzero_ps())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_min_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_minps512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_min_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_min_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_min_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_min_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_min_ss</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_minss_round_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_min_ss</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_minss_round_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_min_round_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_minss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_min_round_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_minss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)(__m128)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_min_round_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_minss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_min_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_minsd_round_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_min_sd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_minsd_round_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_min_round_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_minsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_min_round_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_minsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)(__m128d)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_min_round_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_minsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name>
<name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_min_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_pminsd512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_min_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_min_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_min_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_min_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_min_epu32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_pminud512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_min_epu32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_min_epu32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_min_epu32</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_min_epu32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_min_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_pminsq512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_min_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_min_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_min_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_min_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_min_epu64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_pminuq512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_min_epu64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_min_epu64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_min_epu64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_min_epu64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mul_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_pmuldq512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_mul_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_mul_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_mul_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_mul_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mul_epu32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_pmuludq512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_mul_epu32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_mul_epu32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_mul_epu32</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_mul_epu32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mullo_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <operator>(</operator><operator>(</operator><name>__v16su</name><operator>)</operator> <name>__A</name> <operator>*</operator> <operator>(</operator><name>__v16su</name><operator>)</operator> <name>__B</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_mullo_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_mullo_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_mullo_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_mullo_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mullox_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <operator>(</operator><operator>(</operator><name>__v8du</name><operator>)</operator> <name>__A</name> <operator>*</operator> <operator>(</operator><name>__v8du</name><operator>)</operator> <name>__B</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_mullox_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_mullox_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_sqrt_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_sqrtpd512((__v8df)(__m512d)(A), (int)(R))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_sqrt_round_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_sqrt_round_pd((A), (R)), (__v8df)(__m512d)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_sqrt_round_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_sqrt_round_pd((A), (R)), (__v8df)_mm512_setzero_pd())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_sqrt_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_sqrtpd512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_sqrt_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_sqrt_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_sqrt_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_sqrt_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_sqrt_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_sqrtps512((__v16sf)(__m512)(A), (int)(R))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_sqrt_round_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_sqrt_round_ps((A), (R)), (__v16sf)(__m512)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_sqrt_round_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_sqrt_round_ps((A), (R)), (__v16sf)_mm512_setzero_ps())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_sqrt_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_sqrtps512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_sqrt_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_sqrt_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_sqrt_ps</name><parameter_list>( <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_sqrt_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_rsqrt14_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14pd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator>
<call><name>_mm512_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return></block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_rsqrt14_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14pd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_rsqrt14_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14pd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator>
<call><name>_mm512_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_rsqrt14_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14ps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator>
<call><name>_mm512_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_rsqrt14_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14ps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_rsqrt14_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14ps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator>
<call><name>_mm512_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_rsqrt14_ss</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14ss_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator>
<call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_rsqrt14_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14ss_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_rsqrt14_ss</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14ss_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_rsqrt14_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14sd_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator>
<call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_rsqrt14_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14sd_mask</name> <argument_list>( <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_rsqrt14_sd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_rsqrt14sd_mask</name> <argument_list>( <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_rcp14_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_rcp14pd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator>
<call><name>_mm512_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_rcp14_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_rcp14pd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_rcp14_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_rcp14pd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator>
<call><name>_mm512_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_rcp14_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_rcp14ps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator>
<call><name>_mm512_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_rcp14_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_rcp14ps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_rcp14_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_rcp14ps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator>
<call><name>_mm512_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_rcp14_ss</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_rcp14ss_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator>
<call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_rcp14_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_rcp14ss_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_rcp14_ss</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_rcp14ss_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_rcp14_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_rcp14sd_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator>
<call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_rcp14_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_rcp14sd_mask</name> <argument_list>( <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_rcp14_sd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_rcp14sd_mask</name> <argument_list>( <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_floor_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_rndscaleps_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_FLOOR</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_floor_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_rndscaleps_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_FLOOR</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__W</name></expr></argument>, <argument><expr><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_floor_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_rndscalepd_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_FLOOR</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_floor_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_rndscalepd_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_FLOOR</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__W</name></expr></argument>, <argument><expr><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_ceil_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_rndscaleps_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CEIL</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__W</name></expr></argument>, <argument><expr><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_ceil_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_rndscaleps_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CEIL</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_ceil_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_rndscalepd_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CEIL</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_ceil_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_rndscalepd_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CEIL</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__W</name></expr></argument>, <argument><expr><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_abs_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_pabsq512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_abs_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_abs_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_abs_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_abs_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_abs_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_pabsd512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_abs_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_abs_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_abs_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_abs_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_add_ss</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__A</name> <operator>=</operator> <call><name>_mm_add_ss</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_selectss_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_add_ss</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__A</name> <operator>=</operator> <call><name>_mm_add_ss</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_selectss_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_add_round_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_addss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_add_round_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_addss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)(__m128)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_add_round_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_addss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_add_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__A</name> <operator>=</operator> <call><name>_mm_add_sd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_selectsd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_add_sd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__A</name> <operator>=</operator> <call><name>_mm_add_sd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_selectsd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_add_round_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_addsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_add_round_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_addsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)(__m128d)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_add_round_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_addsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_add_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_add_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_add_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_add_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_add_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_add_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_add_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_add_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_add_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_addpd512((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (int)(R))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_add_round_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_add_round_pd((A), (B), (R)), (__v8df)(__m512d)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_add_round_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_add_round_pd((A), (B), (R)), (__v8df)_mm512_setzero_pd())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_add_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_addps512((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (int)(R))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_add_round_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_add_round_ps((A), (B), (R)), (__v16sf)(__m512)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_add_round_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_add_round_ps((A), (B), (R)), (__v16sf)_mm512_setzero_ps())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_sub_ss</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__A</name> <operator>=</operator> <call><name>_mm_sub_ss</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_selectss_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_sub_ss</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__A</name> <operator>=</operator> <call><name>_mm_sub_ss</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_selectss_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_sub_round_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_subss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_sub_round_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_subss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)(__m128)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_sub_round_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_subss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_sub_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__A</name> <operator>=</operator> <call><name>_mm_sub_sd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_selectsd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_sub_sd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__A</name> <operator>=</operator> <call><name>_mm_sub_sd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_selectsd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_sub_round_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_subsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_sub_round_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_subsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)(__m128d)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_sub_round_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_subsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_sub_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_sub_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_sub_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_sub_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_sub_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_sub_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_sub_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_sub_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_sub_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_subpd512((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (int)(R))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_sub_round_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_sub_round_pd((A), (B), (R)), (__v8df)(__m512d)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_sub_round_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_sub_round_pd((A), (B), (R)), (__v8df)_mm512_setzero_pd())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_sub_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_subps512((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (int)(R))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_sub_round_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_sub_round_ps((A), (B), (R)), (__v16sf)(__m512)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_sub_round_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_sub_round_ps((A), (B), (R)), (__v16sf)_mm512_setzero_ps())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_mul_ss</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__A</name> <operator>=</operator> <call><name>_mm_mul_ss</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_selectss_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_mul_ss</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__A</name> <operator>=</operator> <call><name>_mm_mul_ss</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_selectss_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mul_round_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_mulss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_mul_round_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_mulss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)(__m128)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_mul_round_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_mulss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_mul_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__A</name> <operator>=</operator> <call><name>_mm_mul_sd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_selectsd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_mul_sd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__A</name> <operator>=</operator> <call><name>_mm_mul_sd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_selectsd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mul_round_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_mulsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_mul_round_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_mulsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)(__m128d)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_mul_round_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_mulsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_mul_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_mul_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_mul_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_mul_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_mul_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_mul_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_mul_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_mul_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mul_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_mulpd512((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (int)(R))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_mul_round_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_mul_round_pd((A), (B), (R)), (__v8df)(__m512d)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_mul_round_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_mul_round_pd((A), (B), (R)), (__v8df)_mm512_setzero_pd())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mul_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_mulps512((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (int)(R))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_mul_round_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_mul_round_ps((A), (B), (R)), (__v16sf)(__m512)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_mul_round_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_mul_round_ps((A), (B), (R)), (__v16sf)_mm512_setzero_ps())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_div_ss</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__A</name> <operator>=</operator> <call><name>_mm_div_ss</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_selectss_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_div_ss</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__A</name> <operator>=</operator> <call><name>_mm_div_ss</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_selectss_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_div_round_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_divss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_div_round_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_divss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)(__m128)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_div_round_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_divss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_div_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__A</name> <operator>=</operator> <call><name>_mm_div_sd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_selectsd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_div_sd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__A</name> <operator>=</operator> <call><name>_mm_div_sd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_selectsd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_div_round_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_divsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_div_round_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_divsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)(__m128d)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_div_round_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_divsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_div_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8df</name><operator>)</operator><name>__a</name><operator>/</operator><operator>(</operator><name>__v8df</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_div_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_div_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_div_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_div_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_div_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__a</name><operator>/</operator><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_div_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_div_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_div_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_div_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_div_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_divpd512((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (int)(R))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_div_round_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_div_round_pd((A), (B), (R)), (__v8df)(__m512d)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_div_round_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_div_round_pd((A), (B), (R)), (__v8df)_mm512_setzero_pd())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_div_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_divps512((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (int)(R))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_div_round_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_div_round_ps((A), (B), (R)), (__v16sf)(__m512)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_div_round_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_div_round_ps((A), (B), (R)), (__v16sf)_mm512_setzero_ps())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_roundscale_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_rndscaleps_mask((__v16sf)(__m512)(A), (int)(B), (__v16sf)_mm512_undefined_ps(), (__mmask16)-1, _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_roundscale_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_rndscaleps_mask((__v16sf)(__m512)(C), (int)(imm), (__v16sf)(__m512)(A), (__mmask16)(B), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_roundscale_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_rndscaleps_mask((__v16sf)(__m512)(B), (int)(imm), (__v16sf)_mm512_setzero_ps(), (__mmask16)(A), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_roundscale_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_rndscaleps_mask((__v16sf)(__m512)(C), (int)(imm), (__v16sf)(__m512)(A), (__mmask16)(B), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_roundscale_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_rndscaleps_mask((__v16sf)(__m512)(B), (int)(imm), (__v16sf)_mm512_setzero_ps(), (__mmask16)(A), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_roundscale_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_rndscaleps_mask((__v16sf)(__m512)(A), (int)(imm), (__v16sf)_mm512_undefined_ps(), (__mmask16)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_roundscale_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_rndscalepd_mask((__v8df)(__m512d)(A), (int)(B), (__v8df)_mm512_undefined_pd(), (__mmask8)-1, _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_roundscale_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_rndscalepd_mask((__v8df)(__m512d)(C), (int)(imm), (__v8df)(__m512d)(A), (__mmask8)(B), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_roundscale_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_rndscalepd_mask((__v8df)(__m512d)(B), (int)(imm), (__v8df)_mm512_setzero_pd(), (__mmask8)(A), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_roundscale_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_rndscalepd_mask((__v8df)(__m512d)(C), (int)(imm), (__v8df)(__m512d)(A), (__mmask8)(B), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_roundscale_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_rndscalepd_mask((__v8df)(__m512d)(B), (int)(imm), (__v8df)_mm512_setzero_pd(), (__mmask8)(A), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_roundscale_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_rndscalepd_mask((__v8df)(__m512d)(A), (int)(imm), (__v8df)_mm512_undefined_pd(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_fmadd_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddpd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8df)(__m512d)(C), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_fmadd_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddpd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8df)(__m512d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask3_fmadd_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddpd512_mask3((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8df)(__m512d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_fmadd_round_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddpd512_maskz((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8df)(__m512d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_fmsub_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddpd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), -(__v8df)(__m512d)(C), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_fmsub_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddpd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), -(__v8df)(__m512d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_fmsub_round_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddpd512_maskz((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), -(__v8df)(__m512d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_fnmadd_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddpd512_mask(-(__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8df)(__m512d)(C), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask3_fnmadd_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddpd512_mask3(-(__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8df)(__m512d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_fnmadd_round_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddpd512_maskz(-(__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8df)(__m512d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_fnmsub_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddpd512_mask(-(__v8df)(__m512d)(A), (__v8df)(__m512d)(B), -(__v8df)(__m512d)(C), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_fnmsub_round_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddpd512_maskz(-(__v8df)(__m512d)(A), (__v8df)(__m512d)(B), -(__v8df)(__m512d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_fmadd_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddpd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_fmadd_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddpd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask3_fmadd_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddpd512_mask3</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_fmadd_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddpd512_maskz</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_fmsub_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddpd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_fmsub_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddpd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_fmsub_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddpd512_maskz</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_fnmadd_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddpd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask3_fnmadd_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddpd512_mask3</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_fnmadd_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddpd512_maskz</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_fnmsub_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddpd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_fnmsub_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddpd512_maskz</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_fmadd_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16sf)(__m512)(C), (__mmask16)-1, (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_fmadd_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16sf)(__m512)(C), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask3_fmadd_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddps512_mask3((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16sf)(__m512)(C), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_fmadd_round_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddps512_maskz((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16sf)(__m512)(C), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_fmsub_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), -(__v16sf)(__m512)(C), (__mmask16)-1, (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_fmsub_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), -(__v16sf)(__m512)(C), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_fmsub_round_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddps512_maskz((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), -(__v16sf)(__m512)(C), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_fnmadd_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddps512_mask((__v16sf)(__m512)(A), -(__v16sf)(__m512)(B), (__v16sf)(__m512)(C), (__mmask16)-1, (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask3_fnmadd_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddps512_mask3(-(__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16sf)(__m512)(C), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_fnmadd_round_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddps512_maskz(-(__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16sf)(__m512)(C), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_fnmsub_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddps512_mask((__v16sf)(__m512)(A), -(__v16sf)(__m512)(B), -(__v16sf)(__m512)(C), (__mmask16)-1, (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_fnmsub_round_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddps512_maskz(-(__v16sf)(__m512)(A), (__v16sf)(__m512)(B), -(__v16sf)(__m512)(C), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>






<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_fmadd_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_fmadd_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask3_fmadd_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddps512_mask3</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_fmadd_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddps512_maskz</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_fmsub_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_fmsub_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_fmsub_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddps512_maskz</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_fnmadd_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask3_fnmadd_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddps512_mask3</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_fnmadd_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddps512_maskz</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_fnmsub_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_fnmsub_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddps512_maskz</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_fmaddsub_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddsubpd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8df)(__m512d)(C), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_fmaddsub_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddsubpd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8df)(__m512d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask3_fmaddsub_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddsubpd512_mask3((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8df)(__m512d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_fmaddsub_round_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddsubpd512_maskz((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8df)(__m512d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_fmsubadd_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddsubpd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), -(__v8df)(__m512d)(C), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_fmsubadd_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddsubpd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), -(__v8df)(__m512d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_fmsubadd_round_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddsubpd512_maskz((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), -(__v8df)(__m512d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_fmaddsub_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddsubpd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_fmaddsub_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddsubpd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask3_fmaddsub_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddsubpd512_mask3</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_fmaddsub_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddsubpd512_maskz</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_fmsubadd_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddsubpd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_fmsubadd_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddsubpd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_fmsubadd_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddsubpd512_maskz</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_fmaddsub_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddsubps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16sf)(__m512)(C), (__mmask16)-1, (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_fmaddsub_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddsubps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16sf)(__m512)(C), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask3_fmaddsub_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddsubps512_mask3((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16sf)(__m512)(C), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_fmaddsub_round_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddsubps512_maskz((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16sf)(__m512)(C), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_fmsubadd_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddsubps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), -(__v16sf)(__m512)(C), (__mmask16)-1, (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_fmsubadd_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddsubps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), -(__v16sf)(__m512)(C), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_fmsubadd_round_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddsubps512_maskz((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), -(__v16sf)(__m512)(C), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>






<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_fmaddsub_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddsubps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_fmaddsub_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddsubps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask3_fmaddsub_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddsubps512_mask3</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_fmaddsub_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddsubps512_maskz</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_fmsubadd_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddsubps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_fmsubadd_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddsubps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_fmsubadd_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddsubps512_maskz</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask3_fmsub_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmsubpd512_mask3((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8df)(__m512d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask3_fmsub_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_vfmsubpd512_mask3</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask3_fmsub_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmsubps512_mask3((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16sf)(__m512)(C), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask3_fmsub_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_vfmsubps512_mask3</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask3_fmsubadd_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmsubaddpd512_mask3((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8df)(__m512d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask3_fmsubadd_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_vfmsubaddpd512_mask3</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask3_fmsubadd_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmsubaddps512_mask3((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16sf)(__m512)(C), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>






<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask3_fmsubadd_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_vfmsubaddps512_mask3</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_fnmadd_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddpd512_mask((__v8df)(__m512d)(A), -(__v8df)(__m512d)(B), (__v8df)(__m512d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_fnmadd_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddpd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_fnmadd_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddps512_mask((__v16sf)(__m512)(A), -(__v16sf)(__m512)(B), (__v16sf)(__m512)(C), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>






<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_fnmadd_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_fnmsub_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmaddpd512_mask((__v8df)(__m512d)(A), -(__v8df)(__m512d)(B), -(__v8df)(__m512d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask3_fnmsub_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vfmsubpd512_mask3(-(__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8df)(__m512d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_fnmsub_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddpd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask3_fnmsub_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_vfmsubpd512_mask3</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_fnmsub_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmaddps512_mask((__v16sf)(__m512)(A), -(__v16sf)(__m512)(B), -(__v16sf)(__m512)(C), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask3_fnmsub_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vfmsubps512_mask3(-(__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16sf)(__m512)(C), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>






<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_fnmsub_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmaddps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask3_fnmsub_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vfmsubps512_mask3</name> <argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>





<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_permutex2var_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_vpermi2vard512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__I</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_permutex2var_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__I</name></decl></parameter>,
<parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_permutex2var_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask2_permutex2var_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>,
<parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_permutex2var_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__I</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_permutex2var_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__I</name></decl></parameter>,
<parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_permutex2var_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_permutex2var_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_vpermi2varq512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__I</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_permutex2var_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__I</name></decl></parameter>,
<parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_permutex2var_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask2_permutex2var_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,
<parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_permutex2var_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__I</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_permutex2var_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__I</name></decl></parameter>,
<parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_permutex2var_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_alignr_epi64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_alignq512((__v8di)(__m512i)(A), (__v8di)(__m512i)(B), (int)(I))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_alignr_epi64</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectq_512((__mmask8)(U), (__v8di)_mm512_alignr_epi64((A), (B), (imm)), (__v8di)(__m512i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_alignr_epi64</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectq_512((__mmask8)(U), (__v8di)_mm512_alignr_epi64((A), (B), (imm)), (__v8di)_mm512_setzero_si512())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_alignr_epi32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_alignd512((__v16si)(__m512i)(A), (__v16si)(__m512i)(B), (int)(I))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_alignr_epi32</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectd_512((__mmask16)(U), (__v16si)_mm512_alignr_epi32((A), (B), (imm)), (__v16si)(__m512i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_alignr_epi32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectd_512((__mmask16)(U), (__v16si)_mm512_alignr_epi32((A), (B), (imm)), (__v16si)_mm512_setzero_si512())</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_extractf64x4_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_extractf64x4_mask((__v8df)(__m512d)(A), (int)(I), (__v4df)_mm256_undefined_pd(), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_extractf64x4_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_extractf64x4_mask((__v8df)(__m512d)(A), (int)(imm), (__v4df)(__m256d)(W), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_extractf64x4_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_extractf64x4_mask((__v8df)(__m512d)(A), (int)(imm), (__v4df)_mm256_setzero_pd(), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_extractf32x4_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_extractf32x4_mask((__v16sf)(__m512)(A), (int)(I), (__v4sf)_mm_undefined_ps(), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_extractf32x4_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_extractf32x4_mask((__v16sf)(__m512)(A), (int)(imm), (__v4sf)(__m128)(W), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_extractf32x4_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_extractf32x4_mask((__v16sf)(__m512)(A), (int)(imm), (__v4sf)_mm_setzero_ps(), (__mmask8)(U))</cpp:value></cpp:define>






<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_blend_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_512</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_blend_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_selectps_512</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_blend_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_selectq_512</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_blend_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_selectd_512</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmp_round_ps_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>P</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask16)__builtin_ia32_cmpps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (int)(P), (__mmask16)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmp_round_ps_mask</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>P</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask16)__builtin_ia32_cmpps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (int)(P), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmp_ps_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>P</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_round_ps_mask((A), (B), (P), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmp_ps_mask</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>P</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_round_ps_mask((U), (A), (B), (P), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpeq_ps_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_ps_mask((A), (B), _CMP_EQ_OQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpeq_ps_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_ps_mask((k), (A), (B), _CMP_EQ_OQ)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmplt_ps_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_ps_mask((A), (B), _CMP_LT_OS)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmplt_ps_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_ps_mask((k), (A), (B), _CMP_LT_OS)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmple_ps_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_ps_mask((A), (B), _CMP_LE_OS)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmple_ps_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_ps_mask((k), (A), (B), _CMP_LE_OS)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpunord_ps_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_ps_mask((A), (B), _CMP_UNORD_Q)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpunord_ps_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_ps_mask((k), (A), (B), _CMP_UNORD_Q)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpneq_ps_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_ps_mask((A), (B), _CMP_NEQ_UQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpneq_ps_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_ps_mask((k), (A), (B), _CMP_NEQ_UQ)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpnlt_ps_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_ps_mask((A), (B), _CMP_NLT_US)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpnlt_ps_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_ps_mask((k), (A), (B), _CMP_NLT_US)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpnle_ps_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_ps_mask((A), (B), _CMP_NLE_US)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpnle_ps_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_ps_mask((k), (A), (B), _CMP_NLE_US)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpord_ps_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_ps_mask((A), (B), _CMP_ORD_Q)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpord_ps_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_ps_mask((k), (A), (B), _CMP_ORD_Q)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmp_round_pd_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>P</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmppd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (int)(P), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmp_round_pd_mask</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>P</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmppd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (int)(P), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmp_pd_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>P</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_round_pd_mask((A), (B), (P), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmp_pd_mask</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>P</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_round_pd_mask((U), (A), (B), (P), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpeq_pd_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_pd_mask((A), (B), _CMP_EQ_OQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpeq_pd_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_pd_mask((k), (A), (B), _CMP_EQ_OQ)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmplt_pd_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_pd_mask((A), (B), _CMP_LT_OS)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmplt_pd_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_pd_mask((k), (A), (B), _CMP_LT_OS)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmple_pd_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_pd_mask((A), (B), _CMP_LE_OS)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmple_pd_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_pd_mask((k), (A), (B), _CMP_LE_OS)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpunord_pd_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_pd_mask((A), (B), _CMP_UNORD_Q)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpunord_pd_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_pd_mask((k), (A), (B), _CMP_UNORD_Q)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpneq_pd_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_pd_mask((A), (B), _CMP_NEQ_UQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpneq_pd_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_pd_mask((k), (A), (B), _CMP_NEQ_UQ)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpnlt_pd_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_pd_mask((A), (B), _CMP_NLT_US)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpnlt_pd_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_pd_mask((k), (A), (B), _CMP_NLT_US)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpnle_pd_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_pd_mask((A), (B), _CMP_NLE_US)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpnle_pd_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_pd_mask((k), (A), (B), _CMP_NLE_US)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpord_pd_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_pd_mask((A), (B), _CMP_ORD_Q)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpord_pd_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_pd_mask((k), (A), (B), _CMP_ORD_Q)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cvtt_roundps_epu32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_cvttps2udq512_mask((__v16sf)(__m512)(A), (__v16si)_mm512_undefined_epi32(), (__mmask16)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cvtt_roundps_epu32</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_cvttps2udq512_mask((__v16sf)(__m512)(A), (__v16si)(__m512i)(W), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_cvtt_roundps_epu32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_cvttps2udq512_mask((__v16sf)(__m512)(A), (__v16si)_mm512_setzero_si512(), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvttps_epu32</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2udq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator>
<call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvttps_epu32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2udq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvttps_epu32</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2udq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cvt_roundepi32_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_cvtdq2ps512_mask((__v16si)(__m512i)(A), (__v16sf)_mm512_setzero_ps(), (__mmask16)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cvt_roundepi32_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_cvtdq2ps512_mask((__v16si)(__m512i)(A), (__v16sf)(__m512)(W), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_cvt_roundepi32_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_cvtdq2ps512_mask((__v16si)(__m512i)(A), (__v16sf)_mm512_setzero_ps(), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cvt_roundepu32_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_cvtudq2ps512_mask((__v16si)(__m512i)(A), (__v16sf)_mm512_setzero_ps(), (__mmask16)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cvt_roundepu32_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_cvtudq2ps512_mask((__v16si)(__m512i)(A), (__v16sf)(__m512)(W), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_cvt_roundepu32_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_cvtudq2ps512_mask((__v16si)(__m512i)(A), (__v16sf)_mm512_setzero_ps(), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepu32_ps</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16su</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v16sf</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepu32_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_cvtepu32_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtepu32_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_cvtepu32_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepi32_pd</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v8df</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepi32_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_cvtepi32_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtepi32_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_cvtepi32_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepi32lo_pd</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>_mm512_cvtepi32_pd</name><argument_list>(<argument><expr><call><name>_mm512_castsi512_si256</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepi32lo_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>_mm512_mask_cvtepi32_pd</name><argument_list>(<argument><expr><name>__W</name></expr></argument>, <argument><expr><name>__U</name></expr></argument>, <argument><expr><call><name>_mm512_castsi512_si256</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepi32_ps</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v16sf</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepi32_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_cvtepi32_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtepi32_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_cvtepi32_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepu32_pd</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8su</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v8df</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepu32_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_cvtepu32_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtepu32_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_cvtepu32_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepu32lo_pd</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>_mm512_cvtepu32_pd</name><argument_list>(<argument><expr><call><name>_mm512_castsi512_si256</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepu32lo_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>_mm512_mask_cvtepu32_pd</name><argument_list>(<argument><expr><name>__W</name></expr></argument>, <argument><expr><name>__U</name></expr></argument>, <argument><expr><call><name>_mm512_castsi512_si256</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cvt_roundpd_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_cvtpd2ps512_mask((__v8df)(__m512d)(A), (__v8sf)_mm256_setzero_ps(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cvt_roundpd_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_cvtpd2ps512_mask((__v8df)(__m512d)(A), (__v8sf)(__m256)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_cvt_roundpd_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_cvtpd2ps512_mask((__v8df)(__m512d)(A), (__v8sf)_mm256_setzero_ps(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtpd_ps</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2ps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <call><name>_mm256_undefined_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtpd_ps</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2ps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtpd_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2ps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <call><name>_mm256_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtpd_pslo</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <call><name>_mm512_cvtpd_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <call><name>_mm256_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtpd_pslo</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_shufflevector</name> <argument_list>(
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <call><name>_mm512_mask_cvtpd_ps</name> <argument_list>(<argument><expr><call><name>_mm512_castps512_ps256</name><argument_list>(<argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><name>__U</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator> <call><name>_mm256_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cvt_roundps_ph</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_vcvtps2ph512_mask((__v16sf)(__m512)(A), (int)(I), (__v16hi)_mm256_undefined_si256(), (__mmask16)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cvt_roundps_ph</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>W</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_vcvtps2ph512_mask((__v16sf)(__m512)(A), (int)(I), (__v16hi)(__m256i)(U), (__mmask16)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_cvt_roundps_ph</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_vcvtps2ph512_mask((__v16sf)(__m512)(A), (int)(I), (__v16hi)_mm256_setzero_si256(), (__mmask16)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cvtps_ph</name></cpp:macro> <cpp:value>_mm512_cvt_roundps_ph</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cvtps_ph</name></cpp:macro> <cpp:value>_mm512_mask_cvt_roundps_ph</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_cvtps_ph</name></cpp:macro> <cpp:value>_mm512_maskz_cvt_roundps_ph</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cvt_roundph_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vcvtph2ps512_mask((__v16hi)(__m256i)(A), (__v16sf)_mm512_undefined_ps(), (__mmask16)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cvt_roundph_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vcvtph2ps512_mask((__v16hi)(__m256i)(A), (__v16sf)(__m512)(W), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_cvt_roundph_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vcvtph2ps512_mask((__v16hi)(__m256i)(A), (__v16sf)_mm512_setzero_ps(), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtph_ps</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vcvtph2ps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator>
<call><name>_mm512_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtph_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vcvtph2ps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtph_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_vcvtph2ps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <call><name>_mm512_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cvtt_roundpd_epi32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_cvttpd2dq512_mask((__v8df)(__m512d)(A), (__v8si)_mm256_setzero_si256(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cvtt_roundpd_epi32</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_cvttpd2dq512_mask((__v8df)(__m512d)(A), (__v8si)(__m256i)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_cvtt_roundpd_epi32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_cvttpd2dq512_mask((__v8df)(__m512d)(A), (__v8si)_mm256_setzero_si256(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvttpd_epi32</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_cvttpd2dq512_mask</name><argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__a</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvttpd_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2dq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvttpd_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2dq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cvtt_roundps_epi32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_cvttps2dq512_mask((__v16sf)(__m512)(A), (__v16si)_mm512_setzero_si512(), (__mmask16)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cvtt_roundps_epi32</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_cvttps2dq512_mask((__v16sf)(__m512)(A), (__v16si)(__m512i)(W), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_cvtt_roundps_epi32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_cvttps2dq512_mask((__v16sf)(__m512)(A), (__v16si)_mm512_setzero_si512(), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvttps_epi32</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator>
<call><name>__builtin_ia32_cvttps2dq512_mask</name><argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__a</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvttps_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2dq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvttps_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2dq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cvt_roundps_epi32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_cvtps2dq512_mask((__v16sf)(__m512)(A), (__v16si)_mm512_setzero_si512(), (__mmask16)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cvt_roundps_epi32</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_cvtps2dq512_mask((__v16sf)(__m512)(A), (__v16si)(__m512i)(W), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_cvt_roundps_epi32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_cvtps2dq512_mask((__v16sf)(__m512)(A), (__v16si)_mm512_setzero_si512(), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtps_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2dq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <call><name>_mm512_undefined_epi32</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtps_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2dq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtps_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2dq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator>
<call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cvt_roundpd_epi32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_cvtpd2dq512_mask((__v8df)(__m512d)(A), (__v8si)_mm256_setzero_si256(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cvt_roundpd_epi32</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_cvtpd2dq512_mask((__v8df)(__m512d)(A), (__v8si)(__m256i)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_cvt_roundpd_epi32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_cvtpd2dq512_mask((__v8df)(__m512d)(A), (__v8si)_mm256_setzero_si256(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtpd_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2dq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator>
<call><name>_mm256_undefined_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtpd_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2dq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtpd_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2dq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator>
<call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cvt_roundps_epu32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_cvtps2udq512_mask((__v16sf)(__m512)(A), (__v16si)_mm512_setzero_si512(), (__mmask16)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cvt_roundps_epu32</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_cvtps2udq512_mask((__v16sf)(__m512)(A), (__v16si)(__m512i)(W), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_cvt_roundps_epu32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_cvtps2udq512_mask((__v16sf)(__m512)(A), (__v16si)_mm512_setzero_si512(), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtps_epu32</name> <parameter_list>( <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2udq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,\
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator>\
<call><name>_mm512_undefined_epi32</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,\
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtps_epu32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2udq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtps_epu32</name> <parameter_list>( <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2udq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator>
<call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument> ,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cvt_roundpd_epu32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_cvtpd2udq512_mask((__v8df)(__m512d)(A), (__v8si)_mm256_setzero_si256(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cvt_roundpd_epu32</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_cvtpd2udq512_mask((__v8df)(__m512d)(A), (__v8si)(__m256i)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_cvt_roundpd_epu32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_cvtpd2udq512_mask((__v8df)(__m512d)(A), (__v8si)_mm256_setzero_si256(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtpd_epu32</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2udq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator>
<call><name>_mm256_undefined_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtpd_epu32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2udq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtpd_epu32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2udq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator>
<call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>double</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtsd_f64</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>__a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>float</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtss_f32</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>__a</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_unpackhi_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__b</name></expr></argument>,
<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">1</literal><operator>+</operator><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">9</literal><operator>+</operator><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">9</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">1</literal><operator>+</operator><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">9</literal><operator>+</operator><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_unpackhi_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_unpackhi_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_unpackhi_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_unpackhi_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_unpacklo_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__b</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">0</literal><operator>+</operator><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">0</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">0</literal><operator>+</operator><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_unpacklo_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_unpacklo_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_unpacklo_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_unpacklo_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_unpackhi_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__b</name></expr></argument>,
<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">19</literal></expr></argument>,
<argument><expr><literal type="number">2</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">18</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">3</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">19</literal><operator>+</operator><literal type="number">4</literal></expr></argument>,
<argument><expr><literal type="number">2</literal><operator>+</operator><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">18</literal><operator>+</operator><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">3</literal><operator>+</operator><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">19</literal><operator>+</operator><literal type="number">8</literal></expr></argument>,
<argument><expr><literal type="number">2</literal><operator>+</operator><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">18</literal><operator>+</operator><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">3</literal><operator>+</operator><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">19</literal><operator>+</operator><literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_unpackhi_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_unpackhi_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_unpackhi_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_unpackhi_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_unpacklo_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__b</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">17</literal></expr></argument>,
<argument><expr><literal type="number">0</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">1</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">17</literal><operator>+</operator><literal type="number">4</literal></expr></argument>,
<argument><expr><literal type="number">0</literal><operator>+</operator><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">1</literal><operator>+</operator><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">17</literal><operator>+</operator><literal type="number">8</literal></expr></argument>,
<argument><expr><literal type="number">0</literal><operator>+</operator><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">1</literal><operator>+</operator><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">17</literal><operator>+</operator><literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_unpacklo_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_unpacklo_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_unpacklo_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_unpacklo_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_unpackhi_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">19</literal></expr></argument>,
<argument><expr><literal type="number">2</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">18</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">3</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">19</literal><operator>+</operator><literal type="number">4</literal></expr></argument>,
<argument><expr><literal type="number">2</literal><operator>+</operator><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">18</literal><operator>+</operator><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">3</literal><operator>+</operator><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">19</literal><operator>+</operator><literal type="number">8</literal></expr></argument>,
<argument><expr><literal type="number">2</literal><operator>+</operator><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">18</literal><operator>+</operator><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">3</literal><operator>+</operator><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">19</literal><operator>+</operator><literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_unpackhi_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_unpackhi_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_unpackhi_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_unpackhi_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_unpacklo_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">17</literal></expr></argument>,
<argument><expr><literal type="number">0</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">1</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">17</literal><operator>+</operator><literal type="number">4</literal></expr></argument>,
<argument><expr><literal type="number">0</literal><operator>+</operator><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">1</literal><operator>+</operator><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">17</literal><operator>+</operator><literal type="number">8</literal></expr></argument>,
<argument><expr><literal type="number">0</literal><operator>+</operator><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">1</literal><operator>+</operator><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">17</literal><operator>+</operator><literal type="number">12</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_unpacklo_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_unpacklo_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_unpacklo_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_unpacklo_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_unpackhi_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">1</literal><operator>+</operator><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">9</literal><operator>+</operator><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">9</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">1</literal><operator>+</operator><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">9</literal><operator>+</operator><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_unpackhi_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_unpackhi_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_unpackhi_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_unpackhi_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_unpacklo_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">0</literal><operator>+</operator><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">0</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">0</literal><operator>+</operator><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_unpacklo_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_unpacklo_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_unpacklo_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_unpacklo_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_loadu_si512</name> <parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__loadu_si512</name> <block>{
<decl_stmt><decl><type><name>__m512i_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<return>return <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__loadu_si512</name><operator>*</operator><operator>)</operator><name>__P</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_loadu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__loadu_epi32</name> <block>{
<decl_stmt><decl><type><name>__m512i_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<return>return <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__loadu_epi32</name><operator>*</operator><operator>)</operator><name>__P</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_loadu_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_loaddqusi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>int</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_loadu_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_loaddqusi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>int</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator>
<call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_loadu_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__loadu_epi64</name> <block>{
<decl_stmt><decl><type><name>__m512i_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<return>return <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__loadu_epi64</name><operator>*</operator><operator>)</operator><name>__P</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_loadu_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_loaddqudi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>long</name> <name>long</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_loadu_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_loaddqudi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator>
<call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_loadu_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_loadups512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>float</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_loadu_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_loadups512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>float</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator>
<call><name>_mm512_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_loadu_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_loadupd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>double</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_loadu_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_loadupd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>double</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator>
<call><name>_mm512_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_loadu_pd</name><parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__loadu_pd</name> <block>{
<decl_stmt><decl><type><name>__m512d_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<return>return <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__loadu_pd</name><operator>*</operator><operator>)</operator><name>__p</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_loadu_ps</name><parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__loadu_ps</name> <block>{
<decl_stmt><decl><type><name>__m512_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<return>return <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__loadu_ps</name><operator>*</operator><operator>)</operator><name>__p</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_load_ps</name><parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>*</operator><operator>(</operator><specifier>const</specifier> <name>__m512</name><operator>*</operator><operator>)</operator><name>__p</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_load_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_loadaps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v16sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_load_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_loadaps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v16sf</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator>
<call><name>_mm512_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_load_pd</name><parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>*</operator><operator>(</operator><specifier>const</specifier> <name>__m512d</name><operator>*</operator><operator>)</operator><name>__p</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_load_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_loadapd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_load_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_loadapd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8df</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator>
<call><name>_mm512_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_load_si512</name> <parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>*</operator><operator>(</operator><specifier>const</specifier> <name>__m512i</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_load_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>*</operator><operator>(</operator><specifier>const</specifier> <name>__m512i</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_load_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>*</operator><operator>(</operator><specifier>const</specifier> <name>__m512i</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr>;</return>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_storeu_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__storeu_epi64</name> <block>{
<decl_stmt><decl><type><name>__m512i_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__storeu_epi64</name><operator>*</operator><operator>)</operator><name>__P</name><operator>)</operator><operator>-&gt;</operator><name>__v</name> <operator>=</operator> <name>__A</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_storeu_epi64</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storedqudi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>long</name> <name>long</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_storeu_si512</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__storeu_si512</name> <block>{
<decl_stmt><decl><type><name>__m512i_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__storeu_si512</name><operator>*</operator><operator>)</operator><name>__P</name><operator>)</operator><operator>-&gt;</operator><name>__v</name> <operator>=</operator> <name>__A</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_storeu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__storeu_epi32</name> <block>{
<decl_stmt><decl><type><name>__m512i_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__storeu_epi32</name><operator>*</operator><operator>)</operator><name>__P</name><operator>)</operator><operator>-&gt;</operator><name>__v</name> <operator>=</operator> <name>__A</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_storeu_epi32</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storedqusi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>int</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_storeu_pd</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storeupd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>double</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_storeu_pd</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__storeu_pd</name> <block>{
<decl_stmt><decl><type><name>__m512d_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__storeu_pd</name><operator>*</operator><operator>)</operator><name>__P</name><operator>)</operator><operator>-&gt;</operator><name>__v</name> <operator>=</operator> <name>__A</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_storeu_ps</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storeups512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>float</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_storeu_ps</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<struct>struct <name>__storeu_ps</name> <block>{
<decl_stmt><decl><type><name>__m512_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__storeu_ps</name><operator>*</operator><operator>)</operator><name>__P</name><operator>)</operator><operator>-&gt;</operator><name>__v</name> <operator>=</operator> <name>__A</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_store_pd</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storeapd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_store_pd</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>*</operator><operator>(</operator><name>__m512d</name><operator>*</operator><operator>)</operator><name>__P</name> <operator>=</operator> <name>__A</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_store_ps</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storeaps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_store_ps</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>*</operator><operator>(</operator><name>__m512</name><operator>*</operator><operator>)</operator><name>__P</name> <operator>=</operator> <name>__A</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_store_si512</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>*</operator><operator>(</operator><name>__m512i</name> <operator>*</operator><operator>)</operator> <name>__P</name> <operator>=</operator> <name>__A</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_store_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>*</operator><operator>(</operator><name>__m512i</name> <operator>*</operator><operator>)</operator> <name>__P</name> <operator>=</operator> <name>__A</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_store_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><operator>*</operator><operator>(</operator><name>__m512i</name> <operator>*</operator><operator>)</operator> <name>__P</name> <operator>=</operator> <name>__A</name></expr>;</expr_stmt>
</block_content>}</block></function>



<function><type><specifier>static</specifier> <name>__inline</name> <name>__mmask16</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm512_knot</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_knothi</name><argument_list>(<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpeq_epi32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epi32_mask((A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpeq_epi32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epi32_mask((k), (A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpge_epi32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epi32_mask((A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpge_epi32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epi32_mask((k), (A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpgt_epi32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epi32_mask((A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpgt_epi32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epi32_mask((k), (A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmple_epi32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epi32_mask((A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmple_epi32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epi32_mask((k), (A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmplt_epi32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epi32_mask((A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmplt_epi32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epi32_mask((k), (A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpneq_epi32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epi32_mask((A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpneq_epi32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epi32_mask((k), (A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpeq_epu32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epu32_mask((A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpeq_epu32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epu32_mask((k), (A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpge_epu32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epu32_mask((A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpge_epu32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epu32_mask((k), (A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpgt_epu32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epu32_mask((A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpgt_epu32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epu32_mask((k), (A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmple_epu32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epu32_mask((A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmple_epu32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epu32_mask((k), (A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmplt_epu32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epu32_mask((A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmplt_epu32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epu32_mask((k), (A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpneq_epu32_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epu32_mask((A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpneq_epu32_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epu32_mask((k), (A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpeq_epi64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epi64_mask((A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpeq_epi64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epi64_mask((k), (A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpge_epi64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epi64_mask((A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpge_epi64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epi64_mask((k), (A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpgt_epi64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epi64_mask((A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpgt_epi64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epi64_mask((k), (A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmple_epi64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epi64_mask((A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmple_epi64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epi64_mask((k), (A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmplt_epi64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epi64_mask((A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmplt_epi64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epi64_mask((k), (A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpneq_epi64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epi64_mask((A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpneq_epi64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epi64_mask((k), (A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpeq_epu64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epu64_mask((A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpeq_epu64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epu64_mask((k), (A), (B), _MM_CMPINT_EQ)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpge_epu64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epu64_mask((A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpge_epu64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epu64_mask((k), (A), (B), _MM_CMPINT_GE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpgt_epu64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epu64_mask((A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpgt_epu64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epu64_mask((k), (A), (B), _MM_CMPINT_GT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmple_epu64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epu64_mask((A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmple_epu64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epu64_mask((k), (A), (B), _MM_CMPINT_LE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmplt_epu64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epu64_mask((A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmplt_epu64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epu64_mask((k), (A), (B), _MM_CMPINT_LT)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmpneq_epu64_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_cmp_epu64_mask((A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmpneq_epu64_mask</name><parameter_list>(<parameter><type><name>k</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_cmp_epu64_mask((k), (A), (B), _MM_CMPINT_NE)</cpp:value></cpp:define>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepi8_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>


<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qs</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v16si</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepi8_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_cvtepi8_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtepi8_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_cvtepi8_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepi8_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>


<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qs</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16qs</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__v8di</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepi8_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_cvtepi8_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtepi8_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_cvtepi8_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepi32_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><name>__v8di</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepi32_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_cvtepi32_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtepi32_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_cvtepi32_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepi16_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v16si</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepi16_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_cvtepi16_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtepi16_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_cvtepi16_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepi16_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v8di</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepi16_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_cvtepi16_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtepi16_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_cvtepi16_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepu8_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qu</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v16si</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepu8_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_cvtepu8_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtepu8_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_cvtepu8_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepu8_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qu</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16qu</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__v8di</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepu8_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_cvtepu8_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtepu8_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_cvtepu8_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepu32_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8su</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><name>__v8di</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepu32_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_cvtepu32_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtepu32_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_cvtepu32_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepu16_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hu</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v16si</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepu16_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_cvtepu16_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtepu16_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_cvtepu16_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepu16_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hu</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v8di</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepu16_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_cvtepu16_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtepu16_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_cvtepu16_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_rorv_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_prorvd512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_rorv_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_rorv_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_rorv_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_rorv_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_rorv_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_prorvq512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_rorv_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_rorv_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_rorv_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_rorv_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmp_epi32_mask</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask16)__builtin_ia32_cmpd512_mask((__v16si)(__m512i)(a), (__v16si)(__m512i)(b), (int)(p), (__mmask16)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmp_epu32_mask</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask16)__builtin_ia32_ucmpd512_mask((__v16si)(__m512i)(a), (__v16si)(__m512i)(b), (int)(p), (__mmask16)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmp_epi64_mask</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpq512_mask((__v8di)(__m512i)(a), (__v8di)(__m512i)(b), (int)(p), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cmp_epu64_mask</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_ucmpq512_mask((__v8di)(__m512i)(a), (__v8di)(__m512i)(b), (int)(p), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmp_epi32_mask</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask16)__builtin_ia32_cmpd512_mask((__v16si)(__m512i)(a), (__v16si)(__m512i)(b), (int)(p), (__mmask16)(m))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmp_epu32_mask</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask16)__builtin_ia32_ucmpd512_mask((__v16si)(__m512i)(a), (__v16si)(__m512i)(b), (int)(p), (__mmask16)(m))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmp_epi64_mask</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpq512_mask((__v8di)(__m512i)(a), (__v8di)(__m512i)(b), (int)(p), (__mmask8)(m))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cmp_epu64_mask</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>p</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_ucmpq512_mask((__v8di)(__m512i)(a), (__v8di)(__m512i)(b), (int)(p), (__mmask8)(m))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_rol_epi32</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_prold512((__v16si)(__m512i)(a), (int)(b))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_rol_epi32</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectd_512((__mmask16)(U), (__v16si)_mm512_rol_epi32((a), (b)), (__v16si)(__m512i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_rol_epi32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectd_512((__mmask16)(U), (__v16si)_mm512_rol_epi32((a), (b)), (__v16si)_mm512_setzero_si512())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_rol_epi64</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_prolq512((__v8di)(__m512i)(a), (int)(b))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_rol_epi64</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectq_512((__mmask8)(U), (__v8di)_mm512_rol_epi64((a), (b)), (__v8di)(__m512i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_rol_epi64</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectq_512((__mmask8)(U), (__v8di)_mm512_rol_epi64((a), (b)), (__v8di)_mm512_setzero_si512())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_rolv_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_prolvd512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_rolv_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_rolv_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_rolv_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_rolv_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_rolv_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_prolvq512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_rolv_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_rolv_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_rolv_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_rolv_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_ror_epi32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_prord512((__v16si)(__m512i)(A), (int)(B))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_ror_epi32</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectd_512((__mmask16)(U), (__v16si)_mm512_ror_epi32((A), (B)), (__v16si)(__m512i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_ror_epi32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectd_512((__mmask16)(U), (__v16si)_mm512_ror_epi32((A), (B)), (__v16si)_mm512_setzero_si512())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_ror_epi64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_prorq512((__v8di)(__m512i)(A), (int)(B))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_ror_epi64</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectq_512((__mmask8)(U), (__v8di)_mm512_ror_epi64((A), (B)), (__v8di)(__m512i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_ror_epi64</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectq_512((__mmask8)(U), (__v8di)_mm512_ror_epi64((A), (B)), (__v8di)_mm512_setzero_si512())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_slli_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_pslldi512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_slli_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_slli_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_slli_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_slli_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_slli_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_psllqi512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_slli_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_slli_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_slli_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_slli_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_srli_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_psrldi512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_srli_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_srli_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_srli_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_srli_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_srli_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_psrlqi512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_srli_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_srli_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_srli_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_srli_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_load_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_movdqa32load512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v16si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_load_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_movdqa32load512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v16si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator>
<call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_store_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_movdqa32store512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_mov_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_selectd_512</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_mov_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_selectd_512</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_mov_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_selectq_512</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_mov_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_selectq_512</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_load_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_movdqa64load512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_load_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_movdqa64load512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator>
<call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_store_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_movdqa64store512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_movedup_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_movedup_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_movedup_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_movedup_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_movedup_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_fixupimm_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_fixupimmpd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8di)(__m512i)(C), (int)(imm), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_fixupimm_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_fixupimmpd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8di)(__m512i)(C), (int)(imm), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_fixupimm_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_fixupimmpd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8di)(__m512i)(C), (int)(imm), (__mmask8)-1, _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_fixupimm_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_fixupimmpd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8di)(__m512i)(C), (int)(imm), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_fixupimm_round_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_fixupimmpd512_maskz((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8di)(__m512i)(C), (int)(imm), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_fixupimm_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_fixupimmpd512_maskz((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8di)(__m512i)(C), (int)(imm), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_fixupimm_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_fixupimmps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16si)(__m512i)(C), (int)(imm), (__mmask16)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_fixupimm_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_fixupimmps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16si)(__m512i)(C), (int)(imm), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_fixupimm_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_fixupimmps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16si)(__m512i)(C), (int)(imm), (__mmask16)-1, _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_fixupimm_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_fixupimmps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16si)(__m512i)(C), (int)(imm), (__mmask16)(U), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_fixupimm_round_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_fixupimmps512_maskz((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16si)(__m512i)(C), (int)(imm), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_fixupimm_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_fixupimmps512_maskz((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16si)(__m512i)(C), (int)(imm), (__mmask16)(U), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_fixupimm_round_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_fixupimmsd_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2di)(__m128i)(C), (int)(imm), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_fixupimm_round_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_fixupimmsd_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2di)(__m128i)(C), (int)(imm), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_fixupimm_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_fixupimmsd_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2di)(__m128i)(C), (int)(imm), (__mmask8)-1, _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_fixupimm_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_fixupimmsd_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2di)(__m128i)(C), (int)(imm), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_fixupimm_round_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_fixupimmsd_maskz((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2di)(__m128i)(C), (int)(imm), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_fixupimm_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_fixupimmsd_maskz((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2di)(__m128i)(C), (int)(imm), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_fixupimm_round_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_fixupimmss_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4si)(__m128i)(C), (int)(imm), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_fixupimm_round_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_fixupimmss_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4si)(__m128i)(C), (int)(imm), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_fixupimm_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_fixupimmss_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4si)(__m128i)(C), (int)(imm), (__mmask8)-1, _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_fixupimm_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_fixupimmss_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4si)(__m128i)(C), (int)(imm), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_fixupimm_round_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_fixupimmss_maskz((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4si)(__m128i)(C), (int)(imm), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_fixupimm_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_fixupimmss_maskz((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4si)(__m128i)(C), (int)(imm), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_getexp_round_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_getexpsd128_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>






<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_getexp_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_getexpsd128_round_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_getexp_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_getexpsd128_round_mask</name> <argument_list>( <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_getexp_round_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_getexpsd128_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)(__m128d)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_getexp_sd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_getexpsd128_round_mask</name> <argument_list>( <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_getexp_round_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_getexpsd128_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_getexp_round_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_getexpss128_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_getexp_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_getexpss128_round_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_getexp_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_getexpss128_round_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_getexp_round_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_getexpss128_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)(__m128)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_getexp_ss</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_getexpss128_round_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_getexp_round_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_getexpss128_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_getmant_round_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>D</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_getmantsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(((D)&lt;&lt;2) | (C)), (__v2df)_mm_setzero_pd(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_getmant_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>D</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_getmantsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(((D)&lt;&lt;2) | (C)), (__v2df)_mm_setzero_pd(), (__mmask8)-1, _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_getmant_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>D</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_getmantsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(((D)&lt;&lt;2) | (C)), (__v2df)(__m128d)(W), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_getmant_round_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>D</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_getmantsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(((D)&lt;&lt;2) | (C)), (__v2df)(__m128d)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_getmant_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>D</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_getmantsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(((D)&lt;&lt;2) | (C)), (__v2df)_mm_setzero_pd(), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_getmant_round_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>D</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_getmantsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(((D)&lt;&lt;2) | (C)), (__v2df)_mm_setzero_pd(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_getmant_round_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>D</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_getmantss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(((D)&lt;&lt;2) | (C)), (__v4sf)_mm_setzero_ps(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_getmant_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>D</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_getmantss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(((D)&lt;&lt;2) | (C)), (__v4sf)_mm_setzero_ps(), (__mmask8)-1, _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_getmant_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>D</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_getmantss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(((D)&lt;&lt;2) | (C)), (__v4sf)(__m128)(W), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_getmant_round_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>D</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_getmantss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(((D)&lt;&lt;2) | (C)), (__v4sf)(__m128)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_getmant_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>D</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_getmantss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(((D)&lt;&lt;2) | (C)), (__v4sf)_mm_setzero_ps(), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_getmant_round_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>D</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_getmantss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(((D)&lt;&lt;2) | (C)), (__v4sf)_mm_setzero_ps(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask16</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm512_kmov</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name>__A</name></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_comi_round_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>P</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(int)__builtin_ia32_vcomisd((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(P), (int)(R))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_comi_round_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>P</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(int)__builtin_ia32_vcomiss((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(P), (int)(R))</cpp:value></cpp:define>



<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundsd_si64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(long long)__builtin_ia32_vcvtsd2si64((__v2df)(__m128d)(A), (int)(R))</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_sll_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_pslld512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_sll_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_sll_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_sll_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_sll_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_sll_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_psllq512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_sll_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_sll_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_sll_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_sll_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_sllv_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_psllv16si</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_sllv_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_sllv_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_sllv_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_sllv_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_sllv_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_psllv8di</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_sllv_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_sllv_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_sllv_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_sllv_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_sra_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_psrad512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_sra_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_sra_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_sra_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_sra_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_sra_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_psraq512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_sra_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_sra_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_sra_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_sra_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_srav_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_psrav16si</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_srav_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_srav_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_srav_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_srav_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_srav_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_psrav8di</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_srav_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_srav_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_srav_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_srav_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_srl_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_psrld512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_srl_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_srl_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_srl_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_srl_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_srl_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_psrlq512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_srl_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_srl_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_srl_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_srl_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_srlv_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_psrlv16si</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_srlv_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_srlv_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_srlv_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_srlv_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_srlv_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_psrlv8di</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_srlv_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_srlv_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_srlv_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_srlv_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_ternarylogic_epi32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_pternlogd512_mask((__v16si)(__m512i)(A), (__v16si)(__m512i)(B), (__v16si)(__m512i)(C), (int)(imm), (__mmask16)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_ternarylogic_epi32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_pternlogd512_mask((__v16si)(__m512i)(A), (__v16si)(__m512i)(B), (__v16si)(__m512i)(C), (int)(imm), (__mmask16)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_ternarylogic_epi32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_pternlogd512_maskz((__v16si)(__m512i)(A), (__v16si)(__m512i)(B), (__v16si)(__m512i)(C), (int)(imm), (__mmask16)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_ternarylogic_epi64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_pternlogq512_mask((__v8di)(__m512i)(A), (__v8di)(__m512i)(B), (__v8di)(__m512i)(C), (int)(imm), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_ternarylogic_epi64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_pternlogq512_mask((__v8di)(__m512i)(A), (__v8di)(__m512i)(B), (__v8di)(__m512i)(C), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_ternarylogic_epi64</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_pternlogq512_maskz((__v8di)(__m512i)(A), (__v8di)(__m512i)(B), (__v8di)(__m512i)(C), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundsd_i64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(long long)__builtin_ia32_vcvtsd2si64((__v2df)(__m128d)(A), (int)(R))</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundsd_si32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(int)__builtin_ia32_vcvtsd2si32((__v2df)(__m128d)(A), (int)(R))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundsd_i32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(int)__builtin_ia32_vcvtsd2si32((__v2df)(__m128d)(A), (int)(R))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundsd_u32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(unsigned int)__builtin_ia32_vcvtsd2usi32((__v2df)(__m128d)(A), (int)(R))</cpp:value></cpp:define>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtsd_u32</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>unsigned</name><operator>)</operator> <call><name>__builtin_ia32_vcvtsd2usi32</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundsd_u64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(unsigned long long)__builtin_ia32_vcvtsd2usi64((__v2df)(__m128d)(A), (int)(R))</cpp:value></cpp:define>



<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtsd_u64</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>unsigned</name> <name>long</name> <name>long</name><operator>)</operator> <call><name>__builtin_ia32_vcvtsd2usi64</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator>
<name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundss_si32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(int)__builtin_ia32_vcvtss2si32((__v4sf)(__m128)(A), (int)(R))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundss_i32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(int)__builtin_ia32_vcvtss2si32((__v4sf)(__m128)(A), (int)(R))</cpp:value></cpp:define>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundss_si64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(long long)__builtin_ia32_vcvtss2si64((__v4sf)(__m128)(A), (int)(R))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundss_i64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(long long)__builtin_ia32_vcvtss2si64((__v4sf)(__m128)(A), (int)(R))</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundss_u32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(unsigned int)__builtin_ia32_vcvtss2usi32((__v4sf)(__m128)(A), (int)(R))</cpp:value></cpp:define>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtss_u32</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>unsigned</name><operator>)</operator> <call><name>__builtin_ia32_vcvtss2usi32</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundss_u64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(unsigned long long)__builtin_ia32_vcvtss2usi64((__v4sf)(__m128)(A), (int)(R))</cpp:value></cpp:define>



<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtss_u64</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>unsigned</name> <name>long</name> <name>long</name><operator>)</operator> <call><name>__builtin_ia32_vcvtss2usi64</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator>
<name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvtt_roundsd_i32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(int)__builtin_ia32_vcvttsd2si32((__v2df)(__m128d)(A), (int)(R))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvtt_roundsd_si32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(int)__builtin_ia32_vcvttsd2si32((__v2df)(__m128d)(A), (int)(R))</cpp:value></cpp:define>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvttsd_i32</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>int</name><operator>)</operator> <call><name>__builtin_ia32_vcvttsd2si32</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvtt_roundsd_si64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(long long)__builtin_ia32_vcvttsd2si64((__v2df)(__m128d)(A), (int)(R))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvtt_roundsd_i64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(long long)__builtin_ia32_vcvttsd2si64((__v2df)(__m128d)(A), (int)(R))</cpp:value></cpp:define>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvttsd_i64</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>long</name> <name>long</name><operator>)</operator> <call><name>__builtin_ia32_vcvttsd2si64</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvtt_roundsd_u32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(unsigned int)__builtin_ia32_vcvttsd2usi32((__v2df)(__m128d)(A), (int)(R))</cpp:value></cpp:define>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvttsd_u32</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>unsigned</name><operator>)</operator> <call><name>__builtin_ia32_vcvttsd2usi32</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvtt_roundsd_u64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(unsigned long long)__builtin_ia32_vcvttsd2usi64((__v2df)(__m128d)(A), (int)(R))</cpp:value></cpp:define>



<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvttsd_u64</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>unsigned</name> <name>long</name> <name>long</name><operator>)</operator> <call><name>__builtin_ia32_vcvttsd2usi64</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator>
<name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvtt_roundss_i32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(int)__builtin_ia32_vcvttss2si32((__v4sf)(__m128)(A), (int)(R))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvtt_roundss_si32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(int)__builtin_ia32_vcvttss2si32((__v4sf)(__m128)(A), (int)(R))</cpp:value></cpp:define>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvttss_i32</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>int</name><operator>)</operator> <call><name>__builtin_ia32_vcvttss2si32</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvtt_roundss_i64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(long long)__builtin_ia32_vcvttss2si64((__v4sf)(__m128)(A), (int)(R))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvtt_roundss_si64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(long long)__builtin_ia32_vcvttss2si64((__v4sf)(__m128)(A), (int)(R))</cpp:value></cpp:define>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvttss_i64</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>long</name> <name>long</name><operator>)</operator> <call><name>__builtin_ia32_vcvttss2si64</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvtt_roundss_u32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(unsigned int)__builtin_ia32_vcvttss2usi32((__v4sf)(__m128)(A), (int)(R))</cpp:value></cpp:define>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvttss_u32</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>unsigned</name><operator>)</operator> <call><name>__builtin_ia32_vcvttss2usi32</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvtt_roundss_u64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(unsigned long long)__builtin_ia32_vcvttss2usi64((__v4sf)(__m128)(A), (int)(R))</cpp:value></cpp:define>



<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvttss_u64</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>unsigned</name> <name>long</name> <name>long</name><operator>)</operator> <call><name>__builtin_ia32_vcvttss2usi64</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator>
<name>__A</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_permute_pd</name><parameter_list>(<parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_vpermilpd512((__v8df)(__m512d)(X), (int)(C))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_permute_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_permute_pd((X), (C)), (__v8df)(__m512d)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_permute_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_permute_pd((X), (C)), (__v8df)_mm512_setzero_pd())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_permute_ps</name><parameter_list>(<parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_vpermilps512((__v16sf)(__m512)(X), (int)(C))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_permute_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_permute_ps((X), (C)), (__v16sf)(__m512)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_permute_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_permute_ps((X), (C)), (__v16sf)_mm512_setzero_ps())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_permutevar_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_vpermilvarpd512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_permutevar_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_permutevar_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_permutevar_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_permutevar_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_permutevar_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_vpermilvarps512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_permutevar_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_permutevar_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_permutevar_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_permutevar_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__C</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_permutex2var_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_vpermi2varpd512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__I</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_permutex2var_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_permutex2var_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask2_permutex2var_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>,
<parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_permutex2var_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><operator>(</operator><name>__m512d</name><operator>)</operator><name>__I</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_permutex2var_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__I</name></decl></parameter>,
<parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_permutex2var_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_permutex2var_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_vpermi2varps512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__I</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_permutex2var_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_permutex2var_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask2_permutex2var_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_permutex2var_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><operator>(</operator><name>__m512</name><operator>)</operator><name>__I</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_permutex2var_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_permutex2var_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__I</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cvtt_roundpd_epu32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_cvttpd2udq512_mask((__v8df)(__m512d)(A), (__v8si)_mm256_undefined_si256(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cvtt_roundpd_epu32</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_cvttpd2udq512_mask((__v8df)(__m512d)(A), (__v8si)(__m256i)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_cvtt_roundpd_epu32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_cvttpd2udq512_mask((__v8df)(__m512d)(A), (__v8si)_mm256_setzero_si256(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvttpd_epu32</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2udq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator>
<call><name>_mm256_undefined_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvttpd_epu32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2udq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvttpd_epu32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2udq512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator>
<call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_roundscale_round_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_rndscalesd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)-1, (int)(imm), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_roundscale_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_rndscalesd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)-1, (int)(imm), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_roundscale_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_rndscalesd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)(__m128d)(W), (__mmask8)(U), (int)(imm), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_roundscale_round_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>I</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_rndscalesd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)(__m128d)(W), (__mmask8)(U), (int)(I), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_roundscale_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_rndscalesd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)(U), (int)(I), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_roundscale_round_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>I</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_rndscalesd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)(U), (int)(I), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_roundscale_round_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_rndscaless_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)-1, (int)(imm), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_roundscale_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_rndscaless_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)-1, (int)(imm), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_roundscale_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_rndscaless_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)(__m128)(W), (__mmask8)(U), (int)(I), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_roundscale_round_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>I</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_rndscaless_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)(__m128)(W), (__mmask8)(U), (int)(I), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_roundscale_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_rndscaless_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)(U), (int)(I), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_roundscale_round_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>I</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_rndscaless_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)(U), (int)(I), (int)(R))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_scalef_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_scalefpd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8df)_mm512_undefined_pd(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_scalef_round_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_scalefpd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8df)(__m512d)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_scalef_round_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_scalefpd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (__v8df)_mm512_setzero_pd(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_scalef_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_scalefpd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator>
<call><name>_mm512_undefined_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_scalef_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_scalefpd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_scalef_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_scalefpd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator>
<call><name>_mm512_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_scalef_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_scalefps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16sf)_mm512_undefined_ps(), (__mmask16)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_scalef_round_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_scalefps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16sf)(__m512)(W), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_scalef_round_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_scalefps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (__v16sf)_mm512_setzero_ps(), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_scalef_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_scalefps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator>
<call><name>_mm512_undefined_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_scalef_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_scalefps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_scalef_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_scalefps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator>
<call><name>_mm512_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_scalef_round_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_scalefsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_scalef_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_scalefsd_round_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><operator>(</operator> <name>__B</name><operator>)</operator></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_scalef_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_scalefsd_round_mask</name> <argument_list>( <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_scalef_round_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_scalefsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)(__m128d)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_scalef_sd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_scalefsd_round_mask</name> <argument_list>( <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_scalef_round_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_scalefsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_scalef_round_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_scalefss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_scalef_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_scalefss_round_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><operator>(</operator> <name>__B</name><operator>)</operator></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_scalef_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_scalefss_round_mask</name> <argument_list>( <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_scalef_round_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_scalefss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)(__m128)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_scalef_ss</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_scalefss_round_mask</name> <argument_list>( <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_scalef_round_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_scalefss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_srai_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_psradi512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_srai_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_srai_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_srai_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_srai_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_srai_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_psraqi512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_srai_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_srai_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_srai_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_srai_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_shuffle_f32x4</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_shuf_f32x4((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_shuffle_f32x4</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_shuffle_f32x4((A), (B), (imm)), (__v16sf)(__m512)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_shuffle_f32x4</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_shuffle_f32x4((A), (B), (imm)), (__v16sf)_mm512_setzero_ps())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_shuffle_f64x2</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_shuf_f64x2((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_shuffle_f64x2</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_shuffle_f64x2((A), (B), (imm)), (__v8df)(__m512d)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_shuffle_f64x2</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_shuffle_f64x2((A), (B), (imm)), (__v8df)_mm512_setzero_pd())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_shuffle_i32x4</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_shuf_i32x4((__v16si)(__m512i)(A), (__v16si)(__m512i)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_shuffle_i32x4</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectd_512((__mmask16)(U), (__v16si)_mm512_shuffle_i32x4((A), (B), (imm)), (__v16si)(__m512i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_shuffle_i32x4</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectd_512((__mmask16)(U), (__v16si)_mm512_shuffle_i32x4((A), (B), (imm)), (__v16si)_mm512_setzero_si512())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_shuffle_i64x2</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_shuf_i64x2((__v8di)(__m512i)(A), (__v8di)(__m512i)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_shuffle_i64x2</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectq_512((__mmask8)(U), (__v8di)_mm512_shuffle_i64x2((A), (B), (imm)), (__v8di)(__m512i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_shuffle_i64x2</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectq_512((__mmask8)(U), (__v8di)_mm512_shuffle_i64x2((A), (B), (imm)), (__v8di)_mm512_setzero_si512())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_shuffle_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_shufpd512((__v8df)(__m512d)(A), (__v8df)(__m512d)(B), (int)(M))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_shuffle_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_shuffle_pd((A), (B), (M)), (__v8df)(__m512d)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_shuffle_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_shuffle_pd((A), (B), (M)), (__v8df)_mm512_setzero_pd())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_shuffle_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_shufps512((__v16sf)(__m512)(A), (__v16sf)(__m512)(B), (int)(M))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_shuffle_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_shuffle_ps((A), (B), (M)), (__v16sf)(__m512)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_shuffle_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_shuffle_ps((A), (B), (M)), (__v16sf)_mm512_setzero_ps())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_sqrt_round_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_sqrtsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_sqrt_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_sqrtsd_round_mask</name> <argument_list>( <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_sqrt_round_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_sqrtsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)(__m128d)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_sqrt_sd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_sqrtsd_round_mask</name> <argument_list>( <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <call><name>_mm_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_sqrt_round_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_sqrtsd_round_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)_mm_setzero_pd(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_sqrt_round_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_sqrtss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_sqrt_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_sqrtss_round_mask</name> <argument_list>( <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_sqrt_round_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_sqrtss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)(__m128)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_sqrt_ss</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_sqrtss_round_mask</name> <argument_list>( <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <call><name>_mm_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_sqrt_round_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_sqrtss_round_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_broadcast_f32x4</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_broadcast_f32x4</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_broadcast_f32x4</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_broadcast_f32x4</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_broadcast_f32x4</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_broadcast_f64x4</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_broadcast_f64x4</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_broadcast_f64x4</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_broadcast_f64x4</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_broadcast_f64x4</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_broadcast_i32x4</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_broadcast_i32x4</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_broadcast_i32x4</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_broadcast_i32x4</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_broadcast_i32x4</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_broadcast_i64x4</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_broadcast_i64x4</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_broadcast_i64x4</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_broadcast_i64x4</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_broadcast_i64x4</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_broadcastsd_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <call><name>_mm512_broadcastsd_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_broadcastsd_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <call><name>_mm512_broadcastsd_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <call><name>_mm512_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_broadcastss_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <call><name>_mm512_broadcastss_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_broadcastss_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <call><name>_mm512_broadcastss_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtsepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsdb512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_undefined_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtsepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsdb512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtsepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsdb512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtsepi32_storeu_epi8</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovsdb512mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtsepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsdw512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator> <call><name>_mm256_undefined_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtsepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsdw512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtsepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsdw512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator> <call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtsepi32_storeu_epi16</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovsdw512mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtsepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqb512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_undefined_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtsepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqb512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtsepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqb512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtsepi64_storeu_epi8</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovsqb512mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtsepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <call><name>_mm256_undefined_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtsepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtsepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtsepi64_storeu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovsqd512mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtsepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqw512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <call><name>_mm_undefined_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtsepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqw512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtsepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovsqw512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtsepi64_storeu_epi16</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovsqw512mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtusepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusdb512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_undefined_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtusepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusdb512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <name>__O</name></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtusepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusdb512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtusepi32_storeu_epi8</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovusdb512mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtusepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusdw512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator> <call><name>_mm256_undefined_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtusepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusdw512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator> <name>__O</name></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtusepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusdw512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator> <call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtusepi32_storeu_epi16</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovusdw512mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtusepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqb512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_undefined_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtusepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqb512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <name>__O</name></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtusepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqb512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtusepi64_storeu_epi8</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovusqb512mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtusepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <call><name>_mm256_undefined_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtusepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtusepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtusepi64_storeu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovusqd512mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtusepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqw512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <call><name>_mm_undefined_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtusepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqw512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtusepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovusqw512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtusepi64_storeu_epi16</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovusqw512mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovdb512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_undefined_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovdb512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtepi32_epi8</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovdb512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepi32_storeu_epi8</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovdb512mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_pmovdw512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator> <call><name>_mm256_undefined_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_pmovdw512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtepi32_epi16</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_pmovdw512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator> <call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepi32_storeu_epi16</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovdw512mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovqb512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_undefined_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovqb512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtepi64_epi8</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovqb512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepi64_storeu_epi8</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovqb512mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_pmovqd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <call><name>_mm256_undefined_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_pmovqd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtepi64_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_pmovqd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <call><name>_mm256_setzero_si256</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepi64_storeu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovqd512mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovqw512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <call><name>_mm_undefined_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovqw512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <name>__O</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtepi64_epi16</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_pmovqw512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator> <call><name>_mm_setzero_si128</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtepi64_storeu_epi16</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_pmovqw512mem_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>__M</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_extracti32x4_epi32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_extracti32x4_mask((__v16si)(__m512i)(A), (int)(imm), (__v4si)_mm_undefined_si128(), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_extracti32x4_epi32</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_extracti32x4_mask((__v16si)(__m512i)(A), (int)(imm), (__v4si)(__m128i)(W), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_extracti32x4_epi32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_extracti32x4_mask((__v16si)(__m512i)(A), (int)(imm), (__v4si)_mm_setzero_si128(), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_extracti64x4_epi64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_extracti64x4_mask((__v8di)(__m512i)(A), (int)(imm), (__v4di)_mm256_undefined_si256(), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_extracti64x4_epi64</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_extracti64x4_mask((__v8di)(__m512i)(A), (int)(imm), (__v4di)(__m256i)(W), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_extracti64x4_epi64</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_extracti64x4_mask((__v8di)(__m512i)(A), (int)(imm), (__v4di)_mm256_setzero_si256(), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_insertf64x4</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_insertf64x4((__v8df)(__m512d)(A), (__v4df)(__m256d)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_insertf64x4</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_insertf64x4((A), (B), (imm)), (__v8df)(__m512d)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_insertf64x4</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_insertf64x4((A), (B), (imm)), (__v8df)_mm512_setzero_pd())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_inserti64x4</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_inserti64x4((__v8di)(__m512i)(A), (__v4di)(__m256i)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_inserti64x4</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectq_512((__mmask8)(U), (__v8di)_mm512_inserti64x4((A), (B), (imm)), (__v8di)(__m512i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_inserti64x4</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectq_512((__mmask8)(U), (__v8di)_mm512_inserti64x4((A), (B), (imm)), (__v8di)_mm512_setzero_si512())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_insertf32x4</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_insertf32x4((__v16sf)(__m512)(A), (__v4sf)(__m128)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_insertf32x4</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_insertf32x4((A), (B), (imm)), (__v16sf)(__m512)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_insertf32x4</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_selectps_512((__mmask16)(U), (__v16sf)_mm512_insertf32x4((A), (B), (imm)), (__v16sf)_mm512_setzero_ps())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_inserti32x4</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_inserti32x4((__v16si)(__m512i)(A), (__v4si)(__m128i)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_inserti32x4</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectd_512((__mmask16)(U), (__v16si)_mm512_inserti32x4((A), (B), (imm)), (__v16si)(__m512i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_inserti32x4</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectd_512((__mmask16)(U), (__v16si)_mm512_inserti32x4((A), (B), (imm)), (__v16si)_mm512_setzero_si512())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_getmant_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_getmantpd512_mask((__v8df)(__m512d)(A), (int)(((C)&lt;&lt;2) | (B)), (__v8df)_mm512_undefined_pd(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_getmant_round_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_getmantpd512_mask((__v8df)(__m512d)(A), (int)(((C)&lt;&lt;2) | (B)), (__v8df)(__m512d)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_getmant_round_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_getmantpd512_mask((__v8df)(__m512d)(A), (int)(((C)&lt;&lt;2) | (B)), (__v8df)_mm512_setzero_pd(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_getmant_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_getmantpd512_mask((__v8df)(__m512d)(A), (int)(((C)&lt;&lt;2) | (B)), (__v8df)_mm512_setzero_pd(), (__mmask8)-1, _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_getmant_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_getmantpd512_mask((__v8df)(__m512d)(A), (int)(((C)&lt;&lt;2) | (B)), (__v8df)(__m512d)(W), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_getmant_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_getmantpd512_mask((__v8df)(__m512d)(A), (int)(((C)&lt;&lt;2) | (B)), (__v8df)_mm512_setzero_pd(), (__mmask8)(U), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_getmant_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_getmantps512_mask((__v16sf)(__m512)(A), (int)(((C)&lt;&lt;2) | (B)), (__v16sf)_mm512_undefined_ps(), (__mmask16)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_getmant_round_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_getmantps512_mask((__v16sf)(__m512)(A), (int)(((C)&lt;&lt;2) | (B)), (__v16sf)(__m512)(W), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_getmant_round_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_getmantps512_mask((__v16sf)(__m512)(A), (int)(((C)&lt;&lt;2) | (B)), (__v16sf)_mm512_setzero_ps(), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_getmant_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_getmantps512_mask((__v16sf)(__m512)(A), (int)(((C)&lt;&lt;2)|(B)), (__v16sf)_mm512_undefined_ps(), (__mmask16)-1, _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_getmant_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_getmantps512_mask((__v16sf)(__m512)(A), (int)(((C)&lt;&lt;2)|(B)), (__v16sf)(__m512)(W), (__mmask16)(U), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_getmant_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_getmantps512_mask((__v16sf)(__m512)(A), (int)(((C)&lt;&lt;2)|(B)), (__v16sf)_mm512_setzero_ps(), (__mmask16)(U), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_getexp_round_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_getexppd512_mask((__v8df)(__m512d)(A), (__v8df)_mm512_undefined_pd(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_getexp_round_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_getexppd512_mask((__v8df)(__m512d)(A), (__v8df)(__m512d)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_getexp_round_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_getexppd512_mask((__v8df)(__m512d)(A), (__v8df)_mm512_setzero_pd(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_getexp_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_getexppd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <call><name>_mm512_undefined_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_getexp_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_getexppd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_getexp_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_getexppd512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <call><name>_mm512_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_getexp_round_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_getexpps512_mask((__v16sf)(__m512)(A), (__v16sf)_mm512_undefined_ps(), (__mmask16)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_getexp_round_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_getexpps512_mask((__v16sf)(__m512)(A), (__v16sf)(__m512)(W), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_getexp_round_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_getexpps512_mask((__v16sf)(__m512)(A), (__v16sf)_mm512_setzero_ps(), (__mmask16)(U), (int)(R))</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_getexp_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_getexpps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <call><name>_mm512_undefined_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_getexp_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_getexpps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_getexp_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_getexpps512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <call><name>_mm512_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i64gather_ps</name><parameter_list>(<parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_gatherdiv16sf((__v8sf)_mm256_undefined_ps(), (void const *)(addr), (__v8di)(__m512i)(index), (__mmask8)-1, (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i64gather_ps</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_gatherdiv16sf((__v8sf)(__m256)(v1_old),(void const *)(addr), (__v8di)(__m512i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i64gather_epi32</name><parameter_list>(<parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_gatherdiv16si((__v8si)_mm256_undefined_si256(), (void const *)(addr), (__v8di)(__m512i)(index), (__mmask8)-1, (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i64gather_epi32</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_gatherdiv16si((__v8si)(__m256i)(v1_old), (void const *)(addr), (__v8di)(__m512i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i64gather_pd</name><parameter_list>(<parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_gatherdiv8df((__v8df)_mm512_undefined_pd(), (void const *)(addr), (__v8di)(__m512i)(index), (__mmask8)-1, (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i64gather_pd</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_gatherdiv8df((__v8df)(__m512d)(v1_old), (void const *)(addr), (__v8di)(__m512i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i64gather_epi64</name><parameter_list>(<parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_gatherdiv8di((__v8di)_mm512_undefined_epi32(), (void const *)(addr), (__v8di)(__m512i)(index), (__mmask8)-1, (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i64gather_epi64</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_gatherdiv8di((__v8di)(__m512i)(v1_old), (void const *)(addr), (__v8di)(__m512i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i32gather_ps</name><parameter_list>(<parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_gathersiv16sf((__v16sf)_mm512_undefined_ps(), (void const *)(addr), (__v16si)(__m512)(index), (__mmask16)-1, (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i32gather_ps</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512)__builtin_ia32_gathersiv16sf((__v16sf)(__m512)(v1_old), (void const *)(addr), (__v16si)(__m512)(index), (__mmask16)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i32gather_epi32</name><parameter_list>(<parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_gathersiv16si((__v16si)_mm512_undefined_epi32(), (void const *)(addr), (__v16si)(__m512i)(index), (__mmask16)-1, (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i32gather_epi32</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_gathersiv16si((__v16si)(__m512i)(v1_old), (void const *)(addr), (__v16si)(__m512i)(index), (__mmask16)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i32gather_pd</name><parameter_list>(<parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_gathersiv8df((__v8df)_mm512_undefined_pd(), (void const *)(addr), (__v8si)(__m256i)(index), (__mmask8)-1, (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i32gather_pd</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_gathersiv8df((__v8df)(__m512d)(v1_old), (void const *)(addr), (__v8si)(__m256i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i32gather_epi64</name><parameter_list>(<parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_gathersiv8di((__v8di)_mm512_undefined_epi32(), (void const *)(addr), (__v8si)(__m256i)(index), (__mmask8)-1, (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i32gather_epi64</name><parameter_list>(<parameter><type><name>v1_old</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_gathersiv8di((__v8di)(__m512i)(v1_old), (void const *)(addr), (__v8si)(__m256i)(index), (__mmask8)(mask), (int)(scale))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i64scatter_ps</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv16sf((void *)(addr), (__mmask8)-1, (__v8di)(__m512i)(index), (__v8sf)(__m256)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i64scatter_ps</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv16sf((void *)(addr), (__mmask8)(mask), (__v8di)(__m512i)(index), (__v8sf)(__m256)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i64scatter_epi32</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv16si((void *)(addr), (__mmask8)-1, (__v8di)(__m512i)(index), (__v8si)(__m256i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i64scatter_epi32</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv16si((void *)(addr), (__mmask8)(mask), (__v8di)(__m512i)(index), (__v8si)(__m256i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i64scatter_pd</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv8df((void *)(addr), (__mmask8)-1, (__v8di)(__m512i)(index), (__v8df)(__m512d)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i64scatter_pd</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv8df((void *)(addr), (__mmask8)(mask), (__v8di)(__m512i)(index), (__v8df)(__m512d)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i64scatter_epi64</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv8di((void *)(addr), (__mmask8)-1, (__v8di)(__m512i)(index), (__v8di)(__m512i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i64scatter_epi64</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scatterdiv8di((void *)(addr), (__mmask8)(mask), (__v8di)(__m512i)(index), (__v8di)(__m512i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i32scatter_ps</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv16sf((void *)(addr), (__mmask16)-1, (__v16si)(__m512i)(index), (__v16sf)(__m512)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i32scatter_ps</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv16sf((void *)(addr), (__mmask16)(mask), (__v16si)(__m512i)(index), (__v16sf)(__m512)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i32scatter_epi32</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv16si((void *)(addr), (__mmask16)-1, (__v16si)(__m512i)(index), (__v16si)(__m512i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i32scatter_epi32</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv16si((void *)(addr), (__mmask16)(mask), (__v16si)(__m512i)(index), (__v16si)(__m512i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i32scatter_pd</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv8df((void *)(addr), (__mmask8)-1, (__v8si)(__m256i)(index), (__v8df)(__m512d)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i32scatter_pd</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv8df((void *)(addr), (__mmask8)(mask), (__v8si)(__m256i)(index), (__v8df)(__m512d)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i32scatter_epi64</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv8di((void *)(addr), (__mmask8)-1, (__v8si)(__m256i)(index), (__v8di)(__m512i)(v1), (int)(scale))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i32scatter_epi64</name><parameter_list>(<parameter><type><name>addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>index</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__builtin_ia32_scattersiv8di((void *)(addr), (__mmask8)(mask), (__v8si)(__m256i)(index), (__v8di)(__m512i)(v1), (int)(scale))</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fmadd_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddss3_mask</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_fmadd_round_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_vfmaddss3_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)(__m128)(C), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_fmadd_round_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_vfmaddss3_mask((__v4sf)(__m128)(W), (__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fmadd_ss</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddss3_maskz</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_fmadd_round_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_vfmaddss3_maskz((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__v4sf)(__m128)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fmadd_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__Y</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddss3_mask3</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__X</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__Y</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask3_fmadd_round_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_vfmaddss3_mask3((__v4sf)(__m128)(W), (__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fmsub_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddss3_mask</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_fmsub_round_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_vfmaddss3_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), -(__v4sf)(__m128)(C), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_fmsub_round_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_vfmaddss3_mask((__v4sf)(__m128)(W), (__v4sf)(__m128)(A), -(__v4sf)(__m128)(B), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fmsub_ss</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddss3_maskz</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_fmsub_round_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_vfmaddss3_maskz((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), -(__v4sf)(__m128)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fmsub_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__Y</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmsubss3_mask3</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__X</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__Y</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask3_fmsub_round_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_vfmsubss3_mask3((__v4sf)(__m128)(W), (__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fnmadd_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddss3_mask</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_fnmadd_round_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_vfmaddss3_mask((__v4sf)(__m128)(A), -(__v4sf)(__m128)(B), (__v4sf)(__m128)(C), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_fnmadd_round_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_vfmaddss3_mask((__v4sf)(__m128)(W), -(__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fnmadd_ss</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddss3_maskz</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_fnmadd_round_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_vfmaddss3_maskz((__v4sf)(__m128)(A), -(__v4sf)(__m128)(B), (__v4sf)(__m128)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fnmadd_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__Y</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddss3_mask3</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__X</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__Y</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask3_fnmadd_round_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_vfmaddss3_mask3((__v4sf)(__m128)(W), -(__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fnmsub_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddss3_mask</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_fnmsub_round_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_vfmaddss3_mask((__v4sf)(__m128)(A), -(__v4sf)(__m128)(B), -(__v4sf)(__m128)(C), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_fnmsub_round_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_vfmaddss3_mask((__v4sf)(__m128)(W), -(__v4sf)(__m128)(A), -(__v4sf)(__m128)(B), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fnmsub_ss</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddss3_maskz</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_fnmsub_round_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_vfmaddss3_maskz((__v4sf)(__m128)(A), -(__v4sf)(__m128)(B), -(__v4sf)(__m128)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fnmsub_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__Y</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmsubss3_mask3</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__X</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__Y</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask3_fnmsub_round_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_vfmsubss3_mask3((__v4sf)(__m128)(W), -(__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fmadd_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddsd3_mask</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_fmadd_round_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_vfmaddsd3_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)(__m128d)(C), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_fmadd_round_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_vfmaddsd3_mask((__v2df)(__m128d)(W), (__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fmadd_sd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddsd3_maskz</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_fmadd_round_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_vfmaddsd3_maskz((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__v2df)(__m128d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fmadd_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__Y</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddsd3_mask3</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__X</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__Y</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask3_fmadd_round_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_vfmaddsd3_mask3((__v2df)(__m128d)(W), (__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fmsub_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddsd3_mask</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_fmsub_round_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_vfmaddsd3_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), -(__v2df)(__m128d)(C), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_fmsub_round_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_vfmaddsd3_mask((__v2df)(__m128d)(W), (__v2df)(__m128d)(A), -(__v2df)(__m128d)(B), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fmsub_sd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddsd3_maskz</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_fmsub_round_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_vfmaddsd3_maskz((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), -(__v2df)(__m128d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fmsub_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__Y</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmsubsd3_mask3</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__X</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__Y</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask3_fmsub_round_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_vfmsubsd3_mask3((__v2df)(__m128d)(W), (__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fnmadd_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddsd3_mask</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_fnmadd_round_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_vfmaddsd3_mask((__v2df)(__m128d)(A), -(__v2df)(__m128d)(B), (__v2df)(__m128d)(C), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_fnmadd_round_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_vfmaddsd3_mask((__v2df)(__m128d)(W), -(__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fnmadd_sd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddsd3_maskz</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_fnmadd_round_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_vfmaddsd3_maskz((__v2df)(__m128d)(A), -(__v2df)(__m128d)(B), (__v2df)(__m128d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fnmadd_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__Y</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddsd3_mask3</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__X</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__Y</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask3_fnmadd_round_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_vfmaddsd3_mask3((__v2df)(__m128d)(W), -(__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_fnmsub_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddsd3_mask</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_fnmsub_round_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_vfmaddsd3_mask((__v2df)(__m128d)(A), -(__v2df)(__m128d)(B), -(__v2df)(__m128d)(C), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_fnmsub_round_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_vfmaddsd3_mask((__v2df)(__m128d)(W), -(__v2df)(__m128d)(A), -(__v2df)(__m128d)(B), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_fnmsub_sd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmaddsd3_maskz</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__C</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_fnmsub_round_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_vfmaddsd3_maskz((__v2df)(__m128d)(A), -(__v2df)(__m128d)(B), -(__v2df)(__m128d)(C), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>






<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask3_fnmsub_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__Y</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vfmsubsd3_mask3</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>,
<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__X</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__Y</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask3_fnmsub_round_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_vfmsubsd3_mask3((__v2df)(__m128d)(W), -(__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_permutex_pd</name><parameter_list>(<parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_permdf512((__v8df)(__m512d)(X), (int)(C))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_permutex_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_permutex_pd((X), (C)), (__v8df)(__m512d)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_permutex_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_selectpd_512((__mmask8)(U), (__v8df)_mm512_permutex_pd((X), (C)), (__v8df)_mm512_setzero_pd())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_permutex_epi64</name><parameter_list>(<parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_permdi512((__v8di)(__m512i)(X), (int)(C))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_permutex_epi64</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectq_512((__mmask8)(U), (__v8di)_mm512_permutex_epi64((X), (C)), (__v8di)(__m512i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_permutex_epi64</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectq_512((__mmask8)(U), (__v8di)_mm512_permutex_epi64((X), (C)), (__v8di)_mm512_setzero_si512())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_permutexvar_pd</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_permvardf512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__Y</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__X</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_permutexvar_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_permutexvar_pd</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_permutexvar_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_permutexvar_pd</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_permutexvar_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_permvardi512</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__Y</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__X</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_permutexvar_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_permutexvar_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_permutexvar_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>,
<parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><call><name>_mm512_permutexvar_epi64</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_permutexvar_ps</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_permvarsf512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__Y</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__X</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_permutexvar_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_permutexvar_ps</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_permutexvar_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_permutexvar_ps</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_permutexvar_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_permvarsi512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__Y</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__X</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_permutevar_epi32</name></cpp:macro> <cpp:value>_mm512_permutexvar_epi32</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_permutexvar_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_permutexvar_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_permutexvar_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__X</name></decl></parameter>,
<parameter><decl><type><name>__m512i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator><call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><call><name>_mm512_permutexvar_epi32</name><argument_list>(<argument><expr><name>__X</name></expr></argument>, <argument><expr><name>__Y</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_permutevar_epi32</name></cpp:macro> <cpp:value>_mm512_mask_permutexvar_epi32</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask16</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm512_kand</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <call><name>__builtin_ia32_kandhi</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask16</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm512_kandn</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <call><name>__builtin_ia32_kandnhi</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask16</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm512_kor</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <call><name>__builtin_ia32_korhi</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm512_kortestc</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_kortestchi</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm512_kortestz</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_kortestzhi</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>char</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_kortestc_mask16_u8</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>unsigned</name> <name>char</name><operator>)</operator><call><name>__builtin_ia32_kortestchi</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>char</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_kortestz_mask16_u8</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>unsigned</name> <name>char</name><operator>)</operator><call><name>__builtin_ia32_kortestzhi</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>char</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_kortest_mask16_u8</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>__C</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>__C</name> <operator>=</operator> <operator>(</operator><name>unsigned</name> <name>char</name><operator>)</operator><call><name>__builtin_ia32_kortestchi</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><operator>(</operator><name>unsigned</name> <name>char</name><operator>)</operator><call><name>__builtin_ia32_kortestzhi</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask16</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm512_kunpackb</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <call><name>__builtin_ia32_kunpckhi</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask16</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm512_kxnor</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <call><name>__builtin_ia32_kxnorhi</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask16</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm512_kxor</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <call><name>__builtin_ia32_kxorhi</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__B</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_kand_mask16</name></cpp:macro> <cpp:value>_mm512_kand</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_kandn_mask16</name></cpp:macro> <cpp:value>_mm512_kandn</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_knot_mask16</name></cpp:macro> <cpp:value>_mm512_knot</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_kor_mask16</name></cpp:macro> <cpp:value>_mm512_kor</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_kxnor_mask16</name></cpp:macro> <cpp:value>_mm512_kxnor</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_kxor_mask16</name></cpp:macro> <cpp:value>_mm512_kxor</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_kshiftli_mask16</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask16)__builtin_ia32_kshiftlihi((__mmask16)(A), (unsigned int)(I))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_kshiftri_mask16</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask16)__builtin_ia32_kshiftrihi((__mmask16)(A), (unsigned int)(I))</cpp:value></cpp:define>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_cvtmask16_u32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>unsigned</name> <name>int</name><operator>)</operator><call><name>__builtin_ia32_kmovw</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask16</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_cvtu32_mask16</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__mmask16</name><operator>)</operator><call><name>__builtin_ia32_kmovw</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask16</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_load_mask16</name><parameter_list>(<parameter><decl><type><name>__mmask16</name> <modifier>*</modifier></type><name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__mmask16</name><operator>)</operator><call><name>__builtin_ia32_kmovw</name><argument_list>(<argument><expr><operator>*</operator><operator>(</operator><name>__mmask16</name> <operator>*</operator><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_store_mask16</name><parameter_list>(<parameter><decl><type><name>__mmask16</name> <modifier>*</modifier></type><name>__A</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><operator>(</operator><name>__mmask16</name> <operator>*</operator><operator>)</operator><name>__A</name> <operator>=</operator> <call><name>__builtin_ia32_kmovw</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__B</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_stream_si512</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type> <name>__P</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<typedef>typedef <type><name>__v8di</name> <name>__v8di_aligned</name></type> <name>__attribute__</name>((<name>aligned</name>(64)));</typedef>
<expr_stmt><expr><call><name>__builtin_nontemporal_store</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di_aligned</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di_aligned</name><operator>*</operator><operator>)</operator><name>__P</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_stream_load_si512</name> <parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<typedef>typedef <type><name>__v8di</name> <name>__v8di_aligned</name></type> <name>__attribute__</name>((<name>aligned</name>(64)));</typedef>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_nontemporal_load</name><argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8di_aligned</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_stream_pd</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<typedef>typedef <type><name>__v8df</name> <name>__v8df_aligned</name></type> <name>__attribute__</name>((<name>aligned</name>(64)));</typedef>
<expr_stmt><expr><call><name>__builtin_nontemporal_store</name><argument_list>(<argument><expr><operator>(</operator><name>__v8df_aligned</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8df_aligned</name><operator>*</operator><operator>)</operator><name>__P</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_stream_ps</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<typedef>typedef <type><name>__v16sf</name> <name>__v16sf_aligned</name></type> <name>__attribute__</name>((<name>aligned</name>(64)));</typedef>
<expr_stmt><expr><call><name>__builtin_nontemporal_store</name><argument_list>(<argument><expr><operator>(</operator><name>__v16sf_aligned</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16sf_aligned</name><operator>*</operator><operator>)</operator><name>__P</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_compress_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_compressdf512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_compress_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_compressdf512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator>
<call><name>_mm512_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_compress_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_compressdi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_compress_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_compressdi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator>
<call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_compress_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_compresssf512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_compress_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_compresssf512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator>
<call><name>_mm512_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_compress_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_compresssi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_compress_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_compresssi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator>
<call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmp_round_ss_mask</name><parameter_list>(<parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>P</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpss_mask((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(P), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmp_round_ss_mask</name><parameter_list>(<parameter><type><name>M</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>P</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpss_mask((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(P), (__mmask8)(M), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmp_ss_mask</name><parameter_list>(<parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>P</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpss_mask((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(P), (__mmask8)-1, _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmp_ss_mask</name><parameter_list>(<parameter><type><name>M</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>P</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpss_mask((__v4sf)(__m128)(X), (__v4sf)(__m128)(Y), (int)(P), (__mmask8)(M), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmp_round_sd_mask</name><parameter_list>(<parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>P</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpsd_mask((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(P), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmp_round_sd_mask</name><parameter_list>(<parameter><type><name>M</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>P</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpsd_mask((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(P), (__mmask8)(M), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cmp_sd_mask</name><parameter_list>(<parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>P</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpsd_mask((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(P), (__mmask8)-1, _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cmp_sd_mask</name><parameter_list>(<parameter><type><name>M</name></type></parameter>, <parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>P</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_cmpsd_mask((__v2df)(__m128d)(X), (__v2df)(__m128d)(Y), (int)(P), (__mmask8)(M), _MM_FROUND_CUR_DIRECTION)</cpp:value></cpp:define>







<function><type><specifier>static</specifier> <name>__inline</name> <name>__mmask16</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_test_epi32_mask</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm512_cmpneq_epi32_mask</name> <argument_list>(<argument><expr><call><name>_mm512_and_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask16</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_test_epi32_mask</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm512_mask_cmpneq_epi32_mask</name> <argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><call><name>_mm512_and_epi32</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_test_epi64_mask</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm512_cmpneq_epi64_mask</name> <argument_list>(<argument><expr><call><name>_mm512_and_epi32</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_test_epi64_mask</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm512_mask_cmpneq_epi64_mask</name> <argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><call><name>_mm512_and_epi32</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask16</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_testn_epi32_mask</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm512_cmpeq_epi32_mask</name> <argument_list>(<argument><expr><call><name>_mm512_and_epi32</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask16</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_testn_epi32_mask</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm512_mask_cmpeq_epi32_mask</name> <argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><call><name>_mm512_and_epi32</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_testn_epi64_mask</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm512_cmpeq_epi64_mask</name> <argument_list>(<argument><expr><call><name>_mm512_and_epi32</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_testn_epi64_mask</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm512_mask_cmpeq_epi64_mask</name> <argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><call><name>_mm512_and_epi32</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_movehdup_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_movehdup_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_movehdup_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_movehdup_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_movehdup_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_moveldup_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_moveldup_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_moveldup_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_moveldup_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>__builtin_ia32_selectps_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_moveldup_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator><call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_move_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_selectss_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><call><name>_mm_move_ss</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_move_ss</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_selectss_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><call><name>_mm_move_ss</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_move_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_selectsd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><call><name>_mm_move_sd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_move_sd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_selectsd_128</name><argument_list>(<argument><expr><name>__U</name></expr></argument>, <argument><expr><call><name>_mm_move_sd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_store_ss</name> <parameter_list>(<parameter><decl><type><name>float</name> <modifier>*</modifier></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storess128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name> <operator>*</operator><operator>)</operator><name>__W</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__U</name> <operator>&amp;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_store_sd</name> <parameter_list>(<parameter><decl><type><name>double</name> <modifier>*</modifier></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_storesd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name> <operator>*</operator><operator>)</operator><name>__W</name></expr></argument>, <argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__U</name> <operator>&amp;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_load_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>__m128</name></type> <name>src</name> <init>= <expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_loadss128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4sf</name> <operator>*</operator><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>__U</name> <operator>&amp;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_load_ss</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>float</name><modifier>*</modifier></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_loadss128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4sf</name> <operator>*</operator><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__U</name> <operator>&amp;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_load_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>double</name><modifier>*</modifier></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>__m128d</name></type> <name>src</name> <init>= <expr><operator>(</operator><name>__v2df</name><operator>)</operator> <call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_loadsd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v2df</name> <operator>*</operator><operator>)</operator> <name>__A</name></expr></argument>, <argument><expr><name>src</name></expr></argument>, <argument><expr><name>__U</name> <operator>&amp;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_load_sd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>double</name><modifier>*</modifier></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator> <call><name>__builtin_ia32_loadsd128_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v2df</name> <operator>*</operator><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><name>__U</name> <operator>&amp;</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_shuffle_epi32</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_pshufd512((__v16si)(__m512i)(A), (int)(I))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_shuffle_epi32</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectd_512((__mmask16)(U), (__v16si)_mm512_shuffle_epi32((A), (I)), (__v16si)(__m512i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_shuffle_epi32</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>I</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512i)__builtin_ia32_selectd_512((__mmask16)(U), (__v16si)_mm512_shuffle_epi32((A), (I)), (__v16si)_mm512_setzero_si512())</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_expand_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_expanddf512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_expand_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_expanddf512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <call><name>_mm512_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_expand_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_expanddi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_expand_epi64</name> <parameter_list>( <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_expanddi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <call><name>_mm512_setzero_si512</name> <argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_expandloadu_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_expandloaddf512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8df</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_expandloadu_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_expandloaddf512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8df</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <call><name>_mm512_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_expandloadu_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_expandloaddi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8di</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_expandloadu_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_expandloaddi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8di</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_expandloadu_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_expandloadsf512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v16sf</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_expandloadu_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_expandloadsf512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v16sf</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_expandloadu_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_expandloadsi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v16si</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_expandloadu_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_expandloadsi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v16si</name> <operator>*</operator><operator>)</operator><name>__P</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_expand_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_expandsf512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_expand_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_expandsf512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <call><name>_mm512_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_expand_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_expandsi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_expand_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_expandsi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <call><name>_mm512_setzero_si512</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_cvt_roundps_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_cvtps2pd512_mask((__v8sf)(__m256)(A), (__v8df)_mm512_undefined_pd(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_cvt_roundps_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_cvtps2pd512_mask((__v8sf)(__m256)(A), (__v8df)(__m512d)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_maskz_cvt_roundps_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m512d)__builtin_ia32_cvtps2pd512_mask((__v8sf)(__m256)(A), (__v8df)_mm512_setzero_pd(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtps_pd</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v8df</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtps_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_cvtps_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_cvtps_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_512</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_cvtps_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator><call><name>_mm512_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtpslo_pd</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>_mm512_cvtps_pd</name><argument_list>(<argument><expr><call><name>_mm512_castps512_ps256</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_cvtpslo_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>_mm512_mask_cvtps_pd</name><argument_list>(<argument><expr><name>__W</name></expr></argument>, <argument><expr><name>__U</name></expr></argument>, <argument><expr><call><name>_mm512_castps512_ps256</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_mov_pd</name> <parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_512</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_mov_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator> <call><name>__builtin_ia32_selectpd_512</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <call><name>_mm512_setzero_pd</name> <argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_mov_ps</name> <parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_selectps_512</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_maskz_mov_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator> <call><name>__builtin_ia32_selectps_512</name> <argument_list>(<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <call><name>_mm512_setzero_ps</name> <argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_compressstoreu_pd</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_compressstoredf512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8df</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_compressstoreu_epi64</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_compressstoredi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8di</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_compressstoreu_ps</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_compressstoresf512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16sf</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_compressstoreu_epi32</name> <parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__P</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_compressstoresi512_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16si</name> <operator>*</operator><operator>)</operator> <name>__P</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask16</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundsd_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_cvtsd2ss_round_mask((__v4sf)(__m128)(A), (__v2df)(__m128d)(B), (__v4sf)_mm_undefined_ps(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cvt_roundsd_ss</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_cvtsd2ss_round_mask((__v4sf)(__m128)(A), (__v2df)(__m128d)(B), (__v4sf)(__m128)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_cvt_roundsd_ss</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_cvtsd2ss_round_mask((__v4sf)(__m128)(A), (__v2df)(__m128d)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtsd_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_cvtsd2ss_round_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>, <argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtsd_ss</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_cvtsd2ss_round_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>, <argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvtss_i32</name></cpp:macro> <cpp:value>_mm_cvtss_si32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvtsd_i32</name></cpp:macro> <cpp:value>_mm_cvtsd_si32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvti32_sd</name></cpp:macro> <cpp:value>_mm_cvtsi32_sd</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvti32_ss</name></cpp:macro> <cpp:value>_mm_cvtsi32_ss</cpp:value></cpp:define>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvtss_i64</name></cpp:macro> <cpp:value>_mm_cvtss_si64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvtsd_i64</name></cpp:macro> <cpp:value>_mm_cvtsd_si64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvti64_sd</name></cpp:macro> <cpp:value>_mm_cvtsi64_sd</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvti64_ss</name></cpp:macro> <cpp:value>_mm_cvtsi64_ss</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundi64_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_cvtsi2sd64((__v2df)(__m128d)(A), (long long)(B), (int)(R))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundsi64_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_cvtsi2sd64((__v2df)(__m128d)(A), (long long)(B), (int)(R))</cpp:value></cpp:define>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundsi32_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_cvtsi2ss32((__v4sf)(__m128)(A), (int)(B), (int)(R))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundi32_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_cvtsi2ss32((__v4sf)(__m128)(A), (int)(B), (int)(R))</cpp:value></cpp:define>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundsi64_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_cvtsi2ss64((__v4sf)(__m128)(A), (long long)(B), (int)(R))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundi64_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_cvtsi2ss64((__v4sf)(__m128)(A), (long long)(B), (int)(R))</cpp:value></cpp:define>


<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundss_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_cvtss2sd_round_mask((__v2df)(__m128d)(A), (__v4sf)(__m128)(B), (__v2df)_mm_undefined_pd(), (__mmask8)-1, (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_cvt_roundss_sd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_cvtss2sd_round_mask((__v2df)(__m128d)(A), (__v4sf)(__m128)(B), (__v2df)(__m128d)(W), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_cvt_roundss_sd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_cvtss2sd_round_mask((__v2df)(__m128d)(A), (__v4sf)(__m128)(B), (__v2df)_mm_setzero_pd(), (__mmask8)(U), (int)(R))</cpp:value></cpp:define>





<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtss_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_cvtss2sd_round_mask</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>, <argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtss_sd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_cvtss2sd_round_mask</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>, <argument><expr><name>_MM_FROUND_CUR_DIRECTION</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtu32_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>__A</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>__B</name></expr>;</expr_stmt>
<return>return <expr><name>__A</name></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundu64_sd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_cvtusi2sd64((__v2df)(__m128d)(A), (unsigned long long)(B), (int)(R))</cpp:value></cpp:define>



<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtu64_sd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>__A</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>__B</name></expr>;</expr_stmt>
<return>return <expr><name>__A</name></expr>;</return>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundu32_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_cvtusi2ss32((__v4sf)(__m128)(A), (unsigned int)(B), (int)(R))</cpp:value></cpp:define>



<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtu32_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>__A</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>__B</name></expr>;</expr_stmt>
<return>return <expr><name>__A</name></expr>;</return>
</block_content>}</block></function>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__x86_64__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_cvt_roundu64_ss</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_cvtusi2ss64((__v4sf)(__m128)(A), (unsigned long long)(B), (int)(R))</cpp:value></cpp:define>



<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtu64_ss</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>__B</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>__A</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <name>__B</name></expr>;</expr_stmt>
<return>return <expr><name>__A</name></expr>;</return>
</block_content>}</block></function>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_set1_epi32</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_selectd_512</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <call><name>_mm512_set1_epi32</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator> <name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_set1_epi64</name> <parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512i</name><operator>)</operator> <call><name>__builtin_ia32_selectq_512</name><argument_list>(<argument><expr><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <call><name>_mm512_set1_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator> <name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_set_epi8</name> <parameter_list>(<parameter><decl><type><name>char</name></type> <name>__e63</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e62</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e61</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e60</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e59</name></decl></parameter>,
<parameter><decl><type><name>char</name></type> <name>__e58</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e57</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e56</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e55</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e54</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e53</name></decl></parameter>,
<parameter><decl><type><name>char</name></type> <name>__e52</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e51</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e50</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e49</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e48</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e47</name></decl></parameter>,
<parameter><decl><type><name>char</name></type> <name>__e46</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e45</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e44</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e43</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e42</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e41</name></decl></parameter>,
<parameter><decl><type><name>char</name></type> <name>__e40</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e39</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e38</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e37</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e36</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e35</name></decl></parameter>,
<parameter><decl><type><name>char</name></type> <name>__e34</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e33</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e32</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e31</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e30</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e29</name></decl></parameter>,
<parameter><decl><type><name>char</name></type> <name>__e28</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e27</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e26</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e25</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e24</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e23</name></decl></parameter>,
<parameter><decl><type><name>char</name></type> <name>__e22</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e21</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e20</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e19</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e18</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e17</name></decl></parameter>,
<parameter><decl><type><name>char</name></type> <name>__e16</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e15</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e14</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e13</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e12</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e11</name></decl></parameter>,
<parameter><decl><type><name>char</name></type> <name>__e10</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e9</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e8</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e7</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e6</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e5</name></decl></parameter>,
<parameter><decl><type><name>char</name></type> <name>__e4</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e3</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e2</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e1</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__e0</name></decl></parameter>)</parameter_list> <block>{<block_content>

<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m512i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v64qi</name><operator>)</operator>
<block>{<expr><name>__e0</name></expr>, <expr><name>__e1</name></expr>, <expr><name>__e2</name></expr>, <expr><name>__e3</name></expr>, <expr><name>__e4</name></expr>, <expr><name>__e5</name></expr>, <expr><name>__e6</name></expr>, <expr><name>__e7</name></expr>,
<expr><name>__e8</name></expr>, <expr><name>__e9</name></expr>, <expr><name>__e10</name></expr>, <expr><name>__e11</name></expr>, <expr><name>__e12</name></expr>, <expr><name>__e13</name></expr>, <expr><name>__e14</name></expr>, <expr><name>__e15</name></expr>,
<expr><name>__e16</name></expr>, <expr><name>__e17</name></expr>, <expr><name>__e18</name></expr>, <expr><name>__e19</name></expr>, <expr><name>__e20</name></expr>, <expr><name>__e21</name></expr>, <expr><name>__e22</name></expr>, <expr><name>__e23</name></expr>,
<expr><name>__e24</name></expr>, <expr><name>__e25</name></expr>, <expr><name>__e26</name></expr>, <expr><name>__e27</name></expr>, <expr><name>__e28</name></expr>, <expr><name>__e29</name></expr>, <expr><name>__e30</name></expr>, <expr><name>__e31</name></expr>,
<expr><name>__e32</name></expr>, <expr><name>__e33</name></expr>, <expr><name>__e34</name></expr>, <expr><name>__e35</name></expr>, <expr><name>__e36</name></expr>, <expr><name>__e37</name></expr>, <expr><name>__e38</name></expr>, <expr><name>__e39</name></expr>,
<expr><name>__e40</name></expr>, <expr><name>__e41</name></expr>, <expr><name>__e42</name></expr>, <expr><name>__e43</name></expr>, <expr><name>__e44</name></expr>, <expr><name>__e45</name></expr>, <expr><name>__e46</name></expr>, <expr><name>__e47</name></expr>,
<expr><name>__e48</name></expr>, <expr><name>__e49</name></expr>, <expr><name>__e50</name></expr>, <expr><name>__e51</name></expr>, <expr><name>__e52</name></expr>, <expr><name>__e53</name></expr>, <expr><name>__e54</name></expr>, <expr><name>__e55</name></expr>,
<expr><name>__e56</name></expr>, <expr><name>__e57</name></expr>, <expr><name>__e58</name></expr>, <expr><name>__e59</name></expr>, <expr><name>__e60</name></expr>, <expr><name>__e61</name></expr>, <expr><name>__e62</name></expr>, <expr><name>__e63</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_set_epi16</name><parameter_list>(<parameter><decl><type><name>short</name></type> <name>__e31</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e30</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e29</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e28</name></decl></parameter>,
<parameter><decl><type><name>short</name></type> <name>__e27</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e26</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e25</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e24</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e23</name></decl></parameter>,
<parameter><decl><type><name>short</name></type> <name>__e22</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e21</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e20</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e19</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e18</name></decl></parameter>,
<parameter><decl><type><name>short</name></type> <name>__e17</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e16</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e15</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e14</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e13</name></decl></parameter>,
<parameter><decl><type><name>short</name></type> <name>__e12</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e11</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e10</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e9</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e8</name></decl></parameter>,
<parameter><decl><type><name>short</name></type> <name>__e7</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e6</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e5</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e4</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e3</name></decl></parameter>,
<parameter><decl><type><name>short</name></type> <name>__e2</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e1</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__e0</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m512i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v32hi</name><operator>)</operator>
<block>{<expr><name>__e0</name></expr>, <expr><name>__e1</name></expr>, <expr><name>__e2</name></expr>, <expr><name>__e3</name></expr>, <expr><name>__e4</name></expr>, <expr><name>__e5</name></expr>, <expr><name>__e6</name></expr>, <expr><name>__e7</name></expr>,
<expr><name>__e8</name></expr>, <expr><name>__e9</name></expr>, <expr><name>__e10</name></expr>, <expr><name>__e11</name></expr>, <expr><name>__e12</name></expr>, <expr><name>__e13</name></expr>, <expr><name>__e14</name></expr>, <expr><name>__e15</name></expr>,
<expr><name>__e16</name></expr>, <expr><name>__e17</name></expr>, <expr><name>__e18</name></expr>, <expr><name>__e19</name></expr>, <expr><name>__e20</name></expr>, <expr><name>__e21</name></expr>, <expr><name>__e22</name></expr>, <expr><name>__e23</name></expr>,
<expr><name>__e24</name></expr>, <expr><name>__e25</name></expr>, <expr><name>__e26</name></expr>, <expr><name>__e27</name></expr>, <expr><name>__e28</name></expr>, <expr><name>__e29</name></expr>, <expr><name>__e30</name></expr>, <expr><name>__e31</name></expr> }</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_set_epi32</name> <parameter_list>(<parameter><decl><type><name>int</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__D</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__E</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__F</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__G</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__H</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__J</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__K</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__L</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__N</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m512i</argument>)</argument_list></macro><expr><operator>(</operator><name>__v16si</name><operator>)</operator>
<block>{ <expr><name>__P</name></expr>, <expr><name>__O</name></expr>, <expr><name>__N</name></expr>, <expr><name>__M</name></expr>, <expr><name>__L</name></expr>, <expr><name>__K</name></expr>, <expr><name>__J</name></expr>, <expr><name>__I</name></expr>,
<expr><name>__H</name></expr>, <expr><name>__G</name></expr>, <expr><name>__F</name></expr>, <expr><name>__E</name></expr>, <expr><name>__D</name></expr>, <expr><name>__C</name></expr>, <expr><name>__B</name></expr>, <expr><name>__A</name></expr> }</block></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_setr_epi32</name><parameter_list>(<parameter><type><name>e0</name></type></parameter>,<parameter><type><name>e1</name></type></parameter>,<parameter><type><name>e2</name></type></parameter>,<parameter><type><name>e3</name></type></parameter>,<parameter><type><name>e4</name></type></parameter>,<parameter><type><name>e5</name></type></parameter>,<parameter><type><name>e6</name></type></parameter>,<parameter><type><name>e7</name></type></parameter>, <parameter><type><name>e8</name></type></parameter>,<parameter><type><name>e9</name></type></parameter>,<parameter><type><name>e10</name></type></parameter>,<parameter><type><name>e11</name></type></parameter>,<parameter><type><name>e12</name></type></parameter>,<parameter><type><name>e13</name></type></parameter>,<parameter><type><name>e14</name></type></parameter>,<parameter><type><name>e15</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_set_epi32((e15),(e14),(e13),(e12),(e11),(e10),(e9),(e8),(e7),(e6), (e5),(e4),(e3),(e2),(e1),(e0))</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512i</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_set_epi64</name> <parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__C</name></decl></parameter>,
<parameter><decl><type><name>long</name> <name>long</name></type> <name>__D</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__E</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__F</name></decl></parameter>,
<parameter><decl><type><name>long</name> <name>long</name></type> <name>__G</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>__H</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m512i</argument>)</argument_list></macro> <expr><operator>(</operator><name>__v8di</name><operator>)</operator>
<block>{ <expr><name>__H</name></expr>, <expr><name>__G</name></expr>, <expr><name>__F</name></expr>, <expr><name>__E</name></expr>, <expr><name>__D</name></expr>, <expr><name>__C</name></expr>, <expr><name>__B</name></expr>, <expr><name>__A</name></expr> }</block></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_setr_epi64</name><parameter_list>(<parameter><type><name>e0</name></type></parameter>,<parameter><type><name>e1</name></type></parameter>,<parameter><type><name>e2</name></type></parameter>,<parameter><type><name>e3</name></type></parameter>,<parameter><type><name>e4</name></type></parameter>,<parameter><type><name>e5</name></type></parameter>,<parameter><type><name>e6</name></type></parameter>,<parameter><type><name>e7</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_set_epi64((e7),(e6),(e5),(e4),(e3),(e2),(e1),(e0))</cpp:value></cpp:define>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_set_pd</name> <parameter_list>(<parameter><decl><type><name>double</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__D</name></decl></parameter>,
<parameter><decl><type><name>double</name></type> <name>__E</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__F</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__G</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>__H</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m512d</argument>)</argument_list></macro>
<expr><block>{ <expr><name>__H</name></expr>, <expr><name>__G</name></expr>, <expr><name>__F</name></expr>, <expr><name>__E</name></expr>, <expr><name>__D</name></expr>, <expr><name>__C</name></expr>, <expr><name>__B</name></expr>, <expr><name>__A</name></expr> }</block></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_setr_pd</name><parameter_list>(<parameter><type><name>e0</name></type></parameter>,<parameter><type><name>e1</name></type></parameter>,<parameter><type><name>e2</name></type></parameter>,<parameter><type><name>e3</name></type></parameter>,<parameter><type><name>e4</name></type></parameter>,<parameter><type><name>e5</name></type></parameter>,<parameter><type><name>e6</name></type></parameter>,<parameter><type><name>e7</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_set_pd((e7),(e6),(e5),(e4),(e3),(e2),(e1),(e0))</cpp:value></cpp:define>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_set_ps</name> <parameter_list>(<parameter><decl><type><name>float</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__C</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__D</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>__E</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__F</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__G</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__H</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>__I</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__J</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__K</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__L</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__N</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__P</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m512</argument>)</argument_list></macro>
<expr><block>{ <expr><name>__P</name></expr>, <expr><name>__O</name></expr>, <expr><name>__N</name></expr>, <expr><name>__M</name></expr>, <expr><name>__L</name></expr>, <expr><name>__K</name></expr>, <expr><name>__J</name></expr>, <expr><name>__I</name></expr>,
<expr><name>__H</name></expr>, <expr><name>__G</name></expr>, <expr><name>__F</name></expr>, <expr><name>__E</name></expr>, <expr><name>__D</name></expr>, <expr><name>__C</name></expr>, <expr><name>__B</name></expr>, <expr><name>__A</name></expr> }</block></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_setr_ps</name><parameter_list>(<parameter><type><name>e0</name></type></parameter>,<parameter><type><name>e1</name></type></parameter>,<parameter><type><name>e2</name></type></parameter>,<parameter><type><name>e3</name></type></parameter>,<parameter><type><name>e4</name></type></parameter>,<parameter><type><name>e5</name></type></parameter>,<parameter><type><name>e6</name></type></parameter>,<parameter><type><name>e7</name></type></parameter>,<parameter><type><name>e8</name></type></parameter>,<parameter><type><name>e9</name></type></parameter>,<parameter><type><name>e10</name></type></parameter>,<parameter><type><name>e11</name></type></parameter>,<parameter><type><name>e12</name></type></parameter>,<parameter><type><name>e13</name></type></parameter>,<parameter><type><name>e14</name></type></parameter>,<parameter><type><name>e15</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_set_ps((e15),(e14),(e13),(e12),(e11),(e10),(e9),(e8),(e7),(e6),(e5), (e4),(e3),(e2),(e1),(e0))</cpp:value></cpp:define>



<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_abs_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>_mm512_and_epi32</name><argument_list>(<argument><expr><call><name>_mm512_set1_epi32</name><argument_list>(<argument><expr><literal type="number">0x7FFFFFFF</literal></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><operator>(</operator><name>__m512i</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr> ;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_abs_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask16</name></type> <name>__K</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512</name><operator>)</operator><call><name>_mm512_mask_and_epi32</name><argument_list>(<argument><expr><operator>(</operator><name>__m512i</name><operator>)</operator><name>__W</name></expr></argument>, <argument><expr><name>__K</name></expr></argument>, <argument><expr><call><name>_mm512_set1_epi32</name><argument_list>(<argument><expr><literal type="number">0x7FFFFFFF</literal></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><operator>(</operator><name>__m512i</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr> ;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_abs_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>_mm512_and_epi64</name><argument_list>(<argument><expr><call><name>_mm512_set1_epi64</name><argument_list>(<argument><expr><literal type="number">0x7FFFFFFFFFFFFFFF</literal></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr> ;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m512d</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_abs_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__K</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m512d</name><operator>)</operator><call><name>_mm512_mask_and_epi64</name><argument_list>(<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__W</name></expr></argument>, <argument><expr><name>__K</name></expr></argument>, <argument><expr><call><name>_mm512_set1_epi64</name><argument_list>(<argument><expr><literal type="number">0x7FFFFFFFFFFFFFFF</literal></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><operator>(</operator><name>__v8di</name><operator>)</operator><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS512</name></type> <name>_mm512_reduce_add_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_add_q512</name><argument_list>(<argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS512</name></type> <name>_mm512_reduce_mul_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_mul_q512</name><argument_list>(<argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS512</name></type> <name>_mm512_reduce_and_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_and_q512</name><argument_list>(<argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS512</name></type> <name>_mm512_reduce_or_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_or_q512</name><argument_list>(<argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_add_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__W</name> <operator>=</operator> <call><name>_mm512_maskz_mov_epi64</name><argument_list>(<argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_add_q512</name><argument_list>(<argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_mul_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__W</name> <operator>=</operator> <call><name>_mm512_mask_mov_epi64</name><argument_list>(<argument><expr><call><name>_mm512_set1_epi64</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_mul_q512</name><argument_list>(<argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_and_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__W</name> <operator>=</operator> <call><name>_mm512_mask_mov_epi64</name><argument_list>(<argument><expr><call><name>_mm512_set1_epi64</name><argument_list>(<argument><expr><operator>~</operator><literal type="number">0ULL</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_and_q512</name><argument_list>(<argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_or_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__W</name> <operator>=</operator> <call><name>_mm512_maskz_mov_epi64</name><argument_list>(<argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_or_q512</name><argument_list>(<argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>double</name> <name>__DEFAULT_FN_ATTRS512</name></type> <name>_mm512_reduce_add_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_fadd_pd512</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">0.0</literal></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>double</name> <name>__DEFAULT_FN_ATTRS512</name></type> <name>_mm512_reduce_mul_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_fmul_pd512</name><argument_list>(<argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>double</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_add_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__W</name> <operator>=</operator> <call><name>_mm512_maskz_mov_pd</name><argument_list>(<argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_fadd_pd512</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">0.0</literal></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>double</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_mul_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__W</name> <operator>=</operator> <call><name>_mm512_mask_mov_pd</name><argument_list>(<argument><expr><call><name>_mm512_set1_pd</name><argument_list>(<argument><expr><literal type="number">1.0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_fmul_pd512</name><argument_list>(<argument><expr><literal type="number">1.0</literal></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_reduce_add_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_add_d512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_reduce_mul_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_mul_d512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_reduce_and_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_and_d512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_reduce_or_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_or_d512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_add_epi32</name><parameter_list>( <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__W</name> <operator>=</operator> <call><name>_mm512_maskz_mov_epi32</name><argument_list>(<argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_add_d512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_mul_epi32</name><parameter_list>( <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__W</name> <operator>=</operator> <call><name>_mm512_mask_mov_epi32</name><argument_list>(<argument><expr><call><name>_mm512_set1_epi32</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_mul_d512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_and_epi32</name><parameter_list>( <parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__W</name> <operator>=</operator> <call><name>_mm512_mask_mov_epi32</name><argument_list>(<argument><expr><call><name>_mm512_set1_epi32</name><argument_list>(<argument><expr><operator>~</operator><literal type="number">0U</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_and_d512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_or_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__W</name> <operator>=</operator> <call><name>_mm512_maskz_mov_epi32</name><argument_list>(<argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_or_d512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>float</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_reduce_add_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_fadd_ps512</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">0.0f</literal></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>float</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_reduce_mul_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_fmul_ps512</name><argument_list>(<argument><expr><literal type="number">1.0f</literal></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>float</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_add_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__W</name> <operator>=</operator> <call><name>_mm512_maskz_mov_ps</name><argument_list>(<argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_fadd_ps512</name><argument_list>(<argument><expr><operator>-</operator><literal type="number">0.0f</literal></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>float</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_mul_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__W</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__W</name> <operator>=</operator> <call><name>_mm512_mask_mov_ps</name><argument_list>(<argument><expr><call><name>_mm512_set1_ps</name><argument_list>(<argument><expr><literal type="number">1.0f</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_fmul_ps512</name><argument_list>(<argument><expr><literal type="number">1.0f</literal></expr></argument>, <argument><expr><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_reduce_max_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_smax_q512</name><argument_list>(<argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_reduce_max_epu64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_umax_q512</name><argument_list>(<argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_reduce_min_epi64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_smin_q512</name><argument_list>(<argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_reduce_min_epu64</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_umin_q512</name><argument_list>(<argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_max_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__V</name> <operator>=</operator> <call><name>_mm512_mask_mov_epi64</name><argument_list>(<argument><expr><call><name>_mm512_set1_epi64</name><argument_list>(<argument><expr><operator>-</operator><name>__LONG_LONG_MAX__</name> <operator>-</operator> <literal type="number">1LL</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_smax_q512</name><argument_list>(<argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_max_epu64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__V</name> <operator>=</operator> <call><name>_mm512_maskz_mov_epi64</name><argument_list>(<argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_umax_q512</name><argument_list>(<argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_min_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__V</name> <operator>=</operator> <call><name>_mm512_mask_mov_epi64</name><argument_list>(<argument><expr><call><name>_mm512_set1_epi64</name><argument_list>(<argument><expr><name>__LONG_LONG_MAX__</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_smin_q512</name><argument_list>(<argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_min_epu64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__V</name> <operator>=</operator> <call><name>_mm512_mask_mov_epi64</name><argument_list>(<argument><expr><call><name>_mm512_set1_epi64</name><argument_list>(<argument><expr><operator>~</operator><literal type="number">0ULL</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_umin_q512</name><argument_list>(<argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_reduce_max_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_smax_d512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>int</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_reduce_max_epu32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_umax_d512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_reduce_min_epi32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_smin_d512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>int</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_reduce_min_epu32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_umin_d512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_max_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__V</name> <operator>=</operator> <call><name>_mm512_mask_mov_epi32</name><argument_list>(<argument><expr><call><name>_mm512_set1_epi32</name><argument_list>(<argument><expr><operator>-</operator><name>__INT_MAX__</name> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_smax_d512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>int</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_max_epu32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__V</name> <operator>=</operator> <call><name>_mm512_maskz_mov_epi32</name><argument_list>(<argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_umax_d512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_min_epi32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__V</name> <operator>=</operator> <call><name>_mm512_mask_mov_epi32</name><argument_list>(<argument><expr><call><name>_mm512_set1_epi32</name><argument_list>(<argument><expr><name>__INT_MAX__</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_smin_d512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>unsigned</name> <name>int</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_min_epu32</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512i</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__V</name> <operator>=</operator> <call><name>_mm512_mask_mov_epi32</name><argument_list>(<argument><expr><call><name>_mm512_set1_epi32</name><argument_list>(<argument><expr><operator>~</operator><literal type="number">0U</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_umin_d512</name><argument_list>(<argument><expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>double</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_reduce_max_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_fmax_pd512</name><argument_list>(<argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>double</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_reduce_min_pd</name><parameter_list>(<parameter><decl><type><name>__m512d</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_fmin_pd512</name><argument_list>(<argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>double</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_max_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__V</name> <operator>=</operator> <call><name>_mm512_mask_mov_pd</name><argument_list>(<argument><expr><call><name>_mm512_set1_pd</name><argument_list>(<argument><expr><operator>-</operator><call><name>__builtin_inf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_fmax_pd512</name><argument_list>(<argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>double</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_min_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512d</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__V</name> <operator>=</operator> <call><name>_mm512_mask_mov_pd</name><argument_list>(<argument><expr><call><name>_mm512_set1_pd</name><argument_list>(<argument><expr><call><name>__builtin_inf</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_fmin_pd512</name><argument_list>(<argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>float</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_reduce_max_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_fmax_ps512</name><argument_list>(<argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>float</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_reduce_min_ps</name><parameter_list>(<parameter><decl><type><name>__m512</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_reduce_fmin_ps512</name><argument_list>(<argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>float</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_max_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__V</name> <operator>=</operator> <call><name>_mm512_mask_mov_ps</name><argument_list>(<argument><expr><call><name>_mm512_set1_ps</name><argument_list>(<argument><expr><operator>-</operator><call><name>__builtin_inff</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_fmax_ps512</name><argument_list>(<argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>float</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_mask_reduce_min_ps</name><parameter_list>(<parameter><decl><type><name>__mmask16</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m512</name></type> <name>__V</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name>__V</name> <operator>=</operator> <call><name>_mm512_mask_mov_ps</name><argument_list>(<argument><expr><call><name>_mm512_set1_ps</name><argument_list>(<argument><expr><call><name>__builtin_inff</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__M</name></expr></argument>, <argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><call><name>__builtin_ia32_reduce_fmin_ps512</name><argument_list>(<argument><expr><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS512</name></type>
<name>_mm512_cvtsi512_si32</name><parameter_list>(<parameter><decl><type><name>__m512i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>__v16si</name></type> <name>__b</name> <init>= <expr><operator>(</operator><name>__v16si</name><operator>)</operator><name>__A</name></expr></init></decl>;</decl_stmt>
<return>return <expr><name><name>__b</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</return>
</block_content>}</block></function>
















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i32logather_pd</name><parameter_list>(<parameter><type><name>vindex</name></type></parameter>, <parameter><type><name>base_addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_i32gather_pd(_mm512_castsi512_si256(vindex), (base_addr), (scale))</cpp:value></cpp:define>























<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i32logather_pd</name><parameter_list>(<parameter><type><name>src</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>vindex</name></type></parameter>, <parameter><type><name>base_addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_i32gather_pd((src), (mask), _mm512_castsi512_si256(vindex), (base_addr), (scale))</cpp:value></cpp:define>


















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i32logather_epi64</name><parameter_list>(<parameter><type><name>vindex</name></type></parameter>, <parameter><type><name>base_addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_i32gather_epi64(_mm512_castsi512_si256(vindex), (base_addr), (scale))</cpp:value></cpp:define>






















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i32logather_epi64</name><parameter_list>(<parameter><type><name>src</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>vindex</name></type></parameter>, <parameter><type><name>base_addr</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_i32gather_epi64((src), (mask), _mm512_castsi512_si256(vindex), (base_addr), (scale))</cpp:value></cpp:define>

















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i32loscatter_pd</name><parameter_list>(<parameter><type><name>base_addr</name></type></parameter>, <parameter><type><name>vindex</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_i32scatter_pd((base_addr), _mm512_castsi512_si256(vindex), (v1), (scale))</cpp:value></cpp:define>




















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i32loscatter_pd</name><parameter_list>(<parameter><type><name>base_addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>vindex</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_i32scatter_pd((base_addr), (mask), _mm512_castsi512_si256(vindex), (v1), (scale))</cpp:value></cpp:define>

















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_i32loscatter_epi64</name><parameter_list>(<parameter><type><name>base_addr</name></type></parameter>, <parameter><type><name>vindex</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_i32scatter_epi64((base_addr), _mm512_castsi512_si256(vindex), (v1), (scale))</cpp:value></cpp:define>




















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm512_mask_i32loscatter_epi64</name><parameter_list>(<parameter><type><name>base_addr</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>vindex</name></type></parameter>, <parameter><type><name>v1</name></type></parameter>, <parameter><type><name>scale</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm512_mask_i32scatter_epi64((base_addr), (mask), _mm512_castsi512_si256(vindex), (v1), (scale))</cpp:value></cpp:define>



<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__DEFAULT_FN_ATTRS512</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__DEFAULT_FN_ATTRS128</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__DEFAULT_FN_ATTRS</name></cpp:undef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
