<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/lib/Headers/avx512vldqintrin.h">








<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__IMMINTRIN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:error>#<cpp:directive>error</cpp:directive> <cpp:literal>"Never use &lt;avx512vldqintrin.h&gt; directly; include &lt;immintrin.h&gt; instead."</cpp:literal></cpp:error>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__AVX512VLDQINTRIN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__AVX512VLDQINTRIN_H</name></cpp:macro></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEFAULT_FN_ATTRS128</name></cpp:macro> <cpp:value>__attribute__((__always_inline__, __nodebug__, __target__("avx512vl,avx512dq"), __min_vector_width__(128)))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEFAULT_FN_ATTRS256</name></cpp:macro> <cpp:value>__attribute__((__always_inline__, __nodebug__, __target__("avx512vl,avx512dq"), __min_vector_width__(256)))</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mullo_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <operator>(</operator><operator>(</operator><name>__v4du</name><operator>)</operator> <name>__A</name> <operator>*</operator> <operator>(</operator><name>__v4du</name><operator>)</operator> <name>__B</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_mullo_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_mullo_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_mullo_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_mullo_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mullo_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <operator>(</operator><operator>(</operator><name>__v2du</name><operator>)</operator> <name>__A</name> <operator>*</operator> <operator>(</operator><name>__v2du</name><operator>)</operator> <name>__B</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_mullo_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_mullo_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_mullo_epi64</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectq_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_mullo_epi64</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_andnot_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_andnot_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_andnot_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_andnot_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_andnot_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_andnot_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_andnot_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_andnot_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_andnot_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_andnot_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_andnot_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_andnot_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_andnot_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_andnot_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_andnot_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_andnot_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_and_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_and_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_and_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_and_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_and_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_and_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_and_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_and_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_and_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_and_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_and_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_and_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_and_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_and_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_and_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_and_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_xor_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_xor_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_xor_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_xor_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_xor_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_xor_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_xor_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_xor_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_xor_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_xor_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_xor_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_xor_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_xor_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_xor_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_xor_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_xor_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_or_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_or_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_or_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_or_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_or_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_or_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_or_pd</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_or_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_or_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_or_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_or_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_or_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_or_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_or_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_or_ps</name><parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_or_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>, <argument><expr><name>__B</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtpd_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2qq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtpd_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2qq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtpd_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2qq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtpd_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2qq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtpd_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2qq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtpd_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2qq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtpd_epu64</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2uqq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtpd_epu64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2uqq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtpd_epu64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2uqq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtpd_epu64</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2uqq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtpd_epu64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2uqq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtpd_epu64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtpd2uqq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtps_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2qq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtps_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2qq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtps_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2qq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtps_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2qq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtps_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2qq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtps_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2qq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtps_epu64</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2uqq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtps_epu64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2uqq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtps_epu64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2uqq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtps_epu64</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2uqq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtps_epu64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2uqq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtps_epu64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtps2uqq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtepi64_pd</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v2df</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepi64_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_cvtepi64_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepi64_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_cvtepi64_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepi64_pd</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v4df</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepi64_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_cvtepi64_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepi64_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_cvtepi64_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtepi64_ps</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_cvtqq2ps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepi64_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_cvtqq2ps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepi64_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_cvtqq2ps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepi64_ps</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v4sf</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepi64_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm256_cvtepi64_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepi64_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm256_cvtepi64_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvttpd_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2qq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvttpd_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2qq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvttpd_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2qq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvttpd_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2qq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvttpd_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2qq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvttpd_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2qq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvttpd_epu64</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2uqq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvttpd_epu64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2uqq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvttpd_epu64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2uqq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvttpd_epu64</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2uqq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvttpd_epu64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2uqq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvttpd_epu64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttpd2uqq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvttps_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2qq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvttps_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2qq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvttps_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2qq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvttps_epi64</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2qq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvttps_epi64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2qq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvttps_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2qq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvttps_epu64</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2uqq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvttps_epu64</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2uqq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvttps_epu64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2uqq128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvttps_epu64</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2uqq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvttps_epu64</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2uqq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvttps_epu64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvttps2uqq256_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtepu64_pd</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2du</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v2df</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepu64_pd</name> <parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_cvtepu64_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepu64_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_cvtepu64_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><call><name>_mm_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepu64_pd</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4du</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v4df</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepu64_pd</name> <parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_cvtepu64_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepu64_pd</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_cvtepu64_pd</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_cvtepu64_ps</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_cvtuqq2ps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_cvtepu64_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_cvtuqq2ps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <name>__W</name></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_cvtepu64_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator> <call><name>__builtin_ia32_cvtuqq2ps128_mask</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator> <call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <name>__U</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepu64_ps</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4du</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><name>__v4sf</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_cvtepu64_ps</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__W</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm256_cvtepu64_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__W</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_cvtepu64_ps</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__U</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_selectps_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__U</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm256_cvtepu64_ps</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><call><name>_mm_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_range_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_rangepd128_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(C), (__v2df)_mm_setzero_pd(), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_range_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_rangepd128_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(C), (__v2df)(__m128d)(W), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_range_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_rangepd128_mask((__v2df)(__m128d)(A), (__v2df)(__m128d)(B), (int)(C), (__v2df)_mm_setzero_pd(), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_range_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_rangepd256_mask((__v4df)(__m256d)(A), (__v4df)(__m256d)(B), (int)(C), (__v4df)_mm256_setzero_pd(), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_range_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_rangepd256_mask((__v4df)(__m256d)(A), (__v4df)(__m256d)(B), (int)(C), (__v4df)(__m256d)(W), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_range_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_rangepd256_mask((__v4df)(__m256d)(A), (__v4df)(__m256d)(B), (int)(C), (__v4df)_mm256_setzero_pd(), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_range_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_rangeps128_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(C), (__v4sf)_mm_setzero_ps(), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_range_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_rangeps128_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(C), (__v4sf)(__m128)(W), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_range_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_rangeps128_mask((__v4sf)(__m128)(A), (__v4sf)(__m128)(B), (int)(C), (__v4sf)_mm_setzero_ps(), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_range_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_rangeps256_mask((__v8sf)(__m256)(A), (__v8sf)(__m256)(B), (int)(C), (__v8sf)_mm256_setzero_ps(), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_range_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_rangeps256_mask((__v8sf)(__m256)(A), (__v8sf)(__m256)(B), (int)(C), (__v8sf)(__m256)(W), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_range_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>C</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_rangeps256_mask((__v8sf)(__m256)(A), (__v8sf)(__m256)(B), (int)(C), (__v8sf)_mm256_setzero_ps(), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_reduce_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_reducepd128_mask((__v2df)(__m128d)(A), (int)(B), (__v2df)_mm_setzero_pd(), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_reduce_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_reducepd128_mask((__v2df)(__m128d)(A), (int)(B), (__v2df)(__m128d)(W), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_reduce_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_reducepd128_mask((__v2df)(__m128d)(A), (int)(B), (__v2df)_mm_setzero_pd(), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_reduce_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_reducepd256_mask((__v4df)(__m256d)(A), (int)(B), (__v4df)_mm256_setzero_pd(), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_reduce_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_reducepd256_mask((__v4df)(__m256d)(A), (int)(B), (__v4df)(__m256d)(W), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_reduce_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_reducepd256_mask((__v4df)(__m256d)(A), (int)(B), (__v4df)_mm256_setzero_pd(), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_reduce_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_reduceps128_mask((__v4sf)(__m128)(A), (int)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_reduce_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_reduceps128_mask((__v4sf)(__m128)(A), (int)(B), (__v4sf)(__m128)(W), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_maskz_reduce_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_reduceps128_mask((__v4sf)(__m128)(A), (int)(B), (__v4sf)_mm_setzero_ps(), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_reduce_ps</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_reduceps256_mask((__v8sf)(__m256)(A), (int)(B), (__v8sf)_mm256_setzero_ps(), (__mmask8)-1)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_reduce_ps</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_reduceps256_mask((__v8sf)(__m256)(A), (int)(B), (__v8sf)(__m256)(W), (__mmask8)(U))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_reduce_ps</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_reduceps256_mask((__v8sf)(__m256)(A), (int)(B), (__v8sf)_mm256_setzero_ps(), (__mmask8)(U))</cpp:value></cpp:define>




<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_movepi32_mask</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <call><name>__builtin_ia32_cvtd2mask128</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_movepi32_mask</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <call><name>__builtin_ia32_cvtd2mask256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_movm_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtmask2d128</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_movm_epi32</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtmask2d256</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_movm_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator> <call><name>__builtin_ia32_cvtmask2q128</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_movm_epi64</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_cvtmask2q256</name> <argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_movepi64_mask</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <call><name>__builtin_ia32_cvtq2mask128</name> <argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__mmask8</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_movepi64_mask</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__mmask8</name><operator>)</operator> <call><name>__builtin_ia32_cvtq2mask256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator> <name>__A</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_broadcast_f32x2</name> <parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_broadcast_f32x2</name> <parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_broadcast_f32x2</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_broadcast_f32x2</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_selectps_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_broadcast_f32x2</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><call><name>_mm256_setzero_ps</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_broadcast_f64x2</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_broadcast_f64x2</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_broadcast_f64x2</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_broadcast_f64x2</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_selectpd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_broadcast_f64x2</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><call><name>_mm256_setzero_pd</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_broadcast_i32x2</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_mask_broadcast_i32x2</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_broadcast_i32x2</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskz_broadcast_i32x2</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_selectd_128</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_broadcast_i32x2</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><call><name>_mm_setzero_si128</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_broadcast_i32x2</name> <parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_broadcast_i32x2</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_broadcast_i32x2</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_broadcast_i32x2</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectd_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_broadcast_i32x2</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_broadcast_i64x2</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__A</name></expr></argument>,
<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mask_broadcast_i64x2</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__O</name></decl></parameter>, <parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_broadcast_i64x2</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__O</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskz_broadcast_i64x2</name> <parameter_list>(<parameter><decl><type><name>__mmask8</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__A</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_selectq_256</name><argument_list>(<argument><expr><operator>(</operator><name>__mmask8</name><operator>)</operator><name>__M</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_broadcast_i64x2</name><argument_list>(<argument><expr><name>__A</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><call><name>_mm256_setzero_si256</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_extractf64x2_pd</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_extractf64x2_256_mask((__v4df)(__m256d)(A), (int)(imm), (__v2df)_mm_undefined_pd(), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_extractf64x2_pd</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_extractf64x2_256_mask((__v4df)(__m256d)(A), (int)(imm), (__v2df)(__m128d)(W), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_extractf64x2_pd</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_extractf64x2_256_mask((__v4df)(__m256d)(A), (int)(imm), (__v2df)_mm_setzero_pd(), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_extracti64x2_epi64</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_extracti64x2_256_mask((__v4di)(__m256i)(A), (int)(imm), (__v2di)_mm_undefined_si128(), (__mmask8)-1)</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_extracti64x2_epi64</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_extracti64x2_256_mask((__v4di)(__m256i)(A), (int)(imm), (__v2di)(__m128i)(W), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_extracti64x2_epi64</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_extracti64x2_256_mask((__v4di)(__m256i)(A), (int)(imm), (__v2di)_mm_setzero_si128(), (__mmask8)(U))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_insertf64x2</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_insertf64x2_256((__v4df)(__m256d)(A), (__v2df)(__m128d)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_insertf64x2</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_selectpd_256((__mmask8)(U), (__v4df)_mm256_insertf64x2((A), (B), (imm)), (__v4df)(__m256d)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_insertf64x2</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_selectpd_256((__mmask8)(U), (__v4df)_mm256_insertf64x2((A), (B), (imm)), (__v4df)_mm256_setzero_pd())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_inserti64x2</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_inserti64x2_256((__v4di)(__m256i)(A), (__v2di)(__m128i)(B), (int)(imm))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_inserti64x2</name><parameter_list>(<parameter><type><name>W</name></type></parameter>, <parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectq_256((__mmask8)(U), (__v4di)_mm256_inserti64x2((A), (B), (imm)), (__v4di)(__m256i)(W))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_maskz_inserti64x2</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>B</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_selectq_256((__mmask8)(U), (__v4di)_mm256_inserti64x2((A), (B), (imm)), (__v4di)_mm256_setzero_si256())</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_fpclass_pd_mask</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_fpclasspd128_mask((__v2df)(__m128d)(A), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_fpclass_pd_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_fpclasspd128_mask((__v2df)(__m128d)(A), (int)(imm), (__mmask8)-1)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_fpclass_pd_mask</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_fpclasspd256_mask((__v4df)(__m256d)(A), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_fpclass_pd_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_fpclasspd256_mask((__v4df)(__m256d)(A), (int)(imm), (__mmask8)-1)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_fpclass_ps_mask</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_fpclassps128_mask((__v4sf)(__m128)(A), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_fpclass_ps_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_fpclassps128_mask((__v4sf)(__m128)(A), (int)(imm), (__mmask8)-1)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_fpclass_ps_mask</name><parameter_list>(<parameter><type><name>U</name></type></parameter>, <parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_fpclassps256_mask((__v8sf)(__m256)(A), (int)(imm), (__mmask8)(U))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_fpclass_ps_mask</name><parameter_list>(<parameter><type><name>A</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__mmask8)__builtin_ia32_fpclassps256_mask((__v8sf)(__m256)(A), (int)(imm), (__mmask8)-1)</cpp:value></cpp:define>



<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__DEFAULT_FN_ATTRS128</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__DEFAULT_FN_ATTRS256</name></cpp:undef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
