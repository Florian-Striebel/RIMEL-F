<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/lib/Headers/mmintrin.h">








<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__MMINTRIN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__MMINTRIN_H</name></cpp:macro></cpp:define>

<typedef>typedef <type><name>long</name> <name>long</name> <name>__m64</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(8)<operator>,</operator> __aligned__(8)));</typedef>

<typedef>typedef <type><name>long</name> <name>long</name> <name>__v1di</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(8)));</typedef>
<typedef>typedef <type><name>int</name> <name>__v2si</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(8)));</typedef>
<typedef>typedef <type><name>short</name> <name>__v4hi</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(8)));</typedef>
<typedef>typedef <type><name>char</name> <name>__v8qi</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(8)));</typedef>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEFAULT_FN_ATTRS</name></cpp:macro> <cpp:value>__attribute__((__always_inline__, __nodebug__, __target__("mmx"), __min_vector_width__(64)))</cpp:value></cpp:define>








<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>void</name></type> <name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__always_inline__</name><operator>,</operator> <name>__nodebug__</name><operator>,</operator> <call><name>__target__</name><argument_list>(<argument><expr><literal type="string">"mmx"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list>
<name>_mm_empty</name><argument_list>(<argument><expr><name>void</name></expr></argument>)</argument_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_emms</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></decl></decl_stmt>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtsi32_si64</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_vec_init_v2si</name><argument_list>(<argument><expr><name>__i</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtsi64_si32</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_vec_ext_v2si</name><argument_list>(<argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>











<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtsi64_m64</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name></type> <name>__i</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><name>__i</name></expr>;</return>
</block_content>}</block></function>











<function><type><specifier>static</specifier> <name>__inline__</name> <name>long</name> <name>long</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cvtm64_si64</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>long</name> <name>long</name><operator>)</operator><name>__m</name></expr>;</return>
</block_content>}</block></function>

























<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_packs_pi16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_packsswb</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

























<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_packs_pi32</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_packssdw</name><argument_list>(<argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

























<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_packs_pu16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_packuswb</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>






















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_unpackhi_pi8</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_punpckhbw</name><argument_list>(<argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_unpackhi_pi16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_punpckhwd</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_unpackhi_pi32</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_punpckhdq</name><argument_list>(<argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>






















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_unpacklo_pi8</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_punpcklbw</name><argument_list>(<argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_unpacklo_pi16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_punpcklwd</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_unpacklo_pi32</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_punpckldq</name><argument_list>(<argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_add_pi8</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_paddb</name><argument_list>(<argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_add_pi16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_paddw</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_add_pi32</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_paddd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_adds_pi8</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_paddsb</name><argument_list>(<argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_adds_pi16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_paddsw</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_adds_pu8</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_paddusb</name><argument_list>(<argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_adds_pu16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_paddusw</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sub_pi8</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psubb</name><argument_list>(<argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sub_pi16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psubw</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sub_pi32</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psubd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_subs_pi8</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psubsb</name><argument_list>(<argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_subs_pi16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psubsw</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_subs_pu8</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psubusb</name><argument_list>(<argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_subs_pu16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psubusw</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>






















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_madd_pi16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_pmaddwd</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_mulhi_pi16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_pmulhw</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_mullo_pi16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_pmullw</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sll_pi16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psllw</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_slli_pi16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psllwi</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sll_pi32</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_pslld</name><argument_list>(<argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_slli_pi32</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_pslldi</name><argument_list>(<argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sll_si64</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psllq</name><argument_list>(<argument><expr><operator>(</operator><name>__v1di</name><operator>)</operator><name>__m</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_slli_si64</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psllqi</name><argument_list>(<argument><expr><operator>(</operator><name>__v1di</name><operator>)</operator><name>__m</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sra_pi16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psraw</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_srai_pi16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psrawi</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_sra_pi32</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psrad</name><argument_list>(<argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_srai_pi32</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psradi</name><argument_list>(<argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_srl_pi16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psrlw</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_srli_pi16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psrlwi</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_srl_pi32</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psrld</name><argument_list>(<argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_srli_pi32</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psrldi</name><argument_list>(<argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_srl_si64</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psrlq</name><argument_list>(<argument><expr><operator>(</operator><name>__v1di</name><operator>)</operator><name>__m</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_srli_si64</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_psrlqi</name><argument_list>(<argument><expr><operator>(</operator><name>__v1di</name><operator>)</operator><name>__m</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_and_si64</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_pand</name><argument_list>(<argument><expr><operator>(</operator><name>__v1di</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v1di</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_andnot_si64</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_pandn</name><argument_list>(<argument><expr><operator>(</operator><name>__v1di</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v1di</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_or_si64</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_por</name><argument_list>(<argument><expr><operator>(</operator><name>__v1di</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v1di</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_xor_si64</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_pxor</name><argument_list>(<argument><expr><operator>(</operator><name>__v1di</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v1di</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpeq_pi8</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_pcmpeqb</name><argument_list>(<argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpeq_pi16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_pcmpeqw</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpeq_pi32</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_pcmpeqd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpgt_pi8</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_pcmpgtb</name><argument_list>(<argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8qi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpgt_pi16</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_pcmpgtw</name><argument_list>(<argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4hi</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_cmpgt_pi32</name><parameter_list>(<parameter><decl><type><name>__m64</name></type> <name>__m1</name></decl></parameter>, <parameter><decl><type><name>__m64</name></type> <name>__m2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_pcmpgtd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2si</name><operator>)</operator><name>__m2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>








<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_setzero_si64</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <macro><name>__extension__</name> <argument_list>(<argument>__m64</argument>)</argument_list></macro><expr><block>{ <expr><literal type="number">0LL</literal></expr> }</block></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set_pi32</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__i1</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__i0</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_vec_init_v2si</name><argument_list>(<argument><expr><name>__i0</name></expr></argument>, <argument><expr><name>__i1</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set_pi16</name><parameter_list>(<parameter><decl><type><name>short</name></type> <name>__s3</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__s2</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__s1</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__s0</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_vec_init_v4hi</name><argument_list>(<argument><expr><name>__s0</name></expr></argument>, <argument><expr><name>__s1</name></expr></argument>, <argument><expr><name>__s2</name></expr></argument>, <argument><expr><name>__s3</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


























<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set_pi8</name><parameter_list>(<parameter><decl><type><name>char</name></type> <name>__b7</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b6</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b5</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b4</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b3</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b2</name></decl></parameter>,
<parameter><decl><type><name>char</name></type> <name>__b1</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b0</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m64</name><operator>)</operator><call><name>__builtin_ia32_vec_init_v8qi</name><argument_list>(<argument><expr><name>__b0</name></expr></argument>, <argument><expr><name>__b1</name></expr></argument>, <argument><expr><name>__b2</name></expr></argument>, <argument><expr><name>__b3</name></expr></argument>,
<argument><expr><name>__b4</name></expr></argument>, <argument><expr><name>__b5</name></expr></argument>, <argument><expr><name>__b6</name></expr></argument>, <argument><expr><name>__b7</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set1_pi32</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_set_pi32</name><argument_list>(<argument><expr><name>__i</name></expr></argument>, <argument><expr><name>__i</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set1_pi16</name><parameter_list>(<parameter><decl><type><name>short</name></type> <name>__w</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_set_pi16</name><argument_list>(<argument><expr><name>__w</name></expr></argument>, <argument><expr><name>__w</name></expr></argument>, <argument><expr><name>__w</name></expr></argument>, <argument><expr><name>__w</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>













<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_set1_pi8</name><parameter_list>(<parameter><decl><type><name>char</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_set_pi8</name><argument_list>(<argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_setr_pi32</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>__i0</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__i1</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_set_pi32</name><argument_list>(<argument><expr><name>__i1</name></expr></argument>, <argument><expr><name>__i0</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_setr_pi16</name><parameter_list>(<parameter><decl><type><name>short</name></type> <name>__w0</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__w1</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__w2</name></decl></parameter>, <parameter><decl><type><name>short</name></type> <name>__w3</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_set_pi16</name><argument_list>(<argument><expr><name>__w3</name></expr></argument>, <argument><expr><name>__w2</name></expr></argument>, <argument><expr><name>__w1</name></expr></argument>, <argument><expr><name>__w0</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


























<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m64</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_setr_pi8</name><parameter_list>(<parameter><decl><type><name>char</name></type> <name>__b0</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b1</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b2</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b3</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b4</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b5</name></decl></parameter>,
<parameter><decl><type><name>char</name></type> <name>__b6</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>__b7</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>_mm_set_pi8</name><argument_list>(<argument><expr><name>__b7</name></expr></argument>, <argument><expr><name>__b6</name></expr></argument>, <argument><expr><name>__b5</name></expr></argument>, <argument><expr><name>__b4</name></expr></argument>, <argument><expr><name>__b3</name></expr></argument>, <argument><expr><name>__b2</name></expr></argument>, <argument><expr><name>__b1</name></expr></argument>, <argument><expr><name>__b0</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__DEFAULT_FN_ATTRS</name></cpp:undef>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_empty</name></cpp:macro> <cpp:value>_mm_empty</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_from_int</name></cpp:macro> <cpp:value>_mm_cvtsi32_si64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_from_int64</name></cpp:macro> <cpp:value>_mm_cvtsi64_m64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_to_int</name></cpp:macro> <cpp:value>_mm_cvtsi64_si32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_to_int64</name></cpp:macro> <cpp:value>_mm_cvtm64_si64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_packsswb</name></cpp:macro> <cpp:value>_mm_packs_pi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_packssdw</name></cpp:macro> <cpp:value>_mm_packs_pi32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_packuswb</name></cpp:macro> <cpp:value>_mm_packs_pu16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_punpckhbw</name></cpp:macro> <cpp:value>_mm_unpackhi_pi8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_punpckhwd</name></cpp:macro> <cpp:value>_mm_unpackhi_pi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_punpckhdq</name></cpp:macro> <cpp:value>_mm_unpackhi_pi32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_punpcklbw</name></cpp:macro> <cpp:value>_mm_unpacklo_pi8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_punpcklwd</name></cpp:macro> <cpp:value>_mm_unpacklo_pi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_punpckldq</name></cpp:macro> <cpp:value>_mm_unpacklo_pi32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_paddb</name></cpp:macro> <cpp:value>_mm_add_pi8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_paddw</name></cpp:macro> <cpp:value>_mm_add_pi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_paddd</name></cpp:macro> <cpp:value>_mm_add_pi32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_paddsb</name></cpp:macro> <cpp:value>_mm_adds_pi8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_paddsw</name></cpp:macro> <cpp:value>_mm_adds_pi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_paddusb</name></cpp:macro> <cpp:value>_mm_adds_pu8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_paddusw</name></cpp:macro> <cpp:value>_mm_adds_pu16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psubb</name></cpp:macro> <cpp:value>_mm_sub_pi8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psubw</name></cpp:macro> <cpp:value>_mm_sub_pi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psubd</name></cpp:macro> <cpp:value>_mm_sub_pi32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psubsb</name></cpp:macro> <cpp:value>_mm_subs_pi8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psubsw</name></cpp:macro> <cpp:value>_mm_subs_pi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psubusb</name></cpp:macro> <cpp:value>_mm_subs_pu8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psubusw</name></cpp:macro> <cpp:value>_mm_subs_pu16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_pmaddwd</name></cpp:macro> <cpp:value>_mm_madd_pi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_pmulhw</name></cpp:macro> <cpp:value>_mm_mulhi_pi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_pmullw</name></cpp:macro> <cpp:value>_mm_mullo_pi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psllw</name></cpp:macro> <cpp:value>_mm_sll_pi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psllwi</name></cpp:macro> <cpp:value>_mm_slli_pi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_pslld</name></cpp:macro> <cpp:value>_mm_sll_pi32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_pslldi</name></cpp:macro> <cpp:value>_mm_slli_pi32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psllq</name></cpp:macro> <cpp:value>_mm_sll_si64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psllqi</name></cpp:macro> <cpp:value>_mm_slli_si64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psraw</name></cpp:macro> <cpp:value>_mm_sra_pi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psrawi</name></cpp:macro> <cpp:value>_mm_srai_pi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psrad</name></cpp:macro> <cpp:value>_mm_sra_pi32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psradi</name></cpp:macro> <cpp:value>_mm_srai_pi32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psrlw</name></cpp:macro> <cpp:value>_mm_srl_pi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psrlwi</name></cpp:macro> <cpp:value>_mm_srli_pi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psrld</name></cpp:macro> <cpp:value>_mm_srl_pi32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psrldi</name></cpp:macro> <cpp:value>_mm_srli_pi32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psrlq</name></cpp:macro> <cpp:value>_mm_srl_si64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_psrlqi</name></cpp:macro> <cpp:value>_mm_srli_si64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_pand</name></cpp:macro> <cpp:value>_mm_and_si64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_pandn</name></cpp:macro> <cpp:value>_mm_andnot_si64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_por</name></cpp:macro> <cpp:value>_mm_or_si64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_pxor</name></cpp:macro> <cpp:value>_mm_xor_si64</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_pcmpeqb</name></cpp:macro> <cpp:value>_mm_cmpeq_pi8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_pcmpeqw</name></cpp:macro> <cpp:value>_mm_cmpeq_pi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_pcmpeqd</name></cpp:macro> <cpp:value>_mm_cmpeq_pi32</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_pcmpgtb</name></cpp:macro> <cpp:value>_mm_cmpgt_pi8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_pcmpgtw</name></cpp:macro> <cpp:value>_mm_cmpgt_pi16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_m_pcmpgtd</name></cpp:macro> <cpp:value>_mm_cmpgt_pi32</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
