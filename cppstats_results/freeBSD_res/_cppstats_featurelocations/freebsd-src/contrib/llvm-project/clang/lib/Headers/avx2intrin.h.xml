<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/lib/Headers/avx2intrin.h">








<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__IMMINTRIN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:error>#<cpp:directive>error</cpp:directive> <cpp:literal>"Never use &lt;avx2intrin.h&gt; directly; include &lt;immintrin.h&gt; instead."</cpp:literal></cpp:error>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__AVX2INTRIN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__AVX2INTRIN_H</name></cpp:macro></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEFAULT_FN_ATTRS256</name></cpp:macro> <cpp:value>__attribute__((__always_inline__, __nodebug__, __target__("avx2"), __min_vector_width__(256)))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEFAULT_FN_ATTRS128</name></cpp:macro> <cpp:value>__attribute__((__always_inline__, __nodebug__, __target__("avx2"), __min_vector_width__(128)))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mpsadbw_epu8</name><parameter_list>(<parameter><type><name>X</name></type></parameter>, <parameter><type><name>Y</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_mpsadbw256((__v32qi)(__m256i)(X), (__v32qi)(__m256i)(Y), (int)(M))</cpp:value></cpp:define>



<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_abs_epi8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pabsb256</name><argument_list>(<argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_abs_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pabsw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_abs_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pabsd256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_packs_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_packsswb256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_packs_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_packssdw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_packus_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_packuswb256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_packus_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__V1</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__V2</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator> <call><name>__builtin_ia32_packusdw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__V1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__V2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_add_epi8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v32qu</name><operator>)</operator><name>__a</name> <operator>+</operator> <operator>(</operator><name>__v32qu</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_add_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v16hu</name><operator>)</operator><name>__a</name> <operator>+</operator> <operator>(</operator><name>__v16hu</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_add_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8su</name><operator>)</operator><name>__a</name> <operator>+</operator> <operator>(</operator><name>__v8su</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_add_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v4du</name><operator>)</operator><name>__a</name> <operator>+</operator> <operator>(</operator><name>__v4du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_adds_epi8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_paddsb256</name><argument_list>(<argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_adds_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_paddsw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_adds_epu8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_paddusb256</name><argument_list>(<argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_adds_epu16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_paddusw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_alignr_epi8</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>b</name></type></parameter>, <parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_palignr256((__v32qi)(__m256i)(a), (__v32qi)(__m256i)(b), (n))</cpp:value></cpp:define>



<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_and_si256</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v4du</name><operator>)</operator><name>__a</name> <operator>&amp;</operator> <operator>(</operator><name>__v4du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_andnot_si256</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>~</operator><operator>(</operator><name>__v4du</name><operator>)</operator><name>__a</name> <operator>&amp;</operator> <operator>(</operator><name>__v4du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_avg_epu8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pavgb256</name><argument_list>(<argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_avg_epu16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pavgw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_blendv_epi8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__V1</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__V2</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__M</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pblendvb256</name><argument_list>(<argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__V1</name></expr></argument>, <argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__V2</name></expr></argument>,
<argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_blend_epi16</name><parameter_list>(<parameter><type><name>V1</name></type></parameter>, <parameter><type><name>V2</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_pblendw256((__v16hi)(__m256i)(V1), (__v16hi)(__m256i)(V2), (int)(M))</cpp:value></cpp:define>



<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cmpeq_epi8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__a</name> <operator>==</operator> <operator>(</operator><name>__v32qi</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cmpeq_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name> <operator>==</operator> <operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cmpeq_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name> <operator>==</operator> <operator>(</operator><name>__v8si</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cmpeq_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v4di</name><operator>)</operator><name>__a</name> <operator>==</operator> <operator>(</operator><name>__v4di</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cmpgt_epi8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>


<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v32qs</name><operator>)</operator><name>__a</name> <operator>&gt;</operator> <operator>(</operator><name>__v32qs</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cmpgt_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name> <operator>&gt;</operator> <operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cmpgt_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name> <operator>&gt;</operator> <operator>(</operator><name>__v8si</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cmpgt_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v4di</name><operator>)</operator><name>__a</name> <operator>&gt;</operator> <operator>(</operator><name>__v4di</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_hadd_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_phaddw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_hadd_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_phaddd256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_hadds_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_phaddsw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_hsub_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_phsubw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_hsub_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_phsubd256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_hsubs_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_phsubsw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maddubs_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pmaddubsw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_madd_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pmaddwd256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_max_epi8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pmaxsb256</name><argument_list>(<argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_max_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pmaxsw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_max_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pmaxsd256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_max_epu8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pmaxub256</name><argument_list>(<argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_max_epu16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pmaxuw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_max_epu32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pmaxud256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_min_epi8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pminsb256</name><argument_list>(<argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_min_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pminsw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_min_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pminsd256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_min_epu8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pminub256</name><argument_list>(<argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_min_epu16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pminuw256</name> <argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_min_epu32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pminud256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_movemask_epi8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_pmovmskb256</name><argument_list>(<argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepi8_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__V</name></decl></parameter>)</parameter_list>
<block>{<block_content>


<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qs</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><name>__v16hi</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepi8_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__V</name></decl></parameter>)</parameter_list>
<block>{<block_content>


<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qs</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16qs</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__v8si</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepi8_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__V</name></decl></parameter>)</parameter_list>
<block>{<block_content>


<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qs</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16qs</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__v4di</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepi16_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__V</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><name>__v8si</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepi16_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__V</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__v4di</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepi32_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__V</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><name>__v4di</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepu8_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__V</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qu</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><name>__v16hi</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepu8_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__V</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qu</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16qu</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__v8si</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepu8_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__V</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qu</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16qu</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__v4di</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepu16_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__V</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hu</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><name>__v8si</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepu16_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__V</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hu</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hu</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>__v4di</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_cvtepu32_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__V</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4su</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><name>__v4di</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mul_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pmuldq256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mulhrs_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pmulhrsw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mulhi_epu16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pmulhuw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mulhi_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pmulhw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mullo_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v16hu</name><operator>)</operator><name>__a</name> <operator>*</operator> <operator>(</operator><name>__v16hu</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mullo_epi32</name> <parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8su</name><operator>)</operator><name>__a</name> <operator>*</operator> <operator>(</operator><name>__v8su</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_mul_epu32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_pmuludq256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_or_si256</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v4du</name><operator>)</operator><name>__a</name> <operator>|</operator> <operator>(</operator><name>__v4du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_sad_epu8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_psadbw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_shuffle_epi8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pshufb256</name><argument_list>(<argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_shuffle_epi32</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_pshufd256((__v8si)(__m256i)(a), (int)(imm))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_shufflehi_epi16</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_pshufhw256((__v16hi)(__m256i)(a), (int)(imm))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_shufflelo_epi16</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_pshuflw256((__v16hi)(__m256i)(a), (int)(imm))</cpp:value></cpp:define>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_sign_epi8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psignb256</name><argument_list>(<argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_sign_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psignw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_sign_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psignd256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_slli_si256</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_pslldqi256_byteshift((__v4di)(__m256i)(a), (int)(imm))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_bslli_epi128</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_pslldqi256_byteshift((__v4di)(__m256i)(a), (int)(imm))</cpp:value></cpp:define>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_slli_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psllwi256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_sll_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psllw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_slli_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pslldi256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_sll_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_pslld256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_slli_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_psllqi256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_sll_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_psllq256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_srai_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psrawi256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_sra_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psraw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_srai_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psradi256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_sra_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psrad256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_srli_si256</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_psrldqi256_byteshift((__m256i)(a), (int)(imm))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_bsrli_epi128</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>imm</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_psrldqi256_byteshift((__m256i)(a), (int)(imm))</cpp:value></cpp:define>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_srli_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psrlwi256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_srl_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psrlw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_srli_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psrldi256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_srl_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psrld256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_srli_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_psrlqi256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_srl_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__count</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_psrlq256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__count</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_sub_epi8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v32qu</name><operator>)</operator><name>__a</name> <operator>-</operator> <operator>(</operator><name>__v32qu</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_sub_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v16hu</name><operator>)</operator><name>__a</name> <operator>-</operator> <operator>(</operator><name>__v16hu</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_sub_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v8su</name><operator>)</operator><name>__a</name> <operator>-</operator> <operator>(</operator><name>__v8su</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_sub_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v4du</name><operator>)</operator><name>__a</name> <operator>-</operator> <operator>(</operator><name>__v4du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_subs_epi8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psubsb256</name><argument_list>(<argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_subs_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psubsw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_subs_epu8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psubusb256</name><argument_list>(<argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_subs_epu16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psubusw256</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_unpackhi_epi8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">11</literal></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">13</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">14</literal></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">15</literal></expr></argument>, <argument><expr><literal type="number">24</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">24</literal></expr></argument>, <argument><expr><literal type="number">25</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">25</literal></expr></argument>, <argument><expr><literal type="number">26</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">26</literal></expr></argument>, <argument><expr><literal type="number">27</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">27</literal></expr></argument>, <argument><expr><literal type="number">28</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">28</literal></expr></argument>, <argument><expr><literal type="number">29</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">29</literal></expr></argument>, <argument><expr><literal type="number">30</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">30</literal></expr></argument>, <argument><expr><literal type="number">31</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">31</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_unpackhi_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">12</literal></expr></argument>, <argument><expr><literal type="number">13</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">13</literal></expr></argument>, <argument><expr><literal type="number">14</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">14</literal></expr></argument>, <argument><expr><literal type="number">15</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">15</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_unpackhi_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_unpackhi_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal><operator>+</operator><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_unpacklo_epi8</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v32qi</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">6</literal></expr></argument>, <argument><expr><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">16</literal></expr></argument>, <argument><expr><literal type="number">17</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">17</literal></expr></argument>, <argument><expr><literal type="number">18</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">18</literal></expr></argument>, <argument><expr><literal type="number">19</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">19</literal></expr></argument>, <argument><expr><literal type="number">20</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">20</literal></expr></argument>, <argument><expr><literal type="number">21</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">21</literal></expr></argument>, <argument><expr><literal type="number">22</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">22</literal></expr></argument>, <argument><expr><literal type="number">23</literal></expr></argument>, <argument><expr><literal type="number">32</literal><operator>+</operator><literal type="number">23</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_unpacklo_epi16</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16hi</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">9</literal></expr></argument>, <argument><expr><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">10</literal></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><literal type="number">16</literal><operator>+</operator><literal type="number">11</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_unpacklo_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><literal type="number">8</literal><operator>+</operator><literal type="number">5</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_unpacklo_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__b</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">4</literal><operator>+</operator><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">4</literal><operator>+</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_xor_si256</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__v4du</name><operator>)</operator><name>__a</name> <operator>^</operator> <operator>(</operator><name>__v4du</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_stream_load_si256</name><parameter_list>(<parameter><decl><type><name>__m256i</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__V</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<typedef>typedef <type><name>__v4di</name> <name>__v4di_aligned</name></type> <name>__attribute__</name>((<name>aligned</name>(32)));</typedef>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_nontemporal_load</name><argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4di_aligned</name> <operator>*</operator><operator>)</operator><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_broadcastss_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_broadcastsd_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_broadcastss_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_broadcastsd_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_broadcastsi128_si256</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_broadcastsi128_si256</name><parameter_list>(<parameter><type><name>X</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm256_broadcastsi128_si256(X)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_blend_epi32</name><parameter_list>(<parameter><type><name>V1</name></type></parameter>, <parameter><type><name>V2</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_pblendd128((__v4si)(__m128i)(V1), (__v4si)(__m128i)(V2), (int)(M))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_blend_epi32</name><parameter_list>(<parameter><type><name>V1</name></type></parameter>, <parameter><type><name>V2</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_pblendd256((__v8si)(__m256i)(V1), (__v8si)(__m256i)(V2), (int)(M))</cpp:value></cpp:define>



<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_broadcastb_epi8</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_broadcastw_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_broadcastd_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_broadcastq_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_broadcastb_epi8</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v16qi</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_broadcastw_epi16</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8hi</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_broadcastd_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_broadcastq_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_permutevar8x32_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_permvarsi256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_permute4x64_pd</name><parameter_list>(<parameter><type><name>V</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_permdf256((__v4df)(__m256d)(V), (int)(M))</cpp:value></cpp:define>


<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_permutevar8x32_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_permvarsf256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_permute4x64_epi64</name><parameter_list>(<parameter><type><name>V</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_permdi256((__v4di)(__m256i)(V), (int)(M))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_permute2x128_si256</name><parameter_list>(<parameter><type><name>V1</name></type></parameter>, <parameter><type><name>V2</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_permti256((__m256i)(V1), (__m256i)(V2), (int)(M))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_extracti128_si256</name><parameter_list>(<parameter><type><name>V</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_extract128i256((__v4di)(__m256i)(V), (int)(M))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_inserti128_si256</name><parameter_list>(<parameter><type><name>V1</name></type></parameter>, <parameter><type><name>V2</name></type></parameter>, <parameter><type><name>M</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_insert128i256((__v4di)(__m256i)(V1), (__v2di)(__m128i)(V2), (int)(M))</cpp:value></cpp:define>



<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskload_epi32</name><parameter_list>(<parameter><decl><type><name>int</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__M</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_maskloadd256</name><argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v8si</name> <operator>*</operator><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskload_epi64</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__M</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_maskloadq256</name><argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4di</name> <operator>*</operator><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskload_epi32</name><parameter_list>(<parameter><decl><type><name>int</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__M</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_maskloadd</name><argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v4si</name> <operator>*</operator><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskload_epi64</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__M</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_maskloadq</name><argument_list>(<argument><expr><operator>(</operator><specifier>const</specifier> <name>__v2di</name> <operator>*</operator><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__M</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskstore_epi32</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_maskstored256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name> <operator>*</operator><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__M</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_maskstore_epi64</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name> <modifier>*</modifier></type><name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_maskstoreq256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name> <operator>*</operator><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__M</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskstore_epi32</name><parameter_list>(<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_maskstored</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name> <operator>*</operator><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__M</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_maskstore_epi64</name><parameter_list>(<parameter><decl><type><name>long</name> <name>long</name> <modifier>*</modifier></type><name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__M</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_maskstoreq</name><argument_list>(<argument><expr><operator>(</operator> <name>__v2di</name> <operator>*</operator><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__M</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_sllv_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psllv8si</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_sllv_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psllv4si</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_sllv_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psllv4di</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_sllv_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psllv2di</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_srav_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psrav8si</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_srav_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psrav4si</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_srlv_epi32</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psrlv8si</name><argument_list>(<argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8si</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_srlv_epi32</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psrlv4si</name><argument_list>(<argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4si</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256i</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_srlv_epi64</name><parameter_list>(<parameter><decl><type><name>__m256i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m256i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256i</name><operator>)</operator><call><name>__builtin_ia32_psrlv4di</name><argument_list>(<argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4di</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_srlv_epi64</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__X</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__Y</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_psrlv2di</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__X</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__Y</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_i32gather_pd</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_gatherd_pd((__v2df)(__m128i)(a), (double const *)(m), (__v4si)(__m128i)(i), (__v2df)(__m128d)(mask), (s))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_i32gather_pd</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_gatherd_pd256((__v4df)(__m256d)(a), (double const *)(m), (__v4si)(__m128i)(i), (__v4df)(__m256d)(mask), (s))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_i64gather_pd</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_gatherq_pd((__v2df)(__m128d)(a), (double const *)(m), (__v2di)(__m128i)(i), (__v2df)(__m128d)(mask), (s))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_i64gather_pd</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_gatherq_pd256((__v4df)(__m256d)(a), (double const *)(m), (__v4di)(__m256i)(i), (__v4df)(__m256d)(mask), (s))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_i32gather_ps</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_gatherd_ps((__v4sf)(__m128)(a), (float const *)(m), (__v4si)(__m128i)(i), (__v4sf)(__m128)(mask), (s))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_i32gather_ps</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_gatherd_ps256((__v8sf)(__m256)(a), (float const *)(m), (__v8si)(__m256i)(i), (__v8sf)(__m256)(mask), (s))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_i64gather_ps</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_gatherq_ps((__v4sf)(__m128)(a), (float const *)(m), (__v2di)(__m128i)(i), (__v4sf)(__m128)(mask), (s))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_i64gather_ps</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_gatherq_ps256((__v4sf)(__m128)(a), (float const *)(m), (__v4di)(__m256i)(i), (__v4sf)(__m128)(mask), (s))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_i32gather_epi32</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_gatherd_d((__v4si)(__m128i)(a), (int const *)(m), (__v4si)(__m128i)(i), (__v4si)(__m128i)(mask), (s))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_i32gather_epi32</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_gatherd_d256((__v8si)(__m256i)(a), (int const *)(m), (__v8si)(__m256i)(i), (__v8si)(__m256i)(mask), (s))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_i64gather_epi32</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_gatherq_d((__v4si)(__m128i)(a), (int const *)(m), (__v2di)(__m128i)(i), (__v4si)(__m128i)(mask), (s))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_i64gather_epi32</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_gatherq_d256((__v4si)(__m128i)(a), (int const *)(m), (__v4di)(__m256i)(i), (__v4si)(__m128i)(mask), (s))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_i32gather_epi64</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_gatherd_q((__v2di)(__m128i)(a), (long long const *)(m), (__v4si)(__m128i)(i), (__v2di)(__m128i)(mask), (s))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_i32gather_epi64</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_gatherd_q256((__v4di)(__m256i)(a), (long long const *)(m), (__v4si)(__m128i)(i), (__v4di)(__m256i)(mask), (s))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_mask_i64gather_epi64</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_gatherq_q((__v2di)(__m128i)(a), (long long const *)(m), (__v2di)(__m128i)(i), (__v2di)(__m128i)(mask), (s))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_mask_i64gather_epi64</name><parameter_list>(<parameter><type><name>a</name></type></parameter>, <parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>mask</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_gatherq_q256((__v4di)(__m256i)(a), (long long const *)(m), (__v4di)(__m256i)(i), (__v4di)(__m256i)(mask), (s))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_i32gather_pd</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_gatherd_pd((__v2df)_mm_undefined_pd(), (double const *)(m), (__v4si)(__m128i)(i), (__v2df)_mm_cmpeq_pd(_mm_setzero_pd(), _mm_setzero_pd()), (s))</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_i32gather_pd</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_gatherd_pd256((__v4df)_mm256_undefined_pd(), (double const *)(m), (__v4si)(__m128i)(i), (__v4df)_mm256_cmp_pd(_mm256_setzero_pd(), _mm256_setzero_pd(), _CMP_EQ_OQ), (s))</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_i64gather_pd</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128d)__builtin_ia32_gatherq_pd((__v2df)_mm_undefined_pd(), (double const *)(m), (__v2di)(__m128i)(i), (__v2df)_mm_cmpeq_pd(_mm_setzero_pd(), _mm_setzero_pd()), (s))</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_i64gather_pd</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256d)__builtin_ia32_gatherq_pd256((__v4df)_mm256_undefined_pd(), (double const *)(m), (__v4di)(__m256i)(i), (__v4df)_mm256_cmp_pd(_mm256_setzero_pd(), _mm256_setzero_pd(), _CMP_EQ_OQ), (s))</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_i32gather_ps</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_gatherd_ps((__v4sf)_mm_undefined_ps(), (float const *)(m), (__v4si)(__m128i)(i), (__v4sf)_mm_cmpeq_ps(_mm_setzero_ps(), _mm_setzero_ps()), (s))</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_i32gather_ps</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256)__builtin_ia32_gatherd_ps256((__v8sf)_mm256_undefined_ps(), (float const *)(m), (__v8si)(__m256i)(i), (__v8sf)_mm256_cmp_ps(_mm256_setzero_ps(), _mm256_setzero_ps(), _CMP_EQ_OQ), (s))</cpp:value></cpp:define>








<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_i64gather_ps</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_gatherq_ps((__v4sf)_mm_undefined_ps(), (float const *)(m), (__v2di)(__m128i)(i), (__v4sf)_mm_cmpeq_ps(_mm_setzero_ps(), _mm_setzero_ps()), (s))</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_i64gather_ps</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128)__builtin_ia32_gatherq_ps256((__v4sf)_mm_undefined_ps(), (float const *)(m), (__v4di)(__m256i)(i), (__v4sf)_mm_cmpeq_ps(_mm_setzero_ps(), _mm_setzero_ps()), (s))</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_i32gather_epi32</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_gatherd_d((__v4si)_mm_undefined_si128(), (int const *)(m), (__v4si)(__m128i)(i), (__v4si)_mm_set1_epi32(-1), (s))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_i32gather_epi32</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_gatherd_d256((__v8si)_mm256_undefined_si256(), (int const *)(m), (__v8si)(__m256i)(i), (__v8si)_mm256_set1_epi32(-1), (s))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_i64gather_epi32</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_gatherq_d((__v4si)_mm_undefined_si128(), (int const *)(m), (__v2di)(__m128i)(i), (__v4si)_mm_set1_epi32(-1), (s))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_i64gather_epi32</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_gatherq_d256((__v4si)_mm_undefined_si128(), (int const *)(m), (__v4di)(__m256i)(i), (__v4si)_mm_set1_epi32(-1), (s))</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_i32gather_epi64</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_gatherd_q((__v2di)_mm_undefined_si128(), (long long const *)(m), (__v4si)(__m128i)(i), (__v2di)_mm_set1_epi64x(-1), (s))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_i32gather_epi64</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_gatherd_q256((__v4di)_mm256_undefined_si256(), (long long const *)(m), (__v4si)(__m128i)(i), (__v4di)_mm256_set1_epi64x(-1), (s))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_i64gather_epi64</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_gatherq_q((__v2di)_mm_undefined_si128(), (long long const *)(m), (__v2di)(__m128i)(i), (__v2di)_mm_set1_epi64x(-1), (s))</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm256_i64gather_epi64</name><parameter_list>(<parameter><type><name>m</name></type></parameter>, <parameter><type><name>i</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m256i)__builtin_ia32_gatherq_q256((__v4di)_mm256_undefined_si256(), (long long const *)(m), (__v4di)(__m256i)(i), (__v4di)_mm256_set1_epi64x(-1), (s))</cpp:value></cpp:define>





<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__DEFAULT_FN_ATTRS256</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__DEFAULT_FN_ATTRS128</name></cpp:undef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
