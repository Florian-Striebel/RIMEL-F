<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/lib/Headers/__wmmintrin_aes.h">








<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__WMMINTRIN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:error>#<cpp:directive>error</cpp:directive> <cpp:literal>"Never use &lt;__wmmintrin_aes.h&gt; directly; include &lt;wmmintrin.h&gt; instead."</cpp:literal></cpp:error>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__WMMINTRIN_AES_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__WMMINTRIN_AES_H</name></cpp:macro></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEFAULT_FN_ATTRS</name></cpp:macro> <cpp:value>__attribute__((__always_inline__, __nodebug__, __target__("aes"), __min_vector_width__(128)))</cpp:value></cpp:define>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_aesenc_si128</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__V</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__R</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_aesenc128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__R</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_aesenclast_si128</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__V</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__R</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_aesenclast128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__R</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_aesdec_si128</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__V</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__R</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_aesdec128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__R</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_aesdeclast_si128</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__V</name></decl></parameter>, <parameter><decl><type><name>__m128i</name></type> <name>__R</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_aesdeclast128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__V</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__R</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>












<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_aesimc_si128</name><parameter_list>(<parameter><decl><type><name>__m128i</name></type> <name>__V</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_aesimc128</name><argument_list>(<argument><expr><operator>(</operator><name>__v2di</name><operator>)</operator><name>__V</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>



















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_aeskeygenassist_si128</name><parameter_list>(<parameter><type><name>C</name></type></parameter>, <parameter><type><name>R</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(__m128i)__builtin_ia32_aeskeygenassist128((__v2di)(__m128i)(C), (int)(R))</cpp:value></cpp:define>


<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__DEFAULT_FN_ATTRS</name></cpp:undef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
