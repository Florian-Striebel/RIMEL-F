<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/lib/Headers/wasm_simd128.h">








<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__WASM_SIMD128_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__WASM_SIMD128_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdbool.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>


<typedef>typedef <type><name>int32_t</name> <name>v128_t</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(16)<operator>,</operator> __aligned__(16)));</typedef>


<typedef>typedef <type><name>int32_t</name> <name>__v128_u</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(16)<operator>,</operator> __aligned__(1)));</typedef>
<typedef>typedef <type><name>signed</name> <name>char</name> <name>__i8x16</name></type>
<name>__attribute__</name>((<name>__vector_size__</name>(16)<operator>,</operator> __aligned__(16)));</typedef>
<typedef>typedef <type><name>unsigned</name> <name>char</name> <name>__u8x16</name></type>
<name>__attribute__</name>((<name>__vector_size__</name>(16)<operator>,</operator> __aligned__(16)));</typedef>
<typedef>typedef <type><name>short</name> <name>__i16x8</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(16)<operator>,</operator> __aligned__(16)));</typedef>
<typedef>typedef <type><name>unsigned</name> <name>short</name> <name>__u16x8</name></type>
<name>__attribute__</name>((<name>__vector_size__</name>(16)<operator>,</operator> __aligned__(16)));</typedef>
<typedef>typedef <type><name>int</name> <name>__i32x4</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(16)<operator>,</operator> __aligned__(16)));</typedef>
<typedef>typedef <type><name>unsigned</name> <name>int</name> <name>__u32x4</name></type>
<name>__attribute__</name>((<name>__vector_size__</name>(16)<operator>,</operator> __aligned__(16)));</typedef>
<typedef>typedef <type><name>long</name> <name>long</name> <name>__i64x2</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(16)<operator>,</operator> __aligned__(16)));</typedef>
<typedef>typedef <type><name>unsigned</name> <name>long</name> <name>long</name> <name>__u64x2</name></type>
<name>__attribute__</name>((<name>__vector_size__</name>(16)<operator>,</operator> __aligned__(16)));</typedef>
<typedef>typedef <type><name>float</name> <name>__f32x4</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(16)<operator>,</operator> __aligned__(16)));</typedef>
<typedef>typedef <type><name>double</name> <name>__f64x2</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(16)<operator>,</operator> __aligned__(16)));</typedef>

<typedef>typedef <type><name>signed</name> <name>char</name> <name>__i8x8</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(8)<operator>,</operator> __aligned__(8)));</typedef>
<typedef>typedef <type><name>unsigned</name> <name>char</name> <name>__u8x8</name></type>
<name>__attribute__</name>((<name>__vector_size__</name>(8)<operator>,</operator> __aligned__(8)));</typedef>
<typedef>typedef <type><name>short</name> <name>__i16x4</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(8)<operator>,</operator> __aligned__(8)));</typedef>
<typedef>typedef <type><name>unsigned</name> <name>short</name> <name>__u16x4</name></type>
<name>__attribute__</name>((<name>__vector_size__</name>(8)<operator>,</operator> __aligned__(8)));</typedef>
<typedef>typedef <type><name>int</name> <name>__i32x2</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(8)<operator>,</operator> __aligned__(8)));</typedef>
<typedef>typedef <type><name>unsigned</name> <name>int</name> <name>__u32x2</name></type>
<name>__attribute__</name>((<name>__vector_size__</name>(8)<operator>,</operator> __aligned__(8)));</typedef>
<typedef>typedef <type><name>float</name> <name>__f32x2</name></type> <name>__attribute__</name>((<name>__vector_size__</name>(8)<operator>,</operator> __aligned__(8)));</typedef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEFAULT_FN_ATTRS</name></cpp:macro> <cpp:value>__attribute__((__always_inline__, __nodebug__, __target__("simd128"), __min_vector_width__(128)))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__REQUIRE_CONSTANT</name><parameter_list>(<parameter><type><name>c</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__attribute__((__diagnose_if__(!__builtin_constant_p(c), #c " must be constant", "error")))</cpp:value></cpp:define>



<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_v128_load</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>)</parameter_list> <block>{<block_content>

<struct>struct <name>__wasm_v128_load_struct</name> <block>{
<decl_stmt><decl><type><name>__v128_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<return>return <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__wasm_v128_load_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_v128_load8_splat</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_v128_load8_splat_struct</name> <block>{
<decl_stmt><decl><type><name>uint8_t</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>__v</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__wasm_v128_load8_splat_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr></init></decl>;</decl_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__u8x16</name><operator>)</operator><block>{<expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>,
<expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_v128_load16_splat</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_v128_load16_splat_struct</name> <block>{
<decl_stmt><decl><type><name>uint16_t</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>__v</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__wasm_v128_load16_splat_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr></init></decl>;</decl_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__u16x8</name><operator>)</operator><block>{<expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_v128_load32_splat</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_v128_load32_splat_struct</name> <block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>__v</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__wasm_v128_load32_splat_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr></init></decl>;</decl_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__u32x4</name><operator>)</operator><block>{<expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>, <expr><name>__v</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_v128_load64_splat</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_v128_load64_splat_struct</name> <block>{
<decl_stmt><decl><type><name>uint64_t</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>__v</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__wasm_v128_load64_splat_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr></init></decl>;</decl_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__u64x2</name><operator>)</operator><block>{<expr><name>__v</name></expr>, <expr><name>__v</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i16x8_load8x8</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_i16x8_load8x8_struct</name> <block>{
<decl_stmt><decl><type><name>__i8x8</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>__i8x8</name></type> <name>__v</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__wasm_i16x8_load8x8_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr></init></decl>;</decl_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <call><name>__builtin_convertvector</name><argument_list>(<argument><expr><name>__v</name></expr></argument>, <argument><expr><name>__i16x8</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u16x8_load8x8</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_u16x8_load8x8_struct</name> <block>{
<decl_stmt><decl><type><name>__u8x8</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>__u8x8</name></type> <name>__v</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__wasm_u16x8_load8x8_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr></init></decl>;</decl_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <call><name>__builtin_convertvector</name><argument_list>(<argument><expr><name>__v</name></expr></argument>, <argument><expr><name>__u16x8</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i32x4_load16x4</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_i32x4_load16x4_struct</name> <block>{
<decl_stmt><decl><type><name>__i16x4</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>__i16x4</name></type> <name>__v</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__wasm_i32x4_load16x4_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr></init></decl>;</decl_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <call><name>__builtin_convertvector</name><argument_list>(<argument><expr><name>__v</name></expr></argument>, <argument><expr><name>__i32x4</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u32x4_load16x4</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_u32x4_load16x4_struct</name> <block>{
<decl_stmt><decl><type><name>__u16x4</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>__u16x4</name></type> <name>__v</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__wasm_u32x4_load16x4_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr></init></decl>;</decl_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <call><name>__builtin_convertvector</name><argument_list>(<argument><expr><name>__v</name></expr></argument>, <argument><expr><name>__u32x4</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i64x2_load32x2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_i64x2_load32x2_struct</name> <block>{
<decl_stmt><decl><type><name>__i32x2</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>__i32x2</name></type> <name>__v</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__wasm_i64x2_load32x2_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr></init></decl>;</decl_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <call><name>__builtin_convertvector</name><argument_list>(<argument><expr><name>__v</name></expr></argument>, <argument><expr><name>__i64x2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u64x2_load32x2</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_u64x2_load32x2_struct</name> <block>{
<decl_stmt><decl><type><name>__u32x2</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>__u32x2</name></type> <name>__v</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__wasm_u64x2_load32x2_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr></init></decl>;</decl_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <call><name>__builtin_convertvector</name><argument_list>(<argument><expr><name>__v</name></expr></argument>, <argument><expr><name>__u64x2</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_v128_load32_zero</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_v128_load32_zero_struct</name> <block>{
<decl_stmt><decl><type><name>int32_t</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>int32_t</name></type> <name>__v</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__wasm_v128_load32_zero_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr></init></decl>;</decl_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><block>{<expr><name>__v</name></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_v128_load64_zero</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_v128_load64_zero_struct</name> <block>{
<decl_stmt><decl><type><name>int64_t</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>int64_t</name></type> <name>__v</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__wasm_v128_load64_zero_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr></init></decl>;</decl_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><block>{<expr><name>__v</name></expr>, <expr><literal type="number">0</literal></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_v128_load8_lane</name><parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__vec</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_v128_load8_lane_struct</name> <block>{
<decl_stmt><decl><type><name>int8_t</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>int8_t</name></type> <name>__v</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__wasm_v128_load8_lane_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>__i8x16</name></type> <name>__ret</name> <init>= <expr><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__vec</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>__ret</name><index>[<expr><name>__i</name></expr>]</index></name> <operator>=</operator> <name>__v</name></expr>;</expr_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><name>__ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_v128_load16_lane</name><parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__vec</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_v128_load16_lane_struct</name> <block>{
<decl_stmt><decl><type><name>int16_t</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>int16_t</name></type> <name>__v</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__wasm_v128_load16_lane_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>__i16x8</name></type> <name>__ret</name> <init>= <expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__vec</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>__ret</name><index>[<expr><name>__i</name></expr>]</index></name> <operator>=</operator> <name>__v</name></expr>;</expr_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><name>__ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_v128_load32_lane</name><parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__vec</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_v128_load32_lane_struct</name> <block>{
<decl_stmt><decl><type><name>int32_t</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>int32_t</name></type> <name>__v</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__wasm_v128_load32_lane_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>__i32x4</name></type> <name>__ret</name> <init>= <expr><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__vec</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>__ret</name><index>[<expr><name>__i</name></expr>]</index></name> <operator>=</operator> <name>__v</name></expr>;</expr_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><name>__ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_v128_load64_lane</name><parameter_list>(
<parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__vec</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_v128_load64_lane_struct</name> <block>{
<decl_stmt><decl><type><name>int64_t</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<decl_stmt><decl><type><name>int64_t</name></type> <name>__v</name> <init>= <expr><operator>(</operator><operator>(</operator><specifier>const</specifier> struct <name>__wasm_v128_load64_lane_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>__i64x2</name></type> <name>__ret</name> <init>= <expr><operator>(</operator><name>__i64x2</name><operator>)</operator><name>__vec</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>__ret</name><index>[<expr><name>__i</name></expr>]</index></name> <operator>=</operator> <name>__v</name></expr>;</expr_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><name>__ret</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_v128_store</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>

<struct>struct <name>__wasm_v128_store_struct</name> <block>{
<decl_stmt><decl><type><name>__v128_u</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__wasm_v128_store_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name> <operator>=</operator> <name>__a</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_v128_store8_lane</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__vec</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_v128_store8_lane_struct</name> <block>{
<decl_stmt><decl><type><name>int8_t</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__wasm_v128_store8_lane_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name> <operator>=</operator> <operator>(</operator><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__vec</name><operator>)</operator><index>[<expr><name>__i</name></expr>]</index></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_v128_store16_lane</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__vec</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_v128_store16_lane_struct</name> <block>{
<decl_stmt><decl><type><name>int16_t</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__wasm_v128_store16_lane_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name> <operator>=</operator>
<operator>(</operator><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__vec</name><operator>)</operator><index>[<expr><name>__i</name></expr>]</index></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_v128_store32_lane</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__vec</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_v128_store32_lane_struct</name> <block>{
<decl_stmt><decl><type><name>int32_t</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__wasm_v128_store32_lane_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name> <operator>=</operator>
<operator>(</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__vec</name><operator>)</operator><index>[<expr><name>__i</name></expr>]</index></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_v128_store64_lane</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>__mem</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__vec</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<struct>struct <name>__wasm_v128_store64_lane_struct</name> <block>{
<decl_stmt><decl><type><name>int64_t</name></type> <name>__v</name></decl>;</decl_stmt>
}</block> <decl><name>__attribute__</name><argument_list>(<argument><expr><operator>(</operator><name>__packed__</name><operator>,</operator> <name>__may_alias__</name><operator>)</operator></expr></argument>)</argument_list></decl>;</struct>
<expr_stmt><expr><operator>(</operator><operator>(</operator>struct <name>__wasm_v128_store64_lane_struct</name> <operator>*</operator><operator>)</operator><name>__mem</name><operator>)</operator><operator>-&gt;</operator><name>__v</name> <operator>=</operator>
<operator>(</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><name>__vec</name><operator>)</operator><index>[<expr><name>__i</name></expr>]</index></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i8x16_make</name><parameter_list>(<parameter><decl><type><name>int8_t</name></type> <name>__c0</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c1</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c2</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c3</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c4</name></decl></parameter>,
<parameter><decl><type><name>int8_t</name></type> <name>__c5</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c6</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c7</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c8</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c9</name></decl></parameter>,
<parameter><decl><type><name>int8_t</name></type> <name>__c10</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c11</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c12</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c13</name></decl></parameter>,
<parameter><decl><type><name>int8_t</name></type> <name>__c14</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c15</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__i8x16</name><operator>)</operator><block>{<expr><name>__c0</name></expr>, <expr><name>__c1</name></expr>, <expr><name>__c2</name></expr>, <expr><name>__c3</name></expr>, <expr><name>__c4</name></expr>, <expr><name>__c5</name></expr>,
<expr><name>__c6</name></expr>, <expr><name>__c7</name></expr>, <expr><name>__c8</name></expr>, <expr><name>__c9</name></expr>, <expr><name>__c10</name></expr>, <expr><name>__c11</name></expr>,
<expr><name>__c12</name></expr>, <expr><name>__c13</name></expr>, <expr><name>__c14</name></expr>, <expr><name>__c15</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i16x8_make</name><parameter_list>(<parameter><decl><type><name>int16_t</name></type> <name>__c0</name></decl></parameter>, <parameter><decl><type><name>int16_t</name></type> <name>__c1</name></decl></parameter>, <parameter><decl><type><name>int16_t</name></type> <name>__c2</name></decl></parameter>, <parameter><decl><type><name>int16_t</name></type> <name>__c3</name></decl></parameter>,
<parameter><decl><type><name>int16_t</name></type> <name>__c4</name></decl></parameter>, <parameter><decl><type><name>int16_t</name></type> <name>__c5</name></decl></parameter>, <parameter><decl><type><name>int16_t</name></type> <name>__c6</name></decl></parameter>, <parameter><decl><type><name>int16_t</name></type> <name>__c7</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__i16x8</name><operator>)</operator><block>{<expr><name>__c0</name></expr>, <expr><name>__c1</name></expr>, <expr><name>__c2</name></expr>, <expr><name>__c3</name></expr>, <expr><name>__c4</name></expr>, <expr><name>__c5</name></expr>, <expr><name>__c6</name></expr>, <expr><name>__c7</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_make</name><parameter_list>(<parameter><decl><type><name>int32_t</name></type> <name>__c0</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>__c1</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>__c2</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>__c3</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><block>{<expr><name>__c0</name></expr>, <expr><name>__c1</name></expr>, <expr><name>__c2</name></expr>, <expr><name>__c3</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_make</name><parameter_list>(<parameter><decl><type><name>int64_t</name></type> <name>__c0</name></decl></parameter>,
<parameter><decl><type><name>int64_t</name></type> <name>__c1</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><block>{<expr><name>__c0</name></expr>, <expr><name>__c1</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_make</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__c0</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>__c1</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>__c2</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>__c3</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__f32x4</name><operator>)</operator><block>{<expr><name>__c0</name></expr>, <expr><name>__c1</name></expr>, <expr><name>__c2</name></expr>, <expr><name>__c3</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_make</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__c0</name></decl></parameter>,
<parameter><decl><type><name>double</name></type> <name>__c1</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__f64x2</name><operator>)</operator><block>{<expr><name>__c0</name></expr>, <expr><name>__c1</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i8x16_const</name><parameter_list>(<parameter><decl><type><name>int8_t</name></type> <name>__c0</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c1</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c2</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c3</name></decl></parameter>,
<parameter><decl><type><name>int8_t</name></type> <name>__c4</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c5</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c6</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c7</name></decl></parameter>,
<parameter><decl><type><name>int8_t</name></type> <name>__c8</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c9</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c10</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c11</name></decl></parameter>,
<parameter><decl><type><name>int8_t</name></type> <name>__c12</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c13</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c14</name></decl></parameter>, <parameter><decl><type><name>int8_t</name></type> <name>__c15</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c0</name></type></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c1</name></type></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c2</name></type></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c3</name></type></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c4</name></type></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c5</name></type></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c6</name></type></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c7</name></type></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c8</name></type></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c9</name></type></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c10</name></type></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c11</name></type></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c12</name></type></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c13</name></type></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c14</name></type></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c15</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__i8x16</name><operator>)</operator><block>{<expr><name>__c0</name></expr>, <expr><name>__c1</name></expr>, <expr><name>__c2</name></expr>, <expr><name>__c3</name></expr>, <expr><name>__c4</name></expr>, <expr><name>__c5</name></expr>,
<expr><name>__c6</name></expr>, <expr><name>__c7</name></expr>, <expr><name>__c8</name></expr>, <expr><name>__c9</name></expr>, <expr><name>__c10</name></expr>, <expr><name>__c11</name></expr>,
<expr><name>__c12</name></expr>, <expr><name>__c13</name></expr>, <expr><name>__c14</name></expr>, <expr><name>__c15</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i16x8_const</name><parameter_list>(<parameter><decl><type><name>int16_t</name></type> <name>__c0</name></decl></parameter>, <parameter><decl><type><name>int16_t</name></type> <name>__c1</name></decl></parameter>, <parameter><decl><type><name>int16_t</name></type> <name>__c2</name></decl></parameter>, <parameter><decl><type><name>int16_t</name></type> <name>__c3</name></decl></parameter>,
<parameter><decl><type><name>int16_t</name></type> <name>__c4</name></decl></parameter>, <parameter><decl><type><name>int16_t</name></type> <name>__c5</name></decl></parameter>, <parameter><decl><type><name>int16_t</name></type> <name>__c6</name></decl></parameter>, <parameter><decl><type><name>int16_t</name></type> <name>__c7</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c0</name></type></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c1</name></type></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c2</name></type></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c3</name></type></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c4</name></type></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c5</name></type></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c6</name></type></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c7</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__i16x8</name><operator>)</operator><block>{<expr><name>__c0</name></expr>, <expr><name>__c1</name></expr>, <expr><name>__c2</name></expr>, <expr><name>__c3</name></expr>, <expr><name>__c4</name></expr>, <expr><name>__c5</name></expr>, <expr><name>__c6</name></expr>, <expr><name>__c7</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i32x4_const</name><parameter_list>(<parameter><decl><type><name>int32_t</name></type> <name>__c0</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>__c1</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>__c2</name></decl></parameter>, <parameter><decl><type><name>int32_t</name></type> <name>__c3</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c0</name></type></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c1</name></type></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c2</name></type></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c3</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><block>{<expr><name>__c0</name></expr>, <expr><name>__c1</name></expr>, <expr><name>__c2</name></expr>, <expr><name>__c3</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_const</name><parameter_list>(<parameter><decl><type><name>int64_t</name></type> <name>__c0</name></decl></parameter>,
<parameter><decl><type><name>int64_t</name></type> <name>__c1</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c0</name></type></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c1</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><block>{<expr><name>__c0</name></expr>, <expr><name>__c1</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_f32x4_const</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__c0</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__c1</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__c2</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>__c3</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c0</name></type></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c1</name></type></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c2</name></type></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c3</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__f32x4</name><operator>)</operator><block>{<expr><name>__c0</name></expr>, <expr><name>__c1</name></expr>, <expr><name>__c2</name></expr>, <expr><name>__c3</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_const</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__c0</name></decl></parameter>,
<parameter><decl><type><name>double</name></type> <name>__c1</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c0</name></type></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c1</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__f64x2</name><operator>)</operator><block>{<expr><name>__c0</name></expr>, <expr><name>__c1</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_const_splat</name><parameter_list>(<parameter><decl><type><name>int8_t</name></type> <name>__c</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__i8x16</name><operator>)</operator><block>{<expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>,
<expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_const_splat</name><parameter_list>(<parameter><decl><type><name>int16_t</name></type> <name>__c</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__i16x8</name><operator>)</operator><block>{<expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_const_splat</name><parameter_list>(<parameter><decl><type><name>int32_t</name></type> <name>__c</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><block>{<expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_const_splat</name><parameter_list>(<parameter><decl><type><name>int64_t</name></type> <name>__c</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><block>{<expr><name>__c</name></expr>, <expr><name>__c</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_const_splat</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__c</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__f32x4</name><operator>)</operator><block>{<expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>, <expr><name>__c</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_const_splat</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__c</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__c</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__f64x2</name><operator>)</operator><block>{<expr><name>__c</name></expr>, <expr><name>__c</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_splat</name><parameter_list>(<parameter><decl><type><name>int8_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__i8x16</name><operator>)</operator><block>{<expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>,
<expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int8_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_extract_lane</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name><operator>)</operator><index>[<expr><name>__i</name></expr>]</index></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>uint8_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u8x16_extract_lane</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__a</name><operator>)</operator><index>[<expr><name>__i</name></expr>]</index></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_replace_lane</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>,
<parameter><decl><type><name>int8_t</name></type> <name>__b</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>__i8x16</name></type> <name>__v</name> <init>= <expr><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>__v</name><index>[<expr><name>__i</name></expr>]</index></name> <operator>=</operator> <name>__b</name></expr>;</expr_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><name>__v</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_splat</name><parameter_list>(<parameter><decl><type><name>int16_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__i16x8</name><operator>)</operator><block>{<expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int16_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_extract_lane</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name><operator>)</operator><index>[<expr><name>__i</name></expr>]</index></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>uint16_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u16x8_extract_lane</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>)</parameter_list> __REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__a</name><operator>)</operator><index>[<expr><name>__i</name></expr>]</index></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_replace_lane</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>,
<parameter><decl><type><name>int16_t</name></type> <name>__b</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>__i16x8</name></type> <name>__v</name> <init>= <expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>__v</name><index>[<expr><name>__i</name></expr>]</index></name> <operator>=</operator> <name>__b</name></expr>;</expr_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><name>__v</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_splat</name><parameter_list>(<parameter><decl><type><name>int32_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><block>{<expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int32_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_extract_lane</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name><operator>)</operator><index>[<expr><name>__i</name></expr>]</index></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_replace_lane</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>__b</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>__i32x4</name></type> <name>__v</name> <init>= <expr><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>__v</name><index>[<expr><name>__i</name></expr>]</index></name> <operator>=</operator> <name>__b</name></expr>;</expr_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><name>__v</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_splat</name><parameter_list>(<parameter><decl><type><name>int64_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><block>{<expr><name>__a</name></expr>, <expr><name>__a</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int64_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_extract_lane</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><name>__a</name><operator>)</operator><index>[<expr><name>__i</name></expr>]</index></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_replace_lane</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>,
<parameter><decl><type><name>int64_t</name></type> <name>__b</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>__i64x2</name></type> <name>__v</name> <init>= <expr><operator>(</operator><name>__i64x2</name><operator>)</operator><name>__a</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>__v</name><index>[<expr><name>__i</name></expr>]</index></name> <operator>=</operator> <name>__b</name></expr>;</expr_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><name>__v</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_splat</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__f32x4</name><operator>)</operator><block>{<expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>, <expr><name>__a</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>float</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_extract_lane</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name><operator>)</operator><index>[<expr><name>__i</name></expr>]</index></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_replace_lane</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>,
<parameter><decl><type><name>float</name></type> <name>__b</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>__f32x4</name></type> <name>__v</name> <init>= <expr><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>__v</name><index>[<expr><name>__i</name></expr>]</index></name> <operator>=</operator> <name>__b</name></expr>;</expr_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><name>__v</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_splat</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><name>__f64x2</name><operator>)</operator><block>{<expr><name>__a</name></expr>, <expr><name>__a</name></expr>}</block></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>double</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_extract_lane</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name><operator>)</operator><index>[<expr><name>__i</name></expr>]</index></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_replace_lane</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>__i</name></decl></parameter>,
<parameter><decl><type><name>double</name></type> <name>__b</name></decl></parameter>)</parameter_list>
__REQUIRE_CONSTANT<parameter_list>(<parameter><decl><type><name>__i</name></type></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>__f64x2</name></type> <name>__v</name> <init>= <expr><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name></expr></init></decl>;</decl_stmt>
<expr_stmt><expr><name><name>__v</name><index>[<expr><name>__i</name></expr>]</index></name> <operator>=</operator> <name>__b</name></expr>;</expr_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><name>__v</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_eq</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name> <operator>==</operator> <operator>(</operator><name>__i8x16</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_ne</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name> <operator>!=</operator> <operator>(</operator><name>__i8x16</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_lt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name> <operator>&lt;</operator> <operator>(</operator><name>__i8x16</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u8x16_lt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__a</name> <operator>&lt;</operator> <operator>(</operator><name>__u8x16</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_gt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name> <operator>&gt;</operator> <operator>(</operator><name>__i8x16</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u8x16_gt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__a</name> <operator>&gt;</operator> <operator>(</operator><name>__u8x16</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_le</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name> <operator>&lt;=</operator> <operator>(</operator><name>__i8x16</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u8x16_le</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__a</name> <operator>&lt;=</operator> <operator>(</operator><name>__u8x16</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_ge</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name> <operator>&gt;=</operator> <operator>(</operator><name>__i8x16</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u8x16_ge</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__a</name> <operator>&gt;=</operator> <operator>(</operator><name>__u8x16</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_eq</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name> <operator>==</operator> <operator>(</operator><name>__i16x8</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_ne</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__a</name> <operator>!=</operator> <operator>(</operator><name>__u16x8</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_lt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name> <operator>&lt;</operator> <operator>(</operator><name>__i16x8</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u16x8_lt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__a</name> <operator>&lt;</operator> <operator>(</operator><name>__u16x8</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_gt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name> <operator>&gt;</operator> <operator>(</operator><name>__i16x8</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u16x8_gt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__a</name> <operator>&gt;</operator> <operator>(</operator><name>__u16x8</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_le</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name> <operator>&lt;=</operator> <operator>(</operator><name>__i16x8</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u16x8_le</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__a</name> <operator>&lt;=</operator> <operator>(</operator><name>__u16x8</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_ge</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name> <operator>&gt;=</operator> <operator>(</operator><name>__i16x8</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u16x8_ge</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__a</name> <operator>&gt;=</operator> <operator>(</operator><name>__u16x8</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_eq</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name> <operator>==</operator> <operator>(</operator><name>__i32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_ne</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name> <operator>!=</operator> <operator>(</operator><name>__i32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_lt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name> <operator>&lt;</operator> <operator>(</operator><name>__i32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u32x4_lt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u32x4</name><operator>)</operator><name>__a</name> <operator>&lt;</operator> <operator>(</operator><name>__u32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_gt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name> <operator>&gt;</operator> <operator>(</operator><name>__i32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u32x4_gt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u32x4</name><operator>)</operator><name>__a</name> <operator>&gt;</operator> <operator>(</operator><name>__u32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_le</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name> <operator>&lt;=</operator> <operator>(</operator><name>__i32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u32x4_le</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u32x4</name><operator>)</operator><name>__a</name> <operator>&lt;=</operator> <operator>(</operator><name>__u32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_ge</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name> <operator>&gt;=</operator> <operator>(</operator><name>__i32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u32x4_ge</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u32x4</name><operator>)</operator><name>__a</name> <operator>&gt;=</operator> <operator>(</operator><name>__u32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_eq</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><name>__a</name> <operator>==</operator> <operator>(</operator><name>__i64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_ne</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><name>__a</name> <operator>!=</operator> <operator>(</operator><name>__i64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_lt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><name>__a</name> <operator>&lt;</operator> <operator>(</operator><name>__i64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_gt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><name>__a</name> <operator>&gt;</operator> <operator>(</operator><name>__i64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_le</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><name>__a</name> <operator>&lt;=</operator> <operator>(</operator><name>__i64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_ge</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><name>__a</name> <operator>&gt;=</operator> <operator>(</operator><name>__i64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_eq</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name> <operator>==</operator> <operator>(</operator><name>__f32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_ne</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name> <operator>!=</operator> <operator>(</operator><name>__f32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_lt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name> <operator>&lt;</operator> <operator>(</operator><name>__f32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_gt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name> <operator>&gt;</operator> <operator>(</operator><name>__f32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_le</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name> <operator>&lt;=</operator> <operator>(</operator><name>__f32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_ge</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name> <operator>&gt;=</operator> <operator>(</operator><name>__f32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_eq</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name> <operator>==</operator> <operator>(</operator><name>__f64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_ne</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name> <operator>!=</operator> <operator>(</operator><name>__f64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_lt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name> <operator>&lt;</operator> <operator>(</operator><name>__f64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_gt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name> <operator>&gt;</operator> <operator>(</operator><name>__f64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_le</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name> <operator>&lt;=</operator> <operator>(</operator><name>__f64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_ge</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name> <operator>&gt;=</operator> <operator>(</operator><name>__f64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_v128_not</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>~</operator><name>__a</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_v128_and</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><name>__a</name> <operator>&amp;</operator> <name>__b</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_v128_or</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><name>__a</name> <operator>|</operator> <name>__b</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_v128_xor</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><name>__a</name> <operator>^</operator> <name>__b</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_v128_andnot</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><name>__a</name> <operator>&amp;</operator> <operator>~</operator><name>__b</name></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>bool</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_v128_any_true</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_wasm_any_true_v128</name><argument_list>(<argument><expr><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_v128_bitselect</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__mask</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_bitselect</name><argument_list>(<argument><expr><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__b</name></expr></argument>,
<argument><expr><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__mask</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_abs</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_abs_i8x16</name><argument_list>(<argument><expr><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_neg</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>-</operator><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__a</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>bool</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_all_true</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_wasm_all_true_i8x16</name><argument_list>(<argument><expr><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int32_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_bitmask</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_wasm_bitmask_i8x16</name><argument_list>(<argument><expr><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_popcnt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_popcnt_i8x16</name><argument_list>(<argument><expr><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_shl</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name> <operator>&lt;&lt;</operator> <name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_shr</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name> <operator>&gt;&gt;</operator> <name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u8x16_shr</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__a</name> <operator>&gt;&gt;</operator> <name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_add</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__a</name> <operator>+</operator> <operator>(</operator><name>__u8x16</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_add_sat</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_add_sat_s_i8x16</name><argument_list>(<argument><expr><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u8x16_add_sat</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_add_sat_u_i8x16</name><argument_list>(<argument><expr><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_sub</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__a</name> <operator>-</operator> <operator>(</operator><name>__u8x16</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_sub_sat</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_sub_sat_s_i8x16</name><argument_list>(<argument><expr><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u8x16_sub_sat</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_sub_sat_u_i8x16</name><argument_list>(<argument><expr><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_min</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_min_s_i8x16</name><argument_list>(<argument><expr><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u8x16_min</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_min_u_i8x16</name><argument_list>(<argument><expr><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_max</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_max_s_i8x16</name><argument_list>(<argument><expr><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u8x16_max</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_max_u_i8x16</name><argument_list>(<argument><expr><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u8x16_avgr</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_avgr_u_i8x16</name><argument_list>(<argument><expr><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_abs</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_abs_i16x8</name><argument_list>(<argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_neg</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>-</operator><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__a</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>bool</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_all_true</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_wasm_all_true_i16x8</name><argument_list>(<argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int32_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_bitmask</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_wasm_bitmask_i16x8</name><argument_list>(<argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_shl</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name> <operator>&lt;&lt;</operator> <name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_shr</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name> <operator>&gt;&gt;</operator> <name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u16x8_shr</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__a</name> <operator>&gt;&gt;</operator> <name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_add</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__a</name> <operator>+</operator> <operator>(</operator><name>__u16x8</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_add_sat</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_add_sat_s_i16x8</name><argument_list>(<argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u16x8_add_sat</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_add_sat_u_i16x8</name><argument_list>(<argument><expr><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_sub</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name> <operator>-</operator> <operator>(</operator><name>__i16x8</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_sub_sat</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_sub_sat_s_i16x8</name><argument_list>(<argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u16x8_sub_sat</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_sub_sat_u_i16x8</name><argument_list>(<argument><expr><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_mul</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__a</name> <operator>*</operator> <operator>(</operator><name>__u16x8</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_min</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_min_s_i16x8</name><argument_list>(<argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u16x8_min</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_min_u_i16x8</name><argument_list>(<argument><expr><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_max</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_max_s_i16x8</name><argument_list>(<argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u16x8_max</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_max_u_i16x8</name><argument_list>(<argument><expr><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u16x8_avgr</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_avgr_u_i16x8</name><argument_list>(<argument><expr><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_abs</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_abs_i32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_neg</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>-</operator><operator>(</operator><name>__u32x4</name><operator>)</operator><name>__a</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>bool</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_all_true</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_wasm_all_true_i32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int32_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_bitmask</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_wasm_bitmask_i32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_shl</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name> <operator>&lt;&lt;</operator> <name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_shr</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name> <operator>&gt;&gt;</operator> <name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u32x4_shr</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u32x4</name><operator>)</operator><name>__a</name> <operator>&gt;&gt;</operator> <name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_add</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u32x4</name><operator>)</operator><name>__a</name> <operator>+</operator> <operator>(</operator><name>__u32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_sub</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u32x4</name><operator>)</operator><name>__a</name> <operator>-</operator> <operator>(</operator><name>__u32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_mul</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u32x4</name><operator>)</operator><name>__a</name> <operator>*</operator> <operator>(</operator><name>__u32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_min</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_min_s_i32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u32x4_min</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_min_u_i32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__u32x4</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__u32x4</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_max</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_max_s_i32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u32x4_max</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_max_u_i32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__u32x4</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__u32x4</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i32x4_dot_i16x8</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_dot_s_i32x4_i16x8</name><argument_list>(<argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_abs</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_abs_i64x2</name><argument_list>(<argument><expr><operator>(</operator><name>__i64x2</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_neg</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>-</operator><operator>(</operator><name>__u64x2</name><operator>)</operator><name>__a</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>bool</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_all_true</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_wasm_all_true_i64x2</name><argument_list>(<argument><expr><operator>(</operator><name>__i64x2</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>int32_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_bitmask</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><call><name>__builtin_wasm_bitmask_i64x2</name><argument_list>(<argument><expr><operator>(</operator><name>__i64x2</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_shl</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><name>__a</name> <operator>&lt;&lt;</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_shr</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><name>__a</name> <operator>&gt;&gt;</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_u64x2_shr</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>int32_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u64x2</name><operator>)</operator><name>__a</name> <operator>&gt;&gt;</operator> <operator>(</operator><name>int64_t</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_add</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u64x2</name><operator>)</operator><name>__a</name> <operator>+</operator> <operator>(</operator><name>__u64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_sub</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u64x2</name><operator>)</operator><name>__a</name> <operator>-</operator> <operator>(</operator><name>__u64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i64x2_mul</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u64x2</name><operator>)</operator><name>__a</name> <operator>*</operator> <operator>(</operator><name>__u64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_abs</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_abs_f32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_neg</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>-</operator><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_sqrt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_sqrt_f32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_ceil</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_ceil_f32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_floor</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_floor_f32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_trunc</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_trunc_f32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_nearest</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_nearest_f32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_add</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name> <operator>+</operator> <operator>(</operator><name>__f32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_sub</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name> <operator>-</operator> <operator>(</operator><name>__f32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_mul</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name> <operator>*</operator> <operator>(</operator><name>__f32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_div</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name> <operator>/</operator> <operator>(</operator><name>__f32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_min</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_min_f32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_max</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_max_f32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_pmin</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>__i32x4</name></type> <name>__mask</name> <init>= <expr><operator>(</operator><name>__i32x4</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__b</name> <operator>&lt;</operator> <operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name><operator>)</operator></expr></init></decl>;</decl_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__b</name><operator>)</operator> <operator>&amp;</operator> <name>__mask</name><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name><operator>)</operator> <operator>&amp;</operator> <operator>~</operator><name>__mask</name><operator>)</operator><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f32x4_pmax</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>__i32x4</name></type> <name>__mask</name> <init>= <expr><operator>(</operator><name>__i32x4</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name> <operator>&lt;</operator> <operator>(</operator><name>__f32x4</name><operator>)</operator><name>__b</name><operator>)</operator></expr></init></decl>;</decl_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__b</name><operator>)</operator> <operator>&amp;</operator> <name>__mask</name><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name><operator>)</operator> <operator>&amp;</operator> <operator>~</operator><name>__mask</name><operator>)</operator><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_abs</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_abs_f64x2</name><argument_list>(<argument><expr><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_neg</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>-</operator><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_sqrt</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_sqrt_f64x2</name><argument_list>(<argument><expr><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_ceil</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_ceil_f64x2</name><argument_list>(<argument><expr><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_floor</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_floor_f64x2</name><argument_list>(<argument><expr><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_trunc</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_trunc_f64x2</name><argument_list>(<argument><expr><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_nearest</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_nearest_f64x2</name><argument_list>(<argument><expr><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_add</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name> <operator>+</operator> <operator>(</operator><name>__f64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_sub</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name> <operator>-</operator> <operator>(</operator><name>__f64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_mul</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name> <operator>*</operator> <operator>(</operator><name>__f64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_div</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name> <operator>/</operator> <operator>(</operator><name>__f64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_min</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_min_f64x2</name><argument_list>(<argument><expr><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_max</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_max_f64x2</name><argument_list>(<argument><expr><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_pmin</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>__i64x2</name></type> <name>__mask</name> <init>= <expr><operator>(</operator><name>__i64x2</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__b</name> <operator>&lt;</operator> <operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name><operator>)</operator></expr></init></decl>;</decl_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><name>__b</name><operator>)</operator> <operator>&amp;</operator> <name>__mask</name><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><name>__a</name><operator>)</operator> <operator>&amp;</operator> <operator>~</operator><name>__mask</name><operator>)</operator><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_f64x2_pmax</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<decl_stmt><decl><type><name>__i64x2</name></type> <name>__mask</name> <init>= <expr><operator>(</operator><name>__i64x2</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name> <operator>&lt;</operator> <operator>(</operator><name>__f64x2</name><operator>)</operator><name>__b</name><operator>)</operator></expr></init></decl>;</decl_stmt>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><operator>(</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><name>__b</name><operator>)</operator> <operator>&amp;</operator> <name>__mask</name><operator>)</operator> <operator>|</operator> <operator>(</operator><operator>(</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><name>__a</name><operator>)</operator> <operator>&amp;</operator> <operator>~</operator><name>__mask</name><operator>)</operator><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i32x4_trunc_sat_f32x4</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_trunc_saturate_s_i32x4_f32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u32x4_trunc_sat_f32x4</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_trunc_saturate_u_i32x4_f32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__f32x4</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_f32x4_convert_i32x4</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__f32x4</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_f32x4_convert_u32x4</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <call><name>__builtin_convertvector</name><argument_list>(<argument><expr><operator>(</operator><name>__u32x4</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><name>__f32x4</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_f64x2_convert_low_i32x4</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <macro><name>__builtin_convertvector</name><argument_list>(<argument>(__i32x2){__a[<literal type="number">0</literal>]</argument>, <argument>__a[<literal type="number">1</literal>]}</argument>, <argument>__f64x2</argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_f64x2_convert_low_u32x4</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <macro><name>__builtin_convertvector</name><argument_list>(<argument>(__u32x2){__a[<literal type="number">0</literal>]</argument>, <argument>__a[<literal type="number">1</literal>]}</argument>, <argument>__f64x2</argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i32x4_trunc_sat_f64x2_zero</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_trunc_sat_zero_s_f64x2_i32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u32x4_trunc_sat_f64x2_zero</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_trunc_sat_zero_u_f64x2_i32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__f64x2</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_f32x4_demote_f64x2_zero</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <macro><name>__builtin_convertvector</name><argument_list>(
<argument>__builtin_shufflevector((__f64x2)__a, (__f64x2){<literal type="number">0</literal>, <literal type="number">0</literal>}, <literal type="number">0</literal>, <literal type="number">1</literal>, <literal type="number">2</literal>, <literal type="number">3</literal>)</argument>,
<argument>__f32x4</argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_f64x2_promote_low_f32x4</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <macro><name>__builtin_convertvector</name><argument_list>(
<argument>(__f32x2){((__f32x4)__a)[<literal type="number">0</literal>]</argument>, <argument>((__f32x4)__a)[<literal type="number">1</literal>]}</argument>, <argument>__f64x2</argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>wasm_i8x16_shuffle</name><parameter_list>(<parameter><type><name>__a</name></type></parameter>, <parameter><type><name>__b</name></type></parameter>, <parameter><type><name>__c0</name></type></parameter>, <parameter><type><name>__c1</name></type></parameter>, <parameter><type><name>__c2</name></type></parameter>, <parameter><type><name>__c3</name></type></parameter>, <parameter><type><name>__c4</name></type></parameter>, <parameter><type><name>__c5</name></type></parameter>, <parameter><type><name>__c6</name></type></parameter>, <parameter><type><name>__c7</name></type></parameter>, <parameter><type><name>__c8</name></type></parameter>, <parameter><type><name>__c9</name></type></parameter>, <parameter><type><name>__c10</name></type></parameter>, <parameter><type><name>__c11</name></type></parameter>, <parameter><type><name>__c12</name></type></parameter>, <parameter><type><name>__c13</name></type></parameter>, <parameter><type><name>__c14</name></type></parameter>, <parameter><type><name>__c15</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((v128_t)__builtin_wasm_shuffle_i8x16( (__i8x16)(__a), (__i8x16)(__b), __c0, __c1, __c2, __c3, __c4, __c5, __c6, __c7, __c8, __c9, __c10, __c11, __c12, __c13, __c14, __c15))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>wasm_i16x8_shuffle</name><parameter_list>(<parameter><type><name>__a</name></type></parameter>, <parameter><type><name>__b</name></type></parameter>, <parameter><type><name>__c0</name></type></parameter>, <parameter><type><name>__c1</name></type></parameter>, <parameter><type><name>__c2</name></type></parameter>, <parameter><type><name>__c3</name></type></parameter>, <parameter><type><name>__c4</name></type></parameter>, <parameter><type><name>__c5</name></type></parameter>, <parameter><type><name>__c6</name></type></parameter>, <parameter><type><name>__c7</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((v128_t)__builtin_wasm_shuffle_i8x16( (__i8x16)(__a), (__i8x16)(__b), (__c0)*2, (__c0)*2 + 1, (__c1)*2, (__c1)*2 + 1, (__c2)*2, (__c2)*2 + 1, (__c3)*2, (__c3)*2 + 1, (__c4)*2, (__c4)*2 + 1, (__c5)*2, (__c5)*2 + 1, (__c6)*2, (__c6)*2 + 1, (__c7)*2, (__c7)*2 + 1))</cpp:value></cpp:define>







<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>wasm_i32x4_shuffle</name><parameter_list>(<parameter><type><name>__a</name></type></parameter>, <parameter><type><name>__b</name></type></parameter>, <parameter><type><name>__c0</name></type></parameter>, <parameter><type><name>__c1</name></type></parameter>, <parameter><type><name>__c2</name></type></parameter>, <parameter><type><name>__c3</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((v128_t)__builtin_wasm_shuffle_i8x16( (__i8x16)(__a), (__i8x16)(__b), (__c0)*4, (__c0)*4 + 1, (__c0)*4 + 2, (__c0)*4 + 3, (__c1)*4, (__c1)*4 + 1, (__c1)*4 + 2, (__c1)*4 + 3, (__c2)*4, (__c2)*4 + 1, (__c2)*4 + 2, (__c2)*4 + 3, (__c3)*4, (__c3)*4 + 1, (__c3)*4 + 2, (__c3)*4 + 3))</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>wasm_i64x2_shuffle</name><parameter_list>(<parameter><type><name>__a</name></type></parameter>, <parameter><type><name>__b</name></type></parameter>, <parameter><type><name>__c0</name></type></parameter>, <parameter><type><name>__c1</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((v128_t)__builtin_wasm_shuffle_i8x16( (__i8x16)(__a), (__i8x16)(__b), (__c0)*8, (__c0)*8 + 1, (__c0)*8 + 2, (__c0)*8 + 3, (__c0)*8 + 4, (__c0)*8 + 5, (__c0)*8 + 6, (__c0)*8 + 7, (__c1)*8, (__c1)*8 + 1, (__c1)*8 + 2, (__c1)*8 + 3, (__c1)*8 + 4, (__c1)*8 + 5, (__c1)*8 + 6, (__c1)*8 + 7))</cpp:value></cpp:define>






<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i8x16_swizzle</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_swizzle_i8x16</name><argument_list>(<argument><expr><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i8x16_narrow_i16x8</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_narrow_s_i8x16_i16x8</name><argument_list>(<argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name></expr></argument>,
<argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u8x16_narrow_i16x8</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_narrow_u_i8x16_i16x8</name><argument_list>(<argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name></expr></argument>,
<argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i16x8_narrow_i32x4</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_narrow_s_i16x8_i32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name></expr></argument>,
<argument><expr><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u16x8_narrow_i32x4</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_narrow_u_i16x8_i32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__a</name></expr></argument>,
<argument><expr><operator>(</operator><name>__i32x4</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i16x8_extend_low_i8x16</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <macro><name>__builtin_convertvector</name><argument_list>(
<argument>(__i8x8){((__i8x16)__a)[<literal type="number">0</literal>]</argument>, <argument>((__i8x16)__a)[<literal type="number">1</literal>]</argument>, <argument>((__i8x16)__a)[<literal type="number">2</literal>]</argument>,
<argument>((__i8x16)__a)[<literal type="number">3</literal>]</argument>, <argument>((__i8x16)__a)[<literal type="number">4</literal>]</argument>, <argument>((__i8x16)__a)[<literal type="number">5</literal>]</argument>,
<argument>((__i8x16)__a)[<literal type="number">6</literal>]</argument>, <argument>((__i8x16)__a)[<literal type="number">7</literal>]}</argument>,
<argument>__i16x8</argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i16x8_extend_high_i8x16</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <macro><name>__builtin_convertvector</name><argument_list>(
<argument>(__i8x8){((__i8x16)__a)[<literal type="number">8</literal>]</argument>, <argument>((__i8x16)__a)[<literal type="number">9</literal>]</argument>, <argument>((__i8x16)__a)[<literal type="number">10</literal>]</argument>,
<argument>((__i8x16)__a)[<literal type="number">11</literal>]</argument>, <argument>((__i8x16)__a)[<literal type="number">12</literal>]</argument>, <argument>((__i8x16)__a)[<literal type="number">13</literal>]</argument>,
<argument>((__i8x16)__a)[<literal type="number">14</literal>]</argument>, <argument>((__i8x16)__a)[<literal type="number">15</literal>]}</argument>,
<argument>__i16x8</argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u16x8_extend_low_u8x16</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <macro><name>__builtin_convertvector</name><argument_list>(
<argument>(__u8x8){((__u8x16)__a)[<literal type="number">0</literal>]</argument>, <argument>((__u8x16)__a)[<literal type="number">1</literal>]</argument>, <argument>((__u8x16)__a)[<literal type="number">2</literal>]</argument>,
<argument>((__u8x16)__a)[<literal type="number">3</literal>]</argument>, <argument>((__u8x16)__a)[<literal type="number">4</literal>]</argument>, <argument>((__u8x16)__a)[<literal type="number">5</literal>]</argument>,
<argument>((__u8x16)__a)[<literal type="number">6</literal>]</argument>, <argument>((__u8x16)__a)[<literal type="number">7</literal>]}</argument>,
<argument>__u16x8</argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u16x8_extend_high_u8x16</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <macro><name>__builtin_convertvector</name><argument_list>(
<argument>(__u8x8){((__u8x16)__a)[<literal type="number">8</literal>]</argument>, <argument>((__u8x16)__a)[<literal type="number">9</literal>]</argument>, <argument>((__u8x16)__a)[<literal type="number">10</literal>]</argument>,
<argument>((__u8x16)__a)[<literal type="number">11</literal>]</argument>, <argument>((__u8x16)__a)[<literal type="number">12</literal>]</argument>, <argument>((__u8x16)__a)[<literal type="number">13</literal>]</argument>,
<argument>((__u8x16)__a)[<literal type="number">14</literal>]</argument>, <argument>((__u8x16)__a)[<literal type="number">15</literal>]}</argument>,
<argument>__u16x8</argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i32x4_extend_low_i16x8</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <macro><name>__builtin_convertvector</name><argument_list>(
<argument>(__i16x4){((__i16x8)__a)[<literal type="number">0</literal>]</argument>, <argument>((__i16x8)__a)[<literal type="number">1</literal>]</argument>, <argument>((__i16x8)__a)[<literal type="number">2</literal>]</argument>,
<argument>((__i16x8)__a)[<literal type="number">3</literal>]}</argument>,
<argument>__i32x4</argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i32x4_extend_high_i16x8</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <macro><name>__builtin_convertvector</name><argument_list>(
<argument>(__i16x4){((__i16x8)__a)[<literal type="number">4</literal>]</argument>, <argument>((__i16x8)__a)[<literal type="number">5</literal>]</argument>, <argument>((__i16x8)__a)[<literal type="number">6</literal>]</argument>,
<argument>((__i16x8)__a)[<literal type="number">7</literal>]}</argument>,
<argument>__i32x4</argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u32x4_extend_low_u16x8</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <macro><name>__builtin_convertvector</name><argument_list>(
<argument>(__u16x4){((__u16x8)__a)[<literal type="number">0</literal>]</argument>, <argument>((__u16x8)__a)[<literal type="number">1</literal>]</argument>, <argument>((__u16x8)__a)[<literal type="number">2</literal>]</argument>,
<argument>((__u16x8)__a)[<literal type="number">3</literal>]}</argument>,
<argument>__u32x4</argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u32x4_extend_high_u16x8</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <macro><name>__builtin_convertvector</name><argument_list>(
<argument>(__u16x4){((__u16x8)__a)[<literal type="number">4</literal>]</argument>, <argument>((__u16x8)__a)[<literal type="number">5</literal>]</argument>, <argument>((__u16x8)__a)[<literal type="number">6</literal>]</argument>,
<argument>((__u16x8)__a)[<literal type="number">7</literal>]}</argument>,
<argument>__u32x4</argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i64x2_extend_low_i32x4</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <macro><name>__builtin_convertvector</name><argument_list>(
<argument>(__i32x2){((__i32x4)__a)[<literal type="number">0</literal>]</argument>, <argument>((__i32x4)__a)[<literal type="number">1</literal>]}</argument>, <argument>__i64x2</argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i64x2_extend_high_i32x4</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <macro><name>__builtin_convertvector</name><argument_list>(
<argument>(__i32x2){((__i32x4)__a)[<literal type="number">2</literal>]</argument>, <argument>((__i32x4)__a)[<literal type="number">3</literal>]}</argument>, <argument>__i64x2</argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u64x2_extend_low_u32x4</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <macro><name>__builtin_convertvector</name><argument_list>(
<argument>(__u32x2){((__u32x4)__a)[<literal type="number">0</literal>]</argument>, <argument>((__u32x4)__a)[<literal type="number">1</literal>]}</argument>, <argument>__u64x2</argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u64x2_extend_high_u32x4</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator> <macro><name>__builtin_convertvector</name><argument_list>(
<argument>(__u32x2){((__u32x4)__a)[<literal type="number">2</literal>]</argument>, <argument>((__u32x4)__a)[<literal type="number">3</literal>]}</argument>, <argument>__u64x2</argument>)</argument_list></macro></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i16x8_extadd_pairwise_i8x16</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_extadd_pairwise_i8x16_s_i16x8</name><argument_list>(<argument><expr><operator>(</operator><name>__i8x16</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u16x8_extadd_pairwise_u8x16</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_extadd_pairwise_i8x16_u_i16x8</name><argument_list>(<argument><expr><operator>(</operator><name>__u8x16</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i32x4_extadd_pairwise_i16x8</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_extadd_pairwise_i16x8_s_i32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u32x4_extadd_pairwise_u16x8</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_extadd_pairwise_i16x8_u_i32x4</name><argument_list>(<argument><expr><operator>(</operator><name>__u16x8</name><operator>)</operator><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i16x8_extmul_low_i8x16</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i16x8</name><operator>)</operator><call><name>wasm_i16x8_extend_low_i8x16</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call> <operator>*</operator>
<operator>(</operator><name>__i16x8</name><operator>)</operator><call><name>wasm_i16x8_extend_low_i8x16</name><argument_list>(<argument><expr><name>__b</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i16x8_extmul_high_i8x16</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i16x8</name><operator>)</operator><call><name>wasm_i16x8_extend_high_i8x16</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call> <operator>*</operator>
<operator>(</operator><name>__i16x8</name><operator>)</operator><call><name>wasm_i16x8_extend_high_i8x16</name><argument_list>(<argument><expr><name>__b</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u16x8_extmul_low_u8x16</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u16x8</name><operator>)</operator><call><name>wasm_u16x8_extend_low_u8x16</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call> <operator>*</operator>
<operator>(</operator><name>__u16x8</name><operator>)</operator><call><name>wasm_u16x8_extend_low_u8x16</name><argument_list>(<argument><expr><name>__b</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u16x8_extmul_high_u8x16</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u16x8</name><operator>)</operator><call><name>wasm_u16x8_extend_high_u8x16</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call> <operator>*</operator>
<operator>(</operator><name>__u16x8</name><operator>)</operator><call><name>wasm_u16x8_extend_high_u8x16</name><argument_list>(<argument><expr><name>__b</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i32x4_extmul_low_i16x8</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><call><name>wasm_i32x4_extend_low_i16x8</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call> <operator>*</operator>
<operator>(</operator><name>__i32x4</name><operator>)</operator><call><name>wasm_i32x4_extend_low_i16x8</name><argument_list>(<argument><expr><name>__b</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i32x4_extmul_high_i16x8</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i32x4</name><operator>)</operator><call><name>wasm_i32x4_extend_high_i16x8</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call> <operator>*</operator>
<operator>(</operator><name>__i32x4</name><operator>)</operator><call><name>wasm_i32x4_extend_high_i16x8</name><argument_list>(<argument><expr><name>__b</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u32x4_extmul_low_u16x8</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u32x4</name><operator>)</operator><call><name>wasm_u32x4_extend_low_u16x8</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call> <operator>*</operator>
<operator>(</operator><name>__u32x4</name><operator>)</operator><call><name>wasm_u32x4_extend_low_u16x8</name><argument_list>(<argument><expr><name>__b</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u32x4_extmul_high_u16x8</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u32x4</name><operator>)</operator><call><name>wasm_u32x4_extend_high_u16x8</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call> <operator>*</operator>
<operator>(</operator><name>__u32x4</name><operator>)</operator><call><name>wasm_u32x4_extend_high_u16x8</name><argument_list>(<argument><expr><name>__b</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i64x2_extmul_low_i32x4</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><call><name>wasm_i64x2_extend_low_i32x4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call> <operator>*</operator>
<operator>(</operator><name>__i64x2</name><operator>)</operator><call><name>wasm_i64x2_extend_low_i32x4</name><argument_list>(<argument><expr><name>__b</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_i64x2_extmul_high_i32x4</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__i64x2</name><operator>)</operator><call><name>wasm_i64x2_extend_high_i32x4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call> <operator>*</operator>
<operator>(</operator><name>__i64x2</name><operator>)</operator><call><name>wasm_i64x2_extend_high_i32x4</name><argument_list>(<argument><expr><name>__b</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u64x2_extmul_low_u32x4</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u64x2</name><operator>)</operator><call><name>wasm_u64x2_extend_low_u32x4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call> <operator>*</operator>
<operator>(</operator><name>__u64x2</name><operator>)</operator><call><name>wasm_u64x2_extend_low_u32x4</name><argument_list>(<argument><expr><name>__b</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>wasm_u64x2_extmul_high_u32x4</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>__u64x2</name><operator>)</operator><call><name>wasm_u64x2_extend_high_u32x4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call> <operator>*</operator>
<operator>(</operator><name>__u64x2</name><operator>)</operator><call><name>wasm_u64x2_extend_high_u32x4</name><argument_list>(<argument><expr><name>__b</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name> <name>__DEFAULT_FN_ATTRS</name></type> <name>wasm_i16x8_q15mulr_sat</name><parameter_list>(<parameter><decl><type><name>v128_t</name></type> <name>__a</name></decl></parameter>,
<parameter><decl><type><name>v128_t</name></type> <name>__b</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><operator>(</operator><name>v128_t</name><operator>)</operator><call><name>__builtin_wasm_q15mulr_sat_s_i16x8</name><argument_list>(<argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__i16x8</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEPRECATED_FN_ATTRS</name><parameter_list>(<parameter><type><name>__replacement</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__DEFAULT_FN_ATTRS __attribute__( (deprecated("use " __replacement " instead", __replacement)))</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__WASM_STR</name><parameter_list>(<parameter><type><name>X</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>#X</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__DEPRECATED</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEPRECATED_WASM_MACRO</name><parameter_list>(<parameter><type><name>__name</name></type></parameter>, <parameter><type><name>__replacement</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_Pragma(__WASM_STR(GCC warning( "'" __name "' is deprecated: use '" __replacement "' instead")))</cpp:value></cpp:define>


<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEPRECATED_WASM_MACRO</name><parameter_list>(<parameter><type><name>__name</name></type></parameter>, <parameter><type><name>__replacement</name></type></parameter>)</parameter_list></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_v128_load8_splat"</literal></expr></argument>)</argument_list>
<name>wasm_v8x16_load_splat</name><argument_list>(<argument><expr><specifier>const</specifier> <name>void</name> <operator>*</operator><name>__mem</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_v128_load8_splat</name><argument_list>(<argument><expr><name>__mem</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_v128_load16_splat"</literal></expr></argument>)</argument_list>
<name>wasm_v16x8_load_splat</name><argument_list>(<argument><expr><specifier>const</specifier> <name>void</name> <operator>*</operator><name>__mem</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_v128_load16_splat</name><argument_list>(<argument><expr><name>__mem</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_v128_load32_splat"</literal></expr></argument>)</argument_list>
<name>wasm_v32x4_load_splat</name><argument_list>(<argument><expr><specifier>const</specifier> <name>void</name> <operator>*</operator><name>__mem</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_v128_load32_splat</name><argument_list>(<argument><expr><name>__mem</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_v128_load64_splat"</literal></expr></argument>)</argument_list>
<name>wasm_v64x2_load_splat</name><argument_list>(<argument><expr><specifier>const</specifier> <name>void</name> <operator>*</operator><name>__mem</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_v128_load64_splat</name><argument_list>(<argument><expr><name>__mem</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_i16x8_load8x8"</literal></expr></argument>)</argument_list>
<name>wasm_i16x8_load_8x8</name><argument_list>(<argument><expr><specifier>const</specifier> <name>void</name> <operator>*</operator><name>__mem</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_i16x8_load8x8</name><argument_list>(<argument><expr><name>__mem</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_u16x8_load8x8"</literal></expr></argument>)</argument_list>
<name>wasm_u16x8_load_8x8</name><argument_list>(<argument><expr><specifier>const</specifier> <name>void</name> <operator>*</operator><name>__mem</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_u16x8_load8x8</name><argument_list>(<argument><expr><name>__mem</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_i32x4_load16x4"</literal></expr></argument>)</argument_list>
<name>wasm_i32x4_load_16x4</name><argument_list>(<argument><expr><specifier>const</specifier> <name>void</name> <operator>*</operator><name>__mem</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_i32x4_load16x4</name><argument_list>(<argument><expr><name>__mem</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_u32x4_load16x4"</literal></expr></argument>)</argument_list>
<name>wasm_u32x4_load_16x4</name><argument_list>(<argument><expr><specifier>const</specifier> <name>void</name> <operator>*</operator><name>__mem</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_u32x4_load16x4</name><argument_list>(<argument><expr><name>__mem</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_i64x2_load32x2"</literal></expr></argument>)</argument_list>
<name>wasm_i64x2_load_32x2</name><argument_list>(<argument><expr><specifier>const</specifier> <name>void</name> <operator>*</operator><name>__mem</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_i64x2_load32x2</name><argument_list>(<argument><expr><name>__mem</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_u64x2_load32x2"</literal></expr></argument>)</argument_list>
<name>wasm_u64x2_load_32x2</name><argument_list>(<argument><expr><specifier>const</specifier> <name>void</name> <operator>*</operator><name>__mem</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_u64x2_load32x2</name><argument_list>(<argument><expr><name>__mem</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>wasm_v8x16_shuffle</name><parameter_list>(<parameter><type><name>__a</name></type></parameter>, <parameter><type><name>__b</name></type></parameter>, <parameter><type><name>__c0</name></type></parameter>, <parameter><type><name>__c1</name></type></parameter>, <parameter><type><name>__c2</name></type></parameter>, <parameter><type><name>__c3</name></type></parameter>, <parameter><type><name>__c4</name></type></parameter>, <parameter><type><name>__c5</name></type></parameter>, <parameter><type><name>__c6</name></type></parameter>, <parameter><type><name>__c7</name></type></parameter>, <parameter><type><name>__c8</name></type></parameter>, <parameter><type><name>__c9</name></type></parameter>, <parameter><type><name>__c10</name></type></parameter>, <parameter><type><name>__c11</name></type></parameter>, <parameter><type><name>__c12</name></type></parameter>, <parameter><type><name>__c13</name></type></parameter>, <parameter><type><name>__c14</name></type></parameter>, <parameter><type><name>__c15</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__DEPRECATED_WASM_MACRO("wasm_v8x16_shuffle", "wasm_i8x16_shuffle") wasm_i8x16_shuffle(__a, __b, __c0, __c1, __c2, __c3, __c4, __c5, __c6, __c7, __c8, __c9, __c10, __c11, __c12, __c13, __c14, __c15)</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>wasm_v16x8_shuffle</name><parameter_list>(<parameter><type><name>__a</name></type></parameter>, <parameter><type><name>__b</name></type></parameter>, <parameter><type><name>__c0</name></type></parameter>, <parameter><type><name>__c1</name></type></parameter>, <parameter><type><name>__c2</name></type></parameter>, <parameter><type><name>__c3</name></type></parameter>, <parameter><type><name>__c4</name></type></parameter>, <parameter><type><name>__c5</name></type></parameter>, <parameter><type><name>__c6</name></type></parameter>, <parameter><type><name>__c7</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__DEPRECATED_WASM_MACRO("wasm_v16x8_shuffle", "wasm_i16x8_shuffle") wasm_i16x8_shuffle(__a, __b, __c0, __c1, __c2, __c3, __c4, __c5, __c6, __c7)</cpp:value></cpp:define>




<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>wasm_v32x4_shuffle</name><parameter_list>(<parameter><type><name>__a</name></type></parameter>, <parameter><type><name>__b</name></type></parameter>, <parameter><type><name>__c0</name></type></parameter>, <parameter><type><name>__c1</name></type></parameter>, <parameter><type><name>__c2</name></type></parameter>, <parameter><type><name>__c3</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__DEPRECATED_WASM_MACRO("wasm_v32x4_shuffle", "wasm_i32x4_shuffle") wasm_i32x4_shuffle(__a, __b, __c0, __c1, __c2, __c3)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>wasm_v64x2_shuffle</name><parameter_list>(<parameter><type><name>__a</name></type></parameter>, <parameter><type><name>__b</name></type></parameter>, <parameter><type><name>__c0</name></type></parameter>, <parameter><type><name>__c1</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>__DEPRECATED_WASM_MACRO("wasm_v64x2_shuffle", "wasm_i64x2_shuffle") wasm_i64x2_shuffle(__a, __b, __c0, __c1)</cpp:value></cpp:define>



<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_i8x16_swizzle"</literal></expr></argument>)</argument_list>
<name>wasm_v8x16_swizzle</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>, <argument><expr><name>v128_t</name> <name>__b</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_i8x16_swizzle</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>bool</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_v128_any_true"</literal></expr></argument>)</argument_list>
<name>wasm_i8x16_any_true</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_v128_any_true</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>bool</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_v128_any_true"</literal></expr></argument>)</argument_list>
<name>wasm_i16x8_any_true</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_v128_any_true</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>bool</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_v128_any_true"</literal></expr></argument>)</argument_list>
<name>wasm_i32x4_any_true</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_v128_any_true</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_i8x16_add_sat"</literal></expr></argument>)</argument_list>
<name>wasm_i8x16_add_saturate</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>, <argument><expr><name>v128_t</name> <name>__b</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_i8x16_add_sat</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_u8x16_add_sat"</literal></expr></argument>)</argument_list>
<name>wasm_u8x16_add_saturate</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>, <argument><expr><name>v128_t</name> <name>__b</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_u8x16_add_sat</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_i8x16_sub_sat"</literal></expr></argument>)</argument_list>
<name>wasm_i8x16_sub_saturate</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>, <argument><expr><name>v128_t</name> <name>__b</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_i8x16_sub_sat</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_u8x16_sub_sat"</literal></expr></argument>)</argument_list>
<name>wasm_u8x16_sub_saturate</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>, <argument><expr><name>v128_t</name> <name>__b</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_u8x16_sub_sat</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_i16x8_add_sat"</literal></expr></argument>)</argument_list>
<name>wasm_i16x8_add_saturate</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>, <argument><expr><name>v128_t</name> <name>__b</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_i16x8_add_sat</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_u16x8_add_sat"</literal></expr></argument>)</argument_list>
<name>wasm_u16x8_add_saturate</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>, <argument><expr><name>v128_t</name> <name>__b</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_u16x8_add_sat</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_i16x8_sub_sat"</literal></expr></argument>)</argument_list>
<name>wasm_i16x8_sub_saturate</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>, <argument><expr><name>v128_t</name> <name>__b</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_i16x8_sub_sat</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_u16x8_sub_sat"</literal></expr></argument>)</argument_list>
<name>wasm_u16x8_sub_saturate</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>, <argument><expr><name>v128_t</name> <name>__b</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_u16x8_sub_sat</name><argument_list>(<argument><expr><name>__a</name></expr></argument>, <argument><expr><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_i16x8_extend_low_i8x16"</literal></expr></argument>)</argument_list>
<name>wasm_i16x8_widen_low_i8x16</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_i16x8_extend_low_i8x16</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_i16x8_extend_high_i8x16"</literal></expr></argument>)</argument_list>
<name>wasm_i16x8_widen_high_i8x16</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_i16x8_extend_high_i8x16</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_u16x8_extend_low_u8x16"</literal></expr></argument>)</argument_list>
<name>wasm_i16x8_widen_low_u8x16</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_u16x8_extend_low_u8x16</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_u16x8_extend_high_u8x16"</literal></expr></argument>)</argument_list>
<name>wasm_i16x8_widen_high_u8x16</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_u16x8_extend_high_u8x16</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_i32x4_extend_low_i16x8"</literal></expr></argument>)</argument_list>
<name>wasm_i32x4_widen_low_i16x8</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_i32x4_extend_low_i16x8</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_i32x4_extend_high_i16x8"</literal></expr></argument>)</argument_list>
<name>wasm_i32x4_widen_high_i16x8</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_i32x4_extend_high_i16x8</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_u32x4_extend_low_u16x8"</literal></expr></argument>)</argument_list>
<name>wasm_i32x4_widen_low_u16x8</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_u32x4_extend_low_u16x8</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_u32x4_extend_high_u16x8"</literal></expr></argument>)</argument_list>
<name>wasm_i32x4_widen_high_u16x8</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_u32x4_extend_high_u16x8</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_i32x4_trunc_sat_f32x4"</literal></expr></argument>)</argument_list>
<name>wasm_i32x4_trunc_saturate_f32x4</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_i32x4_trunc_sat_f32x4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name>__inline__</name> <name>v128_t</name></type> <name>__DEPRECATED_FN_ATTRS</name><argument_list>(<argument><expr><literal type="string">"wasm_u32x4_trunc_sat_f32x4"</literal></expr></argument>)</argument_list>
<name>wasm_u32x4_trunc_saturate_f32x4</name><argument_list>(<argument><expr><name>v128_t</name> <name>__a</name></expr></argument>)</argument_list> <block>{<block_content>
<return>return <expr><call><name>wasm_u32x4_trunc_sat_f32x4</name><argument_list>(<argument><expr><name>__a</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></decl></decl_stmt>


<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__DEFAULT_FN_ATTRS</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__DEPRECATED_FN_ATTRS</name></cpp:undef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
