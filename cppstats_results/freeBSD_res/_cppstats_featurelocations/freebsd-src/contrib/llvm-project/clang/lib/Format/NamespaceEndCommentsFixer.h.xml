<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/lib/Format/NamespaceEndCommentsFixer.h">













<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LLVM_CLANG_LIB_FORMAT_NAMESPACEENDCOMMENTSFIXER_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLVM_CLANG_LIB_FORMAT_NAMESPACEENDCOMMENTSFIXER_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"TokenAnalyzer.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>clang</name> <block>{<block_content>
<decl_stmt><decl><type><name>namespace</name></type> <name>format</name> <block>{<block_content>







<function_decl><type><specifier>const</specifier> <name>FormatToken</name> <modifier>*</modifier></type>
<name>getNamespaceToken</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>AnnotatedLine</name> <modifier>*</modifier></type><name>Line</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>SmallVectorImpl</name><argument_list type="generic">&lt;<argument><expr><name>AnnotatedLine</name> <modifier>*</modifier></expr></argument>&gt;</argument_list></name> <modifier>&amp;</modifier></type><name>AnnotatedLines</name></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>class</name></type> <name>NamespaceEndCommentsFixer</name> <range>: <expr><name>public</name> <name>TokenAnalyzer</name> <block>{
<expr><name>public</name><operator>:</operator>
<call><name>NamespaceEndCommentsFixer</name><argument_list>(<argument><expr><specifier>const</specifier> <name>Environment</name> <operator>&amp;</operator><name>Env</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>FormatStyle</name> <operator>&amp;</operator><name>Style</name></expr></argument>)</argument_list></call></expr>;

<expr><name>std</name><operator>::</operator><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>tooling</name><operator>::</operator><name>Replacements</name></expr></argument>, <argument><expr><name>unsigned</name></expr></argument>&gt;</argument_list></name>
<macro><name>analyze</name><argument_list>(<argument>TokenAnnotator &amp;Annotator</argument>,
<argument>SmallVectorImpl&lt;AnnotatedLine *&gt; &amp;AnnotatedLines</argument>,
<argument>FormatTokenLexer &amp;Tokens</argument>)</argument_list></macro> <name>override</name></expr>;
}</block></expr></range></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>
</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
