<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/lib/Headers/pmmintrin.h">








<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__PMMINTRIN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__PMMINTRIN_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;emmintrin.h&gt;</cpp:file></cpp:include>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEFAULT_FN_ATTRS</name></cpp:macro> <cpp:value>__attribute__((__always_inline__, __nodebug__, __target__("sse3"), __min_vector_width__(128)))</cpp:value></cpp:define>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128i</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_lddqu_si128</name><parameter_list>(<parameter><decl><type><name>__m128i</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128i</name><operator>)</operator><call><name>__builtin_ia32_lddqu</name><argument_list>(<argument><expr><operator>(</operator><name>char</name> <specifier>const</specifier> <operator>*</operator><operator>)</operator><name>__p</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_addsub_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_addsubps</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_hadd_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_haddps</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_hsub_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_hsubps</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_movehdup_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_moveldup_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_addsub_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_addsubpd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_hadd_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_haddpd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>


















<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_hsub_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__b</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_ia32_hsubpd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__b</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_mm_loaddup_pd</name><parameter_list>(<parameter><type><name>dp</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_mm_load1_pd(dp)</cpp:value></cpp:define>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_movedup_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__a</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><call><name>__builtin_shufflevector</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__a</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
















<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_monitor</name><parameter_list>(<parameter><decl><type><name>void</name> <specifier>const</specifier> <modifier>*</modifier></type><name>__p</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>__extensions</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>__hints</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_monitor</name><argument_list>(<argument><expr><name>__p</name></expr></argument>, <argument><expr><name>__extensions</name></expr></argument>, <argument><expr><name>__hints</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>














<function><type><specifier>static</specifier> <name>__inline__</name> <name>void</name> <name>__DEFAULT_FN_ATTRS</name></type>
<name>_mm_mwait</name><parameter_list>(<parameter><decl><type><name>unsigned</name></type> <name>__extensions</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>__hints</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><call><name>__builtin_ia32_mwait</name><argument_list>(<argument><expr><name>__extensions</name></expr></argument>, <argument><expr><name>__hints</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__DEFAULT_FN_ATTRS</name></cpp:undef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
