<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/lib/Headers/fmaintrin.h">








<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__IMMINTRIN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:error>#<cpp:directive>error</cpp:directive> <cpp:literal>"Never use &lt;fmaintrin.h&gt; directly; include &lt;immintrin.h&gt; instead."</cpp:literal></cpp:error>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__FMAINTRIN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__FMAINTRIN_H</name></cpp:macro></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEFAULT_FN_ATTRS128</name></cpp:macro> <cpp:value>__attribute__((__always_inline__, __nodebug__, __target__("fma"), __min_vector_width__(128)))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__DEFAULT_FN_ATTRS256</name></cpp:macro> <cpp:value>__attribute__((__always_inline__, __nodebug__, __target__("fma"), __min_vector_width__(256)))</cpp:value></cpp:define>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fmadd_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_vfmaddps</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fmadd_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_vfmaddpd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fmadd_ss</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_vfmaddss3</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fmadd_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_vfmaddsd3</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fmsub_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_vfmaddps</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fmsub_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_vfmaddpd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fmsub_ss</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_vfmaddss3</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fmsub_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_vfmaddsd3</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fnmadd_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_vfmaddps</name><argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fnmadd_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_vfmaddpd</name><argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fnmadd_ss</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_vfmaddss3</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fnmadd_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_vfmaddsd3</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fnmsub_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_vfmaddps</name><argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fnmsub_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_vfmaddpd</name><argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fnmsub_ss</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_vfmaddss3</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fnmsub_sd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_vfmaddsd3</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fmaddsub_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_vfmaddsubps</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fmaddsub_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_vfmaddsubpd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fmsubadd_ps</name><parameter_list>(<parameter><decl><type><name>__m128</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128</name><operator>)</operator><call><name>__builtin_ia32_vfmaddsubps</name><argument_list>(<argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v4sf</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m128d</name> <name>__DEFAULT_FN_ATTRS128</name></type>
<name>_mm_fmsubadd_pd</name><parameter_list>(<parameter><decl><type><name>__m128d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m128d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m128d</name><operator>)</operator><call><name>__builtin_ia32_vfmaddsubpd</name><argument_list>(<argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v2df</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v2df</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_fmadd_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_vfmaddps256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_fmadd_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_vfmaddpd256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_fmsub_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_vfmaddps256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_fmsub_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_vfmaddpd256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_fnmadd_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_vfmaddps256</name><argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_fnmadd_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_vfmaddpd256</name><argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_fnmsub_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_vfmaddps256</name><argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_fnmsub_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_vfmaddpd256</name><argument_list>(<argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_fmaddsub_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_vfmaddsubps256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_fmaddsub_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_vfmaddsubpd256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_fmsubadd_ps</name><parameter_list>(<parameter><decl><type><name>__m256</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256</name><operator>)</operator><call><name>__builtin_ia32_vfmaddsubps256</name><argument_list>(<argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v8sf</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>__inline__</name> <name>__m256d</name> <name>__DEFAULT_FN_ATTRS256</name></type>
<name>_mm256_fmsubadd_pd</name><parameter_list>(<parameter><decl><type><name>__m256d</name></type> <name>__A</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__B</name></decl></parameter>, <parameter><decl><type><name>__m256d</name></type> <name>__C</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><name>__m256d</name><operator>)</operator><call><name>__builtin_ia32_vfmaddsubpd256</name><argument_list>(<argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__A</name></expr></argument>, <argument><expr><operator>(</operator><name>__v4df</name><operator>)</operator><name>__B</name></expr></argument>, <argument><expr><operator>-</operator><operator>(</operator><name>__v4df</name><operator>)</operator><name>__C</name></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__DEFAULT_FN_ATTRS128</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>__DEFAULT_FN_ATTRS256</name></cpp:undef>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
