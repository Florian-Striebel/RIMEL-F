<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/include/clang/AST/OperationKinds.h">












<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LLVM_CLANG_AST_OPERATIONKINDS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLVM_CLANG_AST_OPERATIONKINDS_H</name></cpp:macro></cpp:define>

<decl_stmt><decl><type><name>namespace</name></type> <name>clang</name> <block>{<block_content>


<enum>enum <name>CastKind</name> <block>{
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CAST_OPERATION</name><parameter_list>(<parameter><type><name>Name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>CK_##Name,</cpp:value></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"clang/AST/OperationKinds.def"</cpp:file></cpp:include>
}</block>;</enum>

<enum>enum <name>BinaryOperatorKind</name> <block>{
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>BINARY_OPERATION</name><parameter_list>(<parameter><type><name>Name</name></type></parameter>, <parameter><type><name>Spelling</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>BO_##Name,</cpp:value></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"clang/AST/OperationKinds.def"</cpp:file></cpp:include>
}</block>;</enum>

<enum>enum <name>UnaryOperatorKind</name> <block>{
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>UNARY_OPERATION</name><parameter_list>(<parameter><type><name>Name</name></type></parameter>, <parameter><type><name>Spelling</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>UO_##Name,</cpp:value></cpp:define>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"clang/AST/OperationKinds.def"</cpp:file></cpp:include>
}</block>;</enum>


<enum>enum <name>ObjCBridgeCastKind</name> <block>{


<decl><name>OBC_Bridge</name></decl>,


<decl><name>OBC_BridgeTransfer</name></decl>,


<decl><name>OBC_BridgeRetained</name></decl>
}</block>;</enum>

</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
