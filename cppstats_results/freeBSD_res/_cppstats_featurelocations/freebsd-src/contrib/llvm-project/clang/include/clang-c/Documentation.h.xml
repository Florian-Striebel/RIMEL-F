<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/include/clang-c/Documentation.h">













<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LLVM_CLANG_C_DOCUMENTATION_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLVM_CLANG_C_DOCUMENTATION_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"clang-c/ExternC.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"clang-c/Index.h"</cpp:file></cpp:include>

<macro><name>LLVM_CLANG_C_EXTERN_C_BEGIN</name></macro>














<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>ASTNode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>CXTranslationUnit</name></type> <name>TranslationUnit</name></decl>;</decl_stmt>
}</block></struct></type> <name>CXComment</name>;</typedef>






<function_decl><type><name>CINDEX_LINKAGE</name> <name>CXComment</name></type> <name>clang_Cursor_getParsedComment</name><parameter_list>(<parameter><decl><type><name>CXCursor</name></type> <name>C</name></decl></parameter>)</parameter_list>;</function_decl>






<enum>enum <name>CXCommentKind</name> <block>{




<decl><name>CXComment_Null</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,




<decl><name>CXComment_Text</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,






<decl><name>CXComment_InlineCommand</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,










<decl><name>CXComment_HTMLStartTag</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,









<decl><name>CXComment_HTMLEndTag</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,





<decl><name>CXComment_Paragraph</name> <init>= <expr><literal type="number">5</literal></expr></init></decl>,













<decl><name>CXComment_BlockCommand</name> <init>= <expr><literal type="number">6</literal></expr></init></decl>,







<decl><name>CXComment_ParamCommand</name> <init>= <expr><literal type="number">7</literal></expr></init></decl>,







<decl><name>CXComment_TParamCommand</name> <init>= <expr><literal type="number">8</literal></expr></init></decl>,











<decl><name>CXComment_VerbatimBlockCommand</name> <init>= <expr><literal type="number">9</literal></expr></init></decl>,





<decl><name>CXComment_VerbatimBlockLine</name> <init>= <expr><literal type="number">10</literal></expr></init></decl>,






<decl><name>CXComment_VerbatimLine</name> <init>= <expr><literal type="number">11</literal></expr></init></decl>,




<decl><name>CXComment_FullComment</name> <init>= <expr><literal type="number">12</literal></expr></init></decl>
}</block>;</enum>





<enum>enum <name>CXCommentInlineCommandRenderKind</name> <block>{



<decl><name>CXCommentInlineCommandRenderKind_Normal</name></decl>,




<decl><name>CXCommentInlineCommandRenderKind_Bold</name></decl>,




<decl><name>CXCommentInlineCommandRenderKind_Monospaced</name></decl>,





<decl><name>CXCommentInlineCommandRenderKind_Emphasized</name></decl>,




<decl><name>CXCommentInlineCommandRenderKind_Anchor</name></decl>
}</block>;</enum>




<enum>enum <name>CXCommentParamPassDirection</name> <block>{



<decl><name>CXCommentParamPassDirection_In</name></decl>,




<decl><name>CXCommentParamPassDirection_Out</name></decl>,




<decl><name>CXCommentParamPassDirection_InOut</name></decl>
}</block>;</enum>






<function_decl><type><name>CINDEX_LINKAGE</name> <name><name>enum</name> <name>CXCommentKind</name></name></type> <name>clang_Comment_getKind</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>CINDEX_LINKAGE</name> <name>unsigned</name></type> <name>clang_Comment_getNumChildren</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>CINDEX_LINKAGE</name>
<name>CXComment</name></type> <name>clang_Comment_getChild</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>ChildIdx</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>CINDEX_LINKAGE</name> <name>unsigned</name></type> <name>clang_Comment_isWhitespace</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>CINDEX_LINKAGE</name>
<name>unsigned</name></type> <name>clang_InlineContentComment_hasTrailingNewline</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>CINDEX_LINKAGE</name> <name>CXString</name></type> <name>clang_TextComment_getText</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>CINDEX_LINKAGE</name>
<name>CXString</name></type> <name>clang_InlineCommandComment_getCommandName</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>CINDEX_LINKAGE</name> <name><name>enum</name> <name>CXCommentInlineCommandRenderKind</name></name></type>
<name>clang_InlineCommandComment_getRenderKind</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>CINDEX_LINKAGE</name>
<name>unsigned</name></type> <name>clang_InlineCommandComment_getNumArgs</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>CINDEX_LINKAGE</name>
<name>CXString</name></type> <name>clang_InlineCommandComment_getArgText</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>ArgIdx</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>CINDEX_LINKAGE</name> <name>CXString</name></type> <name>clang_HTMLTagComment_getTagName</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>CINDEX_LINKAGE</name>
<name>unsigned</name></type> <name>clang_HTMLStartTagComment_isSelfClosing</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>CINDEX_LINKAGE</name> <name>unsigned</name></type> <name>clang_HTMLStartTag_getNumAttrs</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>CINDEX_LINKAGE</name>
<name>CXString</name></type> <name>clang_HTMLStartTag_getAttrName</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>AttrIdx</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>CINDEX_LINKAGE</name>
<name>CXString</name></type> <name>clang_HTMLStartTag_getAttrValue</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>AttrIdx</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>CINDEX_LINKAGE</name>
<name>CXString</name></type> <name>clang_BlockCommandComment_getCommandName</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>CINDEX_LINKAGE</name>
<name>unsigned</name></type> <name>clang_BlockCommandComment_getNumArgs</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>CINDEX_LINKAGE</name>
<name>CXString</name></type> <name>clang_BlockCommandComment_getArgText</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>ArgIdx</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>CINDEX_LINKAGE</name>
<name>CXComment</name></type> <name>clang_BlockCommandComment_getParagraph</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>CINDEX_LINKAGE</name>
<name>CXString</name></type> <name>clang_ParamCommandComment_getParamName</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>CINDEX_LINKAGE</name>
<name>unsigned</name></type> <name>clang_ParamCommandComment_isParamIndexValid</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>CINDEX_LINKAGE</name>
<name>unsigned</name></type> <name>clang_ParamCommandComment_getParamIndex</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>CINDEX_LINKAGE</name>
<name>unsigned</name></type> <name>clang_ParamCommandComment_isDirectionExplicit</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>CINDEX_LINKAGE</name>
<name><name>enum</name> <name>CXCommentParamPassDirection</name></name></type> <name>clang_ParamCommandComment_getDirection</name><parameter_list>(
<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>CINDEX_LINKAGE</name>
<name>CXString</name></type> <name>clang_TParamCommandComment_getParamName</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>CINDEX_LINKAGE</name>
<name>unsigned</name></type> <name>clang_TParamCommandComment_isParamPositionValid</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>














<function_decl><type><name>CINDEX_LINKAGE</name>
<name>unsigned</name></type> <name>clang_TParamCommandComment_getDepth</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>



















<function_decl><type><name>CINDEX_LINKAGE</name>
<name>unsigned</name></type> <name>clang_TParamCommandComment_getIndex</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>Depth</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>CINDEX_LINKAGE</name>
<name>CXString</name></type> <name>clang_VerbatimBlockLineComment_getText</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>CINDEX_LINKAGE</name> <name>CXString</name></type> <name>clang_VerbatimLineComment_getText</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>CINDEX_LINKAGE</name> <name>CXString</name></type> <name>clang_HTMLTagComment_getAsString</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>
































<function_decl><type><name>CINDEX_LINKAGE</name> <name>CXString</name></type> <name>clang_FullComment_getAsHTML</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>CINDEX_LINKAGE</name> <name>CXString</name></type> <name>clang_FullComment_getAsXML</name><parameter_list>(<parameter><decl><type><name>CXComment</name></type> <name>Comment</name></decl></parameter>)</parameter_list>;</function_decl>





<expr><name>LLVM_CLANG_C_EXTERN_C_END</name></expr>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
