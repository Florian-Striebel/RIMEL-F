<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/include/clang/Driver/Distro.h">







<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LLVM_CLANG_DRIVER_DISTRO_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLVM_CLANG_DRIVER_DISTRO_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"llvm/ADT/Triple.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"llvm/Support/VirtualFileSystem.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>clang</name> <block>{<block_content>
<decl_stmt><decl><type><name>namespace</name></type> <name>driver</name> <block>{<block_content>






<decl_stmt><decl><type><name>class</name></type> <name>Distro</name> <block>{<block_content>
<label><name>public</name>:</label>
<enum>enum <name>DistroType</name> <block>{

<decl><name>UninitializedDistro</name></decl>,



<decl><name>AlpineLinux</name></decl>,
<decl><name>ArchLinux</name></decl>,
<decl><name>DebianLenny</name></decl>,
<decl><name>DebianSqueeze</name></decl>,
<decl><name>DebianWheezy</name></decl>,
<decl><name>DebianJessie</name></decl>,
<decl><name>DebianStretch</name></decl>,
<decl><name>DebianBuster</name></decl>,
<decl><name>DebianBullseye</name></decl>,
<decl><name>Exherbo</name></decl>,
<decl><name>RHEL5</name></decl>,
<decl><name>RHEL6</name></decl>,
<decl><name>RHEL7</name></decl>,
<decl><name>Fedora</name></decl>,
<decl><name>Gentoo</name></decl>,
<decl><name>OpenSUSE</name></decl>,
<decl><name>UbuntuHardy</name></decl>,
<decl><name>UbuntuIntrepid</name></decl>,
<decl><name>UbuntuJaunty</name></decl>,
<decl><name>UbuntuKarmic</name></decl>,
<decl><name>UbuntuLucid</name></decl>,
<decl><name>UbuntuMaverick</name></decl>,
<decl><name>UbuntuNatty</name></decl>,
<decl><name>UbuntuOneiric</name></decl>,
<decl><name>UbuntuPrecise</name></decl>,
<decl><name>UbuntuQuantal</name></decl>,
<decl><name>UbuntuRaring</name></decl>,
<decl><name>UbuntuSaucy</name></decl>,
<decl><name>UbuntuTrusty</name></decl>,
<decl><name>UbuntuUtopic</name></decl>,
<decl><name>UbuntuVivid</name></decl>,
<decl><name>UbuntuWily</name></decl>,
<decl><name>UbuntuXenial</name></decl>,
<decl><name>UbuntuYakkety</name></decl>,
<decl><name>UbuntuZesty</name></decl>,
<decl><name>UbuntuArtful</name></decl>,
<decl><name>UbuntuBionic</name></decl>,
<decl><name>UbuntuCosmic</name></decl>,
<decl><name>UbuntuDisco</name></decl>,
<decl><name>UbuntuEoan</name></decl>,
<decl><name>UbuntuFocal</name></decl>,
<decl><name>UbuntuGroovy</name></decl>,
<decl><name>UbuntuHirsute</name></decl>,
<decl><name>UbuntuImpish</name></decl>,
<decl><name>UnknownDistro</name></decl>
}</block>;</enum>

<label><name>private</name>:</label>

<decl_stmt><decl><type><name>DistroType</name></type> <name>DistroVal</name></decl>;</decl_stmt>

<label><name>public</name>:</label>




<expr_stmt><expr><call><name>Distro</name><argument_list>()</argument_list></call> <operator>:</operator> <macro><name>DistroVal</name><argument_list>()</argument_list></macro> <block>{}</block>


<macro><name>Distro</name><argument_list>(<argument>DistroType D</argument>)</argument_list></macro> <operator>:</operator> <macro><name>DistroVal</name><argument_list>(<argument>D</argument>)</argument_list></macro> <block>{}</block>


<name>explicit</name> <call><name>Distro</name><argument_list>(<argument><expr><name>llvm</name><operator>::</operator><name>vfs</name><operator>::</operator><name>FileSystem</name> <operator>&amp;</operator><name>VFS</name></expr></argument>, <argument><expr><specifier>const</specifier> <name>llvm</name><operator>::</operator><name>Triple</name> <operator>&amp;</operator><name>TargetOrHost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>bool</name> <name>operator</name><operator>==</operator><operator>(</operator><specifier>const</specifier> <name>Distro</name> <operator>&amp;</operator><name>Other</name><operator>)</operator> <specifier>const</specifier> <block>{
<return>return <expr><name>DistroVal</name> <operator>==</operator> <name><name>Other</name><operator>.</operator><name>DistroVal</name></name></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><name>bool</name> <name>operator</name><operator>!=</operator><operator>(</operator><specifier>const</specifier> <name>Distro</name> <operator>&amp;</operator><name>Other</name><operator>)</operator> <specifier>const</specifier> <block>{
<return>return <expr><name>DistroVal</name> <operator>!=</operator> <name><name>Other</name><operator>.</operator><name>DistroVal</name></name></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><name>bool</name> <name>operator</name><operator>&gt;=</operator><operator>(</operator><specifier>const</specifier> <name>Distro</name> <operator>&amp;</operator><name>Other</name><operator>)</operator> <specifier>const</specifier> <block>{
<return>return <expr><name>DistroVal</name> <operator>&gt;=</operator> <name><name>Other</name><operator>.</operator><name>DistroVal</name></name></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><name>bool</name> <name>operator</name><operator>&lt;=</operator><operator>(</operator><specifier>const</specifier> <name>Distro</name> <operator>&amp;</operator><name>Other</name><operator>)</operator> <specifier>const</specifier> <block>{
<return>return <expr><name>DistroVal</name> <operator>&lt;=</operator> <name><name>Other</name><operator>.</operator><name>DistroVal</name></name></expr>;</return>
}</block></expr></expr_stmt>





<expr_stmt><expr><name>bool</name> <macro><name>IsRedhat</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>DistroVal</name> <operator>==</operator> <name>Fedora</name> <operator>||</operator> <operator>(</operator><name>DistroVal</name> <operator>&gt;=</operator> <name>RHEL5</name> <operator>&amp;&amp;</operator> <name>DistroVal</name> <operator>&lt;=</operator> <name>RHEL7</name><operator>)</operator></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><name>bool</name> <macro><name>IsOpenSUSE</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><name>DistroVal</name> <operator>==</operator> <name>OpenSUSE</name></expr>;</return> }</block></expr></expr_stmt>

<expr_stmt><expr><name>bool</name> <macro><name>IsDebian</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>DistroVal</name> <operator>&gt;=</operator> <name>DebianLenny</name> <operator>&amp;&amp;</operator> <name>DistroVal</name> <operator>&lt;=</operator> <name>DebianBullseye</name></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><name>bool</name> <macro><name>IsUbuntu</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{
<return>return <expr><name>DistroVal</name> <operator>&gt;=</operator> <name>UbuntuHardy</name> <operator>&amp;&amp;</operator> <name>DistroVal</name> <operator>&lt;=</operator> <name>UbuntuImpish</name></expr>;</return>
}</block></expr></expr_stmt>

<expr_stmt><expr><name>bool</name> <macro><name>IsAlpineLinux</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><name>DistroVal</name> <operator>==</operator> <name>AlpineLinux</name></expr>;</return> }</block></expr></expr_stmt>

<expr_stmt><expr><name>bool</name> <macro><name>IsGentoo</name><argument_list>()</argument_list></macro> <specifier>const</specifier> <block>{ <return>return <expr><name>DistroVal</name> <operator>==</operator> <name>Gentoo</name></expr>;</return> }</block></expr></expr_stmt>


</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

</block_content>}</block></decl></decl_stmt>
</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
