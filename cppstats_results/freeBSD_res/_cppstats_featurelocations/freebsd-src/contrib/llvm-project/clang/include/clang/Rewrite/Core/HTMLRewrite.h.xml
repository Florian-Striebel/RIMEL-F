<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/clang/include/clang/Rewrite/Core/HTMLRewrite.h">












<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LLVM_CLANG_REWRITE_CORE_HTMLREWRITE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLVM_CLANG_REWRITE_CORE_HTMLREWRITE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"clang/Basic/SourceLocation.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>clang</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>Rewriter</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>RewriteBuffer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>Preprocessor</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>namespace</name></type> <name>html</name> <block>{<block_content>





<function_decl><type><name>void</name></type> <name>HighlightRange</name><parameter_list>(<parameter><decl><type><name>Rewriter</name> <modifier>&amp;</modifier></type><name>R</name></decl></parameter>, <parameter><decl><type><name>SourceLocation</name></type> <name>B</name></decl></parameter>, <parameter><decl><type><name>SourceLocation</name></type> <name>E</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>StartTag</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>EndTag</name></decl></parameter>,
<parameter><decl><type><name>bool</name></type> <name>IsTokenRange</name> <init>= <expr><name>true</name></expr></init></decl></parameter>)</parameter_list>;</function_decl>





<function><type><specifier>inline</specifier> <name>void</name></type> <name>HighlightRange</name><parameter_list>(<parameter><decl><type><name>Rewriter</name> <modifier>&amp;</modifier></type><name>R</name></decl></parameter>, <parameter><decl><type><name>SourceRange</name></type> <name>Range</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>StartTag</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>EndTag</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>HighlightRange</name><argument_list>(<argument><expr><name>R</name></expr></argument>, <argument><expr><call><name><name>Range</name><operator>.</operator><name>getBegin</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>Range</name><operator>.</operator><name>getEnd</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>StartTag</name></expr></argument>, <argument><expr><name>EndTag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>



<function_decl><type><name>void</name></type> <name>HighlightRange</name><parameter_list>(<parameter><decl><type><name>RewriteBuffer</name> <modifier>&amp;</modifier></type><name>RB</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>B</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>E</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>BufferStart</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>StartTag</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>EndTag</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>void</name></type> <name>EscapeText</name><parameter_list>(<parameter><decl><type><name>Rewriter</name><modifier>&amp;</modifier></type> <name>R</name></decl></parameter>, <parameter><decl><type><name>FileID</name></type> <name>FID</name></decl></parameter>,
<parameter><decl><type><name>bool</name></type> <name>EscapeSpaces</name> <init>= <expr><name>false</name></expr></init></decl></parameter>, <parameter><decl><type><name>bool</name></type> <name>ReplaceTabs</name> <init>= <expr><name>false</name></expr></init></decl></parameter>)</parameter_list>;</function_decl>





<expr_stmt><expr><name>std</name><operator>::</operator><name>string</name> <macro><name>EscapeText</name><argument_list>(<argument>StringRef s</argument>,
<argument>bool EscapeSpaces = false</argument>, <argument>bool ReplaceTabs = false</argument>)</argument_list></macro></expr>;</expr_stmt>

<function_decl><type><name>void</name></type> <name>AddLineNumbers</name><parameter_list>(<parameter><decl><type><name>Rewriter</name><modifier>&amp;</modifier></type> <name>R</name></decl></parameter>, <parameter><decl><type><name>FileID</name></type> <name>FID</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>AddHeaderFooterInternalBuiltinCSS</name><parameter_list>(<parameter><decl><type><name>Rewriter</name> <modifier>&amp;</modifier></type><name>R</name></decl></parameter>, <parameter><decl><type><name>FileID</name></type> <name>FID</name></decl></parameter>,
<parameter><decl><type><name>StringRef</name></type> <name>title</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>void</name></type> <name>SyntaxHighlight</name><parameter_list>(<parameter><decl><type><name>Rewriter</name> <modifier>&amp;</modifier></type><name>R</name></decl></parameter>, <parameter><decl><type><name>FileID</name></type> <name>FID</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>Preprocessor</name> <modifier>&amp;</modifier></type><name>PP</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>HighlightMacros</name><parameter_list>(<parameter><decl><type><name>Rewriter</name> <modifier>&amp;</modifier></type><name>R</name></decl></parameter>, <parameter><decl><type><name>FileID</name></type> <name>FID</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>Preprocessor</name> <modifier>&amp;</modifier></type><name>PP</name></decl></parameter>)</parameter_list>;</function_decl>

</block_content>}</block></decl></decl_stmt>
</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
