<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/lld/ELF/AArch64ErrataFix.h">







<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LLD_ELF_AARCH64ERRATAFIX_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLD_ELF_AARCH64ERRATAFIX_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lld/Common/LLVM.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;map&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;vector&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>lld</name> <block>{<block_content>
<decl_stmt><decl><type><name>namespace</name></type> <name>elf</name> <block>{<block_content>

<decl_stmt><decl><type><name>class</name></type> <name>Defined</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>InputSection</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>InputSectionDescription</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>OutputSection</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>Patch843419Section</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>class</name></type> <name>AArch64Err843419Patcher</name> <block>{<block_content>
<label><name>public</name>:</label>

<function_decl><type><name>bool</name></type> <name>createFixes</name><parameter_list>()</parameter_list>;</function_decl>

<label><name>private</name>:</label>
<expr_stmt><expr><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>Patch843419Section</name> <operator>*</operator></expr></argument>&gt;</argument_list></name>
<call><name>patchInputSectionDescription</name><argument_list>(<argument><expr><name>InputSectionDescription</name> <operator>&amp;</operator><name>isd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<decl_stmt><decl><type><name>void</name></type> <name>insertPatches</name><argument_list>(<argument><expr><name>InputSectionDescription</name> <operator>&amp;</operator><name>isd</name></expr></argument>,
<argument><expr><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><name>Patch843419Section</name> <operator>*</operator></expr></argument>&gt;</argument_list></name> <operator>&amp;</operator><name>patches</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<function_decl><type><name>void</name></type> <name>init</name><parameter_list>()</parameter_list>;</function_decl>




<expr_stmt><expr><name>std</name><operator>::</operator><name><name>map</name><argument_list type="generic">&lt;<argument><expr><name>InputSection</name> <operator>*</operator></expr></argument>, <argument><expr><name>std</name><operator>::</operator><name><name>vector</name><argument_list type="generic">&lt;<argument><expr><specifier>const</specifier> <name>Defined</name> <operator>*</operator></expr></argument>&gt;</argument_list></name></expr></argument>&gt;</argument_list></name> <name>sectionMap</name></expr>;</expr_stmt>

<decl_stmt><decl><type><name>bool</name></type> <name>initialized</name> <init>= <expr><name>false</name></expr></init></decl>;</decl_stmt>
</block_content>}</block></decl></decl_stmt><empty_stmt>;</empty_stmt>

</block_content>}</block></decl></decl_stmt>
</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
