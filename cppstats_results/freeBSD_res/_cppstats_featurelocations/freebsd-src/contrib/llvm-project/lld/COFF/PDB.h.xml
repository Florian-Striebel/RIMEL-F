<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/llvm-project/lld/COFF/PDB.h">







<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LLD_COFF_PDB_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LLD_COFF_PDB_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"llvm/ADT/ArrayRef.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"llvm/ADT/Optional.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"llvm/ADT/StringRef.h"</cpp:file></cpp:include>

<decl_stmt><decl><type><name>namespace</name></type> <name>llvm</name> <block>{<block_content>
<decl_stmt><decl><type><name>namespace</name></type> <name>codeview</name> <block>{<block_content>
<union_decl>union <name>DebugInfo</name>;</union_decl>
</block_content>}</block></decl></decl_stmt>
</block_content>}</block></decl></decl_stmt>

<decl_stmt><decl><type><name>namespace</name></type> <name>lld</name> <block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>Timer</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>namespace</name></type> <name>coff</name> <block>{<block_content>
<decl_stmt><decl><type><name>class</name></type> <name>OutputSection</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>SectionChunk</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>class</name></type> <name>SymbolTable</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>void</name></type> <name>createPDB</name><argument_list>(<argument><expr><name>SymbolTable</name> <operator>*</operator><name>symtab</name></expr></argument>,
<argument><expr><name>llvm</name><operator>::</operator><name><name>ArrayRef</name><argument_list type="generic">&lt;<argument><expr><name>OutputSection</name> <operator>*</operator></expr></argument>&gt;</argument_list></name> <name>outputSections</name></expr></argument>,
<argument><expr><name>llvm</name><operator>::</operator><name><name>ArrayRef</name><argument_list type="generic">&lt;<argument><expr><name>uint8_t</name></expr></argument>&gt;</argument_list></name> <name>sectionTable</name></expr></argument>,
<argument><expr><name>llvm</name><operator>::</operator><name>codeview</name><operator>::</operator><name>DebugInfo</name> <operator>*</operator><name>buildId</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<expr_stmt><expr><name>llvm</name><operator>::</operator><name><name>Optional</name><argument_list type="generic">&lt;<argument><expr><name>std</name><operator>::</operator><name><name>pair</name><argument_list type="generic">&lt;<argument><expr><name>llvm</name><operator>::</operator><name>StringRef</name></expr></argument>, <argument><expr><name>uint32_t</name></expr></argument>&gt;</argument_list></name></expr></argument>&gt;</argument_list></name>
<macro><name>getFileLineCodeView</name><argument_list>(<argument>const SectionChunk *c</argument>, <argument>uint32_t addr</argument>)</argument_list></macro></expr>;</expr_stmt>

<decl_stmt><decl><type><specifier>extern</specifier> <name>Timer</name></type> <name>loadGHashTimer</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>Timer</name></type> <name>mergeGHashTimer</name></decl>;</decl_stmt>

</block_content>}</block></decl></decl_stmt>
</block_content>}</block></decl></decl_stmt>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
