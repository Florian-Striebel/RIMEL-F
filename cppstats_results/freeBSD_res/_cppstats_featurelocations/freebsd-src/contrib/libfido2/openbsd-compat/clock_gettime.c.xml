<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/libfido2/openbsd-compat/clock_gettime.c">





<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"openbsd-compat.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>HAVE_CLOCK_GETTIME</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><name>_WIN32</name></expr></cpp:if>
<function><type><name>int</name></type>
<name>clock_gettime</name><parameter_list>(<parameter><decl><type><name>clockid_t</name></type> <name>clock_id</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>timespec</name></name> <modifier>*</modifier></type><name>tp</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>ULONGLONG</name></type> <name>ms</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>clock_id</name> <operator>!=</operator> <name>CLOCK_MONOTONIC</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>errno</name> <operator>=</operator> <name>EINVAL</name></expr>;</expr_stmt>
<return>return <expr><operator>(</operator><operator>-</operator><literal type="number">1</literal><operator>)</operator></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>ms</name> <operator>=</operator> <call><name>GetTickCount64</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>tp</name><operator>-&gt;</operator><name>tv_sec</name></name> <operator>=</operator> <name>ms</name> <operator>/</operator> <literal type="number">1000L</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>tp</name><operator>-&gt;</operator><name>tv_nsec</name></name> <operator>=</operator> <operator>(</operator><name>ms</name> <operator>%</operator> <literal type="number">1000L</literal><operator>)</operator> <operator>*</operator> <literal type="number">1000000L</literal></expr>;</expr_stmt>

<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:error>#<cpp:directive>error</cpp:directive> <cpp:literal>"please provide an implementation of clock_gettime() for your platform"</cpp:literal></cpp:error>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
