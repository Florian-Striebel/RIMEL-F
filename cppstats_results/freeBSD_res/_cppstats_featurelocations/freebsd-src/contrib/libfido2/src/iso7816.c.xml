<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/libfido2/src/iso7816.c">





<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"fido.h"</cpp:file></cpp:include>

<function><type><name>iso7816_apdu_t</name> <modifier>*</modifier></type>
<name>iso7816_new</name><parameter_list>(<parameter><decl><type><name>uint8_t</name></type> <name>cla</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>ins</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>p1</name></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type> <name>payload_len</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>iso7816_apdu_t</name> <modifier>*</modifier></type><name>apdu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>alloc_len</name></decl>;</decl_stmt>

<expr_stmt><expr><name>alloc_len</name> <operator>=</operator> <sizeof>sizeof<argument_list>(<argument><expr><name>iso7816_apdu_t</name></expr></argument>)</argument_list></sizeof> <operator>+</operator> <name>payload_len</name> <operator>+</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><operator>(</operator><name>apdu</name> <operator>=</operator> <call><name>calloc</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>alloc_len</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>NULL</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><name><name>apdu</name><operator>-&gt;</operator><name>alloc_len</name></name> <operator>=</operator> <name>alloc_len</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>apdu</name><operator>-&gt;</operator><name>payload_len</name></name> <operator>=</operator> <name>payload_len</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>apdu</name><operator>-&gt;</operator><name>payload_ptr</name></name> <operator>=</operator> <name><name>apdu</name><operator>-&gt;</operator><name>payload</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>apdu</name><operator>-&gt;</operator><name>header</name><operator>.</operator><name>cla</name></name> <operator>=</operator> <name>cla</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>apdu</name><operator>-&gt;</operator><name>header</name><operator>.</operator><name>ins</name></name> <operator>=</operator> <name>ins</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>apdu</name><operator>-&gt;</operator><name>header</name><operator>.</operator><name>p1</name></name> <operator>=</operator> <name>p1</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>apdu</name><operator>-&gt;</operator><name>header</name><operator>.</operator><name>lc2</name></name> <operator>=</operator> <operator>(</operator><name>uint8_t</name><operator>)</operator><operator>(</operator><operator>(</operator><name>payload_len</name> <operator>&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator> <operator>&amp;</operator> <literal type="number">0xff</literal><operator>)</operator></expr>;</expr_stmt>
<expr_stmt><expr><name><name>apdu</name><operator>-&gt;</operator><name>header</name><operator>.</operator><name>lc3</name></name> <operator>=</operator> <operator>(</operator><name>uint8_t</name><operator>)</operator><operator>(</operator><name>payload_len</name> <operator>&amp;</operator> <literal type="number">0xff</literal><operator>)</operator></expr>;</expr_stmt>

<return>return <expr><name>apdu</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>void</name></type>
<name>iso7816_free</name><parameter_list>(<parameter><decl><type><name>iso7816_apdu_t</name> <modifier>*</modifier><modifier>*</modifier></type><name>apdu_p</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>iso7816_apdu_t</name> <modifier>*</modifier></type><name>apdu</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>apdu_p</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <operator>(</operator><name>apdu</name> <operator>=</operator> <operator>*</operator><name>apdu_p</name><operator>)</operator> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<return>return;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>freezero</name><argument_list>(<argument><expr><name>apdu</name></expr></argument>, <argument><expr><name><name>apdu</name><operator>-&gt;</operator><name>alloc_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>apdu_p</name> <operator>=</operator> <name>NULL</name></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>int</name></type>
<name>iso7816_add</name><parameter_list>(<parameter><decl><type><name>iso7816_apdu_t</name> <modifier>*</modifier></type><name>apdu</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>cnt</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>cnt</name> <operator>&gt;</operator> <name><name>apdu</name><operator>-&gt;</operator><name>payload_len</name></name> <operator>||</operator> <name>cnt</name> <operator>&gt;</operator> <name>UINT16_MAX</name></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>memcpy</name><argument_list>(<argument><expr><name><name>apdu</name><operator>-&gt;</operator><name>payload_ptr</name></name></expr></argument>, <argument><expr><name>buf</name></expr></argument>, <argument><expr><name>cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>apdu</name><operator>-&gt;</operator><name>payload_ptr</name></name> <operator>+=</operator> <name>cnt</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>apdu</name><operator>-&gt;</operator><name>payload_len</name></name> <operator>=</operator> <operator>(</operator><name>uint16_t</name><operator>)</operator><operator>(</operator><name><name>apdu</name><operator>-&gt;</operator><name>payload_len</name></name> <operator>-</operator> <name>cnt</name><operator>)</operator></expr>;</expr_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type>
<name>iso7816_ptr</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>iso7816_apdu_t</name> <modifier>*</modifier></type><name>apdu</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><operator>(</operator><specifier>const</specifier> <name>unsigned</name> <name>char</name> <operator>*</operator><operator>)</operator><operator>&amp;</operator><name><name>apdu</name><operator>-&gt;</operator><name>header</name></name></expr>;</return>
</block_content>}</block></function>

<function><type><name>size_t</name></type>
<name>iso7816_len</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>iso7816_apdu_t</name> <modifier>*</modifier></type><name>apdu</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<return>return <expr><name><name>apdu</name><operator>-&gt;</operator><name>alloc_len</name></name> <operator>-</operator> <call><name>offsetof</name><argument_list>(<argument><expr><name>iso7816_apdu_t</name></expr></argument>, <argument><expr><name>header</name></expr></argument>)</argument_list></call> <operator>-</operator>
<operator>(</operator><sizeof>sizeof<argument_list>(<argument><expr><name>iso7816_apdu_t</name></expr></argument>)</argument_list></sizeof> <operator>-</operator> <call><name>offsetof</name><argument_list>(<argument><expr><name>iso7816_apdu_t</name></expr></argument>, <argument><expr><name>payload</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>
</block_content>}</block></function>
</unit>
