<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/libfido2/src/fido/credman.h">





<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_FIDO_CREDMAN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_FIDO_CREDMAN_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_FIDO_INTERNAL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"blob.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"fido/err.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"fido/param.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"fido/types.h"</cpp:file></cpp:include>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;fido.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;fido/err.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;fido/param.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_FIDO_INTERNAL</name></expr></argument>)</argument_list></call></expr></cpp:if>
<struct>struct <name>fido_credman_metadata</name> <block>{
<decl_stmt><decl><type><name>uint64_t</name></type> <name>rk_existing</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>rk_remaining</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>fido_credman_single_rp</name> <block>{
<decl_stmt><decl><type><name>fido_rp_t</name></type> <name>rp_entity</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>fido_blob_t</name></type> <name>rp_id_hash</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>fido_credman_rp</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>fido_credman_single_rp</name></name> <modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>n_alloc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>n_rx</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>fido_credman_rk</name> <block>{
<decl_stmt><decl><type><name>fido_cred_t</name> <modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>n_alloc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>n_rx</name></decl>;</decl_stmt>
}</block>;</struct>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<typedef>typedef <type><name><name>struct</name> <name>fido_credman_metadata</name></name></type> <name>fido_credman_metadata_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>fido_credman_rk</name></name></type> <name>fido_credman_rk_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>fido_credman_rp</name></name></type> <name>fido_credman_rp_t</name>;</typedef>

<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fido_credman_rp_id</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>fido_credman_rp_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fido_credman_rp_name</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>fido_credman_rp_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><specifier>const</specifier> <name>fido_cred_t</name> <modifier>*</modifier></type><name>fido_credman_rk</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>fido_credman_rk_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>fido_credman_rp_id_hash_ptr</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>fido_credman_rp_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>fido_credman_metadata_t</name> <modifier>*</modifier></type><name>fido_credman_metadata_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>fido_credman_rk_t</name> <modifier>*</modifier></type><name>fido_credman_rk_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>fido_credman_rp_t</name> <modifier>*</modifier></type><name>fido_credman_rp_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>fido_credman_del_dev_rk</name><parameter_list>(<parameter><decl><type><name>fido_dev_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>fido_credman_get_dev_metadata</name><parameter_list>(<parameter><decl><type><name>fido_dev_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>fido_credman_metadata_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>fido_credman_get_dev_rk</name><parameter_list>(<parameter><decl><type><name>fido_dev_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>fido_credman_rk_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>fido_credman_get_dev_rp</name><parameter_list>(<parameter><decl><type><name>fido_dev_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>fido_credman_rp_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>fido_credman_set_dev_rk</name><parameter_list>(<parameter><decl><type><name>fido_dev_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>fido_cred_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>size_t</name></type> <name>fido_credman_rk_count</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>fido_credman_rk_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>size_t</name></type> <name>fido_credman_rp_count</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>fido_credman_rp_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>size_t</name></type> <name>fido_credman_rp_id_hash_len</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>fido_credman_rp_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>uint64_t</name></type> <name>fido_credman_rk_existing</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>fido_credman_metadata_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint64_t</name></type> <name>fido_credman_rk_remaining</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>fido_credman_metadata_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>fido_credman_metadata_free</name><parameter_list>(<parameter><decl><type><name>fido_credman_metadata_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>fido_credman_rk_free</name><parameter_list>(<parameter><decl><type><name>fido_credman_rk_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>fido_credman_rp_free</name><parameter_list>(<parameter><decl><type><name>fido_credman_rp_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
