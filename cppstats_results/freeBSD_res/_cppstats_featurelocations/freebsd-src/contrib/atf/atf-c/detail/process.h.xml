<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/atf/atf-c/detail/process.h">
























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>ATF_C_DETAIL_PROCESS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ATF_C_DETAIL_PROCESS_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/types.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdbool.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;atf-c/detail/fs.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;atf-c/detail/list.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;atf-c/error_fwd.h&gt;</cpp:file></cpp:include>





<struct>struct <name>atf_process_stream</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>m_type</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>m_src_fd</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>m_tgt_fd</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>int</name></type> <name>m_fd</name></decl>;</decl_stmt>


<decl_stmt><decl><type><specifier>const</specifier> <name>atf_fs_path_t</name> <modifier>*</modifier></type><name>m_path</name></decl>;</decl_stmt>
}</block>;</struct>
<typedef>typedef <type><name><name>struct</name> <name>atf_process_stream</name></name></type> <name>atf_process_stream_t</name>;</typedef>

<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>int</name></type> <name>atf_process_stream_type_capture</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>int</name></type> <name>atf_process_stream_type_connect</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>int</name></type> <name>atf_process_stream_type_inherit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>int</name></type> <name>atf_process_stream_type_redirect_fd</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <specifier>const</specifier> <name>int</name></type> <name>atf_process_stream_type_redirect_path</name></decl>;</decl_stmt>

<function_decl><type><name>atf_error_t</name></type> <name>atf_process_stream_init_capture</name><parameter_list>(<parameter><decl><type><name>atf_process_stream_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>atf_error_t</name></type> <name>atf_process_stream_init_connect</name><parameter_list>(<parameter><decl><type><name>atf_process_stream_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>atf_error_t</name></type> <name>atf_process_stream_init_inherit</name><parameter_list>(<parameter><decl><type><name>atf_process_stream_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>atf_error_t</name></type> <name>atf_process_stream_init_redirect_fd</name><parameter_list>(<parameter><decl><type><name>atf_process_stream_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name>fd</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>atf_error_t</name></type> <name>atf_process_stream_init_redirect_path</name><parameter_list>(<parameter><decl><type><name>atf_process_stream_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>atf_fs_path_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>atf_process_stream_fini</name><parameter_list>(<parameter><decl><type><name>atf_process_stream_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>int</name></type> <name>atf_process_stream_type</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>atf_process_stream_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>





<struct>struct <name>atf_process_status</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>m_status</name></decl>;</decl_stmt>
}</block>;</struct>
<typedef>typedef <type><name><name>struct</name> <name>atf_process_status</name></name></type> <name>atf_process_status_t</name>;</typedef>

<function_decl><type><name>void</name></type> <name>atf_process_status_fini</name><parameter_list>(<parameter><decl><type><name>atf_process_status_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>bool</name></type> <name>atf_process_status_exited</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>atf_process_status_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>atf_process_status_exitstatus</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>atf_process_status_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>atf_process_status_signaled</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>atf_process_status_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>atf_process_status_termsig</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>atf_process_status_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>atf_process_status_coredump</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>atf_process_status_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>





<struct>struct <name>atf_process_child</name> <block>{
<decl_stmt><decl><type><name>pid_t</name></type> <name>m_pid</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>int</name></type> <name>m_stdout</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>m_stderr</name></decl>;</decl_stmt>
}</block>;</struct>
<typedef>typedef <type><name><name>struct</name> <name>atf_process_child</name></name></type> <name>atf_process_child_t</name>;</typedef>

<function_decl><type><name>atf_error_t</name></type> <name>atf_process_child_wait</name><parameter_list>(<parameter><decl><type><name>atf_process_child_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>atf_process_status_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>pid_t</name></type> <name>atf_process_child_pid</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>atf_process_child_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>atf_process_child_stdout</name><parameter_list>(<parameter><decl><type><name>atf_process_child_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>atf_process_child_stderr</name><parameter_list>(<parameter><decl><type><name>atf_process_child_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>atf_error_t</name></type> <name>atf_process_fork</name><parameter_list>(<parameter><decl><type><name>atf_process_child_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>atf_process_stream_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>atf_process_stream_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>atf_error_t</name></type> <name>atf_process_exec_array</name><parameter_list>(<parameter><decl><type><name>atf_process_status_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>atf_fs_path_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>atf_process_stream_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>atf_process_stream_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>atf_error_t</name></type> <name>atf_process_exec_list</name><parameter_list>(<parameter><decl><type><name>atf_process_status_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>atf_fs_path_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>atf_list_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>atf_process_stream_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>atf_process_stream_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
