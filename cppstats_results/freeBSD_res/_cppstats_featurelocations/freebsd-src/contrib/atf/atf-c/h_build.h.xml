<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/atf/atf-c/h_build.h">
























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>ATF_C_H_BUILD_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:error>#<cpp:directive>error</cpp:directive> <cpp:literal>"Cannot include h_build.h more than once."</cpp:literal></cpp:error>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ATF_C_H_BUILD_H</name></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>





<struct><specifier>static</specifier> struct <name>c_o_test</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>msg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cflags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cppflags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>sfile</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ofile</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>hasoptargs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>optargs</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>expargv</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>
}</block> <decl><name><name>c_o_tests</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{
<expr><literal type="string">"No flags"</literal></expr>,
<expr><literal type="string">"cc"</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>,
<expr><literal type="string">"test.o"</literal></expr>,
<expr><name>false</name></expr>,
<expr><block>{
<expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr><literal type="string">"cc"</literal></expr>, <expr><literal type="string">"-o"</literal></expr>, <expr><literal type="string">"test.o"</literal></expr>, <expr><literal type="string">"-c"</literal></expr>, <expr><literal type="string">"test.c"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
}</block></expr>,

<expr><block>{
<expr><literal type="string">"Multi-word program name"</literal></expr>,
<expr><literal type="string">"cc -foo"</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>,
<expr><literal type="string">"test.o"</literal></expr>,
<expr><name>false</name></expr>,
<expr><block>{
<expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr><literal type="string">"cc"</literal></expr>, <expr><literal type="string">"-foo"</literal></expr>, <expr><literal type="string">"-o"</literal></expr>, <expr><literal type="string">"test.o"</literal></expr>, <expr><literal type="string">"-c"</literal></expr>, <expr><literal type="string">"test.c"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
}</block></expr>,

<expr><block>{
<expr><literal type="string">"Some cflags"</literal></expr>,
<expr><literal type="string">"cc"</literal></expr>,
<expr><literal type="string">"-f1 -f2 -f3 -f4-f5"</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>,
<expr><literal type="string">"test.o"</literal></expr>,
<expr><name>false</name></expr>,
<expr><block>{
<expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr><literal type="string">"cc"</literal></expr>, <expr><literal type="string">"-f1"</literal></expr>, <expr><literal type="string">"-f2"</literal></expr>, <expr><literal type="string">"-f3"</literal></expr>, <expr><literal type="string">"-f4-f5"</literal></expr>, <expr><literal type="string">"-o"</literal></expr>, <expr><literal type="string">"test.o"</literal></expr>,
<expr><literal type="string">"-c"</literal></expr>, <expr><literal type="string">"test.c"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
}</block></expr>,

<expr><block>{
<expr><literal type="string">"Some cppflags"</literal></expr>,
<expr><literal type="string">"cc"</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">"-f1 -f2 -f3 -f4-f5"</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>,
<expr><literal type="string">"test.o"</literal></expr>,
<expr><name>false</name></expr>,
<expr><block>{
<expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr><literal type="string">"cc"</literal></expr>, <expr><literal type="string">"-f1"</literal></expr>, <expr><literal type="string">"-f2"</literal></expr>, <expr><literal type="string">"-f3"</literal></expr>, <expr><literal type="string">"-f4-f5"</literal></expr>, <expr><literal type="string">"-o"</literal></expr>, <expr><literal type="string">"test.o"</literal></expr>,
<expr><literal type="string">"-c"</literal></expr>, <expr><literal type="string">"test.c"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
}</block></expr>,

<expr><block>{
<expr><literal type="string">"Some cflags and cppflags"</literal></expr>,
<expr><literal type="string">"cc"</literal></expr>,
<expr><literal type="string">"-f2"</literal></expr>,
<expr><literal type="string">"-f1"</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>,
<expr><literal type="string">"test.o"</literal></expr>,
<expr><name>false</name></expr>,
<expr><block>{
<expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr><literal type="string">"cc"</literal></expr>, <expr><literal type="string">"-f1"</literal></expr>, <expr><literal type="string">"-f2"</literal></expr>, <expr><literal type="string">"-o"</literal></expr>, <expr><literal type="string">"test.o"</literal></expr>, <expr><literal type="string">"-c"</literal></expr>, <expr><literal type="string">"test.c"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
}</block></expr>,

<expr><block>{
<expr><literal type="string">"Some optional arguments"</literal></expr>,
<expr><literal type="string">"cc"</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>,
<expr><literal type="string">"test.o"</literal></expr>,
<expr><name>true</name></expr>,
<expr><block>{
<expr><literal type="string">"-o1"</literal></expr>, <expr><literal type="string">"-o2"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr><literal type="string">"cc"</literal></expr>, <expr><literal type="string">"-o1"</literal></expr>, <expr><literal type="string">"-o2"</literal></expr>, <expr><literal type="string">"-o"</literal></expr>, <expr><literal type="string">"test.o"</literal></expr>, <expr><literal type="string">"-c"</literal></expr>, <expr><literal type="string">"test.c"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
}</block></expr>,

<expr><block>{
<expr><literal type="string">"Some cflags, cppflags and optional arguments"</literal></expr>,
<expr><literal type="string">"cc"</literal></expr>,
<expr><literal type="string">"-f2"</literal></expr>,
<expr><literal type="string">"-f1"</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>,
<expr><literal type="string">"test.o"</literal></expr>,
<expr><name>true</name></expr>,
<expr><block>{
<expr><literal type="string">"-o1"</literal></expr>, <expr><literal type="string">"-o2"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr><literal type="string">"cc"</literal></expr>, <expr><literal type="string">"-f1"</literal></expr>, <expr><literal type="string">"-f2"</literal></expr>, <expr><literal type="string">"-o1"</literal></expr>, <expr><literal type="string">"-o2"</literal></expr>, <expr><literal type="string">"-o"</literal></expr>, <expr><literal type="string">"test.o"</literal></expr>,
<expr><literal type="string">"-c"</literal></expr>, <expr><literal type="string">"test.c"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
}</block></expr>,

<expr><block>{
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>false</name></expr>,
<expr><block>{ <expr><name>NULL</name></expr> }</block></expr>,
<expr><block>{ <expr><name>NULL</name></expr> }</block></expr>,
}</block></expr>,
}</block></expr></init></decl>;</struct>

<struct><specifier>static</specifier> struct <name>cpp_test</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>msg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cpp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cppflags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>sfile</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ofile</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>hasoptargs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>optargs</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>expargv</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>
}</block> <decl><name><name>cpp_tests</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{
<expr><literal type="string">"No flags"</literal></expr>,
<expr><literal type="string">"cpp"</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>,
<expr><literal type="string">"test.out"</literal></expr>,
<expr><name>false</name></expr>,
<expr><block>{
<expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr><literal type="string">"cpp"</literal></expr>, <expr><literal type="string">"-o"</literal></expr>, <expr><literal type="string">"test.out"</literal></expr>, <expr><literal type="string">"test.c"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
}</block></expr>,

<expr><block>{
<expr><literal type="string">"Multi-word program name"</literal></expr>,
<expr><literal type="string">"cpp -foo"</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>,
<expr><literal type="string">"test.out"</literal></expr>,
<expr><name>false</name></expr>,
<expr><block>{
<expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr><literal type="string">"cpp"</literal></expr>, <expr><literal type="string">"-foo"</literal></expr>, <expr><literal type="string">"-o"</literal></expr>, <expr><literal type="string">"test.out"</literal></expr>, <expr><literal type="string">"test.c"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
}</block></expr>,

<expr><block>{
<expr><literal type="string">"Some cppflags"</literal></expr>,
<expr><literal type="string">"cpp"</literal></expr>,
<expr><literal type="string">"-f1 -f2 -f3 -f4-f5"</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>,
<expr><literal type="string">"test.out"</literal></expr>,
<expr><name>false</name></expr>,
<expr><block>{
<expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr><literal type="string">"cpp"</literal></expr>, <expr><literal type="string">"-f1"</literal></expr>, <expr><literal type="string">"-f2"</literal></expr>, <expr><literal type="string">"-f3"</literal></expr>, <expr><literal type="string">"-f4-f5"</literal></expr>, <expr><literal type="string">"-o"</literal></expr>, <expr><literal type="string">"test.out"</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
}</block></expr>,

<expr><block>{
<expr><literal type="string">"Some optional arguments"</literal></expr>,
<expr><literal type="string">"cpp"</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>,
<expr><literal type="string">"test.out"</literal></expr>,
<expr><name>true</name></expr>,
<expr><block>{
<expr><literal type="string">"-o1"</literal></expr>, <expr><literal type="string">"-o2"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr><literal type="string">"cpp"</literal></expr>, <expr><literal type="string">"-o1"</literal></expr>, <expr><literal type="string">"-o2"</literal></expr>, <expr><literal type="string">"-o"</literal></expr>, <expr><literal type="string">"test.out"</literal></expr>, <expr><literal type="string">"test.c"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
}</block></expr>,

<expr><block>{
<expr><literal type="string">"Some cppflags and optional arguments"</literal></expr>,
<expr><literal type="string">"cpp"</literal></expr>,
<expr><literal type="string">"-f1"</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>,
<expr><literal type="string">"test.out"</literal></expr>,
<expr><name>true</name></expr>,
<expr><block>{
<expr><literal type="string">"-o1"</literal></expr>, <expr><literal type="string">"-o2"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr><literal type="string">"cpp"</literal></expr>, <expr><literal type="string">"-f1"</literal></expr>, <expr><literal type="string">"-o1"</literal></expr>, <expr><literal type="string">"-o2"</literal></expr>, <expr><literal type="string">"-o"</literal></expr>, <expr><literal type="string">"test.out"</literal></expr>, <expr><literal type="string">"test.c"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
}</block></expr>,

<expr><block>{
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>false</name></expr>,
<expr><block>{ <expr><name>NULL</name></expr> }</block></expr>,
<expr><block>{ <expr><name>NULL</name></expr> }</block></expr>,
}</block></expr>,
}</block></expr></init></decl>;</struct>

<struct><specifier>static</specifier> struct <name>cxx_o_test</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>msg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cxx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cxxflags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cppflags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>sfile</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ofile</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>hasoptargs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>optargs</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>expargv</name><index>[<expr><literal type="number">16</literal></expr>]</index></name></decl>;</decl_stmt>
}</block> <decl><name><name>cxx_o_tests</name><index>[]</index></name> <init>= <expr><block>{
<expr><block>{
<expr><literal type="string">"No flags"</literal></expr>,
<expr><literal type="string">"c++"</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>,
<expr><literal type="string">"test.o"</literal></expr>,
<expr><name>false</name></expr>,
<expr><block>{
<expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr><literal type="string">"c++"</literal></expr>, <expr><literal type="string">"-o"</literal></expr>, <expr><literal type="string">"test.o"</literal></expr>, <expr><literal type="string">"-c"</literal></expr>, <expr><literal type="string">"test.c"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
}</block></expr>,

<expr><block>{
<expr><literal type="string">"Multi-word program name"</literal></expr>,
<expr><literal type="string">"c++ -foo"</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>,
<expr><literal type="string">"test.o"</literal></expr>,
<expr><name>false</name></expr>,
<expr><block>{
<expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr><literal type="string">"c++"</literal></expr>, <expr><literal type="string">"-foo"</literal></expr>, <expr><literal type="string">"-o"</literal></expr>, <expr><literal type="string">"test.o"</literal></expr>, <expr><literal type="string">"-c"</literal></expr>, <expr><literal type="string">"test.c"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
}</block></expr>,

<expr><block>{
<expr><literal type="string">"Some cxxflags"</literal></expr>,
<expr><literal type="string">"c++"</literal></expr>,
<expr><literal type="string">"-f1 -f2 -f3 -f4-f5"</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>,
<expr><literal type="string">"test.o"</literal></expr>,
<expr><name>false</name></expr>,
<expr><block>{
<expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr><literal type="string">"c++"</literal></expr>, <expr><literal type="string">"-f1"</literal></expr>, <expr><literal type="string">"-f2"</literal></expr>, <expr><literal type="string">"-f3"</literal></expr>, <expr><literal type="string">"-f4-f5"</literal></expr>, <expr><literal type="string">"-o"</literal></expr>, <expr><literal type="string">"test.o"</literal></expr>,
<expr><literal type="string">"-c"</literal></expr>, <expr><literal type="string">"test.c"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
}</block></expr>,

<expr><block>{
<expr><literal type="string">"Some cppflags"</literal></expr>,
<expr><literal type="string">"c++"</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">"-f1 -f2 -f3 -f4-f5"</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>,
<expr><literal type="string">"test.o"</literal></expr>,
<expr><name>false</name></expr>,
<expr><block>{
<expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr><literal type="string">"c++"</literal></expr>, <expr><literal type="string">"-f1"</literal></expr>, <expr><literal type="string">"-f2"</literal></expr>, <expr><literal type="string">"-f3"</literal></expr>, <expr><literal type="string">"-f4-f5"</literal></expr>, <expr><literal type="string">"-o"</literal></expr>, <expr><literal type="string">"test.o"</literal></expr>,
<expr><literal type="string">"-c"</literal></expr>, <expr><literal type="string">"test.c"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
}</block></expr>,

<expr><block>{
<expr><literal type="string">"Some cxxflags and cppflags"</literal></expr>,
<expr><literal type="string">"c++"</literal></expr>,
<expr><literal type="string">"-f2"</literal></expr>,
<expr><literal type="string">"-f1"</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>,
<expr><literal type="string">"test.o"</literal></expr>,
<expr><name>false</name></expr>,
<expr><block>{
<expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr><literal type="string">"c++"</literal></expr>, <expr><literal type="string">"-f1"</literal></expr>, <expr><literal type="string">"-f2"</literal></expr>, <expr><literal type="string">"-o"</literal></expr>, <expr><literal type="string">"test.o"</literal></expr>, <expr><literal type="string">"-c"</literal></expr>, <expr><literal type="string">"test.c"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
}</block></expr>,

<expr><block>{
<expr><literal type="string">"Some optional arguments"</literal></expr>,
<expr><literal type="string">"c++"</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">""</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>,
<expr><literal type="string">"test.o"</literal></expr>,
<expr><name>true</name></expr>,
<expr><block>{
<expr><literal type="string">"-o1"</literal></expr>, <expr><literal type="string">"-o2"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr><literal type="string">"c++"</literal></expr>, <expr><literal type="string">"-o1"</literal></expr>, <expr><literal type="string">"-o2"</literal></expr>, <expr><literal type="string">"-o"</literal></expr>, <expr><literal type="string">"test.o"</literal></expr>, <expr><literal type="string">"-c"</literal></expr>, <expr><literal type="string">"test.c"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
}</block></expr>,

<expr><block>{
<expr><literal type="string">"Some cxxflags, cppflags and optional arguments"</literal></expr>,
<expr><literal type="string">"c++"</literal></expr>,
<expr><literal type="string">"-f2"</literal></expr>,
<expr><literal type="string">"-f1"</literal></expr>,
<expr><literal type="string">"test.c"</literal></expr>,
<expr><literal type="string">"test.o"</literal></expr>,
<expr><name>true</name></expr>,
<expr><block>{
<expr><literal type="string">"-o1"</literal></expr>, <expr><literal type="string">"-o2"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
<expr><block>{
<expr><literal type="string">"c++"</literal></expr>, <expr><literal type="string">"-f1"</literal></expr>, <expr><literal type="string">"-f2"</literal></expr>, <expr><literal type="string">"-o1"</literal></expr>, <expr><literal type="string">"-o2"</literal></expr>, <expr><literal type="string">"-o"</literal></expr>, <expr><literal type="string">"test.o"</literal></expr>,
<expr><literal type="string">"-c"</literal></expr>, <expr><literal type="string">"test.c"</literal></expr>, <expr><name>NULL</name></expr>
}</block></expr>,
}</block></expr>,

<expr><block>{
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>NULL</name></expr>,
<expr><name>false</name></expr>,
<expr><block>{ <expr><name>NULL</name></expr> }</block></expr>,
<expr><block>{ <expr><name>NULL</name></expr> }</block></expr>,
}</block></expr>,
}</block></expr></init></decl>;</struct>
</unit>
