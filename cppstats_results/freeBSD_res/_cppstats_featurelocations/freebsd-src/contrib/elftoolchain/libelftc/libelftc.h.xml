<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/elftoolchain/libelftc/libelftc.h">




























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_LIBELFTC_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_LIBELFTC_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/stat.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libelf.h&gt;</cpp:file></cpp:include>




<typedef>typedef <type><name><name>struct</name> <name>_Elftc_Bfd_Target</name></name></type> <name>Elftc_Bfd_Target</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>_Elftc_String_Table</name></name></type> <name>Elftc_String_Table</name>;</typedef>


<typedef>typedef <type><enum>enum <block>{
<decl><name>ETF_NONE</name></decl>,
<decl><name>ETF_ELF</name></decl>,
<decl><name>ETF_BINARY</name></decl>,
<decl><name>ETF_SREC</name></decl>,
<decl><name>ETF_IHEX</name></decl>,
<decl><name>ETF_PE</name></decl>,
<decl><name>ETF_EFI</name></decl>,
}</block></enum></type> <name>Elftc_Bfd_Target_Flavor</name>;</typedef>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFTC_DEM_UNKNOWN</name></cpp:macro> <cpp:value>0x00000000U</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFTC_DEM_ARM</name></cpp:macro> <cpp:value>0x00000001U</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFTC_DEM_GNU2</name></cpp:macro> <cpp:value>0x00000002U</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFTC_DEM_GNU3</name></cpp:macro> <cpp:value>0x00000004U</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ELFTC_DEM_NOPARAM</name></cpp:macro> <cpp:value>0x00010000U</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<function_decl><type><name>Elftc_Bfd_Target</name> <modifier>*</modifier></type><name>elftc_bfd_find_target</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>_tgt_name</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>Elftc_Bfd_Target_Flavor</name></type> <name>elftc_bfd_target_flavor</name><parameter_list>(<parameter><decl><type><name>Elftc_Bfd_Target</name> <modifier>*</modifier></type><name>_tgt</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>unsigned</name> <name>int</name></type> <name>elftc_bfd_target_byteorder</name><parameter_list>(<parameter><decl><type><name>Elftc_Bfd_Target</name> <modifier>*</modifier></type><name>_tgt</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>unsigned</name> <name>int</name></type> <name>elftc_bfd_target_class</name><parameter_list>(<parameter><decl><type><name>Elftc_Bfd_Target</name> <modifier>*</modifier></type><name>_tgt</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>unsigned</name> <name>int</name></type> <name>elftc_bfd_target_machine</name><parameter_list>(<parameter><decl><type><name>Elftc_Bfd_Target</name> <modifier>*</modifier></type><name>_tgt</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>unsigned</name> <name>int</name></type> <name>elftc_bfd_target_osabi</name><parameter_list>(<parameter><decl><type><name>Elftc_Bfd_Target</name> <modifier>*</modifier></type><name>_tgt</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>elftc_copyfile</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>_srcfd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>_dstfd</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>elftc_demangle</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>_mangledname</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>_buffer</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>_bufsize</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>_flags</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>elftc_reloc_type_str</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>mach</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>type</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>elftc_set_timestamps</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>_filename</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>stat</name></name> <modifier>*</modifier></type><name>_sb</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>Elftc_String_Table</name> <modifier>*</modifier></type><name>elftc_string_table_create</name><parameter_list>(<parameter><decl><type><name>size_t</name></type> <name>_sizehint</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>elftc_string_table_destroy</name><parameter_list>(<parameter><decl><type><name>Elftc_String_Table</name> <modifier>*</modifier></type><name>_table</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>Elftc_String_Table</name> <modifier>*</modifier></type><name>elftc_string_table_from_section</name><parameter_list>(<parameter><decl><type><name>Elf_Scn</name> <modifier>*</modifier></type><name>_scn</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>_sizehint</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>elftc_string_table_image</name><parameter_list>(<parameter><decl><type><name>Elftc_String_Table</name> <modifier>*</modifier></type><name>_table</name></decl></parameter>,
<parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>_sz</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>size_t</name></type> <name>elftc_string_table_insert</name><parameter_list>(<parameter><decl><type><name>Elftc_String_Table</name> <modifier>*</modifier></type><name>_table</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>_string</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>size_t</name></type> <name>elftc_string_table_lookup</name><parameter_list>(<parameter><decl><type><name>Elftc_String_Table</name> <modifier>*</modifier></type><name>_table</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>_string</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>elftc_string_table_remove</name><parameter_list>(<parameter><decl><type><name>Elftc_String_Table</name> <modifier>*</modifier></type><name>_table</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>_string</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>elftc_string_table_to_string</name><parameter_list>(<parameter><decl><type><name>Elftc_String_Table</name> <modifier>*</modifier></type><name>_table</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>offset</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>elftc_timestamp</name><parameter_list>(<parameter><decl><type><name>time_t</name> <modifier>*</modifier></type><name>_timestamp</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>elftc_version</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
