<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/elftoolchain/libpe/libpe.h">



























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>_LIBPE_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_LIBPE_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/types.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"pe.h"</cpp:file></cpp:include>


<typedef>typedef <type><name><name>struct</name> <name>_PE</name></name></type> <name>PE</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>_PE_Scn</name></name></type> <name>PE_Scn</name>;</typedef>


<typedef>typedef <type><struct>struct <name>PE_Buffer</name> <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>pb_align</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>off_t</name></type> <name>pb_off</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>pb_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>pb_buf</name></decl>;</decl_stmt>
}</block></struct></type> <name>PE_Buffer</name>;</typedef>


<typedef>typedef <type><enum>enum <block>{
<decl><name>PE_O_UNKNOWN</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>PE_O_PE32</name></decl>,
<decl><name>PE_O_PE32P</name></decl>,
<decl><name>PE_O_COFF</name></decl>,
}</block></enum></type> <name>PE_Object</name>;</typedef>


<typedef>typedef <type><enum>enum <block>{
<decl><name>PE_C_NULL</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>PE_C_CLR</name></decl>,
<decl><name>PE_C_FDDONE</name></decl>,
<decl><name>PE_C_FDREAD</name></decl>,
<decl><name>PE_C_RDWR</name></decl>,
<decl><name>PE_C_READ</name></decl>,
<decl><name>PE_C_SET</name></decl>,
<decl><name>PE_C_WRITE</name></decl>,
<decl><name>PE_C_NUM</name></decl>
}</block></enum></type> <name>PE_Cmd</name>;</typedef>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_F_DIRTY</name></cpp:macro> <cpp:value>0x001U</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_F_STRIP_DOS_STUB</name></cpp:macro> <cpp:value>0x002U</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_F_STRIP_RICH_HEADER</name></cpp:macro> <cpp:value>0x004U</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_F_STRIP_SYMTAB</name></cpp:macro> <cpp:value>0x008U</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_F_STRIP_DEBUG</name></cpp:macro> <cpp:value>0x010U</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PE_F_STRIP_SECTION</name></cpp:macro> <cpp:value>0x020U</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<function_decl><type><name>PE_CoffHdr</name> <modifier>*</modifier></type><name>pe_coff_header</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>pe_cntl</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>PE_Cmd</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>PE_DataDir</name> <modifier>*</modifier></type><name>pe_data_dir</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>pe_finish</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>pe_flag</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>PE_Cmd</name></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>pe_flag_buffer</name><parameter_list>(<parameter><decl><type><name>PE_Buffer</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>PE_Cmd</name></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>pe_flag_coff_header</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>PE_Cmd</name></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>pe_flag_data_dir</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>PE_Cmd</name></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>pe_flag_dos_header</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>PE_Cmd</name></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>pe_flag_opt_header</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>PE_Cmd</name></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>pe_flag_section_header</name><parameter_list>(<parameter><decl><type><name>PE_Scn</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>PE_Cmd</name></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>pe_flag_scn</name><parameter_list>(<parameter><decl><type><name>PE_Scn</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>PE_Cmd</name></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>PE_Buffer</name> <modifier>*</modifier></type><name>pe_getbuffer</name><parameter_list>(<parameter><decl><type><name>PE_Scn</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>PE_Buffer</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>PE_Scn</name> <modifier>*</modifier></type><name>pe_getscn</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>PE</name> <modifier>*</modifier></type><name>pe_init</name><parameter_list>(<parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>PE_Cmd</name></type></decl></parameter>, <parameter><decl><type><name>PE_Object</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>PE_Scn</name> <modifier>*</modifier></type><name>pe_insertscn</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>PE_DosHdr</name> <modifier>*</modifier></type><name>pe_msdos_header</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>pe_msdos_stub</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>size_t</name></type> <name>pe_ndxscn</name><parameter_list>(<parameter><decl><type><name>PE_Scn</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>PE_Buffer</name> <modifier>*</modifier></type><name>pe_newbuffer</name><parameter_list>(<parameter><decl><type><name>PE_Scn</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>PE_Scn</name> <modifier>*</modifier></type><name>pe_newscn</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>PE_Scn</name> <modifier>*</modifier></type><name>pe_nextscn</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>PE_Scn</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>PE_Object</name></type> <name>pe_object</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>PE_OptHdr</name> <modifier>*</modifier></type><name>pe_opt_header</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>PE_RichHdr</name> <modifier>*</modifier></type><name>pe_rich_header</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>pe_rich_header_validate</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>PE_SecHdr</name> <modifier>*</modifier></type><name>pe_section_header</name><parameter_list>(<parameter><decl><type><name>PE_Scn</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>off_t</name></type> <name>pe_update</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>pe_update_coff_header</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>PE_CoffHdr</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>pe_update_opt_header</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>PE_OptHdr</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>pe_update_data_dir</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>PE_DataDir</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ps_update_msdos_header</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>PE_DosHdr</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>ps_update_msdos_stub</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>pe_update_section_header</name><parameter_list>(<parameter><decl><type><name>PE_Scn</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>PE_SecHdr</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>pe_update_symtab</name><parameter_list>(<parameter><decl><type><name>PE</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>int</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
