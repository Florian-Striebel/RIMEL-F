<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/elftoolchain/libdwarf/_libdwarf.h">




























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__LIBDWARF_H_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__LIBDWARF_H_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/param.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/queue.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;assert.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;limits.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;gelf.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"dwarf.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"libdwarf.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"uthash.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"_elftc.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DWARF_DIE_HASH_SIZE</name></cpp:macro> <cpp:value>8191</cpp:value></cpp:define>

<struct>struct <name>_libdwarf_globals</name> <block>{
<decl_stmt><decl><type><name>Dwarf_Handler</name></type> <name>errhand</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Ptr</name></type> <name>errarg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>applyreloc</name></decl>;</decl_stmt>
}</block>;</struct>

<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>_libdwarf_globals</name></name></type> <name>_libdwarf</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>_DWARF_SET_ERROR</name><parameter_list>(<parameter><type><name>_d</name></type></parameter>, <parameter><type><name>_e</name></type></parameter>, <parameter><type><name>_err</name></type></parameter>, <parameter><type><name>_elf_err</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_dwarf_set_error(_d, _e, _err, _elf_err, __func__, __LINE__)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DWARF_SET_ERROR</name><parameter_list>(<parameter><type><name>_d</name></type></parameter>, <parameter><type><name>_e</name></type></parameter>, <parameter><type><name>_err</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_DWARF_SET_ERROR(_d, _e, _err, 0)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DWARF_SET_ELF_ERROR</name><parameter_list>(<parameter><type><name>_d</name></type></parameter>, <parameter><type><name>_e</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_DWARF_SET_ERROR(_d, _e, DW_DLE_ELF, elf_errno())</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WRITE_VALUE</name><parameter_list>(<parameter><type><name>value</name></type></parameter>, <parameter><type><name>bytes</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>dbg-&gt;write_alloc(&amp;ds-&gt;ds_data, &amp;ds-&gt;ds_cap, &amp;ds-&gt;ds_size, (value), (bytes), error)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WRITE_ULEB128</name><parameter_list>(<parameter><type><name>value</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_dwarf_write_uleb128_alloc(&amp;ds-&gt;ds_data, &amp;ds-&gt;ds_cap, &amp;ds-&gt;ds_size, (value), error)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WRITE_SLEB128</name><parameter_list>(<parameter><type><name>value</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_dwarf_write_sleb128_alloc(&amp;ds-&gt;ds_data, &amp;ds-&gt;ds_cap, &amp;ds-&gt;ds_size, (value), error)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WRITE_STRING</name><parameter_list>(<parameter><type><name>string</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_dwarf_write_string_alloc(&amp;ds-&gt;ds_data, &amp;ds-&gt;ds_cap, &amp;ds-&gt;ds_size, (string), error)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WRITE_BLOCK</name><parameter_list>(<parameter><type><name>blk</name></type></parameter>, <parameter><type><name>size</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_dwarf_write_block_alloc(&amp;ds-&gt;ds_data, &amp;ds-&gt;ds_cap, &amp;ds-&gt;ds_size, (blk), (size), error)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>WRITE_PADDING</name><parameter_list>(<parameter><type><name>byte</name></type></parameter>, <parameter><type><name>cnt</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>_dwarf_write_padding_alloc(&amp;ds-&gt;ds_data, &amp;ds-&gt;ds_cap, &amp;ds-&gt;ds_size, (byte), (cnt), error)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RCHECK</name><parameter_list>(<parameter><type><name>expr</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { ret = expr; if (ret != DW_DLE_NONE) goto gen_fail; } while(0)</cpp:value></cpp:define>






<typedef>typedef <type><name><name>struct</name> <name>_Dwarf_CU</name></name> <modifier>*</modifier></type><name>Dwarf_CU</name>;</typedef>

<struct>struct <name>_Dwarf_AttrDef</name> <block>{
<decl_stmt><decl><type><name>Dwarf_Half</name></type> <name>ad_attrib</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Half</name></type> <name>ad_form</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>ad_offset</name></decl>;</decl_stmt>
<macro><name>STAILQ_ENTRY</name><argument_list>(<argument>_Dwarf_AttrDef</argument>)</argument_list></macro> <expr_stmt><expr><name>ad_next</name></expr>;</expr_stmt>
}</block>;</struct>

<struct>struct <name>_Dwarf_Attribute</name> <block>{
<decl_stmt><decl><type><name>Dwarf_Die</name></type> <name>at_die</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Die</name></type> <name>at_refdie</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>at_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Half</name></type> <name>at_attrib</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Half</name></type> <name>at_form</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>at_indirect</name></decl>;</decl_stmt>
<union>union <block>{
<decl_stmt><decl><type><name>uint64_t</name></type> <name>u64</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int64_t</name></type> <name>s64</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>s</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>u8p</name></decl>;</decl_stmt>
}</block> <decl><name><name>u</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</union>
<decl_stmt><decl><type><name>Dwarf_Block</name></type> <name>at_block</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Locdesc</name> <modifier>*</modifier></type><name>at_ld</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_P_Expr</name></type> <name>at_expr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>at_relsym</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>at_relsec</name></decl>;</decl_stmt>
<macro><name>STAILQ_ENTRY</name><argument_list>(<argument>_Dwarf_Attribute</argument>)</argument_list></macro> <expr_stmt><expr><name>at_next</name></expr>;</expr_stmt>
}</block>;</struct>

<struct>struct <name>_Dwarf_Abbrev</name> <block>{
<decl_stmt><decl><type><name>uint64_t</name></type> <name>ab_entry</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>ab_tag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>ab_children</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>ab_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>ab_length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>ab_atnum</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>UT_hash_handle</name></type> <name>ab_hh</name></decl>;</decl_stmt>
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_AttrDef</argument>)</argument_list></macro> <expr_stmt><expr><name>ab_attrdef</name></expr>;</expr_stmt>
}</block>;</struct>

<struct>struct <name>_Dwarf_Die</name> <block>{
<decl_stmt><decl><type><name>Dwarf_Die</name></type> <name>die_parent</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Die</name></type> <name>die_child</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Die</name></type> <name>die_left</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Die</name></type> <name>die_right</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>die_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>die_next_off</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>die_abnum</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Abbrev</name></type> <name>die_ab</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Tag</name></type> <name>die_tag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Debug</name></type> <name>die_dbg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_CU</name></type> <name>die_cu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>die_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Attribute</name> <modifier>*</modifier></type><name>die_attrarray</name></decl>;</decl_stmt>
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_Attribute</argument>)</argument_list></macro> <expr_stmt><expr><name>die_attr</name></expr>;</expr_stmt>
<macro><name>STAILQ_ENTRY</name><argument_list>(<argument>_Dwarf_Die</argument>)</argument_list></macro> <expr_stmt><expr><name>die_pro_next</name></expr>;</expr_stmt>
}</block>;</struct>

<struct>struct <name>_Dwarf_P_Expr_Entry</name> <block>{
<decl_stmt><decl><type><name>Dwarf_Loc</name></type> <name>ee_loc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>ee_sym</name></decl>;</decl_stmt>
<macro><name>STAILQ_ENTRY</name><argument_list>(<argument>_Dwarf_P_Expr_Entry</argument>)</argument_list></macro> <expr_stmt><expr><name>ee_next</name></expr>;</expr_stmt>
}</block>;</struct>

<struct>struct <name>_Dwarf_P_Expr</name> <block>{
<decl_stmt><decl><type><name>Dwarf_Debug</name></type> <name>pe_dbg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>pe_block</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>pe_invalid</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>pe_length</name></decl>;</decl_stmt>
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_P_Expr_Entry</argument>)</argument_list></macro> <expr_stmt><expr><name>pe_eelist</name></expr>;</expr_stmt>
<macro><name>STAILQ_ENTRY</name><argument_list>(<argument>_Dwarf_P_Expr</argument>)</argument_list></macro> <expr_stmt><expr><name>pe_next</name></expr>;</expr_stmt>
}</block>;</struct>

<struct>struct <name>_Dwarf_Line</name> <block>{
<decl_stmt><decl><type><name>Dwarf_LineInfo</name></type> <name>ln_li</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Addr</name></type> <name>ln_addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>ln_symndx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>ln_fileno</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>ln_lineno</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Signed</name></type> <name>ln_column</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Bool</name></type> <name>ln_bblock</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Bool</name></type> <name>ln_stmt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Bool</name></type> <name>ln_endseq</name></decl>;</decl_stmt>
<macro><name>STAILQ_ENTRY</name><argument_list>(<argument>_Dwarf_Line</argument>)</argument_list></macro> <expr_stmt><expr><name>ln_next</name></expr>;</expr_stmt>
}</block>;</struct>

<struct>struct <name>_Dwarf_LineFile</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>lf_fname</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>lf_fullpath</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>lf_dirndx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>lf_mtime</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>lf_size</name></decl>;</decl_stmt>
<macro><name>STAILQ_ENTRY</name><argument_list>(<argument>_Dwarf_LineFile</argument>)</argument_list></macro> <expr_stmt><expr><name>lf_next</name></expr>;</expr_stmt>
}</block>;</struct>

<struct>struct <name>_Dwarf_LineInfo</name> <block>{
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>li_length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Half</name></type> <name>li_version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>li_hdrlen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Small</name></type> <name>li_minlen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Small</name></type> <name>li_maxop</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Small</name></type> <name>li_defstmt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int8_t</name></type> <name>li_lbase</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Small</name></type> <name>li_lrange</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Small</name></type> <name>li_opbase</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Small</name> <modifier>*</modifier></type><name>li_oplen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>li_incdirs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>li_inclen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>li_lfnarray</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>li_lflen</name></decl>;</decl_stmt>
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_LineFile</argument>)</argument_list></macro> <expr_stmt><expr><name>li_lflist</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>Dwarf_Line</name> <modifier>*</modifier></type><name>li_lnarray</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>li_lnlen</name></decl>;</decl_stmt>
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_Line</argument>)</argument_list></macro> <expr_stmt><expr><name>li_lnlist</name></expr>;</expr_stmt>
}</block>;</struct>

<struct>struct <name>_Dwarf_NamePair</name> <block>{
<decl_stmt><decl><type><name>Dwarf_NameTbl</name></type> <name>np_nt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Die</name></type> <name>np_die</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>np_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>np_name</name></decl>;</decl_stmt>
<macro><name>STAILQ_ENTRY</name><argument_list>(<argument>_Dwarf_NamePair</argument>)</argument_list></macro> <expr_stmt><expr><name>np_next</name></expr>;</expr_stmt>
}</block>;</struct>

<struct>struct <name>_Dwarf_NameTbl</name> <block>{
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>nt_length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Half</name></type> <name>nt_version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_CU</name></type> <name>nt_cu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Off</name></type> <name>nt_cu_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>nt_cu_length</name></decl>;</decl_stmt>
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_NamePair</argument>)</argument_list></macro> <expr_stmt><expr><name>nt_nplist</name></expr>;</expr_stmt>
<macro><name>STAILQ_ENTRY</name><argument_list>(<argument>_Dwarf_NameTbl</argument>)</argument_list></macro> <expr_stmt><expr><name>nt_next</name></expr>;</expr_stmt>
}</block>;</struct>

<struct>struct <name>_Dwarf_NameSec</name> <block>{
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_NameTbl</argument>)</argument_list></macro> <expr_stmt><expr><name>ns_ntlist</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>Dwarf_NamePair</name> <modifier>*</modifier></type><name>ns_array</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>ns_len</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>_Dwarf_Fde</name> <block>{
<decl_stmt><decl><type><name>Dwarf_Debug</name></type> <name>fde_dbg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Cie</name></type> <name>fde_cie</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_FrameSec</name></type> <name>fde_fs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Ptr</name></type> <name>fde_addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>fde_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>fde_length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>fde_cieoff</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>fde_initloc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>fde_adrange</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>fde_auglen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>fde_augdata</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>fde_inst</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>fde_instlen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>fde_instcap</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>fde_symndx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>fde_esymndx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Addr</name></type> <name>fde_eoff</name></decl>;</decl_stmt>
<macro><name>STAILQ_ENTRY</name><argument_list>(<argument>_Dwarf_Fde</argument>)</argument_list></macro> <expr_stmt><expr><name>fde_next</name></expr>;</expr_stmt>
}</block>;</struct>

<struct>struct <name>_Dwarf_Cie</name> <block>{
<decl_stmt><decl><type><name>Dwarf_Debug</name></type> <name>cie_dbg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>cie_index</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>cie_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>cie_length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Half</name></type> <name>cie_version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>cie_augment</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>cie_ehdata</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>cie_addrsize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>cie_segmentsize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>cie_caf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Signed</name></type> <name>cie_daf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>cie_ra</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>cie_auglen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>cie_augdata</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>cie_fde_encode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Ptr</name></type> <name>cie_initinst</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>cie_instlen</name></decl>;</decl_stmt>
<macro><name>STAILQ_ENTRY</name><argument_list>(<argument>_Dwarf_Cie</argument>)</argument_list></macro> <expr_stmt><expr><name>cie_next</name></expr>;</expr_stmt>
}</block>;</struct>

<struct>struct <name>_Dwarf_FrameSec</name> <block>{
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_Cie</argument>)</argument_list></macro> <expr_stmt><expr><name>fs_cielist</name></expr>;</expr_stmt>
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_Fde</argument>)</argument_list></macro> <expr_stmt><expr><name>fs_fdelist</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>Dwarf_Cie</name> <modifier>*</modifier></type><name>fs_ciearray</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>fs_cielen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Fde</name> <modifier>*</modifier></type><name>fs_fdearray</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>fs_fdelen</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>_Dwarf_Arange</name> <block>{
<decl_stmt><decl><type><name>Dwarf_ArangeSet</name></type> <name>ar_as</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>ar_address</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>ar_range</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>ar_symndx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>ar_esymndx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Addr</name></type> <name>ar_eoff</name></decl>;</decl_stmt>
<macro><name>STAILQ_ENTRY</name><argument_list>(<argument>_Dwarf_Arange</argument>)</argument_list></macro> <expr_stmt><expr><name>ar_next</name></expr>;</expr_stmt>
}</block>;</struct>

<struct>struct <name>_Dwarf_ArangeSet</name> <block>{
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>as_length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Half</name></type> <name>as_version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Off</name></type> <name>as_cu_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_CU</name></type> <name>as_cu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Small</name></type> <name>as_addrsz</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Small</name></type> <name>as_segsz</name></decl>;</decl_stmt>
<macro><name>STAILQ_HEAD</name> <argument_list>(<argument/>, <argument>_Dwarf_Arange</argument>)</argument_list></macro> <expr_stmt><expr><name>as_arlist</name></expr>;</expr_stmt>
<macro><name>STAILQ_ENTRY</name><argument_list>(<argument>_Dwarf_ArangeSet</argument>)</argument_list></macro> <expr_stmt><expr><name>as_next</name></expr>;</expr_stmt>
}</block>;</struct>

<struct>struct <name>_Dwarf_MacroSet</name> <block>{
<decl_stmt><decl><type><name>Dwarf_Macro_Details</name> <modifier>*</modifier></type><name>ms_mdlist</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>ms_cnt</name></decl>;</decl_stmt>
<macro><name>STAILQ_ENTRY</name><argument_list>(<argument>_Dwarf_MacroSet</argument>)</argument_list></macro> <expr_stmt><expr><name>ms_next</name></expr>;</expr_stmt>
}</block>;</struct>

<struct>struct <name>_Dwarf_Rangelist</name> <block>{
<decl_stmt><decl><type><name>Dwarf_CU</name></type> <name>rl_cu</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>rl_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Ranges</name> <modifier>*</modifier></type><name>rl_rgarray</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>rl_rglen</name></decl>;</decl_stmt>
<macro><name>STAILQ_ENTRY</name><argument_list>(<argument>_Dwarf_Rangelist</argument>)</argument_list></macro> <expr_stmt><expr><name>rl_next</name></expr>;</expr_stmt>
}</block>;</struct>

<struct>struct <name>_Dwarf_CU</name> <block>{
<decl_stmt><decl><type><name>Dwarf_Debug</name></type> <name>cu_dbg</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Off</name></type> <name>cu_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>cu_length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>cu_length_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint16_t</name></type> <name>cu_version</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>cu_abbrev_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>cu_abbrev_offset_cur</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>cu_abbrev_loaded</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>cu_abbrev_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>cu_lineno_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>cu_pointer_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>cu_dwarf_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Sig8</name></type> <name>cu_type_sig</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>cu_type_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Off</name></type> <name>cu_next_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>cu_1st_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>cu_pass2</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_LineInfo</name></type> <name>cu_lineinfo</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Abbrev</name></type> <name>cu_abbrev_hash</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Bool</name></type> <name>cu_is_info</name></decl>;</decl_stmt>
<macro><name>STAILQ_ENTRY</name><argument_list>(<argument>_Dwarf_CU</argument>)</argument_list></macro> <expr_stmt><expr><name>cu_next</name></expr>;</expr_stmt>
}</block>;</struct>

<typedef>typedef <type><struct>struct <name>_Dwarf_Section</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ds_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Small</name> <modifier>*</modifier></type><name>ds_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>ds_addr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>ds_size</name></decl>;</decl_stmt>
}</block></struct></type> <name>Dwarf_Section</name>;</typedef>

<typedef>typedef <type><struct>struct <name>_Dwarf_P_Section</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>ds_name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Small</name> <modifier>*</modifier></type><name>ds_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>ds_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>ds_cap</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>ds_ndx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>ds_symndx</name></decl>;</decl_stmt>
<macro><name>STAILQ_ENTRY</name><argument_list>(<argument>_Dwarf_P_Section</argument>)</argument_list></macro> <expr_stmt><expr><name>ds_next</name></expr>;</expr_stmt>
}</block></struct></type> *<name>Dwarf_P_Section</name>;</typedef>

<typedef>typedef <type><struct>struct <name>_Dwarf_Rel_Entry</name> <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name>dre_type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name>dre_length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>dre_offset</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>dre_addend</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>dre_symndx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>dre_secname</name></decl>;</decl_stmt>
<macro><name>STAILQ_ENTRY</name><argument_list>(<argument>_Dwarf_Rel_Entry</argument>)</argument_list></macro> <expr_stmt><expr><name>dre_next</name></expr>;</expr_stmt>
}</block></struct></type> *<name>Dwarf_Rel_Entry</name>;</typedef>

<typedef>typedef <type><struct>struct <name>_Dwarf_Rel_Section</name> <block>{
<decl_stmt><decl><type><name><name>struct</name> <name>_Dwarf_P_Section</name></name> <modifier>*</modifier></type><name>drs_ds</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>_Dwarf_P_Section</name></name> <modifier>*</modifier></type><name>drs_ref</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>Dwarf_Relocation_Data_s</name></name> <modifier>*</modifier></type><name>drs_drd</name></decl>;</decl_stmt>
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_Rel_Entry</argument>)</argument_list></macro> <expr_stmt><expr><name>drs_dre</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>drs_drecnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>drs_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>drs_addend</name></decl>;</decl_stmt>
<macro><name>STAILQ_ENTRY</name><argument_list>(<argument>_Dwarf_Rel_Section</argument>)</argument_list></macro> <expr_stmt><expr><name>drs_next</name></expr>;</expr_stmt>
}</block></struct></type> *<name>Dwarf_Rel_Section</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>Elf_Data</name> <modifier>*</modifier></type><name>ed_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>ed_alloc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>ed_size</name></decl>;</decl_stmt>
}</block></struct></type> <name>Dwarf_Elf_Data</name>;</typedef>

<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>Elf</name> <modifier>*</modifier></type><name>eo_elf</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GElf_Ehdr</name></type> <name>eo_ehdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GElf_Shdr</name> <modifier>*</modifier></type><name>eo_shdr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Elf_Data</name> <modifier>*</modifier></type><name>eo_data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>eo_seccnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>eo_strndx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Obj_Access_Methods</name></type> <name>eo_methods</name></decl>;</decl_stmt>
}</block></struct></type> <name>Dwarf_Elf_Object</name>;</typedef>

<struct>struct <name>_Dwarf_Debug</name> <block>{
<decl_stmt><decl><type><name>Dwarf_Obj_Access_Interface</name> <modifier>*</modifier></type><name>dbg_iface</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Section</name> <modifier>*</modifier></type><name>dbg_section</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Section</name> <modifier>*</modifier></type><name>dbg_info_sec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Off</name></type> <name>dbg_info_off</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Section</name> <modifier>*</modifier></type><name>dbg_types_sec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Off</name></type> <name>dbg_types_off</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>dbg_seccnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dbg_mode</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dbg_pointer_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dbg_offset_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dbg_info_loaded</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>dbg_types_loaded</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Half</name></type> <name>dbg_machine</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Handler</name></type> <name>dbg_errhand</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Ptr</name></type> <name>dbg_errarg</name></decl>;</decl_stmt>
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_CU</argument>)</argument_list></macro> <expr_stmt><expr><name>dbg_cu</name></expr>;</expr_stmt>
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_CU</argument>)</argument_list></macro> <expr_stmt><expr><name>dbg_tu</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>Dwarf_CU</name></type> <name>dbg_cu_current</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_CU</name></type> <name>dbg_tu_current</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_NameSec</name></type> <name>dbg_globals</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_NameSec</name></type> <name>dbg_pubtypes</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_NameSec</name></type> <name>dbg_weaks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_NameSec</name></type> <name>dbg_funcs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_NameSec</name></type> <name>dbg_vars</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_NameSec</name></type> <name>dbg_types</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_FrameSec</name></type> <name>dbg_frame</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_FrameSec</name></type> <name>dbg_eh_frame</name></decl>;</decl_stmt>
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_ArangeSet</argument>)</argument_list></macro> <expr_stmt><expr><name>dbg_aslist</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>Dwarf_Arange</name> <modifier>*</modifier></type><name>dbg_arange_array</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>dbg_arange_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>dbg_strtab</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>dbg_strtab_cap</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>dbg_strtab_size</name></decl>;</decl_stmt>
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_MacroSet</argument>)</argument_list></macro> <expr_stmt><expr><name>dbg_mslist</name></expr>;</expr_stmt>
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_Rangelist</argument>)</argument_list></macro> <expr_stmt><expr><name>dbg_rllist</name></expr>;</expr_stmt>
<function_decl><type><name>uint64_t</name></type> (<modifier>*</modifier><name>read</name>)<parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> (<modifier>*</modifier><name>write</name>)<parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> (<modifier>*</modifier><name>write_alloc</name>)<parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint64_t</name></type> (<modifier>*</modifier><name>decode</name>)<parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>

<decl_stmt><decl><type><name>Dwarf_Half</name></type> <name>dbg_frame_rule_table_size</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Half</name></type> <name>dbg_frame_rule_initial_value</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Half</name></type> <name>dbg_frame_cfa_value</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Half</name></type> <name>dbg_frame_same_value</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Half</name></type> <name>dbg_frame_undefined_value</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>Dwarf_Regtable3</name> <modifier>*</modifier></type><name>dbg_internal_reg_table</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>dbgp_flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>dbgp_isa</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Callback_Func</name></type> <name>dbgp_func</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Callback_Func_b</name></type> <name>dbgp_func_b</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Die</name></type> <name>dbgp_root_die</name></decl>;</decl_stmt>
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_Die</argument>)</argument_list></macro> <expr_stmt><expr><name>dbgp_dielist</name></expr>;</expr_stmt>
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_P_Expr</argument>)</argument_list></macro> <expr_stmt><expr><name>dbgp_pelist</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>Dwarf_LineInfo</name></type> <name>dbgp_lineinfo</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_ArangeSet</name></type> <name>dbgp_as</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Macro_Details</name> <modifier>*</modifier></type><name>dbgp_mdlist</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>dbgp_mdcnt</name></decl>;</decl_stmt>
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_Cie</argument>)</argument_list></macro> <expr_stmt><expr><name>dbgp_cielist</name></expr>;</expr_stmt>
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_Fde</argument>)</argument_list></macro> <expr_stmt><expr><name>dbgp_fdelist</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>dbgp_cielen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>dbgp_fdelen</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_NameTbl</name></type> <name>dbgp_pubs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_NameTbl</name></type> <name>dbgp_weaks</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_NameTbl</name></type> <name>dbgp_funcs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_NameTbl</name></type> <name>dbgp_types</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_NameTbl</name></type> <name>dbgp_vars</name></decl>;</decl_stmt>
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_P_Section</argument>)</argument_list></macro> <expr_stmt><expr><name>dbgp_seclist</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>dbgp_seccnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_P_Section</name></type> <name>dbgp_secpos</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_P_Section</name></type> <name>dbgp_info</name></decl>;</decl_stmt>
<macro><name>STAILQ_HEAD</name><argument_list>(<argument/>, <argument>_Dwarf_Rel_Section</argument>)</argument_list></macro> <expr_stmt><expr><name>dbgp_drslist</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>Dwarf_Unsigned</name></type> <name>dbgp_drscnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>Dwarf_Rel_Section</name></type> <name>dbgp_drspos</name></decl>;</decl_stmt>
}</block>;</struct>





<function_decl><type><name>int</name></type> <name>_dwarf_abbrev_add</name><parameter_list>(<parameter><decl><type><name>Dwarf_CU</name></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type></decl></parameter>,
<parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Abbrev</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_abbrev_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_CU</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_abbrev_find</name><parameter_list>(<parameter><decl><type><name>Dwarf_CU</name></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Abbrev</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_abbrev_gen</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_abbrev_parse</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_CU</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Abbrev</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_add_AT_dataref</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_P_Die</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Half</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_P_Attribute</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_add_string_attr</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Die</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_P_Attribute</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Half</name></type></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_alloc</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_arange_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_arange_gen</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_arange_init</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_arange_pro_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_attr_alloc</name><parameter_list>(<parameter><decl><type><name>Dwarf_Die</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Attribute</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>Dwarf_Attribute</name></type> <name>_dwarf_attr_find</name><parameter_list>(<parameter><decl><type><name>Dwarf_Die</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Half</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_attr_gen</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_P_Section</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Rel_Section</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_CU</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Die</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_attr_init</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Section</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_CU</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Die</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_AttrDef</name></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_attrdef_add</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Abbrev</name></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>,
<parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_AttrDef</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint64_t</name></type> <name>_dwarf_decode_lsb</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint64_t</name></type> <name>_dwarf_decode_msb</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int64_t</name></type> <name>_dwarf_decode_sleb128</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint64_t</name></type> <name>_dwarf_decode_uleb128</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_deinit</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_die_alloc</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Die</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_die_count_links</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Die</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_P_Die</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_P_Die</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_P_Die</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>Dwarf_Die</name></type> <name>_dwarf_die_find</name><parameter_list>(<parameter><decl><type><name>Dwarf_Die</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_die_gen</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_CU</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Rel_Section</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_die_link</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Die</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_P_Die</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_P_Die</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_P_Die</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_P_Die</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_die_parse</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Section</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_CU</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>,
<parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Die</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_die_pro_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_elf_deinit</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_elf_init</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Elf</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_elf_load_section</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Half</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Small</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>Dwarf_Endianness</name></type> <name>_dwarf_elf_get_byte_order</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>Dwarf_Small</name></type> <name>_dwarf_elf_get_length_size</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>Dwarf_Small</name></type> <name>_dwarf_elf_get_pointer_size</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>Dwarf_Unsigned</name></type> <name>_dwarf_elf_get_section_count</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_elf_get_section_info</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Half</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Obj_Access_Section</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_expr_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_expr_into_block</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Expr</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>Dwarf_Section</name> <modifier>*</modifier></type><name>_dwarf_find_next_types_section</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Section</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>Dwarf_Section</name> <modifier>*</modifier></type><name>_dwarf_find_section</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_frame_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_frame_fde_add_inst</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Fde</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Small</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_frame_gen</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_frame_get_fop</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Frame_Op</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Signed</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_frame_get_internal_table</name><parameter_list>(<parameter><decl><type><name>Dwarf_Fde</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Addr</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Regtable3</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Addr</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_frame_interal_table_init</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_frame_params_init</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_frame_pro_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_frame_regtable_copy</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Regtable3</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Regtable3</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_frame_section_load</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_frame_section_load_eh</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_generate_sections</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>Dwarf_Unsigned</name></type> <name>_dwarf_get_reloc_type</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_get_reloc_size</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_info_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_info_first_cu</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_info_first_tu</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_info_gen</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_info_load</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Bool</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Bool</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_info_next_cu</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_info_next_tu</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_info_pro_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_init</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Handler</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Ptr</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_lineno_gen</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_lineno_init</name><parameter_list>(<parameter><decl><type><name>Dwarf_Die</name></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_lineno_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_LineInfo</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_lineno_pro_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_loc_fill_locdesc</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Locdesc</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_loc_fill_locexpr</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Locdesc</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_loc_add</name><parameter_list>(<parameter><decl><type><name>Dwarf_Die</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Attribute</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_loc_expr_add_atom</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Small</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_loclist_find</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_CU</name></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Locdesc</name> <modifier>*</modifier><modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Signed</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_macinfo_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_macinfo_gen</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_macinfo_init</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_macinfo_pro_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_nametbl_init</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_NameSec</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Section</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_nametbl_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_NameSec</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_nametbl_gen</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_NameTbl</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_nametbl_pro_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_NameTbl</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_pro_callback</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Unsigned</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>Dwarf_P_Section</name></type> <name>_dwarf_pro_find_section</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_ranges_add</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_CU</name></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Rangelist</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_ranges_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_ranges_find</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Rangelist</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint64_t</name></type> <name>_dwarf_read_lsb</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint64_t</name></type> <name>_dwarf_read_msb</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int64_t</name></type> <name>_dwarf_read_sleb128</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint64_t</name></type> <name>_dwarf_read_uleb128</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>_dwarf_read_string</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint8_t</name> <modifier>*</modifier></type><name>_dwarf_read_block</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_reloc_section_finalize</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Rel_Section</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_reloc_entry_add</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Rel_Section</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_P_Section</name></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>char</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>char</name></decl></parameter>,
<parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_reloc_entry_add_pair</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Rel_Section</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_P_Section</name></type></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>char</name></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_reloc_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_reloc_gen</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_reloc_section_gen</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Rel_Section</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_reloc_section_init</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Rel_Section</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_P_Section</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_reloc_section_free</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Rel_Section</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_section_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_section_callback</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_P_Section</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Unsigned</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_section_free</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_P_Section</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_section_init</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_P_Section</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_set_error</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_strtab_add</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_strtab_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_strtab_gen</name><parameter_list>(<parameter><decl><type><name>Dwarf_P_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>_dwarf_strtab_get_table</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_strtab_init</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_type_unit_cleanup</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_write_block</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_write_block_alloc</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_write_lsb</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_write_lsb_alloc</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_write_msb</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_write_msb_alloc</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>int</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_write_padding</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_write_padding_alloc</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>uint8_t</name></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>_dwarf_write_string</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_write_string_alloc</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_write_sleb128</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int64_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_write_sleb128_alloc</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>int64_t</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_write_uleb128</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>_dwarf_write_uleb128_alloc</name><parameter_list>(<parameter><decl><type><name>uint8_t</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>,
<parameter><decl><type><name>uint64_t</name></type></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
