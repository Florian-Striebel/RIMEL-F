<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/elftoolchain/libdwarf/libdwarf_error.c">

























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"_libdwarf.h"</cpp:file></cpp:include>

<expr_stmt><expr><call><name>ELFTC_VCSID</name><argument_list>(<argument><expr><literal type="string">"$Id: libdwarf_error.c 2070 2011-10-27 03:05:32Z jkoshy $"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>void</name></type>
<name>_dwarf_set_error</name><parameter_list>(<parameter><decl><type><name>Dwarf_Debug</name></type> <name>dbg</name></decl></parameter>, <parameter><decl><type><name>Dwarf_Error</name> <modifier>*</modifier></type><name>error</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>errorcode</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>elferrorcode</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>functionname</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>linenumber</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>Dwarf_Error</name></type> <name>de</name></decl>;</decl_stmt>

<expr_stmt><expr><name><name>de</name><operator>.</operator><name>err_error</name></name> <operator>=</operator> <name>errorcode</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>de</name><operator>.</operator><name>err_elferror</name></name> <operator>=</operator> <name>elferrorcode</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>de</name><operator>.</operator><name>err_func</name></name> <operator>=</operator> <name>functionname</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>de</name><operator>.</operator><name>err_line</name></name> <operator>=</operator> <name>linenumber</name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>de</name><operator>.</operator><name>err_msg</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>=</operator> <literal type="char">'\0'</literal></expr>;</expr_stmt>








<if_stmt><if>if <condition>(<expr><name>error</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><operator>*</operator><name>error</name> <operator>=</operator> <name>de</name></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name>dbg</name> <operator>&amp;&amp;</operator> <name><name>dbg</name><operator>-&gt;</operator><name>dbg_errhand</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name><name>dbg</name><operator>-&gt;</operator><name>dbg_errhand</name></name><argument_list>(<argument><expr><name>de</name></expr></argument>, <argument><expr><name><name>dbg</name><operator>-&gt;</operator><name>dbg_errarg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name><name>_libdwarf</name><operator>.</operator><name>errhand</name></name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name><name>_libdwarf</name><operator>.</operator><name>errhand</name></name><argument_list>(<argument><expr><name>de</name></expr></argument>, <argument><expr><name><name>_libdwarf</name><operator>.</operator><name>errarg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>


</block_content>}</block></function>
</unit>
