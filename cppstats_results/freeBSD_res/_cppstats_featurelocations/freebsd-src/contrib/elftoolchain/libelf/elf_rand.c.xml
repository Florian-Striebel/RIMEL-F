<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/elftoolchain/libelf/elf_rand.c">

























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ar.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;libelf.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"_libelf.h"</cpp:file></cpp:include>

<expr_stmt><expr><call><name>ELFTC_VCSID</name><argument_list>(<argument><expr><literal type="string">"$Id: elf_rand.c 3716 2019-03-18 22:01:01Z jkoshy $"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function><type><name>off_t</name></type>
<name>elf_rand</name><parameter_list>(<parameter><decl><type><name>Elf</name> <modifier>*</modifier></type><name>ar</name></decl></parameter>, <parameter><decl><type><name>off_t</name></type> <name>offset</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>ar_hdr</name></name> <modifier>*</modifier></type><name>arh</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>off_t</name></type> <name>offset_of_member</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>ar</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <name><name>ar</name><operator>-&gt;</operator><name>e_kind</name></name> <operator>!=</operator> <name>ELF_K_AR</name> <operator>||</operator>
<operator>(</operator><name>offset</name> <operator>&amp;</operator> <literal type="number">1</literal><operator>)</operator> <operator>||</operator> <name>offset</name> <operator>&lt;</operator> <name>SARMAG</name> <operator>||</operator>
<name>offset</name> <operator>&gt;=</operator> <name><name>ar</name><operator>-&gt;</operator><name>e_rawsize</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LIBELF_SET_ERROR</name><argument_list>(<argument><expr><name>ARGUMENT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>offset_of_member</name> <operator>=</operator> <name>offset</name> <operator>+</operator> <operator>(</operator><name>off_t</name><operator>)</operator> <sizeof>sizeof<argument_list>(<argument><expr>struct <name>ar_hdr</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>offset_of_member</name> <operator>&lt;=</operator> <literal type="number">0</literal> <operator>||</operator>
<name>offset_of_member</name> <operator>&gt;=</operator> <name><name>ar</name><operator>-&gt;</operator><name>e_rawsize</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LIBELF_SET_ERROR</name><argument_list>(<argument><expr><name>ARGUMENT</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>arh</name> <operator>=</operator> <operator>(</operator>struct <name>ar_hdr</name> <operator>*</operator><operator>)</operator> <operator>(</operator><name><name>ar</name><operator>-&gt;</operator><name>e_rawfile</name></name> <operator>+</operator> <name>offset</name><operator>)</operator></expr>;</expr_stmt>


<if_stmt><if>if <condition>(<expr><name><name>arh</name><operator>-&gt;</operator><name>ar_fmag</name><index>[<expr><literal type="number">0</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'`'</literal> <operator>||</operator> <name><name>arh</name><operator>-&gt;</operator><name>ar_fmag</name><index>[<expr><literal type="number">1</literal></expr>]</index></name> <operator>!=</operator> <literal type="char">'\n'</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>LIBELF_SET_ERROR</name><argument_list>(<argument><expr><name>ARCHIVE</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name><name>ar</name><operator>-&gt;</operator><name>e_u</name><operator>.</operator><name>e_ar</name><operator>.</operator><name>e_next</name></name> <operator>=</operator> <name>offset</name></expr>;</expr_stmt>

<return>return <expr><operator>(</operator><name>offset</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>
</unit>
