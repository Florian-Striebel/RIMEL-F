<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/libcbor/src/cbor/internal/unicode.h">






<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LIBCBOR_UNICODE_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LIBCBOR_UNICODE_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cbor/common.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<enum>enum <name>_cbor_unicode_status_error</name> <block>{ <decl><name>_CBOR_UNICODE_OK</name></decl>, <decl><name>_CBOR_UNICODE_BADCP</name></decl> }</block>;</enum>


<struct>struct <name>_cbor_unicode_status</name> <block>{
<decl_stmt><decl><type><name><name>enum</name> <name>_cbor_unicode_status_error</name></name></type> <name>status</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>location</name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><name>size_t</name></type> <name>_cbor_unicode_codepoint_count</name><parameter_list>(<parameter><decl><type><name>cbor_data</name></type> <name>source</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>source_length</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>_cbor_unicode_status</name></name><modifier>*</modifier></type> <name>status</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
