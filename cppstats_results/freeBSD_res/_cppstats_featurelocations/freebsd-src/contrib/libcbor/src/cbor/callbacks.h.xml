<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/libcbor/src/cbor/callbacks.h">






<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>LIBCBOR_CALLBACKS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LIBCBOR_CALLBACKS_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cbor/cbor_export.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"cbor/common.h"</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cbor_int8_callback</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>


<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cbor_int16_callback</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>


<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cbor_int32_callback</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>


<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cbor_int64_callback</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>


<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cbor_simple_callback</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>


<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cbor_string_callback</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>cbor_data</name></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>


<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cbor_collection_callback</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>


<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cbor_float_callback</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>float</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>


<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cbor_double_callback</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>double</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>


<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cbor_bool_callback</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>bool</name></type></decl></parameter>)</parameter_list>;</function_decl></typedef>


<struct>struct <name>cbor_callbacks</name> <block>{

<decl_stmt><decl><type><name>cbor_int8_callback</name></type> <name>uint8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>cbor_int16_callback</name></type> <name>uint16</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>cbor_int32_callback</name></type> <name>uint32</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>cbor_int64_callback</name></type> <name>uint64</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>cbor_int64_callback</name></type> <name>negint64</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>cbor_int32_callback</name></type> <name>negint32</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>cbor_int16_callback</name></type> <name>negint16</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>cbor_int8_callback</name></type> <name>negint8</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>cbor_simple_callback</name></type> <name>byte_string_start</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>cbor_string_callback</name></type> <name>byte_string</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>cbor_string_callback</name></type> <name>string</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>cbor_simple_callback</name></type> <name>string_start</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>cbor_simple_callback</name></type> <name>indef_array_start</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>cbor_collection_callback</name></type> <name>array_start</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>cbor_simple_callback</name></type> <name>indef_map_start</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>cbor_collection_callback</name></type> <name>map_start</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>cbor_int64_callback</name></type> <name>tag</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>cbor_float_callback</name></type> <name>float2</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>cbor_float_callback</name></type> <name>float4</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>cbor_double_callback</name></type> <name>float8</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>cbor_simple_callback</name></type> <name>undefined</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>cbor_simple_callback</name></type> <name>null</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>cbor_bool_callback</name></type> <name>boolean</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>cbor_simple_callback</name></type> <name>indef_break</name></decl>;</decl_stmt>
}</block>;</struct>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_uint8_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_uint16_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_uint32_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_uint64_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_negint8_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_negint16_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint16_t</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_negint32_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_negint64_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_string_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>cbor_data</name></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_string_start_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_byte_string_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>cbor_data</name></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_byte_string_start_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_array_start_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_indef_array_start_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_map_start_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_indef_map_start_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_tag_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_float2_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>float</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_float4_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>float</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_float8_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>double</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_null_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_undefined_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_boolean_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>bool</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>CBOR_EXPORT</name> <name>void</name></type> <name>cbor_null_indef_break_callback</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>


<expr_stmt><expr><name>CBOR_EXPORT</name> <specifier>extern</specifier> <specifier>const</specifier> struct <name>cbor_callbacks</name> <name>cbor_empty_callbacks</name></expr>;</expr_stmt>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
