<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/libcbor/src/cbor/callbacks.c">






<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"callbacks.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CBOR_DUMMY_CALLBACK</name></cpp:macro> <cpp:value>{}</cpp:value></cpp:define>


<decl_stmt><decl><type><name>void</name></type> <name>cbor_null_uint8_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>, <argument><expr><name>uint8_t</name> <name>_val</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_uint16_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>,
<argument><expr><name>uint16_t</name> <name>_val</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_uint32_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>,
<argument><expr><name>uint32_t</name> <name>_val</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_uint64_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>,
<argument><expr><name>uint64_t</name> <name>_val</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_negint8_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>,
<argument><expr><name>uint8_t</name> <name>_val</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_negint16_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>,
<argument><expr><name>uint16_t</name> <name>_val</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_negint32_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>,
<argument><expr><name>uint32_t</name> <name>_val</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_negint64_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>,
<argument><expr><name>uint64_t</name> <name>_val</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_string_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>, <argument><expr><name>cbor_data</name> <name>_val</name></expr></argument>,
<argument><expr><name>size_t</name> <name>_val2</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_string_start_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_byte_string_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>, <argument><expr><name>cbor_data</name> <name>_val</name></expr></argument>,
<argument><expr><name>size_t</name> <name>_val2</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_byte_string_start_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_array_start_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>,
<argument><expr><name>size_t</name> <name>_val</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_indef_array_start_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_map_start_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>,
<argument><expr><name>size_t</name> <name>_val</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_indef_map_start_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_tag_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>, <argument><expr><name>uint64_t</name> <name>_val</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_float2_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>, <argument><expr><name>float</name> <name>_val</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_float4_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>, <argument><expr><name>float</name> <name>_val</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_float8_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>, <argument><expr><name>double</name> <name>_val</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_null_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_undefined_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_boolean_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>, <argument><expr><name>bool</name> <name>_val</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>void</name> <name>cbor_null_indef_break_callback</name><argument_list>(<argument><expr><name>void</name> <operator>*</operator><name>_ctx</name></expr></argument>)</argument_list> <name>CBOR_DUMMY_CALLBACK</name>

<name>CBOR_EXPORT</name> const struct <name>cbor_callbacks</name> <name>cbor_empty_callbacks</name> <init>= <expr><block>{

<expr><operator>.</operator><name>uint8</name> <operator>=</operator> <name>cbor_null_uint8_callback</name></expr>,
<expr><operator>.</operator><name>uint16</name> <operator>=</operator> <name>cbor_null_uint16_callback</name></expr>,
<expr><operator>.</operator><name>uint32</name> <operator>=</operator> <name>cbor_null_uint32_callback</name></expr>,
<expr><operator>.</operator><name>uint64</name> <operator>=</operator> <name>cbor_null_uint64_callback</name></expr>,


<expr><operator>.</operator><name>negint8</name> <operator>=</operator> <name>cbor_null_negint8_callback</name></expr>,
<expr><operator>.</operator><name>negint16</name> <operator>=</operator> <name>cbor_null_negint16_callback</name></expr>,
<expr><operator>.</operator><name>negint32</name> <operator>=</operator> <name>cbor_null_negint32_callback</name></expr>,
<expr><operator>.</operator><name>negint64</name> <operator>=</operator> <name>cbor_null_negint64_callback</name></expr>,


<expr><operator>.</operator><name>byte_string_start</name> <operator>=</operator> <name>cbor_null_byte_string_start_callback</name></expr>,
<expr><operator>.</operator><name>byte_string</name> <operator>=</operator> <name>cbor_null_byte_string_callback</name></expr>,


<expr><operator>.</operator><name>string_start</name> <operator>=</operator> <name>cbor_null_string_start_callback</name></expr>,
<expr><operator>.</operator><name>string</name> <operator>=</operator> <name>cbor_null_string_callback</name></expr>,


<expr><operator>.</operator><name>indef_array_start</name> <operator>=</operator> <name>cbor_null_indef_array_start_callback</name></expr>,
<expr><operator>.</operator><name>array_start</name> <operator>=</operator> <name>cbor_null_array_start_callback</name></expr>,


<expr><operator>.</operator><name>indef_map_start</name> <operator>=</operator> <name>cbor_null_indef_map_start_callback</name></expr>,
<expr><operator>.</operator><name>map_start</name> <operator>=</operator> <name>cbor_null_map_start_callback</name></expr>,


<expr><operator>.</operator><name>tag</name> <operator>=</operator> <name>cbor_null_tag_callback</name></expr>,



<expr><operator>.</operator><name>float2</name> <operator>=</operator> <name>cbor_null_float2_callback</name></expr>,

<expr><operator>.</operator><name>float4</name> <operator>=</operator> <name>cbor_null_float4_callback</name></expr>,
<expr><operator>.</operator><name>float8</name> <operator>=</operator> <name>cbor_null_float8_callback</name></expr>,
<expr><operator>.</operator><name>undefined</name> <operator>=</operator> <name>cbor_null_undefined_callback</name></expr>,
<expr><operator>.</operator><name>null</name> <operator>=</operator> <name>cbor_null_null_callback</name></expr>,
<expr><operator>.</operator><name>boolean</name> <operator>=</operator> <name>cbor_null_boolean_callback</name></expr>,


<expr><operator>.</operator><name>indef_break</name> <operator>=</operator> <name>cbor_null_indef_break_callback</name></expr>,
}</block></expr></init></decl>;</decl_stmt>
</unit>
