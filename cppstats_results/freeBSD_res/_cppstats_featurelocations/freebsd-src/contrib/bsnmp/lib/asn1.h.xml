<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/bsnmp/lib/asn1.h">































<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>asn1_h_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>asn1_h_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/types.h&gt;</cpp:file></cpp:include>

<struct>struct <name>asn_buf</name> <block>{
<union>union <block>{
<decl_stmt><decl><type><name>u_char</name> <modifier>*</modifier></type><name>ptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>u_char</name> <modifier>*</modifier></type><name>cptr</name></decl>;</decl_stmt>
}</block> <decl><name>asn_u</name></decl>;</union>
<decl_stmt><decl><type><name>size_t</name></type> <name>asn_len</name></decl>;</decl_stmt>
}</block>;</struct>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>asn_cptr</name></cpp:macro> <cpp:value>asn_u.cptr</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>asn_ptr</name></cpp:macro> <cpp:value>asn_u.ptr</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASN_MAXID</name></cpp:macro> <cpp:value>0xffffffff</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASN_MAXOIDLEN</name></cpp:macro> <cpp:value>128</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASN_OIDSTRLEN</name></cpp:macro> <cpp:value>(ASN_MAXOIDLEN * (10 + 1) - 1 + 1)</cpp:value></cpp:define>


<typedef>typedef <type><name>uint32_t</name></type> <name>asn_subid_t</name>;</typedef>

<struct>struct <name>asn_oid</name> <block>{
<decl_stmt><decl><type><name>u_int</name></type> <name>len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>asn_subid_t</name></type> <name><name>subs</name><index>[<expr><name>ASN_MAXOIDLEN</name></expr>]</index></name></decl>;</decl_stmt>
}</block>;</struct>

<enum>enum <name>asn_err</name> <block>{

<decl><name>ASN_ERR_OK</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,

<decl><name>ASN_ERR_FAILED</name> <init>= <expr><literal type="number">1</literal> <operator>|</operator> <literal type="number">0x1000</literal></expr></init></decl>,

<decl><name>ASN_ERR_BADLEN</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,

<decl><name>ASN_ERR_EOBUF</name> <init>= <expr><literal type="number">3</literal> <operator>|</operator> <literal type="number">0x1000</literal></expr></init></decl>,

<decl><name>ASN_ERR_RANGE</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>,

<decl><name>ASN_ERR_TAG</name> <init>= <expr><literal type="number">5</literal> <operator>|</operator> <literal type="number">0x1000</literal></expr></init></decl>,
}</block>;</enum>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASN_ERR_STOPPED</name><parameter_list>(<parameter><type><name>E</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(((E) &amp; 0x1000) != 0)</cpp:value></cpp:define>



<typedef>typedef <type><name>uint32_t</name></type> <name>asn_len_t</name>;</typedef>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASN_MAXLEN</name></cpp:macro> <cpp:value>65535</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASN_MAXLENLEN</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ASN_MAXOCTETSTRING</name></cpp:macro> <cpp:value>65535</cpp:value></cpp:define>

<function_decl><type><specifier>extern</specifier> <name>void</name></type> (<modifier>*</modifier><name>asn_error</name>)<parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><modifier>...</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_get_header</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>u_char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>asn_len_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_put_header</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>u_char</name></type></decl></parameter>, <parameter><decl><type><name>asn_len_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_put_temp_header</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>u_char</name></type></decl></parameter>, <parameter><decl><type><name>u_char</name> <modifier>*</modifier><modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_commit_header</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>u_char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_get_integer_raw</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>asn_len_t</name></type></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_get_integer</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int32_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_put_integer</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>int32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_get_octetstring_raw</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>asn_len_t</name></type></decl></parameter>, <parameter><decl><type><name>u_char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>u_int</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_get_octetstring</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>u_char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>u_int</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_put_octetstring</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>u_char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>u_int</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_get_null_raw</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type><name>b</name></decl></parameter>, <parameter><decl><type><name>asn_len_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_get_null</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_put_null</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_put_exception</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>u_int</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_get_objid_raw</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>asn_len_t</name></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>asn_oid</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_get_objid</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>asn_oid</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_put_objid</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>asn_oid</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_get_sequence</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>asn_len_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_get_ipaddress_raw</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>asn_len_t</name></type></decl></parameter>, <parameter><decl><type><name>u_char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_get_ipaddress</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>u_char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_put_ipaddress</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>u_char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_get_uint32_raw</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>asn_len_t</name></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_put_uint32</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>u_char</name></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_get_counter64_raw</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>asn_len_t</name></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_put_counter64</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_get_timeticks</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_put_timeticks</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>uint32_t</name></type></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_skip</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>asn_len_t</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name><name>enum</name> <name>asn_err</name></name></type> <name>asn_pad</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_buf</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>asn_len_t</name></type></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>void</name></type> <name>asn_slice_oid</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_oid</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>asn_oid</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>u_int</name></type></decl></parameter>, <parameter><decl><type><name>u_int</name></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>asn_append_oid</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>asn_oid</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>asn_oid</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>int</name></type> <name>asn_compare_oid</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>asn_oid</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>asn_oid</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>int</name></type> <name>asn_is_suboid</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>asn_oid</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>asn_oid</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>char</name> <modifier>*</modifier></type><name>asn_oid2str_r</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>asn_oid</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>char</name> <modifier>*</modifier></type><name>asn_oid2str</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>asn_oid</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<enum>enum <block>{
<decl><name>ASN_TYPE_BOOLEAN</name> <init>= <expr><literal type="number">0x01</literal></expr></init></decl>,
<decl><name>ASN_TYPE_INTEGER</name> <init>= <expr><literal type="number">0x02</literal></expr></init></decl>,
<decl><name>ASN_TYPE_BITSTRING</name> <init>= <expr><literal type="number">0x03</literal></expr></init></decl>,
<decl><name>ASN_TYPE_OCTETSTRING</name> <init>= <expr><literal type="number">0x04</literal></expr></init></decl>,
<decl><name>ASN_TYPE_NULL</name> <init>= <expr><literal type="number">0x05</literal></expr></init></decl>,
<decl><name>ASN_TYPE_OBJID</name> <init>= <expr><literal type="number">0x06</literal></expr></init></decl>,
<decl><name>ASN_TYPE_SEQUENCE</name> <init>= <expr><literal type="number">0x10</literal></expr></init></decl>,

<decl><name>ASN_TYPE_CONSTRUCTED</name> <init>= <expr><literal type="number">0x20</literal></expr></init></decl>,
<decl><name>ASN_CLASS_UNIVERSAL</name> <init>= <expr><literal type="number">0x00</literal></expr></init></decl>,
<decl><name>ASN_CLASS_APPLICATION</name> <init>= <expr><literal type="number">0x40</literal></expr></init></decl>,
<decl><name>ASN_CLASS_CONTEXT</name> <init>= <expr><literal type="number">0x80</literal></expr></init></decl>,
<decl><name>ASN_CLASS_PRIVATE</name> <init>= <expr><literal type="number">0xc0</literal></expr></init></decl>,
<decl><name>ASN_TYPE_MASK</name> <init>= <expr><literal type="number">0x1f</literal></expr></init></decl>,

<decl><name>ASN_APP_IPADDRESS</name> <init>= <expr><literal type="number">0x00</literal></expr></init></decl>,
<decl><name>ASN_APP_COUNTER</name> <init>= <expr><literal type="number">0x01</literal></expr></init></decl>,
<decl><name>ASN_APP_GAUGE</name> <init>= <expr><literal type="number">0x02</literal></expr></init></decl>,
<decl><name>ASN_APP_TIMETICKS</name> <init>= <expr><literal type="number">0x03</literal></expr></init></decl>,
<decl><name>ASN_APP_OPAQUE</name> <init>= <expr><literal type="number">0x04</literal></expr></init></decl>,
<decl><name>ASN_APP_COUNTER64</name> <init>= <expr><literal type="number">0x06</literal></expr></init></decl>,

<decl><name>ASN_EXCEPT_NOSUCHOBJECT</name> <init>= <expr><literal type="number">0x00</literal></expr></init></decl>,
<decl><name>ASN_EXCEPT_NOSUCHINSTANCE</name> <init>= <expr><literal type="number">0x01</literal></expr></init></decl>,
<decl><name>ASN_EXCEPT_ENDOFMIBVIEW</name> <init>= <expr><literal type="number">0x02</literal></expr></init></decl>,
}</block>;</enum>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
