<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/libevent/defer-internal.h">
























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>DEFER_INTERNAL_H_INCLUDED_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DEFER_INTERNAL_H_INCLUDED_</name></cpp:macro></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"event2/event-config.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"evconfig-private.h"</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/queue.h&gt;</cpp:file></cpp:include>

<struct_decl>struct <name>event_callback</name>;</struct_decl>
<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>deferred_cb_fn</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>event_callback</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>









<function_decl><type><name>void</name></type> <name>event_deferred_cb_init_</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>event_callback</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>ev_uint8_t</name></type></decl></parameter>, <parameter><decl><type><name>deferred_cb_fn</name></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>void</name></type> <name>event_deferred_cb_set_priority_</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>event_callback</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>ev_uint8_t</name></type></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>void</name></type> <name>event_deferred_cb_cancel_</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>event_base</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>event_callback</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>int</name></type> <name>event_deferred_cb_schedule_</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>event_base</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>event_callback</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
