<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/libevent/include/event2/tag.h">

























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>EVENT2_TAG_H_INCLUDED_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVENT2_TAG_H_INCLUDED_</name></cpp:macro></cpp:define>







<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;event2/visibility.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;event2/event-config.h&gt;</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>EVENT__HAVE_SYS_TYPES_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/types.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>EVENT__HAVE_SYS_TIME_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/time.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;event2/util.h&gt;</cpp:file></cpp:include>

<struct_decl>struct <name>evbuffer</name>;</struct_decl>







<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evtag_init</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evtag_unmarshal_header</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>evbuf</name></decl></parameter>, <parameter><decl><type><name>ev_uint32_t</name> <modifier>*</modifier></type><name>ptag</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evtag_marshal</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>evbuf</name></decl></parameter>, <parameter><decl><type><name>ev_uint32_t</name></type> <name>tag</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>,
<parameter><decl><type><name>ev_uint32_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evtag_marshal_buffer</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>evbuf</name></decl></parameter>, <parameter><decl><type><name>ev_uint32_t</name></type> <name>tag</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evtag_encode_int</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>evbuf</name></decl></parameter>, <parameter><decl><type><name>ev_uint32_t</name></type> <name>number</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evtag_encode_int64</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>evbuf</name></decl></parameter>, <parameter><decl><type><name>ev_uint64_t</name></type> <name>number</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evtag_marshal_int</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>evbuf</name></decl></parameter>, <parameter><decl><type><name>ev_uint32_t</name></type> <name>tag</name></decl></parameter>,
<parameter><decl><type><name>ev_uint32_t</name></type> <name>integer</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evtag_marshal_int64</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>evbuf</name></decl></parameter>, <parameter><decl><type><name>ev_uint32_t</name></type> <name>tag</name></decl></parameter>,
<parameter><decl><type><name>ev_uint64_t</name></type> <name>integer</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evtag_marshal_string</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>ev_uint32_t</name></type> <name>tag</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>string</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evtag_marshal_timeval</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>evbuf</name></decl></parameter>, <parameter><decl><type><name>ev_uint32_t</name></type> <name>tag</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>timeval</name></name> <modifier>*</modifier></type><name>tv</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evtag_unmarshal</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ev_uint32_t</name> <modifier>*</modifier></type><name>ptag</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>dst</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evtag_peek</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>evbuf</name></decl></parameter>, <parameter><decl><type><name>ev_uint32_t</name> <modifier>*</modifier></type><name>ptag</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evtag_peek_length</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>evbuf</name></decl></parameter>, <parameter><decl><type><name>ev_uint32_t</name> <modifier>*</modifier></type><name>plength</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evtag_payload_length</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>evbuf</name></decl></parameter>, <parameter><decl><type><name>ev_uint32_t</name> <modifier>*</modifier></type><name>plength</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evtag_consume</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>evbuf</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evtag_unmarshal_int</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>evbuf</name></decl></parameter>, <parameter><decl><type><name>ev_uint32_t</name></type> <name>need_tag</name></decl></parameter>,
<parameter><decl><type><name>ev_uint32_t</name> <modifier>*</modifier></type><name>pinteger</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evtag_unmarshal_int64</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>evbuf</name></decl></parameter>, <parameter><decl><type><name>ev_uint32_t</name></type> <name>need_tag</name></decl></parameter>,
<parameter><decl><type><name>ev_uint64_t</name> <modifier>*</modifier></type><name>pinteger</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evtag_unmarshal_fixed</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>src</name></decl></parameter>, <parameter><decl><type><name>ev_uint32_t</name></type> <name>need_tag</name></decl></parameter>,
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evtag_unmarshal_string</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>evbuf</name></decl></parameter>, <parameter><decl><type><name>ev_uint32_t</name></type> <name>need_tag</name></decl></parameter>,
<parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>pstring</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evtag_unmarshal_timeval</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>evbuf</name></decl></parameter>, <parameter><decl><type><name>ev_uint32_t</name></type> <name>need_tag</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>timeval</name></name> <modifier>*</modifier></type><name>ptv</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
