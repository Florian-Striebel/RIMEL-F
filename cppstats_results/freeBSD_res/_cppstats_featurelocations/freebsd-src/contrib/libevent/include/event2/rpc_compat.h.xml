<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/libevent/include/event2/rpc_compat.h">

























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>EVENT2_RPC_COMPAT_H_INCLUDED_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVENT2_RPC_COMPAT_H_INCLUDED_</name></cpp:macro></cpp:define>








<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__GNUC__</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__STRICT_ANSI__</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>EVTAG_ASSIGN</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>EVTAG_GET</name></cpp:undef>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>EVTAG_ADD</name></cpp:undef>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVTAG_ASSIGN</name><parameter_list>(<parameter><type><name>msg</name></type></parameter>, <parameter><type><name>member</name></type></parameter>, <parameter><type><name>args</name><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(*(msg)-&gt;base-&gt;member##_assign)(msg, ##args)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVTAG_GET</name><parameter_list>(<parameter><type><name>msg</name></type></parameter>, <parameter><type><name>member</name></type></parameter>, <parameter><type><name>args</name><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(*(msg)-&gt;base-&gt;member##_get)(msg, ##args)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVTAG_ADD</name><parameter_list>(<parameter><type><name>msg</name></type></parameter>, <parameter><type><name>member</name></type></parameter>, <parameter><type><name>args</name><modifier>...</modifier></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(*(msg)-&gt;base-&gt;member##_add)(msg, ##args)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVTAG_LEN</name><parameter_list>(<parameter><type><name>msg</name></type></parameter>, <parameter><type><name>member</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((msg)-&gt;member##_length)</cpp:value></cpp:define>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
