<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/libevent/include/event2/http.h">

























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>EVENT2_HTTP_H_INCLUDED_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVENT2_HTTP_H_INCLUDED_</name></cpp:macro></cpp:define>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;event2/util.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;event2/visibility.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<struct_decl>struct <name>evbuffer</name>;</struct_decl>
<struct_decl>struct <name>event_base</name>;</struct_decl>
<struct_decl>struct <name>bufferevent</name>;</struct_decl>
<struct_decl>struct <name>evhttp_connection</name>;</struct_decl>













<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTP_OK</name></cpp:macro> <cpp:value>200</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTP_NOCONTENT</name></cpp:macro> <cpp:value>204</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTP_MOVEPERM</name></cpp:macro> <cpp:value>301</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTP_MOVETEMP</name></cpp:macro> <cpp:value>302</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTP_NOTMODIFIED</name></cpp:macro> <cpp:value>304</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTP_BADREQUEST</name></cpp:macro> <cpp:value>400</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTP_NOTFOUND</name></cpp:macro> <cpp:value>404</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTP_BADMETHOD</name></cpp:macro> <cpp:value>405</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTP_ENTITYTOOLARGE</name></cpp:macro> <cpp:value>413</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTP_EXPECTATIONFAILED</name></cpp:macro> <cpp:value>417</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTP_INTERNAL</name></cpp:macro> <cpp:value>500</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTP_NOTIMPLEMENTED</name></cpp:macro> <cpp:value>501</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HTTP_SERVUNAVAIL</name></cpp:macro> <cpp:value>503</cpp:value></cpp:define>

<struct_decl>struct <name>evhttp</name>;</struct_decl>
<struct_decl>struct <name>evhttp_request</name>;</struct_decl>
<struct_decl>struct <name>evkeyvalq</name>;</struct_decl>
<struct_decl>struct <name>evhttp_bound_socket</name>;</struct_decl>
<struct_decl>struct <name>evconnlistener</name>;</struct_decl>
<struct_decl>struct <name>evdns_base</name>;</struct_decl>








<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evhttp</name></name> <modifier>*</modifier></type><name>evhttp_new</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>event_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_bind_socket</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name> <modifier>*</modifier></type><name>http</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>address</name></decl></parameter>, <parameter><decl><type><name>ev_uint16_t</name></type> <name>port</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evhttp_bound_socket</name></name> <modifier>*</modifier></type><name>evhttp_bind_socket_with_handle</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name> <modifier>*</modifier></type><name>http</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>address</name></decl></parameter>, <parameter><decl><type><name>ev_uint16_t</name></type> <name>port</name></decl></parameter>)</parameter_list>;</function_decl>

















<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_accept_socket</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name> <modifier>*</modifier></type><name>http</name></decl></parameter>, <parameter><decl><type><name>evutil_socket_t</name></type> <name>fd</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evhttp_bound_socket</name></name> <modifier>*</modifier></type><name>evhttp_accept_socket_with_handle</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name> <modifier>*</modifier></type><name>http</name></decl></parameter>, <parameter><decl><type><name>evutil_socket_t</name></type> <name>fd</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evhttp_bound_socket</name></name> <modifier>*</modifier></type><name>evhttp_bind_listener</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name> <modifier>*</modifier></type><name>http</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>evconnlistener</name></name> <modifier>*</modifier></type><name>listener</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evconnlistener</name></name> <modifier>*</modifier></type><name>evhttp_bound_socket_get_listener</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_bound_socket</name></name> <modifier>*</modifier></type><name>bound</name></decl></parameter>)</parameter_list>;</function_decl>

<typedef>typedef <function_decl><type><name>void</name></type> <name>evhttp_bound_socket_foreach_fn</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_bound_socket</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>










<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_foreach_bound_socket</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name> <modifier>*</modifier></type><name>http</name></decl></parameter>, <parameter><decl><type><name>evhttp_bound_socket_foreach_fn</name> <modifier>*</modifier></type><name>function</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>argument</name></decl></parameter>)</parameter_list>;</function_decl>


















<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_del_accept_socket</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name> <modifier>*</modifier></type><name>http</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>evhttp_bound_socket</name></name> <modifier>*</modifier></type><name>bound_socket</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>evutil_socket_t</name></type> <name>evhttp_bound_socket_get_fd</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_bound_socket</name></name> <modifier>*</modifier></type><name>bound_socket</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name><modifier>*</modifier></type> <name>http</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_set_max_headers_size</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name><modifier>*</modifier></type> <name>http</name></decl></parameter>, <parameter><decl><type><name>ev_ssize_t</name></type> <name>max_headers_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_set_max_body_size</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name><modifier>*</modifier></type> <name>http</name></decl></parameter>, <parameter><decl><type><name>ev_ssize_t</name></type> <name>max_body_size</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_set_default_content_type</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name> <modifier>*</modifier></type><name>http</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>content_type</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_set_allowed_methods</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name><modifier>*</modifier></type> <name>http</name></decl></parameter>, <parameter><decl><type><name>ev_uint16_t</name></type> <name>methods</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_set_cb</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name> <modifier>*</modifier></type><name>http</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>,
<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cb</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cb_arg</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_del_cb</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_set_gencb</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name> <modifier>*</modifier></type><name>http</name></decl></parameter>,
<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cb</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>















<decl_stmt><decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_set_bevcb</name><argument_list>(<argument><expr>struct <name>evhttp</name> <operator>*</operator><name>http</name></expr></argument>,
<argument><expr>struct <name>bufferevent</name> <operator>*</operator><call>(<modifier>*</modifier><name>cb</name>)<argument_list>(<argument><expr>struct <name>event_base</name> <operator>*</operator></expr></argument>, <argument><expr><name>void</name> <operator>*</operator></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>void</name> <operator>*</operator><name>arg</name></expr></argument>)</argument_list></decl>;</decl_stmt>























<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_add_virtual_host</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name><modifier>*</modifier></type> <name>http</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>pattern</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name><modifier>*</modifier></type> <name>vhost</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_remove_virtual_host</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name><modifier>*</modifier></type> <name>http</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>evhttp</name></name><modifier>*</modifier></type> <name>vhost</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_add_server_alias</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name> <modifier>*</modifier></type><name>http</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>alias</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_remove_server_alias</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name> <modifier>*</modifier></type><name>http</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>alias</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_set_timeout</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name> <modifier>*</modifier></type><name>http</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>timeout_in_secs</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_set_timeout_tv</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name> <modifier>*</modifier></type><name>http</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>timeval</name></name><modifier>*</modifier></type> <name>tv</name></decl></parameter>)</parameter_list>;</function_decl>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVHTTP_SERVER_LINGERING_CLOSE</name></cpp:macro> <cpp:value>0x0001</cpp:value></cpp:define>







<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_set_flags</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp</name></name> <modifier>*</modifier></type><name>http</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_send_error</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>error</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>reason</name></decl></parameter>)</parameter_list>;</function_decl>














<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_send_reply</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>code</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>reason</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>databuf</name></decl></parameter>)</parameter_list>;</function_decl>

















<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_send_reply_start</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>code</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>reason</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_send_reply_chunk</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>databuf</name></decl></parameter>)</parameter_list>;</function_decl>














<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_send_reply_chunk_with_cb</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type></decl></parameter>,
<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cb</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_send_reply_end</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>)</parameter_list>;</function_decl>












<enum>enum <name>evhttp_cmd_type</name> <block>{
<decl><name>EVHTTP_REQ_GET</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">0</literal></expr></init></decl>,
<decl><name>EVHTTP_REQ_POST</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">1</literal></expr></init></decl>,
<decl><name>EVHTTP_REQ_HEAD</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">2</literal></expr></init></decl>,
<decl><name>EVHTTP_REQ_PUT</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">3</literal></expr></init></decl>,
<decl><name>EVHTTP_REQ_DELETE</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">4</literal></expr></init></decl>,
<decl><name>EVHTTP_REQ_OPTIONS</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">5</literal></expr></init></decl>,
<decl><name>EVHTTP_REQ_TRACE</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">6</literal></expr></init></decl>,
<decl><name>EVHTTP_REQ_CONNECT</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">7</literal></expr></init></decl>,
<decl><name>EVHTTP_REQ_PATCH</name> <init>= <expr><literal type="number">1</literal> <operator>&lt;&lt;</operator> <literal type="number">8</literal></expr></init></decl>
}</block>;</enum>


<enum>enum <name>evhttp_request_kind</name> <block>{ <decl><name>EVHTTP_REQUEST</name></decl>, <decl><name>EVHTTP_RESPONSE</name></decl> }</block>;</enum>
















<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>evhttp_connection_base_bufferevent_new</name><parameter_list>(
<parameter><decl><type><name><name>struct</name> <name>event_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>dnsbase</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>bufferevent</name></name><modifier>*</modifier></type> <name>bev</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>address</name></decl></parameter>, <parameter><decl><type><name>ev_uint16_t</name></type> <name>port</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>bufferevent</name></name><modifier>*</modifier></type> <name>evhttp_connection_get_bufferevent</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>evcon</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evhttp</name></name> <modifier>*</modifier></type><name>evhttp_connection_get_server</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>evcon</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>evhttp_request_new</name><parameter_list>(
<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cb</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_request_set_chunked_cb</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type></decl></parameter>,
<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cb</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_request_set_header_cb</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type></decl></parameter>,
<parameter><function_decl><type><name>int</name></type> (<modifier>*</modifier><name>cb</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>






<enum>enum <name>evhttp_request_error</name> <block>{



<decl><name>EVREQ_HTTP_TIMEOUT</name></decl>,



<decl><name>EVREQ_HTTP_EOF</name></decl>,



<decl><name>EVREQ_HTTP_INVALID_HEADER</name></decl>,



<decl><name>EVREQ_HTTP_BUFFER_ERROR</name></decl>,



<decl><name>EVREQ_HTTP_REQUEST_CANCEL</name></decl>,



<decl><name>EVREQ_HTTP_DATA_TOO_LONG</name></decl>
}</block>;</enum>







<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_request_set_error_cb</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type></decl></parameter>,
<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier>)<parameter_list>(<parameter><decl><type><name><name>enum</name> <name>evhttp_request_error</name></name></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_request_set_on_complete_cb</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>,
<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>cb</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cb_arg</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_request_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>evhttp_connection_base_new</name><parameter_list>(
<parameter><decl><type><name><name>struct</name> <name>event_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>dnsbase</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>address</name></decl></parameter>, <parameter><decl><type><name>ev_uint16_t</name></type> <name>port</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_connection_set_family</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>evcon</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>family</name></decl></parameter>)</parameter_list>;</function_decl>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVHTTP_CON_REUSE_CONNECTED_ADDR</name></cpp:macro> <cpp:value>0x0008</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVHTTP_CON_READ_ON_WRITE_ERROR</name></cpp:macro> <cpp:value>0x0010</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVHTTP_CON_LINGERING_CLOSE</name></cpp:macro> <cpp:value>0x0020</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVHTTP_CON_PUBLIC_FLAGS_END</name></cpp:macro> <cpp:value>0x100000</cpp:value></cpp:define>







<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_connection_set_flags</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>evcon</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_request_own</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_request_is_owned</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>evhttp_request_get_connection</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>event_base</name></name> <modifier>*</modifier></type><name>evhttp_connection_get_base</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_connection_set_max_headers_size</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>evcon</name></decl></parameter>,
<parameter><decl><type><name>ev_ssize_t</name></type> <name>new_max_headers_size</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_connection_set_max_body_size</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name><modifier>*</modifier></type> <name>evcon</name></decl></parameter>,
<parameter><decl><type><name>ev_ssize_t</name></type> <name>new_max_body_size</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_connection_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>evcon</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_connection_free_on_completion</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>evcon</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_connection_set_local_address</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>evcon</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>address</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_connection_set_local_port</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>evcon</name></decl></parameter>,
<parameter><decl><type><name>ev_uint16_t</name></type> <name>port</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_connection_set_timeout</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>evcon</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>timeout_in_secs</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_connection_set_timeout_tv</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>evcon</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>timeval</name></name> <modifier>*</modifier></type><name>tv</name></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_connection_set_initial_retry_tv</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>evcon</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>timeval</name></name> <modifier>*</modifier></type><name>tv</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_connection_set_retries</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>evcon</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>retry_max</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_connection_set_closecb</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>evcon</name></decl></parameter>,
<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_connection_get_peer</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>evcon</name></decl></parameter>,
<parameter><decl><type><name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>address</name></decl></parameter>, <parameter><decl><type><name>ev_uint16_t</name> <modifier>*</modifier></type><name>port</name></decl></parameter>)</parameter_list>;</function_decl>







<expr_stmt><expr><name>EVENT2_EXPORT_SYMBOL</name>
<specifier>const</specifier> struct <name>sockaddr</name><operator>*</operator>
<call><name>evhttp_connection_get_addr</name><argument_list>(<argument><expr>struct <name>evhttp_connection</name> <operator>*</operator><name>evcon</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>














<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_make_request</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_connection</name></name> <modifier>*</modifier></type><name>evcon</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>evhttp_cmd_type</name></name></type> <name>type</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>uri</name></decl></parameter>)</parameter_list>;</function_decl>














<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_cancel_request</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>)</parameter_list>;</function_decl>




<struct_decl>struct <name>evhttp_uri</name>;</struct_decl>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>evhttp_request_get_uri</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>)</parameter_list>;</function_decl>

<expr_stmt><expr><name>EVENT2_EXPORT_SYMBOL</name>
<specifier>const</specifier> struct <name>evhttp_uri</name> <operator>*</operator><call><name>evhttp_request_get_evhttp_uri</name><argument_list>(<argument><expr><specifier>const</specifier> struct <name>evhttp_request</name> <operator>*</operator><name>req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>enum</name> <name>evhttp_cmd_type</name></name></type> <name>evhttp_request_get_command</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_request_get_response_code</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>evhttp_request_get_response_code_line</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evkeyvalq</name></name> <modifier>*</modifier></type><name>evhttp_request_get_input_headers</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evkeyvalq</name></name> <modifier>*</modifier></type><name>evhttp_request_get_output_headers</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>evhttp_request_get_input_buffer</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>evhttp_request_get_output_buffer</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>evhttp_request_get_host</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>evhttp_find_header</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>evkeyvalq</name></name> <modifier>*</modifier></type><name>headers</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>









<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_remove_header</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evkeyvalq</name></name> <modifier>*</modifier></type><name>headers</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_add_header</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evkeyvalq</name></name> <modifier>*</modifier></type><name>headers</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>value</name></decl></parameter>)</parameter_list>;</function_decl>






<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_clear_headers</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evkeyvalq</name></name> <modifier>*</modifier></type><name>headers</name></decl></parameter>)</parameter_list>;</function_decl>















<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>char</name> <modifier>*</modifier></type><name>evhttp_encode_uri</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>)</parameter_list>;</function_decl>















<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>char</name> <modifier>*</modifier></type><name>evhttp_uriencode</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl></parameter>, <parameter><decl><type><name>ev_ssize_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>space_to_plus</name></decl></parameter>)</parameter_list>;</function_decl>















<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>char</name> <modifier>*</modifier></type><name>evhttp_decode_uri</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>uri</name></decl></parameter>)</parameter_list>;</function_decl>
















<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>char</name> <modifier>*</modifier></type><name>evhttp_uridecode</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>uri</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>decode_plus</name></decl></parameter>,
<parameter><decl><type><name>size_t</name> <modifier>*</modifier></type><name>size_out</name></decl></parameter>)</parameter_list>;</function_decl>




















<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_parse_query</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>uri</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>evkeyvalq</name></name> <modifier>*</modifier></type><name>headers</name></decl></parameter>)</parameter_list>;</function_decl>


















<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_parse_query_str</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>uri</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>evkeyvalq</name></name> <modifier>*</modifier></type><name>headers</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>char</name> <modifier>*</modifier></type><name>evhttp_htmlescape</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>html</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>evhttp_uri_new</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>





<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_uri_set_flags</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>uri</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>evhttp_uri_get_scheme</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>uri</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>evhttp_uri_get_userinfo</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>uri</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>evhttp_uri_get_host</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>uri</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_uri_get_port</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>uri</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>evhttp_uri_get_path</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>uri</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>evhttp_uri_get_query</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>uri</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>evhttp_uri_get_fragment</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>uri</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_uri_set_scheme</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>uri</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>scheme</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_uri_set_userinfo</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>uri</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>userinfo</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_uri_set_host</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>uri</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>host</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_uri_set_port</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>uri</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>port</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_uri_set_path</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>uri</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>path</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_uri_set_query</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>uri</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>query</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evhttp_uri_set_fragment</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>uri</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>fragment</name></decl></parameter>)</parameter_list>;</function_decl>



































<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>evhttp_uri_parse_with_flags</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>source_uri</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>













<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVHTTP_URI_NONCONFORMANT</name></cpp:macro> <cpp:value>0x01</cpp:value></cpp:define>


<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>evhttp_uri_parse</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>source_uri</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evhttp_uri_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>uri</name></decl></parameter>)</parameter_list>;</function_decl>














<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>char</name> <modifier>*</modifier></type><name>evhttp_uri_join</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evhttp_uri</name></name> <modifier>*</modifier></type><name>uri</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>limit</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
