<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/libevent/include/event2/buffer_compat.h">

























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>EVENT2_BUFFER_COMPAT_H_INCLUDED_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVENT2_BUFFER_COMPAT_H_INCLUDED_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;event2/visibility.h&gt;</cpp:file></cpp:include>



















<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>char</name> <modifier>*</modifier></type><name>evbuffer_readline</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>)</parameter_list>;</function_decl>





















<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>evbuffer_cb</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>old_len</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>new_len</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl></typedef>




















<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evbuffer_setcb</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><name>evbuffer_cb</name></type> <name>cb</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbarg</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>evbuffer_find</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evbuffer</name></name> <modifier>*</modifier></type><name>buffer</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>what</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVBUFFER_LENGTH</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>evbuffer_get_length(x)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVBUFFER_DATA</name><parameter_list>(<parameter><type><name>x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>evbuffer_pullup((x), -1)</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

</unit>
