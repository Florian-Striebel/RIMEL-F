<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/libevent/include/event2/dns.h">





































































































































<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>EVENT2_DNS_H_INCLUDED_</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVENT2_DNS_H_INCLUDED_</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;event2/visibility.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;event2/util.h&gt;</cpp:file></cpp:include>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_ERR_NONE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_ERR_FORMAT</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_ERR_SERVERFAILED</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_ERR_NOTEXIST</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_ERR_NOTIMPL</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_ERR_REFUSED</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_ERR_TRUNCATED</name></cpp:macro> <cpp:value>65</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_ERR_UNKNOWN</name></cpp:macro> <cpp:value>66</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_ERR_TIMEOUT</name></cpp:macro> <cpp:value>67</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_ERR_SHUTDOWN</name></cpp:macro> <cpp:value>68</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_ERR_CANCEL</name></cpp:macro> <cpp:value>69</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_ERR_NODATA</name></cpp:macro> <cpp:value>70</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_IPv4_A</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_PTR</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_IPv6_AAAA</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_QUERY_NO_SEARCH</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_OPTION_SEARCH</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_OPTION_NAMESERVERS</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_OPTION_MISC</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_OPTION_HOSTSFILE</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_OPTIONS_ALL</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DNS_NO_SEARCH</name></cpp:macro> <cpp:value>DNS_QUERY_NO_SEARCH</cpp:value></cpp:define>











<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>evdns_callback_type</name>) <parameter_list>(<parameter><decl><type><name>int</name></type> <name>result</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>count</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ttl</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>addresses</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<struct_decl>struct <name>evdns_base</name>;</struct_decl>
<struct_decl>struct <name>event_base</name>;</struct_decl>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVDNS_BASE_INITIALIZE_NAMESERVERS</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVDNS_BASE_DISABLE_WHEN_INACTIVE</name></cpp:macro> <cpp:value>0x8000</cpp:value></cpp:define>














<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type> <name>evdns_base_new</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>event_base</name></name> <modifier>*</modifier></type><name>event_base</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>initialize_nameservers</name></decl></parameter>)</parameter_list>;</function_decl>














<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evdns_base_free</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fail_requests</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evdns_base_clear_host_addresses</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>evdns_err_to_string</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>err</name></decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evdns_base_nameserver_add</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>long</name> <name>int</name></type> <name>address</name></decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evdns_base_count_nameservers</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evdns_base_clear_nameservers_and_suspend</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evdns_base_resume</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>)</parameter_list>;</function_decl>


















<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evdns_base_nameserver_ip_add</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>ip_as_string</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type>
<name>evdns_base_nameserver_sockaddr_add</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>sockaddr</name></name> <modifier>*</modifier></type><name>sa</name></decl></parameter>, <parameter><decl><type><name>ev_socklen_t</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>

<struct_decl>struct <name>evdns_request</name>;</struct_decl>












<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evdns_request</name></name> <modifier>*</modifier></type><name>evdns_base_resolve_ipv4</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>evdns_callback_type</name></type> <name>callback</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>;</function_decl>












<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evdns_request</name></name> <modifier>*</modifier></type><name>evdns_base_resolve_ipv6</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>evdns_callback_type</name></type> <name>callback</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>;</function_decl>

<struct_decl>struct <name>in_addr</name>;</struct_decl>
<struct_decl>struct <name>in6_addr</name>;</struct_decl>












<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evdns_request</name></name> <modifier>*</modifier></type><name>evdns_base_resolve_reverse</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>in_addr</name></name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>evdns_callback_type</name></type> <name>callback</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evdns_request</name></name> <modifier>*</modifier></type><name>evdns_base_resolve_reverse_ipv6</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>in6_addr</name></name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>evdns_callback_type</name></type> <name>callback</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>ptr</name></decl></parameter>)</parameter_list>;</function_decl>








<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evdns_cancel_request</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>evdns_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>)</parameter_list>;</function_decl>

















<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evdns_base_set_option</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>option</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>val</name></decl></parameter>)</parameter_list>;</function_decl>
























<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evdns_base_resolv_conf_parse</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name>filename</name></decl></parameter>)</parameter_list>;</function_decl>














<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evdns_base_load_hosts</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>hosts_fname</name></decl></parameter>)</parameter_list>;</function_decl>











<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evdns_base_config_windows_nameservers</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVDNS_BASE_CONFIG_WINDOWS_NAMESERVERS_IMPLEMENTED</name></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>





<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evdns_base_search_clear</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>)</parameter_list>;</function_decl>







<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evdns_base_search_add</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>domain</name></decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evdns_base_search_ndots_set</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>int</name></type> <name>ndots</name></decl></parameter>)</parameter_list>;</function_decl>







<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>evdns_debug_log_fn_type</name>)<parameter_list>(<parameter><decl><type><name>int</name></type> <name>is_warning</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>msg</name></decl></parameter>)</parameter_list>;</function_decl></typedef>









<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evdns_set_log_fn</name><parameter_list>(<parameter><decl><type><name>evdns_debug_log_fn_type</name></type> <name>fn</name></decl></parameter>)</parameter_list>;</function_decl>











<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evdns_set_transaction_id_fn</name><parameter_list>(<parameter><function_decl><type><name>ev_uint16_t</name></type> (<modifier>*</modifier><name>fn</name>)<parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>










<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evdns_set_random_bytes_fn</name><parameter_list>(<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>fn</name>)<parameter_list>(<parameter><decl><type><name>char</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>size_t</name></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>





<struct_decl>struct <name>evdns_server_request</name>;</struct_decl>
<struct_decl>struct <name>evdns_server_question</name>;</struct_decl>












<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>evdns_request_callback_fn_type</name>)<parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_server_request</name></name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list>;</function_decl></typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVDNS_ANSWER_SECTION</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVDNS_AUTHORITY_SECTION</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVDNS_ADDITIONAL_SECTION</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVDNS_TYPE_A</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVDNS_TYPE_NS</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVDNS_TYPE_CNAME</name></cpp:macro> <cpp:value>5</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVDNS_TYPE_SOA</name></cpp:macro> <cpp:value>6</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVDNS_TYPE_PTR</name></cpp:macro> <cpp:value>12</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVDNS_TYPE_MX</name></cpp:macro> <cpp:value>15</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVDNS_TYPE_TXT</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVDNS_TYPE_AAAA</name></cpp:macro> <cpp:value>28</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVDNS_QTYPE_AXFR</name></cpp:macro> <cpp:value>252</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVDNS_QTYPE_ALL</name></cpp:macro> <cpp:value>255</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVDNS_CLASS_INET</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVDNS_FLAGS_AA</name></cpp:macro> <cpp:value>0x400</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>EVDNS_FLAGS_RD</name></cpp:macro> <cpp:value>0x080</cpp:value></cpp:define>











<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evdns_server_port</name></name> <modifier>*</modifier></type><name>evdns_add_server_port_with_base</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>event_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>, <parameter><decl><type><name>evutil_socket_t</name></type> <name>socket</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>evdns_request_callback_fn_type</name></type> <name>callback</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>user_data</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evdns_close_server_port</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_server_port</name></name> <modifier>*</modifier></type><name>port</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evdns_server_request_set_flags</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_server_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evdns_server_request_add_reply</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_server_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>section</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dns_class</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ttl</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>datalen</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>is_name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evdns_server_request_add_a_reply</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_server_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>addrs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ttl</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evdns_server_request_add_aaaa_reply</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_server_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>n</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>void</name> <modifier>*</modifier></type><name>addrs</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ttl</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evdns_server_request_add_ptr_reply</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_server_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>in_addr</name></name> <modifier>*</modifier></type><name>in</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>inaddr_name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>hostname</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ttl</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evdns_server_request_add_cname_reply</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_server_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cname</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ttl</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evdns_server_request_respond</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_server_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>err</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evdns_server_request_drop</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_server_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>)</parameter_list>;</function_decl>
<struct_decl>struct <name>sockaddr</name>;</struct_decl>



<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evdns_server_request_get_requesting_addr</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_server_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>sockaddr</name></name> <modifier>*</modifier></type><name>sa</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>addr_len</name></decl></parameter>)</parameter_list>;</function_decl>


<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>evdns_getaddrinfo_cb</name>)<parameter_list>(<parameter><decl><type><name>int</name></type> <name>result</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>evutil_addrinfo</name></name> <modifier>*</modifier></type><name>res</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<struct_decl>struct <name>evdns_base</name>;</struct_decl>
<struct_decl>struct <name>evdns_getaddrinfo_request</name>;</struct_decl>

















<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name><name>struct</name> <name>evdns_getaddrinfo_request</name></name> <modifier>*</modifier></type><name>evdns_getaddrinfo</name><parameter_list>(
<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>dns_base</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>nodename</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>servname</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name><name>struct</name> <name>evutil_addrinfo</name></name> <modifier>*</modifier></type><name>hints_in</name></decl></parameter>,
<parameter><decl><type><name>evdns_getaddrinfo_cb</name></type> <name>cb</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>arg</name></decl></parameter>)</parameter_list>;</function_decl>




<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>void</name></type> <name>evdns_getaddrinfo_cancel</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_getaddrinfo_request</name></name> <modifier>*</modifier></type><name>req</name></decl></parameter>)</parameter_list>;</function_decl>













<function_decl><type><name>EVENT2_EXPORT_SYMBOL</name>
<name>int</name></type> <name>evdns_base_get_nameserver_addr</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>evdns_base</name></name> <modifier>*</modifier></type><name>base</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>idx</name></decl></parameter>,
<parameter><decl><type><name><name>struct</name> <name>sockaddr</name></name> <modifier>*</modifier></type><name>sa</name></decl></parameter>, <parameter><decl><type><name>ev_socklen_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
