<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/jemalloc/include/jemalloc/internal/tcache_structs.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_INTERNAL_TCACHE_STRUCTS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JEMALLOC_INTERNAL_TCACHE_STRUCTS_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/cache_bin.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/ql.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/sc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/ticker.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/tsd_types.h"</cpp:file></cpp:include>


<typedef>typedef <macro><name>ql_elm</name><argument_list>(<argument>tsd_t</argument>)</argument_list></macro> <expr_stmt><expr><name>tsd_link_t</name></expr>;</expr_stmt></typedef>

<struct>struct <name>tcache_s</name> <block>{






<decl_stmt><decl><type><name>uint64_t</name></type> <name>prof_accumbytes</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>ticker_t</name></type> <name>gc_ticker</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>cache_bin_t</name></type> <name><name>bins_small</name><index>[<expr><name>SC_NBINS</name></expr>]</index></name></decl>;</decl_stmt>






<macro><name>ql_elm</name><argument_list>(<argument>tcache_t</argument>)</argument_list></macro> <expr_stmt><expr><name>link</name></expr>;</expr_stmt>


<macro><name>ql_elm</name><argument_list>(<argument>tsd_t</argument>)</argument_list></macro> <expr_stmt><expr><name>tsd_link</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>in_hook</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>cache_bin_array_descriptor_t</name></type> <name>cache_bin_array_descriptor</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>arena_t</name> <modifier>*</modifier></type><name>arena</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>szind_t</name></type> <name>next_gc_bin</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>uint8_t</name></type> <name><name>lg_fill_div</name><index>[<expr><name>SC_NBINS</name></expr>]</index></name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>cache_bin_t</name></type> <name><name>bins_large</name><index>[<expr><name>SC_NSIZES</name><operator>-</operator><name>SC_NBINS</name></expr>]</index></name></decl>;</decl_stmt>
}</block>;</struct>


<struct>struct <name>tcaches_s</name> <block>{
<union>union <block>{
<decl_stmt><decl><type><name>tcache_t</name> <modifier>*</modifier></type><name>tcache</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>tcaches_t</name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>
}</block>;</union>
}</block>;</struct>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
