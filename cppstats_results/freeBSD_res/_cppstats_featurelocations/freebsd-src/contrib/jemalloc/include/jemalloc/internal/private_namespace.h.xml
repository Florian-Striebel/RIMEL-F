<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/jemalloc/include/jemalloc/internal/private_namespace.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>a0dalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(a0dalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>a0malloc</name></cpp:macro> <cpp:value>JEMALLOC_N(a0malloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_choose_hard</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_choose_hard)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_init</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_migrate</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_migrate)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_set</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_tdata_get_hard</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_tdata_get_hard)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arenas</name></cpp:macro> <cpp:value>JEMALLOC_N(arenas)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arenas_lock</name></cpp:macro> <cpp:value>JEMALLOC_N(arenas_lock)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arenas_tdata_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(arenas_tdata_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bootstrap_calloc</name></cpp:macro> <cpp:value>JEMALLOC_N(bootstrap_calloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bootstrap_free</name></cpp:macro> <cpp:value>JEMALLOC_N(bootstrap_free)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bootstrap_malloc</name></cpp:macro> <cpp:value>JEMALLOC_N(bootstrap_malloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>free_default</name></cpp:macro> <cpp:value>JEMALLOC_N(free_default)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>iarena_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(iarena_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>je_sdallocx_noflags</name></cpp:macro> <cpp:value>JEMALLOC_N(je_sdallocx_noflags)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>jemalloc_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(jemalloc_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_default</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_default)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_initialized</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_initialized)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_slow</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_slow)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>manual_arena_base</name></cpp:macro> <cpp:value>JEMALLOC_N(manual_arena_base)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>narenas_auto</name></cpp:macro> <cpp:value>JEMALLOC_N(narenas_auto)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>narenas_total_get</name></cpp:macro> <cpp:value>JEMALLOC_N(narenas_total_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ncpus</name></cpp:macro> <cpp:value>JEMALLOC_N(ncpus)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_abort</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_abort)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_abort_conf</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_abort_conf)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_confirm_conf</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_confirm_conf)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_junk</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_junk)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_junk_alloc</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_junk_alloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_junk_free</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_junk_free)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_narenas</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_narenas)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_utrace</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_utrace)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_xmalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_xmalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_zero</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_zero)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sdallocx_default</name></cpp:macro> <cpp:value>JEMALLOC_N(sdallocx_default)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_alloc_junk_small</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_alloc_junk_small)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_basic_stats_merge</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_basic_stats_merge)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_bin_choose_lock</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_bin_choose_lock)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_choose_huge</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_choose_huge)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dalloc_bin_junked_locked</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dalloc_bin_junked_locked)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dalloc_junk_small</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dalloc_junk_small)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dalloc_promoted</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dalloc_promoted)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dalloc_small</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dalloc_small)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_decay</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_decay)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_destroy</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_destroy)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dirty_decay_ms_default_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dirty_decay_ms_default_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dirty_decay_ms_default_set</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dirty_decay_ms_default_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dirty_decay_ms_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dirty_decay_ms_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dirty_decay_ms_set</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dirty_decay_ms_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dss_prec_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dss_prec_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_dss_prec_set</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_dss_prec_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_extent_alloc_large</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_extent_alloc_large)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_extent_dalloc_large_prep</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_extent_dalloc_large_prep)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_extent_ralloc_large_expand</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_extent_ralloc_large_expand)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_extent_ralloc_large_shrink</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_extent_ralloc_large_shrink)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_extent_sn_next</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_extent_sn_next)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_extents_dirty_dalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_extents_dirty_dalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_init_huge</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_init_huge)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_is_huge</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_is_huge)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_malloc_hard</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_malloc_hard)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_muzzy_decay_ms_default_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_muzzy_decay_ms_default_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_muzzy_decay_ms_default_set</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_muzzy_decay_ms_default_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_muzzy_decay_ms_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_muzzy_decay_ms_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_muzzy_decay_ms_set</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_muzzy_decay_ms_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_new</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_new)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_nthreads_dec</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_nthreads_dec)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_nthreads_get</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_nthreads_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_nthreads_inc</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_nthreads_inc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_palloc</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_palloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_postfork_parent</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_postfork_parent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prefork0</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prefork0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prefork1</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prefork1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prefork2</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prefork2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prefork3</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prefork3)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prefork4</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prefork4)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prefork5</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prefork5)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prefork6</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prefork6)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prefork7</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prefork7)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_prof_promote</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_prof_promote)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_ralloc</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_ralloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_ralloc_no_move</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_ralloc_no_move)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_reset</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_reset)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_retain_grow_limit_get_set</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_retain_grow_limit_get_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_stats_merge</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_stats_merge)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_tcache_fill_small</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_tcache_fill_small)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>h_steps</name></cpp:macro> <cpp:value>JEMALLOC_N(h_steps)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_dirty_decay_ms</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_dirty_decay_ms)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_muzzy_decay_ms</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_muzzy_decay_ms)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_oversize_threshold</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_oversize_threshold)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_percpu_arena</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_percpu_arena)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>oversize_threshold</name></cpp:macro> <cpp:value>JEMALLOC_N(oversize_threshold)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>percpu_arena_mode_names</name></cpp:macro> <cpp:value>JEMALLOC_N(percpu_arena_mode_names)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>background_thread_boot0</name></cpp:macro> <cpp:value>JEMALLOC_N(background_thread_boot0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>background_thread_boot1</name></cpp:macro> <cpp:value>JEMALLOC_N(background_thread_boot1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>background_thread_create</name></cpp:macro> <cpp:value>JEMALLOC_N(background_thread_create)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>background_thread_ctl_init</name></cpp:macro> <cpp:value>JEMALLOC_N(background_thread_ctl_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>background_thread_enabled_state</name></cpp:macro> <cpp:value>JEMALLOC_N(background_thread_enabled_state)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>background_thread_info</name></cpp:macro> <cpp:value>JEMALLOC_N(background_thread_info)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>background_thread_interval_check</name></cpp:macro> <cpp:value>JEMALLOC_N(background_thread_interval_check)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>background_thread_lock</name></cpp:macro> <cpp:value>JEMALLOC_N(background_thread_lock)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>background_thread_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(background_thread_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>background_thread_postfork_parent</name></cpp:macro> <cpp:value>JEMALLOC_N(background_thread_postfork_parent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>background_thread_prefork0</name></cpp:macro> <cpp:value>JEMALLOC_N(background_thread_prefork0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>background_thread_prefork1</name></cpp:macro> <cpp:value>JEMALLOC_N(background_thread_prefork1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>background_thread_stats_read</name></cpp:macro> <cpp:value>JEMALLOC_N(background_thread_stats_read)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>background_threads_disable</name></cpp:macro> <cpp:value>JEMALLOC_N(background_threads_disable)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>background_threads_enable</name></cpp:macro> <cpp:value>JEMALLOC_N(background_threads_enable)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>max_background_threads</name></cpp:macro> <cpp:value>JEMALLOC_N(max_background_threads)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>n_background_threads</name></cpp:macro> <cpp:value>JEMALLOC_N(n_background_threads)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_background_thread</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_background_thread)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_max_background_threads</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_max_background_threads)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pthread_create_wrapper</name></cpp:macro> <cpp:value>JEMALLOC_N(pthread_create_wrapper)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>b0get</name></cpp:macro> <cpp:value>JEMALLOC_N(b0get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>base_alloc</name></cpp:macro> <cpp:value>JEMALLOC_N(base_alloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>base_alloc_extent</name></cpp:macro> <cpp:value>JEMALLOC_N(base_alloc_extent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>base_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(base_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>base_delete</name></cpp:macro> <cpp:value>JEMALLOC_N(base_delete)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>base_extent_hooks_get</name></cpp:macro> <cpp:value>JEMALLOC_N(base_extent_hooks_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>base_extent_hooks_set</name></cpp:macro> <cpp:value>JEMALLOC_N(base_extent_hooks_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>base_new</name></cpp:macro> <cpp:value>JEMALLOC_N(base_new)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>base_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(base_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>base_postfork_parent</name></cpp:macro> <cpp:value>JEMALLOC_N(base_postfork_parent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>base_prefork</name></cpp:macro> <cpp:value>JEMALLOC_N(base_prefork)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>base_stats_get</name></cpp:macro> <cpp:value>JEMALLOC_N(base_stats_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>metadata_thp_mode_names</name></cpp:macro> <cpp:value>JEMALLOC_N(metadata_thp_mode_names)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_metadata_thp</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_metadata_thp)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bin_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(bin_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bin_infos</name></cpp:macro> <cpp:value>JEMALLOC_N(bin_infos)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bin_init</name></cpp:macro> <cpp:value>JEMALLOC_N(bin_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bin_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(bin_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bin_postfork_parent</name></cpp:macro> <cpp:value>JEMALLOC_N(bin_postfork_parent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bin_prefork</name></cpp:macro> <cpp:value>JEMALLOC_N(bin_prefork)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bin_shard_sizes_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(bin_shard_sizes_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bin_update_shard_size</name></cpp:macro> <cpp:value>JEMALLOC_N(bin_update_shard_size)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bitmap_info_init</name></cpp:macro> <cpp:value>JEMALLOC_N(bitmap_info_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bitmap_init</name></cpp:macro> <cpp:value>JEMALLOC_N(bitmap_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bitmap_size</name></cpp:macro> <cpp:value>JEMALLOC_N(bitmap_size)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_count</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_count)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_delete</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_delete)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_insert</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_insert)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_iter</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_iter)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_new</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_new)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_pointer_hash</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_pointer_hash)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_pointer_keycomp</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_pointer_keycomp)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_remove</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_remove)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_search</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_search)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_string_hash</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_string_hash)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ckh_string_keycomp</name></cpp:macro> <cpp:value>JEMALLOC_N(ckh_string_keycomp)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ctl_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(ctl_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ctl_bymib</name></cpp:macro> <cpp:value>JEMALLOC_N(ctl_bymib)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ctl_byname</name></cpp:macro> <cpp:value>JEMALLOC_N(ctl_byname)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ctl_nametomib</name></cpp:macro> <cpp:value>JEMALLOC_N(ctl_nametomib)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ctl_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(ctl_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ctl_postfork_parent</name></cpp:macro> <cpp:value>JEMALLOC_N(ctl_postfork_parent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ctl_prefork</name></cpp:macro> <cpp:value>JEMALLOC_N(ctl_prefork)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>div_init</name></cpp:macro> <cpp:value>JEMALLOC_N(div_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_alloc</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_alloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_alloc_wrapper</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_alloc_wrapper)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_avail_any</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_avail_any)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_avail_empty</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_avail_empty)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_avail_first</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_avail_first)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_avail_insert</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_avail_insert)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_avail_new</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_avail_new)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_avail_remove</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_avail_remove)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_avail_remove_any</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_avail_remove_any)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_avail_remove_first</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_avail_remove_first)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_commit_wrapper</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_commit_wrapper)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_dalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_dalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_dalloc_gap</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_dalloc_gap)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_dalloc_wrapper</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_dalloc_wrapper)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_decommit_wrapper</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_decommit_wrapper)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_destroy_wrapper</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_destroy_wrapper)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_heap_any</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_heap_any)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_heap_empty</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_heap_empty)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_heap_first</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_heap_first)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_heap_insert</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_heap_insert)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_heap_new</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_heap_new)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_heap_remove</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_heap_remove)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_heap_remove_any</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_heap_remove_any)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_heap_remove_first</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_heap_remove_first)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_hooks_default</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_hooks_default)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_hooks_get</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_hooks_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_hooks_set</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_hooks_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_merge_wrapper</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_merge_wrapper)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_mutex_pool</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_mutex_pool)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_purge_forced_wrapper</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_purge_forced_wrapper)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_purge_lazy_wrapper</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_purge_lazy_wrapper)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_split_wrapper</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_split_wrapper)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_util_stats_get</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_util_stats_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_util_stats_verbose_get</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_util_stats_verbose_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extents_alloc</name></cpp:macro> <cpp:value>JEMALLOC_N(extents_alloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extents_dalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(extents_dalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extents_evict</name></cpp:macro> <cpp:value>JEMALLOC_N(extents_evict)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extents_init</name></cpp:macro> <cpp:value>JEMALLOC_N(extents_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extents_nbytes_get</name></cpp:macro> <cpp:value>JEMALLOC_N(extents_nbytes_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extents_nextents_get</name></cpp:macro> <cpp:value>JEMALLOC_N(extents_nextents_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extents_npages_get</name></cpp:macro> <cpp:value>JEMALLOC_N(extents_npages_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extents_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(extents_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extents_postfork_parent</name></cpp:macro> <cpp:value>JEMALLOC_N(extents_postfork_parent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extents_prefork</name></cpp:macro> <cpp:value>JEMALLOC_N(extents_prefork)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extents_rtree</name></cpp:macro> <cpp:value>JEMALLOC_N(extents_rtree)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extents_state_get</name></cpp:macro> <cpp:value>JEMALLOC_N(extents_state_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_lg_extent_max_active_fit</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_lg_extent_max_active_fit)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>dss_prec_names</name></cpp:macro> <cpp:value>JEMALLOC_N(dss_prec_names)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_alloc_dss</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_alloc_dss)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_dss_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_dss_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_dss_mergeable</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_dss_mergeable)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_dss_prec_get</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_dss_prec_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_dss_prec_set</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_dss_prec_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_in_dss</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_in_dss)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_dss</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_dss)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_alloc_mmap</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_alloc_mmap)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>extent_dalloc_mmap</name></cpp:macro> <cpp:value>JEMALLOC_N(extent_dalloc_mmap)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_retain</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_retain)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>hook_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(hook_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>hook_install</name></cpp:macro> <cpp:value>JEMALLOC_N(hook_install)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>hook_invoke_alloc</name></cpp:macro> <cpp:value>JEMALLOC_N(hook_invoke_alloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>hook_invoke_dalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(hook_invoke_dalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>hook_invoke_expand</name></cpp:macro> <cpp:value>JEMALLOC_N(hook_invoke_expand)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>hook_remove</name></cpp:macro> <cpp:value>JEMALLOC_N(hook_remove)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>large_dalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(large_dalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>large_dalloc_finish</name></cpp:macro> <cpp:value>JEMALLOC_N(large_dalloc_finish)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>large_dalloc_junk</name></cpp:macro> <cpp:value>JEMALLOC_N(large_dalloc_junk)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>large_dalloc_maybe_junk</name></cpp:macro> <cpp:value>JEMALLOC_N(large_dalloc_maybe_junk)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>large_dalloc_prep_junked_locked</name></cpp:macro> <cpp:value>JEMALLOC_N(large_dalloc_prep_junked_locked)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>large_malloc</name></cpp:macro> <cpp:value>JEMALLOC_N(large_malloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>large_palloc</name></cpp:macro> <cpp:value>JEMALLOC_N(large_palloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>large_prof_alloc_time_get</name></cpp:macro> <cpp:value>JEMALLOC_N(large_prof_alloc_time_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>large_prof_alloc_time_set</name></cpp:macro> <cpp:value>JEMALLOC_N(large_prof_alloc_time_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>large_prof_tctx_get</name></cpp:macro> <cpp:value>JEMALLOC_N(large_prof_tctx_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>large_prof_tctx_reset</name></cpp:macro> <cpp:value>JEMALLOC_N(large_prof_tctx_reset)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>large_prof_tctx_set</name></cpp:macro> <cpp:value>JEMALLOC_N(large_prof_tctx_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>large_ralloc</name></cpp:macro> <cpp:value>JEMALLOC_N(large_ralloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>large_ralloc_no_move</name></cpp:macro> <cpp:value>JEMALLOC_N(large_ralloc_no_move)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>large_salloc</name></cpp:macro> <cpp:value>JEMALLOC_N(large_salloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>log_init_done</name></cpp:macro> <cpp:value>JEMALLOC_N(log_init_done)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>log_var_names</name></cpp:macro> <cpp:value>JEMALLOC_N(log_var_names)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>log_var_update_state</name></cpp:macro> <cpp:value>JEMALLOC_N(log_var_update_state)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>buferror</name></cpp:macro> <cpp:value>JEMALLOC_N(buferror)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_cprintf</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_cprintf)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_printf</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_printf)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_snprintf</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_snprintf)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_strtoumax</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_strtoumax)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_vcprintf</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_vcprintf)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_vsnprintf</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_vsnprintf)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_write</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_write)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_mutex_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_mutex_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_mutex_init</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_mutex_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_mutex_lock_slow</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_mutex_lock_slow)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_mutex_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_mutex_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_mutex_postfork_parent</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_mutex_postfork_parent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_mutex_prefork</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_mutex_prefork)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_mutex_prof_data_reset</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_mutex_prof_data_reset)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>mutex_pool_init</name></cpp:macro> <cpp:value>JEMALLOC_N(mutex_pool_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_add</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_add)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_compare</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_compare)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_copy</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_copy)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_divide</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_divide)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_iadd</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_iadd)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_idivide</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_idivide)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_imultiply</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_imultiply)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_init</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_init2</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_init2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_isubtract</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_isubtract)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_monotonic</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_monotonic)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_msec</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_msec)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_ns</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_ns)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_nsec</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_nsec)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_sec</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_sec)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_subtract</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_subtract)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nstime_update</name></cpp:macro> <cpp:value>JEMALLOC_N(nstime_update)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>init_system_thp_mode</name></cpp:macro> <cpp:value>JEMALLOC_N(init_system_thp_mode)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_thp</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_thp)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_commit</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_commit)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_decommit</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_decommit)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_dodump</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_dodump)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_dontdump</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_dontdump)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_huge</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_huge)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_map</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_map)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_nohuge</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_nohuge)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_purge_forced</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_purge_forced)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_purge_lazy</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_purge_lazy)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_set_thp_state</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_set_thp_state)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>pages_unmap</name></cpp:macro> <cpp:value>JEMALLOC_N(pages_unmap)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>thp_mode_names</name></cpp:macro> <cpp:value>JEMALLOC_N(thp_mode_names)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bt2gctx_mtx</name></cpp:macro> <cpp:value>JEMALLOC_N(bt2gctx_mtx)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bt_init</name></cpp:macro> <cpp:value>JEMALLOC_N(bt_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>lg_prof_sample</name></cpp:macro> <cpp:value>JEMALLOC_N(lg_prof_sample)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_lg_prof_interval</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_lg_prof_interval)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_lg_prof_sample</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_lg_prof_sample)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_prof</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_prof)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_prof_accum</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_prof_accum)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_prof_active</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_prof_active)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_prof_final</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_prof_final)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_prof_gdump</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_prof_gdump)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_prof_leak</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_prof_leak)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_prof_log</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_prof_log)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_prof_prefix</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_prof_prefix)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_prof_thread_active_init</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_prof_thread_active_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_accum_init</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_accum_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_active</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_active)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_active_get</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_active_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_active_set</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_active_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_alloc_rollback</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_alloc_rollback)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_backtrace</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_backtrace)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_boot0</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_boot0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_boot1</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_boot1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_boot2</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_boot2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_dump_header</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_dump_header)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_dump_open</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_dump_open)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_free_sampled_object</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_free_sampled_object)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_gdump</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_gdump)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_gdump_get</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_gdump_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_gdump_set</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_gdump_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_gdump_val</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_gdump_val)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_idump</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_idump)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_interval</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_interval)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_log_start</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_log_start)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_log_stop</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_log_stop)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_logging_state</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_logging_state)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_lookup</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_lookup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_malloc_sample_object</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_malloc_sample_object)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_mdump</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_mdump)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_postfork_parent</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_postfork_parent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_prefork0</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_prefork0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_prefork1</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_prefork1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_reset</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_reset)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_sample_threshold_update</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_sample_threshold_update)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_tdata_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_tdata_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_tdata_init</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_tdata_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_tdata_reinit</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_tdata_reinit)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_thread_active_get</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_thread_active_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_thread_active_init_get</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_thread_active_init_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_thread_active_init_set</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_thread_active_init_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_thread_active_set</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_thread_active_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_thread_name_get</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_thread_name_get)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>prof_thread_name_set</name></cpp:macro> <cpp:value>JEMALLOC_N(prof_thread_name_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_ctx_data_init</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_ctx_data_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_leaf_alloc</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_leaf_alloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_leaf_dalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_leaf_dalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_leaf_elm_lookup_hard</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_leaf_elm_lookup_hard)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_new</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_new)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_node_alloc</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_node_alloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>rtree_node_dalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(rtree_node_dalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>safety_check_fail</name></cpp:macro> <cpp:value>JEMALLOC_N(safety_check_fail)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>safety_check_set_abort</name></cpp:macro> <cpp:value>JEMALLOC_N(safety_check_set_abort)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>arena_mutex_names</name></cpp:macro> <cpp:value>JEMALLOC_N(arena_mutex_names)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>global_mutex_names</name></cpp:macro> <cpp:value>JEMALLOC_N(global_mutex_names)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_stats_print</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_stats_print)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_stats_print_opts</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_stats_print_opts)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>stats_print</name></cpp:macro> <cpp:value>JEMALLOC_N(stats_print)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sc_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(sc_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sc_data_global</name></cpp:macro> <cpp:value>JEMALLOC_N(sc_data_global)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sc_data_init</name></cpp:macro> <cpp:value>JEMALLOC_N(sc_data_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sc_data_update_slab_size</name></cpp:macro> <cpp:value>JEMALLOC_N(sc_data_update_slab_size)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sz_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(sz_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sz_index2size_tab</name></cpp:macro> <cpp:value>JEMALLOC_N(sz_index2size_tab)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sz_pind2sz_tab</name></cpp:macro> <cpp:value>JEMALLOC_N(sz_pind2sz_tab)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>sz_size2index_tab</name></cpp:macro> <cpp:value>JEMALLOC_N(sz_size2index_tab)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>nhbins</name></cpp:macro> <cpp:value>JEMALLOC_N(nhbins)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_lg_tcache_max</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_lg_tcache_max)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>opt_tcache</name></cpp:macro> <cpp:value>JEMALLOC_N(opt_tcache)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_alloc_small_hard</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_alloc_small_hard)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_arena_associate</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_arena_associate)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_arena_reassociate</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_arena_reassociate)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_bin_flush_large</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_bin_flush_large)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_bin_flush_small</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_bin_flush_small)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_bin_info</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_bin_info)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_boot</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_boot)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_create_explicit</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_create_explicit)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_event_hard</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_event_hard)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_flush</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_flush)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_maxclass</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_maxclass)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_postfork_parent</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_postfork_parent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_prefork</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_prefork)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_salloc</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_salloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcache_stats_merge</name></cpp:macro> <cpp:value>JEMALLOC_N(tcache_stats_merge)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcaches</name></cpp:macro> <cpp:value>JEMALLOC_N(tcaches)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcaches_create</name></cpp:macro> <cpp:value>JEMALLOC_N(tcaches_create)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcaches_destroy</name></cpp:macro> <cpp:value>JEMALLOC_N(tcaches_destroy)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tcaches_flush</name></cpp:macro> <cpp:value>JEMALLOC_N(tcaches_flush)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_tcache_data_init</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_tcache_data_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_tcache_enabled_data_init</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_tcache_enabled_data_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>test_hooks_arena_new_hook</name></cpp:macro> <cpp:value>JEMALLOC_N(test_hooks_arena_new_hook)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>test_hooks_libc_hook</name></cpp:macro> <cpp:value>JEMALLOC_N(test_hooks_libc_hook)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_tsd_boot0</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_tsd_boot0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_tsd_boot1</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_tsd_boot1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_tsd_cleanup_register</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_tsd_cleanup_register)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_tsd_dalloc</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_tsd_dalloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>malloc_tsd_malloc</name></cpp:macro> <cpp:value>JEMALLOC_N(malloc_tsd_malloc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_booted</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_booted)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_cleanup)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_fetch_slow</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_fetch_slow)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_global_slow</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_global_slow)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_global_slow_dec</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_global_slow_dec)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_global_slow_inc</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_global_slow_inc)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_initialized</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_initialized)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_postfork_parent</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_postfork_parent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_prefork</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_prefork)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_slow_update</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_slow_update)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_state_set</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_state_set)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tsd_tls</name></cpp:macro> <cpp:value>JEMALLOC_N(tsd_tls)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_depth_error</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_depth_error)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_init</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_init)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_lock_error</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_lock_error)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_not_owner_error</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_not_owner_error)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_owner_error</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_owner_error)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_postfork_child</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_postfork_child)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_postfork_parent</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_postfork_parent)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witness_prefork</name></cpp:macro> <cpp:value>JEMALLOC_N(witness_prefork)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>witnesses_cleanup</name></cpp:macro> <cpp:value>JEMALLOC_N(witnesses_cleanup)</cpp:value></cpp:define>
</unit>
