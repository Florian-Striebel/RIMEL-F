<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/jemalloc/include/jemalloc/internal/bin.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_INTERNAL_BIN_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JEMALLOC_INTERNAL_BIN_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/bin_stats.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/bin_types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/extent_types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/extent_structs.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/mutex.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/sc.h"</cpp:file></cpp:include>

























<typedef>typedef <type><name><name>struct</name> <name>bin_info_s</name></name></type> <name>bin_info_t</name>;</typedef>
<struct>struct <name>bin_info_s</name> <block>{

<decl_stmt><decl><type><name>size_t</name></type> <name>reg_size</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>size_t</name></type> <name>slab_size</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>uint32_t</name></type> <name>nregs</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>uint32_t</name></type> <name>n_shards</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>bitmap_info_t</name></type> <name>bitmap_info</name></decl>;</decl_stmt>
}</block>;</struct>

<decl_stmt><decl><type><specifier>extern</specifier> <name>bin_info_t</name></type> <name><name>bin_infos</name><index>[<expr><name>SC_NBINS</name></expr>]</index></name></decl>;</decl_stmt>

<typedef>typedef <type><name><name>struct</name> <name>bin_s</name></name></type> <name>bin_t</name>;</typedef>
<struct>struct <name>bin_s</name> <block>{

<decl_stmt><decl><type><name>malloc_mutex_t</name></type> <name>lock</name></decl>;</decl_stmt>







<decl_stmt><decl><type><name>extent_t</name> <modifier>*</modifier></type><name>slabcur</name></decl>;</decl_stmt>






<decl_stmt><decl><type><name>extent_heap_t</name></type> <name>slabs_nonfull</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>extent_list_t</name></type> <name>slabs_full</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>bin_stats_t</name></type> <name>stats</name></decl>;</decl_stmt>
}</block>;</struct>


<typedef>typedef <type><name><name>struct</name> <name>bins_s</name></name></type> <name>bins_t</name>;</typedef>
<struct>struct <name>bins_s</name> <block>{

<decl_stmt><decl><type><name>bin_t</name> <modifier>*</modifier></type><name>bin_shards</name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><name>void</name></type> <name>bin_shard_sizes_boot</name><parameter_list>(<parameter><decl><type><name>unsigned</name></type> <name><name>bin_shards</name><index>[<expr><name>SC_NBINS</name></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>bool</name></type> <name>bin_update_shard_size</name><parameter_list>(<parameter><decl><type><name>unsigned</name></type> <name><name>bin_shards</name><index>[<expr><name>SC_NBINS</name></expr>]</index></name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>start_size</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>end_size</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>nshards</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>bin_boot</name><parameter_list>(<parameter><decl><type><name>sc_data_t</name> <modifier>*</modifier></type><name>sc_data</name></decl></parameter>, <parameter><decl><type><name>unsigned</name></type> <name><name>bin_shard_sizes</name><index>[<expr><name>SC_NBINS</name></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>bool</name></type> <name>bin_init</name><parameter_list>(<parameter><decl><type><name>bin_t</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>


<function_decl><type><name>void</name></type> <name>bin_prefork</name><parameter_list>(<parameter><decl><type><name>tsdn_t</name> <modifier>*</modifier></type><name>tsdn</name></decl></parameter>, <parameter><decl><type><name>bin_t</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>bin_postfork_parent</name><parameter_list>(<parameter><decl><type><name>tsdn_t</name> <modifier>*</modifier></type><name>tsdn</name></decl></parameter>, <parameter><decl><type><name>bin_t</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>bin_postfork_child</name><parameter_list>(<parameter><decl><type><name>tsdn_t</name> <modifier>*</modifier></type><name>tsdn</name></decl></parameter>, <parameter><decl><type><name>bin_t</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list>;</function_decl>


<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type>
<name>bin_stats_merge</name><parameter_list>(<parameter><decl><type><name>tsdn_t</name> <modifier>*</modifier></type><name>tsdn</name></decl></parameter>, <parameter><decl><type><name>bin_stats_t</name> <modifier>*</modifier></type><name>dst_bin_stats</name></decl></parameter>, <parameter><decl><type><name>bin_t</name> <modifier>*</modifier></type><name>bin</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>malloc_mutex_lock</name><argument_list>(<argument><expr><name>tsdn</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>bin</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>malloc_mutex_prof_accum</name><argument_list>(<argument><expr><name>tsdn</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>dst_bin_stats</name><operator>-&gt;</operator><name>mutex_data</name></name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>bin</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst_bin_stats</name><operator>-&gt;</operator><name>nmalloc</name></name> <operator>+=</operator> <name><name>bin</name><operator>-&gt;</operator><name>stats</name><operator>.</operator><name>nmalloc</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst_bin_stats</name><operator>-&gt;</operator><name>ndalloc</name></name> <operator>+=</operator> <name><name>bin</name><operator>-&gt;</operator><name>stats</name><operator>.</operator><name>ndalloc</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst_bin_stats</name><operator>-&gt;</operator><name>nrequests</name></name> <operator>+=</operator> <name><name>bin</name><operator>-&gt;</operator><name>stats</name><operator>.</operator><name>nrequests</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst_bin_stats</name><operator>-&gt;</operator><name>curregs</name></name> <operator>+=</operator> <name><name>bin</name><operator>-&gt;</operator><name>stats</name><operator>.</operator><name>curregs</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst_bin_stats</name><operator>-&gt;</operator><name>nfills</name></name> <operator>+=</operator> <name><name>bin</name><operator>-&gt;</operator><name>stats</name><operator>.</operator><name>nfills</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst_bin_stats</name><operator>-&gt;</operator><name>nflushes</name></name> <operator>+=</operator> <name><name>bin</name><operator>-&gt;</operator><name>stats</name><operator>.</operator><name>nflushes</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst_bin_stats</name><operator>-&gt;</operator><name>nslabs</name></name> <operator>+=</operator> <name><name>bin</name><operator>-&gt;</operator><name>stats</name><operator>.</operator><name>nslabs</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst_bin_stats</name><operator>-&gt;</operator><name>reslabs</name></name> <operator>+=</operator> <name><name>bin</name><operator>-&gt;</operator><name>stats</name><operator>.</operator><name>reslabs</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst_bin_stats</name><operator>-&gt;</operator><name>curslabs</name></name> <operator>+=</operator> <name><name>bin</name><operator>-&gt;</operator><name>stats</name><operator>.</operator><name>curslabs</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst_bin_stats</name><operator>-&gt;</operator><name>nonfull_slabs</name></name> <operator>+=</operator> <name><name>bin</name><operator>-&gt;</operator><name>stats</name><operator>.</operator><name>nonfull_slabs</name></name></expr>;</expr_stmt>
<expr_stmt><expr><call><name>malloc_mutex_unlock</name><argument_list>(<argument><expr><name>tsdn</name></expr></argument>, <argument><expr><operator>&amp;</operator><name><name>bin</name><operator>-&gt;</operator><name>lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
