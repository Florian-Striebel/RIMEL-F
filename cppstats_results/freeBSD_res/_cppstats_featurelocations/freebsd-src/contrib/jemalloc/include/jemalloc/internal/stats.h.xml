<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/jemalloc/include/jemalloc/internal/stats.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_INTERNAL_STATS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JEMALLOC_INTERNAL_STATS_H</name></cpp:macro></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STATS_PRINT_OPTIONS</name></cpp:macro> <cpp:value>OPTION('J', json, false, true) OPTION('g', general, true, false) OPTION('m', merged, config_stats, false) OPTION('d', destroyed, config_stats, false) OPTION('a', unmerged, config_stats, false) OPTION('b', bins, true, false) OPTION('l', large, true, false) OPTION('x', mutex, true, false) OPTION('e', extents, true, false)</cpp:value></cpp:define>










<enum>enum <block>{
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OPTION</name><parameter_list>(<parameter><type><name>o</name></type></parameter>, <parameter><type><name>v</name></type></parameter>, <parameter><type><name>d</name></type></parameter>, <parameter><type><name>s</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>stats_print_option_num_##v,</cpp:value></cpp:define>
<decl><name>STATS_PRINT_OPTIONS</name>
<cpp:undef>#<cpp:directive>undef</cpp:directive> <name>OPTION</name></cpp:undef>
<name>stats_print_tot_num_options</name></decl>
}</block>;</enum>


<decl_stmt><decl><type><specifier>extern</specifier> <name>bool</name></type> <name>opt_stats_print</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>char</name></type> <name><name>opt_stats_print_opts</name><index>[<expr><name>stats_print_tot_num_options</name><operator>+</operator><literal type="number">1</literal></expr>]</index></name></decl>;</decl_stmt>


<function_decl><type><name>void</name></type> <name>stats_print</name><parameter_list>(<parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>write_cb</name>)<parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>cbopaque</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>opts</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
