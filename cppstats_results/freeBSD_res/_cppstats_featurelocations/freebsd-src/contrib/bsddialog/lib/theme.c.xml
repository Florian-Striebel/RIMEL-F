<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/bsddialog/lib/theme.c">


























<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>PORTNCURSES</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ncurses/ncurses.h&gt;</cpp:file></cpp:include>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ncurses.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"bsddialog.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lib_util.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"bsddialog_theme.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GET_COLOR</name><parameter_list>(<parameter><type><name>bg</name></type></parameter>, <parameter><type><name>fg</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(COLOR_PAIR(bg * 8 + fg +1))</cpp:value></cpp:define>

<decl_stmt><decl><type><name><name>struct</name> <name>bsddialog_theme</name></name></type> <name>t</name></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name><name>struct</name> <name>bsddialog_theme</name></name></type> <name>bsddialogtheme</name> <init>= <expr><block>{
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bgwidget</name></cpp:macro> <cpp:value>COLOR_WHITE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bgcurr</name></cpp:macro> <cpp:value>COLOR_YELLOW</cpp:value></cpp:define>
<expr><operator>.</operator><name><name>terminal</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>COLOR_CYAN</name></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name><name>shadow</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>COLOR_BLACK</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>shadow</name><operator>.</operator><name>h</name></name> <operator>=</operator> <literal type="number">1</literal></expr>,
<expr><operator>.</operator><name><name>shadow</name><operator>.</operator><name>w</name></name> <operator>=</operator> <literal type="number">2</literal></expr>,

<expr><operator>.</operator><name><name>dialog</name><operator>.</operator><name>delimtitle</name></name> <operator>=</operator> <name>true</name></expr>,
<expr><operator>.</operator><name><name>dialog</name><operator>.</operator><name>titlecolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_YELLOW</name></expr></argument>, <argument><expr><name>bgwidget</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>dialog</name><operator>.</operator><name>lineraisecolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>bgwidget</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>dialog</name><operator>.</operator><name>linelowercolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>bgwidget</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>dialog</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>bgwidget</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>dialog</name><operator>.</operator><name>bottomtitlecolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>bgwidget</name></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name><name>text</name><operator>.</operator><name>hmargin</name></name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>arrowcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_YELLOW</name></expr></argument>, <argument><expr><name>bgwidget</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>selectorcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>bgwidget</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>f_desccolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_WHITE</name></expr></argument>, <argument><expr><name>bgcurr</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>desccolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>bgwidget</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>f_namecolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>bgcurr</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>namecolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_YELLOW</name></expr></argument>, <argument><expr><name>bgwidget</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>namesepcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_YELLOW</name></expr></argument>, <argument><expr><name>bgwidget</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>descsepcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_YELLOW</name></expr></argument>, <argument><expr><name>bgwidget</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>f_shortcutcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_RED</name></expr></argument>, <argument><expr><name>bgcurr</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>shortcutcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_RED</name></expr></argument>, <argument><expr><name>bgwidget</name></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name><name>form</name><operator>.</operator><name>f_fieldcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_WHITE</name></expr></argument>, <argument><expr><name>COLOR_BLUE</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>form</name><operator>.</operator><name>fieldcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_WHITE</name></expr></argument>, <argument><expr><name>COLOR_CYAN</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>form</name><operator>.</operator><name>readonlycolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_CYAN</name></expr></argument>,<argument><expr><name>COLOR_WHITE</name></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name><name>bar</name><operator>.</operator><name>f_color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_WHITE</name></expr></argument>, <argument><expr><name>COLOR_BLUE</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>bar</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLUE</name></expr></argument>, <argument><expr><name>COLOR_WHITE</name></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>space</name></name> <operator>=</operator> <literal type="number">3</literal></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>leftch</name></name> <operator>=</operator> <literal type="char">'['</literal></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>rightch</name></name> <operator>=</operator> <literal type="char">']'</literal></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>f_delimcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_WHITE</name></expr></argument>, <argument><expr><name>bgcurr</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>delimcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>bgwidget</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>f_color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_WHITE</name></expr></argument>, <argument><expr><name>bgcurr</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_UNDERLINE</name></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>bgwidget</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_UNDERLINE</name></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>f_shortcutcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>bgcurr</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_UNDERLINE</name></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>shortcutcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_YELLOW</name></expr></argument>, <argument><expr><name>bgwidget</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_UNDERLINE</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name><name>struct</name> <name>bsddialog_theme</name></name></type> <name>blackwhite</name> <init>= <expr><block>{
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>fg</name></cpp:macro> <cpp:value>COLOR_WHITE</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>bk</name></cpp:macro> <cpp:value>COLOR_BLACK</cpp:value></cpp:define>
<expr><operator>.</operator><name><name>terminal</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name><name>shadow</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>COLOR_BLACK</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>shadow</name><operator>.</operator><name>h</name></name> <operator>=</operator> <literal type="number">1</literal></expr>,
<expr><operator>.</operator><name><name>shadow</name><operator>.</operator><name>w</name></name> <operator>=</operator> <literal type="number">2</literal></expr>,

<expr><operator>.</operator><name><name>dialog</name><operator>.</operator><name>delimtitle</name></name> <operator>=</operator> <name>true</name></expr>,
<expr><operator>.</operator><name><name>dialog</name><operator>.</operator><name>titlecolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>dialog</name><operator>.</operator><name>lineraisecolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>dialog</name><operator>.</operator><name>linelowercolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>dialog</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>dialog</name><operator>.</operator><name>bottomtitlecolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name><name>text</name><operator>.</operator><name>hmargin</name></name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>arrowcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>selectorcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>f_desccolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_REVERSE</name></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>desccolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>f_namecolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_REVERSE</name></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>namecolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>namesepcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>descsepcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>f_shortcutcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_UNDERLINE</name> <operator>|</operator> <name>A_REVERSE</name></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>shortcutcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_UNDERLINE</name></expr>,

<expr><operator>.</operator><name><name>form</name><operator>.</operator><name>f_fieldcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_REVERSE</name></expr>,
<expr><operator>.</operator><name><name>form</name><operator>.</operator><name>fieldcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>form</name><operator>.</operator><name>readonlycolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name><name>bar</name><operator>.</operator><name>f_color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_REVERSE</name></expr>,
<expr><operator>.</operator><name><name>bar</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call></expr>,

<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>space</name></name> <operator>=</operator> <literal type="number">3</literal></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>leftch</name></name> <operator>=</operator> <literal type="char">'['</literal></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>rightch</name></name> <operator>=</operator> <literal type="char">']'</literal></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>f_delimcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>delimcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>f_color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_UNDERLINE</name> <operator>|</operator> <name>A_REVERSE</name></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_UNDERLINE</name></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>f_shortcutcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_UNDERLINE</name> <operator>|</operator> <name>A_REVERSE</name></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>shortcutcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>fg</name></expr></argument>, <argument><expr><name>bk</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_UNDERLINE</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier>static</specifier> <name><name>struct</name> <name>bsddialog_theme</name></name></type> <name>dialogtheme</name> <init>= <expr><block>{
<expr><operator>.</operator><name><name>terminal</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_CYAN</name></expr></argument>, <argument><expr><name>COLOR_BLUE</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,

<expr><operator>.</operator><name><name>shadow</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>COLOR_BLACK</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>shadow</name><operator>.</operator><name>h</name></name> <operator>=</operator> <literal type="number">1</literal></expr>,
<expr><operator>.</operator><name><name>shadow</name><operator>.</operator><name>w</name></name> <operator>=</operator> <literal type="number">2</literal></expr>,

<expr><operator>.</operator><name><name>dialog</name><operator>.</operator><name>delimtitle</name></name> <operator>=</operator> <name>false</name></expr>,
<expr><operator>.</operator><name><name>dialog</name><operator>.</operator><name>titlecolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLUE</name></expr></argument>, <argument><expr><name>COLOR_WHITE</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,
<expr><operator>.</operator><name><name>dialog</name><operator>.</operator><name>lineraisecolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_WHITE</name></expr></argument>, <argument><expr><name>COLOR_WHITE</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,
<expr><operator>.</operator><name><name>dialog</name><operator>.</operator><name>linelowercolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>COLOR_WHITE</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,
<expr><operator>.</operator><name><name>dialog</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>COLOR_WHITE</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>dialog</name><operator>.</operator><name>bottomtitlecolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>COLOR_WHITE</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,

<expr><operator>.</operator><name><name>text</name><operator>.</operator><name>hmargin</name></name> <operator>=</operator> <literal type="number">1</literal></expr>,

<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>arrowcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_GREEN</name></expr></argument>, <argument><expr><name>COLOR_WHITE</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>selectorcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>bgwidget</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>f_desccolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_WHITE</name></expr></argument>, <argument><expr><name>COLOR_BLUE</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>desccolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>COLOR_WHITE</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>f_namecolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_YELLOW</name></expr></argument>, <argument><expr><name>COLOR_BLUE</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>namecolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLUE</name></expr></argument>, <argument><expr><name>COLOR_WHITE</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>namesepcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_RED</name></expr></argument>, <argument><expr><name>COLOR_WHITE</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>descsepcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_RED</name></expr></argument>, <argument><expr><name>COLOR_WHITE</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>f_shortcutcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_RED</name></expr></argument>, <argument><expr><name>COLOR_BLUE</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,
<expr><operator>.</operator><name><name>menu</name><operator>.</operator><name>shortcutcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_RED</name></expr></argument>, <argument><expr><name>COLOR_WHITE</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,

<expr><operator>.</operator><name><name>form</name><operator>.</operator><name>f_fieldcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_WHITE</name></expr></argument>, <argument><expr><name>COLOR_BLUE</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,
<expr><operator>.</operator><name><name>form</name><operator>.</operator><name>fieldcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_WHITE</name></expr></argument>, <argument><expr><name>COLOR_CYAN</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,
<expr><operator>.</operator><name><name>form</name><operator>.</operator><name>readonlycolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_CYAN</name></expr></argument>, <argument><expr><name>COLOR_WHITE</name></expr></argument>)</argument_list></call><operator>|</operator> <name>A_BOLD</name></expr>,

<expr><operator>.</operator><name><name>bar</name><operator>.</operator><name>f_color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_WHITE</name></expr></argument>, <argument><expr><name>COLOR_BLUE</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,
<expr><operator>.</operator><name><name>bar</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLUE</name></expr></argument>, <argument><expr><name>COLOR_WHITE</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,

<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>space</name></name> <operator>=</operator> <literal type="number">3</literal></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>leftch</name></name> <operator>=</operator> <literal type="char">'&lt;'</literal></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>rightch</name></name> <operator>=</operator> <literal type="char">'&gt;'</literal></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>f_delimcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_WHITE</name></expr></argument>, <argument><expr><name>COLOR_BLUE</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>delimcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>COLOR_WHITE</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>f_color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_YELLOW</name></expr></argument>, <argument><expr><name>COLOR_BLUE</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>color</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_BLACK</name></expr></argument>, <argument><expr><name>COLOR_WHITE</name></expr></argument>)</argument_list></call></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>f_shortcutcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_WHITE</name></expr></argument>, <argument><expr><name>COLOR_BLUE</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>,
<expr><operator>.</operator><name><name>button</name><operator>.</operator><name>shortcutcolor</name></name> <operator>=</operator> <call><name>GET_COLOR</name><argument_list>(<argument><expr><name>COLOR_RED</name></expr></argument>, <argument><expr><name>COLOR_WHITE</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>A_BOLD</name></expr>
}</block></expr></init></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>set_theme</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>bsddialog_theme</name></name> <modifier>*</modifier></type><name>dst</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>bsddialog_theme</name></name> <modifier>*</modifier></type><name>src</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>shadow</name><operator>.</operator><name>color</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>shadow</name><operator>.</operator><name>color</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>shadow</name><operator>.</operator><name>h</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>shadow</name><operator>.</operator><name>h</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>shadow</name><operator>.</operator><name>w</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>shadow</name><operator>.</operator><name>w</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>terminal</name><operator>.</operator><name>color</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>terminal</name><operator>.</operator><name>color</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>dialog</name><operator>.</operator><name>delimtitle</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>dialog</name><operator>.</operator><name>delimtitle</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>dialog</name><operator>.</operator><name>titlecolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>dialog</name><operator>.</operator><name>titlecolor</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>dialog</name><operator>.</operator><name>lineraisecolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>dialog</name><operator>.</operator><name>lineraisecolor</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>dialog</name><operator>.</operator><name>linelowercolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>dialog</name><operator>.</operator><name>linelowercolor</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>dialog</name><operator>.</operator><name>color</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>dialog</name><operator>.</operator><name>color</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>dialog</name><operator>.</operator><name>bottomtitlecolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>dialog</name><operator>.</operator><name>bottomtitlecolor</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>text</name><operator>.</operator><name>hmargin</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>text</name><operator>.</operator><name>hmargin</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>arrowcolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>arrowcolor</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>selectorcolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>selectorcolor</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>f_desccolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>f_desccolor</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>desccolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>desccolor</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>f_namecolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>f_namecolor</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>namecolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>namecolor</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>namesepcolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>namesepcolor</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>descsepcolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>descsepcolor</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>f_shortcutcolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>f_shortcutcolor</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>shortcutcolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>menu</name><operator>.</operator><name>shortcutcolor</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>form</name><operator>.</operator><name>f_fieldcolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>form</name><operator>.</operator><name>f_fieldcolor</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>form</name><operator>.</operator><name>fieldcolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>form</name><operator>.</operator><name>fieldcolor</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>form</name><operator>.</operator><name>readonlycolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>form</name><operator>.</operator><name>readonlycolor</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>bar</name><operator>.</operator><name>f_color</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>bar</name><operator>.</operator><name>f_color</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>bar</name><operator>.</operator><name>color</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>bar</name><operator>.</operator><name>color</name></name></expr>;</expr_stmt>

<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>button</name><operator>.</operator><name>space</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>button</name><operator>.</operator><name>space</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>button</name><operator>.</operator><name>leftch</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>button</name><operator>.</operator><name>leftch</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>button</name><operator>.</operator><name>rightch</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>button</name><operator>.</operator><name>rightch</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>button</name><operator>.</operator><name>f_delimcolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>button</name><operator>.</operator><name>f_delimcolor</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>button</name><operator>.</operator><name>delimcolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>button</name><operator>.</operator><name>delimcolor</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>button</name><operator>.</operator><name>f_color</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>button</name><operator>.</operator><name>f_color</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>button</name><operator>.</operator><name>color</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>button</name><operator>.</operator><name>color</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>button</name><operator>.</operator><name>f_shortcutcolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>button</name><operator>.</operator><name>f_shortcutcolor</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name><name>dst</name><operator>-&gt;</operator><name>button</name><operator>.</operator><name>shortcutcolor</name></name> <operator>=</operator> <name><name>src</name><operator>-&gt;</operator><name>button</name><operator>.</operator><name>shortcutcolor</name></name></expr>;</expr_stmt>

<expr_stmt><expr><call><name>bkgd</name><argument_list>(<argument><expr><name><name>dst</name><operator>-&gt;</operator><name>terminal</name><operator>.</operator><name>color</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>refresh</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>


<function><type><name>int</name></type> <name>bsddialog_get_theme</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>bsddialog_theme</name></name> <modifier>*</modifier></type><name>theme</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>theme</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>RETURN_ERROR</name><argument_list>(<argument><expr><literal type="string">"theme is NULL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>theme</name></expr></argument>)</argument_list></sizeof> <operator>!=</operator> <sizeof>sizeof<argument_list>(<argument><expr>struct <name>bsddialog_theme</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>RETURN_ERROR</name><argument_list>(<argument><expr><literal type="string">"Bad suze struct bsddialog_theme"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>set_theme</name><argument_list>(<argument><expr><name>theme</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>bsddialog_set_theme</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>bsddialog_theme</name></name> <modifier>*</modifier></type><name>theme</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>theme</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>RETURN_ERROR</name><argument_list>(<argument><expr><literal type="string">"theme is NULL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><sizeof>sizeof<argument_list>(<argument><expr><operator>*</operator><name>theme</name></expr></argument>)</argument_list></sizeof> <operator>!=</operator> <sizeof>sizeof<argument_list>(<argument><expr>struct <name>bsddialog_theme</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>RETURN_ERROR</name><argument_list>(<argument><expr><literal type="string">"Bad size struct bsddialog_theme"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>set_theme</name><argument_list>(<argument><expr><operator>&amp;</operator><name>t</name></expr></argument>, <argument><expr><name>theme</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>bsddialog_set_default_theme</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>bsddialog_default_theme</name></name></type> <name>newtheme</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>newtheme</name> <operator>==</operator> <name>BSDDIALOG_THEME_DEFAULT</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>bsddialog_set_theme</name><argument_list>(<argument><expr><operator>&amp;</operator><name>dialogtheme</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>t</name><operator>.</operator><name>dialog</name><operator>.</operator><name>lineraisecolor</name></name> <operator>=</operator> <name><name>t</name><operator>.</operator><name>dialog</name><operator>.</operator><name>linelowercolor</name></name></expr>;</expr_stmt>
</block_content>}</block></if>
<if type="elseif">else if <condition>(<expr><name>newtheme</name> <operator>==</operator> <name>BSDDIALOG_THEME_BSDDIALOG</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>bsddialog_set_theme</name><argument_list>(<argument><expr><operator>&amp;</operator><name>bsddialogtheme</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name>newtheme</name> <operator>==</operator> <name>BSDDIALOG_THEME_BLACKWHITE</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>bsddialog_set_theme</name><argument_list>(<argument><expr><operator>&amp;</operator><name>blackwhite</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<if type="elseif">else if <condition>(<expr><name>newtheme</name> <operator>==</operator> <name>BSDDIALOG_THEME_DIALOG</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>bsddialog_set_theme</name><argument_list>(<argument><expr><operator>&amp;</operator><name>dialogtheme</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content>
<expr_stmt><expr><call><name>RETURN_ERROR</name><argument_list>(<argument><expr><literal type="string">"Unknow default theme"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<return>return <expr><operator>(</operator><literal type="number">0</literal><operator>)</operator></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type>
<name>bsddialog_color</name><parameter_list>(<parameter><decl><type><name><name>enum</name> <name>bsddialog_color</name></name></type> <name>foreground</name></decl></parameter>,
<parameter><decl><type><name><name>enum</name> <name>bsddialog_color</name></name></type> <name>background</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>cursesflags</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>BSDDIALOG_BOLD</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>cursesflags</name> <operator>|=</operator> <name>A_BOLD</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>BSDDIALOG_REVERSE</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>cursesflags</name> <operator>|=</operator> <name>A_REVERSE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name>flags</name> <operator>&amp;</operator> <name>BSDDIALOG_UNDERLINE</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name>cursesflags</name> <operator>|=</operator> <name>A_UNDERLINE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><operator>(</operator><call><name>GET_COLOR</name><argument_list>(<argument><expr><name>foreground</name></expr></argument>, <argument><expr><name>background</name></expr></argument>)</argument_list></call> <operator>|</operator> <name>cursesflags</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>
</unit>
