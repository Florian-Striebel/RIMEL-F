<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/bsddialog/lib/timebox.c">


























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/param.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ctype.h&gt;</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>PORTNCURSES</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ncurses/ncurses.h&gt;</cpp:file></cpp:include>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ncurses.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"bsddialog.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lib_util.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"bsddialog_theme.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MINWDATE</name></cpp:macro> <cpp:value>25</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MINWTIME</name></cpp:macro> <cpp:value>16</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MINHEIGHT</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>



<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>bsddialog_theme</name></name></type> <name>t</name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>int</name></type>
<name>datetime_autosize</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>bsddialog_conf</name></name> <modifier>*</modifier></type><name>conf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rows</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>cols</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>h</name></decl></parameter>,
<parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>w</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>minw</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>text</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>buttons</name></name></type> <name>bs</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>maxword</name></decl>, <decl><type ref="prev"/><name>maxline</name></decl>, <decl><type ref="prev"/><name>nlines</name></decl>, <decl><type ref="prev"/><name>line</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>get_text_properties</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>text</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>maxword</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>maxline</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>nlines</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>cols</name> <operator>==</operator> <name>BSDDIALOG_AUTOSIZE</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>w</name> <operator>=</operator> <name>VBORDERS</name></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>w</name> <operator>+=</operator> <name><name>bs</name><operator>.</operator><name>nbuttons</name></name> <operator>*</operator> <name><name>bs</name><operator>.</operator><name>sizebutton</name></name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>w</name> <operator>+=</operator> <ternary><condition><expr><name><name>bs</name><operator>.</operator><name>nbuttons</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><operator>(</operator><name><name>bs</name><operator>.</operator><name>nbuttons</name></name><operator>-</operator><literal type="number">1</literal><operator>)</operator> <operator>*</operator> <name><name>t</name><operator>.</operator><name>button</name><operator>.</operator><name>space</name></name></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><name>line</name> <operator>=</operator> <name>maxline</name> <operator>+</operator> <name>VBORDERS</name> <operator>+</operator> <name><name>t</name><operator>.</operator><name>text</name><operator>.</operator><name>hmargin</name></name> <operator>*</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><name>line</name> <operator>=</operator> <call><name>MAX</name><argument_list>(<argument><expr><name>line</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator> <operator>(</operator><name>maxword</name> <operator>+</operator> <name>VBORDERS</name> <operator>+</operator> <name><name>t</name><operator>.</operator><name>text</name><operator>.</operator><name>hmargin</name></name> <operator>*</operator> <literal type="number">2</literal><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>w</name> <operator>=</operator> <call><name>MAX</name><argument_list>(<argument><expr><operator>*</operator><name>w</name></expr></argument>, <argument><expr><name>line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>w</name> <operator>=</operator> <call><name>MAX</name><argument_list>(<argument><expr><operator>*</operator><name>w</name></expr></argument>, <argument><expr><name>minw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>w</name> <operator>=</operator> <call><name>MAX</name><argument_list>(<argument><expr><operator>*</operator><name>w</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><name><name>conf</name><operator>-&gt;</operator><name>auto_minwidth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>w</name> <operator>=</operator> <call><name>MIN</name><argument_list>(<argument><expr><operator>*</operator><name>w</name></expr></argument>, <argument><expr><call><name>widget_max_width</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>rows</name> <operator>==</operator> <name>BSDDIALOG_AUTOSIZE</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>h</name> <operator>=</operator> <name>MINHEIGHT</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>maxword</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><operator>*</operator><name>h</name> <operator>+=</operator> <call><name>MAX</name><argument_list>(<argument><expr><name>nlines</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><operator>(</operator><operator>*</operator><name>w</name> <operator>/</operator> <call><name>GET_ASPECT_RATIO</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><operator>*</operator><name>h</name> <operator>=</operator> <call><name>MAX</name><argument_list>(<argument><expr><operator>*</operator><name>h</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><name><name>conf</name><operator>-&gt;</operator><name>auto_minheight</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>h</name> <operator>=</operator> <call><name>MIN</name><argument_list>(<argument><expr><operator>*</operator><name>h</name></expr></argument>, <argument><expr><call><name>widget_max_height</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call> <operator>-</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type>
<name>datetime_checksize</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>rows</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>cols</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>text</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>minw</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>buttons</name></name></type> <name>bs</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>mincols</name></decl>;</decl_stmt>

<expr_stmt><expr><name>mincols</name> <operator>=</operator> <name>VBORDERS</name></expr>;</expr_stmt>
<expr_stmt><expr><name>mincols</name> <operator>+=</operator> <name><name>bs</name><operator>.</operator><name>nbuttons</name></name> <operator>*</operator> <name><name>bs</name><operator>.</operator><name>sizebutton</name></name></expr>;</expr_stmt>
<expr_stmt><expr><name>mincols</name> <operator>+=</operator> <ternary><condition><expr><name><name>bs</name><operator>.</operator><name>nbuttons</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><operator>(</operator><name><name>bs</name><operator>.</operator><name>nbuttons</name></name><operator>-</operator><literal type="number">1</literal><operator>)</operator> <operator>*</operator> <name><name>t</name><operator>.</operator><name>button</name><operator>.</operator><name>space</name></name></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr>;</expr_stmt>
<expr_stmt><expr><name>mincols</name> <operator>=</operator> <call><name>MAX</name><argument_list>(<argument><expr><name>minw</name></expr></argument>, <argument><expr><name>mincols</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name>cols</name> <operator>&lt;</operator> <name>mincols</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>RETURN_ERROR</name><argument_list>(<argument><expr><literal type="string">"Few cols for this timebox/datebox"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>rows</name> <operator>&lt;</operator> <name>MINHEIGHT</name> <operator>+</operator> <operator>(</operator><ternary><condition><expr><call><name>strlen</name><argument_list>(<argument><expr><name>text</name></expr></argument>)</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>RETURN_ERROR</name><argument_list>(<argument><expr><literal type="string">"Few rows for this timebox/datebox"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type> <name>bsddialog_timebox</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>bsddialog_conf</name></name> <modifier>*</modifier></type><name>conf</name></decl></parameter>, <parameter><decl><type><name>char</name><modifier>*</modifier></type> <name>text</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rows</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>cols</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>hh</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>mm</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>ss</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>WINDOW</name> <modifier>*</modifier></type><name>widget</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>textpad</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>shadow</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>input</name></decl>, <decl><type ref="prev"/><name>output</name></decl>, <decl><type ref="prev"/><name>y</name></decl>, <decl><type ref="prev"/><name>x</name></decl>, <decl><type ref="prev"/><name>h</name></decl>, <decl><type ref="prev"/><name>w</name></decl>, <decl><type ref="prev"/><name>sel</name></decl>, <decl><type ref="prev"/><name>htextpad</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>buttons</name></name></type> <name>bs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>loop</name></decl>;</decl_stmt>
<struct>struct <name>myclockstruct</name> <block>{
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>max</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>value</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>WINDOW</name> <modifier>*</modifier></type><name>win</name></decl>;</decl_stmt>
}</block>;</struct>

<if_stmt><if>if <condition>(<expr><name>hh</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <name>mm</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <name>ss</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>RETURN_ERROR</name><argument_list>(<argument><expr><literal type="string">"hh / mm / ss cannot be NULL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>myclockstruct</name></name></type> <name><name>c</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr><literal type="number">23</literal></expr>, <expr><operator>*</operator><name>hh</name></expr>, <expr><name>NULL</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">59</literal></expr>, <expr><operator>*</operator><name>mm</name></expr>, <expr><name>NULL</name></expr>}</block></expr>,
<expr><block>{<expr><literal type="number">59</literal></expr>, <expr><operator>*</operator><name>ss</name></expr>, <expr><name>NULL</name></expr>}</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">3</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>&gt;</operator> <name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>max</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>=</operator> <name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>max</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></for>

<expr_stmt><expr><call><name>get_buttons</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>bs</name></expr></argument>, <argument><expr><call><name>BUTTONLABEL</name><argument_list>(<argument><expr><name>ok_label</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>BUTTONLABEL</name><argument_list>(<argument><expr><name>extra_label</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>BUTTONLABEL</name><argument_list>(<argument><expr><name>cancel_label</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>BUTTONLABEL</name><argument_list>(<argument><expr><name>help_label</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>set_widget_size</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>rows</name></expr></argument>, <argument><expr><name>cols</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>w</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>datetime_autosize</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>rows</name></expr></argument>, <argument><expr><name>cols</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>w</name></expr></argument>, <argument><expr><name>MINWTIME</name></expr></argument>, <argument><expr><name>text</name></expr></argument>, <argument><expr><name>bs</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>datetime_checksize</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>text</name></expr></argument>, <argument><expr><name>MINWTIME</name></expr></argument>, <argument><expr><name>bs</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>set_widget_position</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>y</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>x</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>new_widget_withtextpad</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>shadow</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>widget</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>RAISED</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>textpad</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>htextpad</name></expr></argument>, <argument><expr><name>text</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>draw_buttons</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name><operator>-</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>bs</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>prefresh</name><argument_list>(<argument><expr><name>textpad</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>y</name><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>x</name><operator>+</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>y</name><operator>+</operator><name>h</name><operator>-</operator><literal type="number">7</literal></expr></argument>, <argument><expr><name>x</name><operator>+</operator><name>w</name><operator>-</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>win</name> <operator>=</operator> <call><name>new_boxed_window</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>y</name> <operator>+</operator> <name>h</name> <operator>-</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <name>w</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <literal type="number">7</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>LOWERED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mvwaddch</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name> <operator>-</operator> <literal type="number">5</literal></expr></argument>, <argument><expr><name>w</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <literal type="number">3</literal></expr></argument>, <argument><expr><literal type="char">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>win</name> <operator>=</operator> <call><name>new_boxed_window</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>y</name> <operator>+</operator> <name>h</name> <operator>-</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <name>w</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>LOWERED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mvwaddch</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name> <operator>-</operator> <literal type="number">5</literal></expr></argument>, <argument><expr><name>w</name><operator>/</operator><literal type="number">2</literal> <operator>+</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><literal type="char">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>win</name> <operator>=</operator> <call><name>new_boxed_window</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>y</name> <operator>+</operator> <name>h</name> <operator>-</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <name>w</name><operator>/</operator><literal type="number">2</literal> <operator>+</operator> <literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>LOWERED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sel</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curs_set</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>loop</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<while>while<condition>(<expr><name>loop</name></expr>)</condition> <block>{<block_content>
<for>for <control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><literal type="number">3</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>mvwprintw</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"%2d"</literal></expr></argument>, <argument><expr><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>wmove</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>input</name> <operator>=</operator> <call><name>getch</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<switch>switch<condition>(<expr><name>input</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>KEY_ENTER</name></expr>:</case>
<case>case <expr><literal type="number">10</literal></expr>:</case>
<expr_stmt><expr><name>output</name> <operator>=</operator> <name><name>bs</name><operator>.</operator><name>value</name><index>[<expr><name><name>bs</name><operator>.</operator><name>curr</name></name></expr>]</index></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>output</name> <operator>==</operator> <name>BSDDIALOG_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>hh</name> <operator>=</operator> <name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>value</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>mm</name> <operator>=</operator> <name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>value</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>ss</name> <operator>=</operator> <name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>value</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>loop</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="number">27</literal></expr>:</case>
<expr_stmt><expr><name>output</name> <operator>=</operator> <name>BSDDIALOG_ESC</name></expr>;</expr_stmt>
<expr_stmt><expr><name>loop</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="char">'\t'</literal></expr>:</case>
<expr_stmt><expr><name>sel</name> <operator>=</operator> <operator>(</operator><name>sel</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>%</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>KEY_LEFT</name></expr>:</case>
<if_stmt><if>if <condition>(<expr><name><name>bs</name><operator>.</operator><name>curr</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>bs</name><operator>.</operator><name>curr</name></name><operator>--</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>draw_buttons</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name><operator>-</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>bs</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>KEY_RIGHT</name></expr>:</case>
<if_stmt><if>if <condition>(<expr><name><name>bs</name><operator>.</operator><name>curr</name></name> <operator>&lt;</operator> <operator>(</operator><name>int</name><operator>)</operator> <name><name>bs</name><operator>.</operator><name>nbuttons</name></name> <operator>-</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>bs</name><operator>.</operator><name>curr</name></name><operator>++</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>draw_buttons</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name><operator>-</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>bs</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>KEY_UP</name></expr>:</case>
<expr_stmt><expr><name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>=</operator> <ternary><condition><expr><name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>&lt;</operator> <name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>max</name></expr> ?</condition><then> <expr><name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>+</operator> <literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">0</literal></expr></else></ternary></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>KEY_DOWN</name></expr>:</case>
<expr_stmt><expr><name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>=</operator> <ternary><condition><expr><name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>&gt;</operator> <literal type="number">0</literal></expr> ?</condition><then> <expr><name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>-</operator> <literal type="number">1</literal></expr> </then><else>: <expr><name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>max</name></expr></else></ternary></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><call><name>KEY_F</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>:</case>
<if_stmt><if>if <condition>(<expr><name><name>conf</name><operator>-&gt;</operator><name>f1_file</name></name> <operator>==</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <name><name>conf</name><operator>-&gt;</operator><name>f1_message</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>curs_set</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>f1help</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>curs_set</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<case>case <expr><name>KEY_RESIZE</name></expr>:</case>
<expr_stmt><expr><call><name>hide_widget</name><argument_list>(<argument><expr><name>y</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>,<argument><expr><name><name>conf</name><operator>-&gt;</operator><name>shadow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





<expr_stmt><expr><call><name>refresh</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>set_widget_size</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>rows</name></expr></argument>, <argument><expr><name>cols</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>w</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>datetime_autosize</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>rows</name></expr></argument>, <argument><expr><name>cols</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>w</name></expr></argument>, <argument><expr><name>MINWTIME</name></expr></argument>, <argument><expr><name>text</name></expr></argument>, <argument><expr><name>bs</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>datetime_checksize</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>text</name></expr></argument>, <argument><expr><name>MINWTIME</name></expr></argument>, <argument><expr><name>bs</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>set_widget_position</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>y</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>x</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>wclear</name><argument_list>(<argument><expr><name>shadow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mvwin</name><argument_list>(<argument><expr><name>shadow</name></expr></argument>, <argument><expr><name>y</name> <operator>+</operator> <name><name>t</name><operator>.</operator><name>shadow</name><operator>.</operator><name>h</name></name></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <name><name>t</name><operator>.</operator><name>shadow</name><operator>.</operator><name>w</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wresize</name><argument_list>(<argument><expr><name>shadow</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>wclear</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mvwin</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><name>x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wresize</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>htextpad</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wclear</name><argument_list>(<argument><expr><name>textpad</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wresize</name><argument_list>(<argument><expr><name>textpad</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>w</name> <operator>-</operator> <name>HBORDERS</name> <operator>-</operator> <name><name>t</name><operator>.</operator><name>text</name><operator>.</operator><name>hmargin</name></name> <operator>*</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><call><name>update_widget_withtextpad</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>shadow</name></expr></argument>, <argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>,
<argument><expr><name>RAISED</name></expr></argument>, <argument><expr><name>textpad</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>htextpad</name></expr></argument>, <argument><expr><name>text</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>mvwaddch</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name> <operator>-</operator> <literal type="number">5</literal></expr></argument>, <argument><expr><name>w</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <literal type="number">3</literal></expr></argument>, <argument><expr><literal type="char">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mvwaddch</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name> <operator>-</operator> <literal type="number">5</literal></expr></argument>, <argument><expr><name>w</name><operator>/</operator><literal type="number">2</literal> <operator>+</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><literal type="char">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>draw_buttons</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name><operator>-</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>bs</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>prefresh</name><argument_list>(<argument><expr><name>textpad</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>y</name><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>x</name><operator>+</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>y</name><operator>+</operator><name>h</name><operator>-</operator><literal type="number">7</literal></expr></argument>, <argument><expr><name>x</name><operator>+</operator><name>w</name><operator>-</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>wclear</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mvwin</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>, <argument><expr><name>y</name> <operator>+</operator> <name>h</name> <operator>-</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <name>w</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <literal type="number">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>draw_borders</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>LOWERED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>wclear</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mvwin</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>, <argument><expr><name>y</name> <operator>+</operator> <name>h</name> <operator>-</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <name>w</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>draw_borders</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>LOWERED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>wclear</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mvwin</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>, <argument><expr><name>y</name> <operator>+</operator> <name>h</name> <operator>-</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <name>w</name><operator>/</operator><literal type="number">2</literal> <operator>+</operator> <literal type="number">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>draw_borders</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>LOWERED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>refresh</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <operator>(</operator><name>int</name><operator>)</operator> <name><name>bs</name><operator>.</operator><name>nbuttons</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<if_stmt><if>if <condition>(<expr><call><name>tolower</name><argument_list>(<argument><expr><name>input</name></expr></argument>)</argument_list></call> <operator>==</operator> <call><name>tolower</name><argument_list>(<argument><expr><operator>(</operator><name><name>bs</name><operator>.</operator><name>label</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator><index>[<expr><literal type="number">0</literal></expr>]</index></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>output</name> <operator>=</operator> <name><name>bs</name><operator>.</operator><name>value</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>loop</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt></block_content></block></for>
</block_content>}</block></switch>
</block_content>}</block></while>

<expr_stmt><expr><call><name>curs_set</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><literal type="number">3</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>delwin</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<expr_stmt><expr><call><name>end_widget_withtextpad</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>textpad</name></expr></argument>, <argument><expr><name>shadow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>output</name></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type>
<name>bsddialog_datebox</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>bsddialog_conf</name></name> <modifier>*</modifier></type><name>conf</name></decl></parameter>, <parameter><decl><type><name>char</name><modifier>*</modifier></type> <name>text</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rows</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>cols</name></decl></parameter>,
<parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>yy</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>mm</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>int</name> <modifier>*</modifier></type><name>dd</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>WINDOW</name> <modifier>*</modifier></type><name>widget</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>textpad</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>shadow</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>i</name></decl>, <decl><type ref="prev"/><name>input</name></decl>, <decl><type ref="prev"/><name>output</name></decl>, <decl><type ref="prev"/><name>y</name></decl>, <decl><type ref="prev"/><name>x</name></decl>, <decl><type ref="prev"/><name>h</name></decl>, <decl><type ref="prev"/><name>w</name></decl>, <decl><type ref="prev"/><name>sel</name></decl>, <decl><type ref="prev"/><name>htextpad</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>buttons</name></name></type> <name>bs</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>loop</name></decl>;</decl_stmt>
<struct>struct <name>calendar</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>max</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>value</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>WINDOW</name> <modifier>*</modifier></type><name>win</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>x</name></decl>;</decl_stmt>
}</block>;</struct>
<struct>struct <name>month</name> <block>{
<decl_stmt><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>int</name></type> <name>days</name></decl>;</decl_stmt>
}</block>;</struct>

<if_stmt><if>if <condition>(<expr><name>yy</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <name>mm</name> <operator>==</operator> <name>NULL</name> <operator>||</operator> <name>dd</name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>RETURN_ERROR</name><argument_list>(<argument><expr><literal type="string">"yy / mm / dd cannot be NULL"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>calendar</name></name></type> <name><name>c</name><index>[<expr><literal type="number">3</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{<expr><literal type="number">9999</literal></expr>, <expr><operator>*</operator><name>yy</name></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">4</literal></expr> }</block></expr>,
<expr><block>{<expr><literal type="number">12</literal></expr>, <expr><operator>*</operator><name>mm</name></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">9</literal></expr> }</block></expr>,
<expr><block>{<expr><literal type="number">31</literal></expr>, <expr><operator>*</operator><name>dd</name></expr>, <expr><name>NULL</name></expr>, <expr><literal type="number">2</literal></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name><name>struct</name> <name>month</name></name></type> <name><name>m</name><index>[<expr><literal type="number">12</literal></expr>]</index></name> <init>= <expr><block>{
<expr><block>{ <expr><literal type="string">"January"</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="string">"February"</literal></expr>, <expr><literal type="number">28</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="string">"March"</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"April"</literal></expr>, <expr><literal type="number">30</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="string">"May"</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="string">"June"</literal></expr>, <expr><literal type="number">30</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"July"</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="string">"August"</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="string">"September"</literal></expr>, <expr><literal type="number">30</literal></expr> }</block></expr>,
<expr><block>{ <expr><literal type="string">"October"</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="string">"November"</literal></expr>, <expr><literal type="number">30</literal></expr> }</block></expr>, <expr><block>{ <expr><literal type="string">"December"</literal></expr>, <expr><literal type="number">31</literal></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>ISLEAF</name><parameter_list>(<parameter><type><name>year</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((year % 4 == 0 &amp;&amp; year % 100 != 0) || year % 400 == 0)</cpp:value></cpp:define>

<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr> ;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <literal type="number">3</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>&gt;</operator> <name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>max</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>=</operator> <name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>max</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>&lt;</operator> <literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></for>
<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>max</name> <operator>=</operator> <name><name>m</name><index>[<expr><name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>value</name> <operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>days</name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>value</name> <operator>==</operator> <literal type="number">2</literal> <operator>&amp;&amp;</operator> <call><name>ISLEAF</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>value</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>max</name> <operator>=</operator> <literal type="number">29</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>value</name> <operator>&gt;</operator> <name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>max</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>value</name> <operator>=</operator> <name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>max</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>get_buttons</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>bs</name></expr></argument>, <argument><expr><call><name>BUTTONLABEL</name><argument_list>(<argument><expr><name>ok_label</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>BUTTONLABEL</name><argument_list>(<argument><expr><name>extra_label</name></expr></argument>)</argument_list></call></expr></argument>,
<argument><expr><call><name>BUTTONLABEL</name><argument_list>(<argument><expr><name>cancel_label</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name>BUTTONLABEL</name><argument_list>(<argument><expr><name>help_label</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>set_widget_size</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>rows</name></expr></argument>, <argument><expr><name>cols</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>w</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>datetime_autosize</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>rows</name></expr></argument>, <argument><expr><name>cols</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>w</name></expr></argument>, <argument><expr><name>MINWDATE</name></expr></argument>, <argument><expr><name>text</name></expr></argument>, <argument><expr><name>bs</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>datetime_checksize</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>text</name></expr></argument>, <argument><expr><name>MINWDATE</name></expr></argument>, <argument><expr><name>bs</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>set_widget_position</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>y</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>x</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>new_widget_withtextpad</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>shadow</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>widget</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>RAISED</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>textpad</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>htextpad</name></expr></argument>, <argument><expr><name>text</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>draw_buttons</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name><operator>-</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>bs</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>prefresh</name><argument_list>(<argument><expr><name>textpad</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>y</name><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>x</name><operator>+</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>y</name><operator>+</operator><name>h</name><operator>-</operator><literal type="number">7</literal></expr></argument>, <argument><expr><name>x</name><operator>+</operator><name>w</name><operator>-</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>win</name> <operator>=</operator> <call><name>new_boxed_window</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>y</name> <operator>+</operator> <name>h</name> <operator>-</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <name>w</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <literal type="number">11</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>LOWERED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mvwaddch</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name> <operator>-</operator> <literal type="number">5</literal></expr></argument>, <argument><expr><name>w</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <literal type="number">5</literal></expr></argument>, <argument><expr><literal type="char">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>win</name> <operator>=</operator> <call><name>new_boxed_window</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>y</name> <operator>+</operator> <name>h</name> <operator>-</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <name>w</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <literal type="number">4</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><name>LOWERED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mvwaddch</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name> <operator>-</operator> <literal type="number">5</literal></expr></argument>, <argument><expr><name>w</name><operator>/</operator><literal type="number">2</literal> <operator>+</operator> <literal type="number">7</literal></expr></argument>, <argument><expr><literal type="char">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>win</name> <operator>=</operator> <call><name>new_boxed_window</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>y</name> <operator>+</operator> <name>h</name> <operator>-</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <name>w</name><operator>/</operator><literal type="number">2</literal> <operator>+</operator> <literal type="number">8</literal></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>LOWERED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>sel</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>curs_set</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>loop</name> <operator>=</operator> <name>true</name></expr>;</expr_stmt>
<while>while<condition>(<expr><name>loop</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>mvwprintw</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"%4d"</literal></expr></argument>, <argument><expr><name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mvwprintw</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"%9s"</literal></expr></argument>, <argument><expr><name><name>m</name><index>[<expr><name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>value</name><operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mvwprintw</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"%2d"</literal></expr></argument>, <argument><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<for>for <control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><literal type="number">3</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></for>
<expr_stmt><expr><call><name>wmove</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>input</name> <operator>=</operator> <call><name>getch</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<switch>switch<condition>(<expr><name>input</name></expr>)</condition> <block>{<block_content>
<case>case <expr><name>KEY_ENTER</name></expr>:</case>
<case>case <expr><literal type="number">10</literal></expr>:</case>
<expr_stmt><expr><name>output</name> <operator>=</operator> <name><name>bs</name><operator>.</operator><name>value</name><index>[<expr><name><name>bs</name><operator>.</operator><name>curr</name></name></expr>]</index></name></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>output</name> <operator>==</operator> <name>BSDDIALOG_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>yy</name> <operator>=</operator> <name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>value</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>mm</name> <operator>=</operator> <name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>value</name></expr>;</expr_stmt>
<expr_stmt><expr><operator>*</operator><name>dd</name> <operator>=</operator> <name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>value</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<expr_stmt><expr><name>loop</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="number">27</literal></expr>:</case>
<expr_stmt><expr><name>output</name> <operator>=</operator> <name>BSDDIALOG_ESC</name></expr>;</expr_stmt>
<expr_stmt><expr><name>loop</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><literal type="char">'\t'</literal></expr>:</case>
<expr_stmt><expr><name>sel</name> <operator>=</operator> <operator>(</operator><name>sel</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>%</operator> <literal type="number">3</literal></expr>;</expr_stmt>
<break>break;</break>
<case>case <expr><name>KEY_LEFT</name></expr>:</case>
<if_stmt><if>if <condition>(<expr><name><name>bs</name><operator>.</operator><name>curr</name></name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>bs</name><operator>.</operator><name>curr</name></name><operator>--</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>draw_buttons</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name><operator>-</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>bs</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>KEY_RIGHT</name></expr>:</case>
<if_stmt><if>if <condition>(<expr><name><name>bs</name><operator>.</operator><name>curr</name></name> <operator>&lt;</operator> <operator>(</operator><name>int</name><operator>)</operator> <name><name>bs</name><operator>.</operator><name>nbuttons</name></name> <operator>-</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>bs</name><operator>.</operator><name>curr</name></name><operator>++</operator></expr>;</expr_stmt>
<expr_stmt><expr><call><name>draw_buttons</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name><operator>-</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>bs</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>KEY_UP</name></expr>:</case>
<expr_stmt><expr><name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>=</operator> <ternary><condition><expr><name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>&gt;</operator> <literal type="number">1</literal></expr> ?</condition><then> <expr><name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>-</operator> <literal type="number">1</literal></expr> </then><else>: <expr><name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>max</name></expr></else></ternary></expr> ;</expr_stmt>

<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>max</name> <operator>=</operator> <name><name>m</name><index>[<expr><name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>value</name> <operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>days</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>value</name> <operator>==</operator> <literal type="number">2</literal> <operator>&amp;&amp;</operator> <call><name>ISLEAF</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>value</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>max</name> <operator>=</operator> <literal type="number">29</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>value</name> <operator>&gt;</operator> <name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>max</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>value</name> <operator>=</operator> <name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>max</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<break>break;</break>
<case>case <expr><name>KEY_DOWN</name></expr>:</case>
<expr_stmt><expr><name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>=</operator> <ternary><condition><expr><name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>&lt;</operator> <name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>max</name></expr> ?</condition><then> <expr><name><name>c</name><index>[<expr><name>sel</name></expr>]</index></name><operator>.</operator><name>value</name> <operator>+</operator> <literal type="number">1</literal></expr> </then><else>: <expr><literal type="number">1</literal></expr></else></ternary></expr>;</expr_stmt>

<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>max</name> <operator>=</operator> <name><name>m</name><index>[<expr><name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>value</name> <operator>-</operator><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>days</name></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>value</name> <operator>==</operator> <literal type="number">2</literal> <operator>&amp;&amp;</operator> <call><name>ISLEAF</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>value</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>max</name> <operator>=</operator> <literal type="number">29</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>value</name> <operator>&gt;</operator> <name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>max</name></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>value</name> <operator>=</operator> <name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>max</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
<break>break;</break>
<case>case <expr><call><name>KEY_F</name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>:</case>
<if_stmt><if>if <condition>(<expr><name><name>conf</name><operator>-&gt;</operator><name>f1_file</name></name> <operator>==</operator> <name>NULL</name> <operator>&amp;&amp;</operator> <name><name>conf</name><operator>-&gt;</operator><name>f1_message</name></name> <operator>==</operator> <name>NULL</name></expr>)</condition><block type="pseudo"><block_content>
<break>break;</break></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>curs_set</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><call><name>f1help</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>curs_set</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<case>case <expr><name>KEY_RESIZE</name></expr>:</case>
<expr_stmt><expr><call><name>hide_widget</name><argument_list>(<argument><expr><name>y</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>,<argument><expr><name><name>conf</name><operator>-&gt;</operator><name>shadow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





<expr_stmt><expr><call><name>refresh</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if <condition>(<expr><call><name>set_widget_size</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>rows</name></expr></argument>, <argument><expr><name>cols</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>w</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>datetime_autosize</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>rows</name></expr></argument>, <argument><expr><name>cols</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>w</name></expr></argument>, <argument><expr><name>MINWDATE</name></expr></argument>, <argument><expr><name>text</name></expr></argument>, <argument><expr><name>bs</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>datetime_checksize</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>text</name></expr></argument>, <argument><expr><name>MINWDATE</name></expr></argument>, <argument><expr><name>bs</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>set_widget_position</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>y</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>x</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>wclear</name><argument_list>(<argument><expr><name>shadow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mvwin</name><argument_list>(<argument><expr><name>shadow</name></expr></argument>, <argument><expr><name>y</name> <operator>+</operator> <name><name>t</name><operator>.</operator><name>shadow</name><operator>.</operator><name>h</name></name></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <name><name>t</name><operator>.</operator><name>shadow</name><operator>.</operator><name>w</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wresize</name><argument_list>(<argument><expr><name>shadow</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>wclear</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mvwin</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><name>x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wresize</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><name>htextpad</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wclear</name><argument_list>(<argument><expr><name>textpad</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wresize</name><argument_list>(<argument><expr><name>textpad</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>w</name> <operator>-</operator> <name>HBORDERS</name> <operator>-</operator> <name><name>t</name><operator>.</operator><name>text</name><operator>.</operator><name>hmargin</name></name> <operator>*</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<if_stmt><if>if<condition>(<expr><call><name>update_widget_withtextpad</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>shadow</name></expr></argument>, <argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>,
<argument><expr><name>RAISED</name></expr></argument>, <argument><expr><name>textpad</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>htextpad</name></expr></argument>, <argument><expr><name>text</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>mvwaddch</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name> <operator>-</operator> <literal type="number">5</literal></expr></argument>, <argument><expr><name>w</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <literal type="number">5</literal></expr></argument>, <argument><expr><literal type="char">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mvwaddch</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name> <operator>-</operator> <literal type="number">5</literal></expr></argument>, <argument><expr><name>w</name><operator>/</operator><literal type="number">2</literal> <operator>+</operator> <literal type="number">7</literal></expr></argument>, <argument><expr><literal type="char">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>draw_buttons</name><argument_list>(<argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name><operator>-</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>bs</name></expr></argument>, <argument><expr><name>true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name>widget</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>prefresh</name><argument_list>(<argument><expr><name>textpad</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>y</name><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>x</name><operator>+</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>y</name><operator>+</operator><name>h</name><operator>-</operator><literal type="number">7</literal></expr></argument>, <argument><expr><name>x</name><operator>+</operator><name>w</name><operator>-</operator><literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>wclear</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mvwin</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>, <argument><expr><name>y</name> <operator>+</operator> <name>h</name> <operator>-</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <name>w</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <literal type="number">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>draw_borders</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">6</literal></expr></argument>, <argument><expr><name>LOWERED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">0</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>wclear</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mvwin</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>, <argument><expr><name>y</name> <operator>+</operator> <name>h</name> <operator>-</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <name>w</name><operator>/</operator><literal type="number">2</literal> <operator>-</operator> <literal type="number">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>draw_borders</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">11</literal></expr></argument>, <argument><expr><name>LOWERED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">1</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>wclear</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>mvwin</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>, <argument><expr><name>y</name> <operator>+</operator> <name>h</name> <operator>-</operator> <literal type="number">6</literal></expr></argument>, <argument><expr><name>x</name> <operator>+</operator> <name>w</name><operator>/</operator><literal type="number">2</literal> <operator>+</operator> <literal type="number">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>draw_borders</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>, <argument><expr><literal type="number">3</literal></expr></argument>, <argument><expr><literal type="number">4</literal></expr></argument>, <argument><expr><name>LOWERED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>wrefresh</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><literal type="number">2</literal></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<expr_stmt><expr><call><name>refresh</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
<break>break;</break>
<default>default:</default>
<for>for <control>(<init><expr><name>i</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <operator>(</operator><name>int</name><operator>)</operator> <name><name>bs</name><operator>.</operator><name>nbuttons</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<if_stmt><if>if <condition>(<expr><call><name>tolower</name><argument_list>(<argument><expr><name>input</name></expr></argument>)</argument_list></call> <operator>==</operator> <call><name>tolower</name><argument_list>(<argument><expr><operator>(</operator><name><name>bs</name><operator>.</operator><name>label</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator><index>[<expr><literal type="number">0</literal></expr>]</index></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name>output</name> <operator>=</operator> <name><name>bs</name><operator>.</operator><name>value</name><index>[<expr><name>i</name></expr>]</index></name></expr>;</expr_stmt>
<expr_stmt><expr><name>loop</name> <operator>=</operator> <name>false</name></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt></block_content></block></for>
</block_content>}</block></switch>
</block_content>}</block></while>

<expr_stmt><expr><call><name>curs_set</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<for>for <control>(<init><expr><name>i</name><operator>=</operator><literal type="number">0</literal></expr>;</init> <condition><expr><name>i</name><operator>&lt;</operator><literal type="number">3</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>delwin</name><argument_list>(<argument><expr><name><name>c</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><name>win</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
<expr_stmt><expr><call><name>end_widget_withtextpad</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>textpad</name></expr></argument>, <argument><expr><name>shadow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>output</name></expr>;</return>
</block_content>}</block></function>
</unit>
