<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/test/freeBSD_res/_cppstats_featurelocations/freebsd-src/contrib/bsddialog/lib/infobox.c">


























<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;sys/param.h&gt;</cpp:file></cpp:include>

<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>PORTNCURSES</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ncurses/ncurses.h&gt;</cpp:file></cpp:include>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;ncurses.h&gt;</cpp:file></cpp:include>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"bsddialog.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lib_util.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"bsddialog_theme.h"</cpp:file></cpp:include>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MIN_HEIGHT</name></cpp:macro> <cpp:value>3</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>extern</specifier> <name><name>struct</name> <name>bsddialog_theme</name></name></type> <name>t</name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>int</name></type>
<name>infobox_autosize</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>bsddialog_conf</name></name> <modifier>*</modifier></type><name>conf</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rows</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>cols</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>h</name></decl></parameter>, <parameter><decl><type><name>int</name> <modifier>*</modifier></type><name>w</name></decl></parameter>,
<parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>text</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>int</name></type> <name>maxword</name></decl>, <decl><type ref="prev"/><name>maxline</name></decl>, <decl><type ref="prev"/><name>nlines</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>get_text_properties</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>text</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>maxword</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>maxline</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>nlines</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>cols</name> <operator>==</operator> <name>BSDDIALOG_AUTOSIZE</name></expr>)</condition> <block>{<block_content>

<expr_stmt><expr><operator>*</operator><name>w</name> <operator>=</operator> <name>maxline</name> <operator>+</operator> <name>VBORDERS</name> <operator>+</operator> <name><name>t</name><operator>.</operator><name>text</name><operator>.</operator><name>hmargin</name></name> <operator>*</operator> <literal type="number">2</literal></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>w</name> <operator>=</operator> <call><name>MAX</name><argument_list>(<argument><expr><operator>*</operator><name>w</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><name><name>conf</name><operator>-&gt;</operator><name>auto_minwidth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>w</name> <operator>=</operator> <call><name>MIN</name><argument_list>(<argument><expr><operator>*</operator><name>w</name></expr></argument>, <argument><expr><call><name>widget_max_width</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>rows</name> <operator>==</operator> <name>BSDDIALOG_AUTOSIZE</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><operator>*</operator><name>h</name> <operator>=</operator> <name>MIN_HEIGHT</name> <operator>-</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>maxword</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><operator>*</operator><name>h</name> <operator>+=</operator> <call><name>MIN</name><argument_list>(<argument><expr><name>nlines</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><operator>(</operator><operator>*</operator><name>w</name> <operator>/</operator> <call><name>GET_ASPECT_RATIO</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call><operator>)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><operator>*</operator><name>h</name> <operator>=</operator> <call><name>MAX</name><argument_list>(<argument><expr><operator>*</operator><name>h</name></expr></argument>, <argument><expr><name>MIN_HEIGHT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>h</name> <operator>=</operator> <call><name>MAX</name><argument_list>(<argument><expr><operator>*</operator><name>h</name></expr></argument>, <argument><expr><operator>(</operator><name>int</name><operator>)</operator><name><name>conf</name><operator>-&gt;</operator><name>auto_minheight</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><operator>*</operator><name>h</name> <operator>=</operator> <call><name>MIN</name><argument_list>(<argument><expr><operator>*</operator><name>h</name></expr></argument>, <argument><expr><call><name>widget_max_height</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>int</name></type> <name>infobox_checksize</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>rows</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>cols</name></decl></parameter>)</parameter_list>
<block>{<block_content>

<if_stmt><if>if <condition>(<expr><name>cols</name> <operator>&lt;</operator> <name>HBORDERS</name> <operator>+</operator> <literal type="number">1</literal> <operator>+</operator> <operator>(</operator><name>int</name><operator>)</operator> <name><name>t</name><operator>.</operator><name>text</name><operator>.</operator><name>hmargin</name></name> <operator>*</operator> <literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>RETURN_ERROR</name><argument_list>(<argument><expr><literal type="string">"Few cols, infobox needs at least width 3 + text "</literal>\
<literal type="string">"margins"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><name>rows</name> <operator>&lt;</operator> <literal type="number">3</literal></expr>)</condition><block type="pseudo"><block_content>
<expr_stmt><expr><call><name>RETURN_ERROR</name><argument_list>(<argument><expr><literal type="string">"Infobox needs at least height 3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></function>

<function><type><name>int</name></type>
<name>bsddialog_infobox</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>bsddialog_conf</name></name> <modifier>*</modifier></type><name>conf</name></decl></parameter>, <parameter><decl><type><name>char</name><modifier>*</modifier></type> <name>text</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rows</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>cols</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>WINDOW</name> <modifier>*</modifier></type><name>shadow</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>widget</name></decl>, <decl><type ref="prev"><modifier>*</modifier></type><name>textpad</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>y</name></decl>, <decl><type ref="prev"/><name>x</name></decl>, <decl><type ref="prev"/><name>h</name></decl>, <decl><type ref="prev"/><name>w</name></decl>, <decl><type ref="prev"/><name>htextpad</name></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><call><name>set_widget_size</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>rows</name></expr></argument>, <argument><expr><name>cols</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>w</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>infobox_autosize</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>rows</name></expr></argument>, <argument><expr><name>cols</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>h</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>w</name></expr></argument>, <argument><expr><name>text</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>infobox_checksize</name><argument_list>(<argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>
<if_stmt><if>if <condition>(<expr><call><name>set_widget_position</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>y</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>x</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

<if_stmt><if>if <condition>(<expr><call><name>new_widget_withtextpad</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>shadow</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>widget</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><name>x</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>RAISED</name></expr></argument>,
<argument><expr><operator>&amp;</operator><name>textpad</name></expr></argument>, <argument><expr><operator>&amp;</operator><name>htextpad</name></expr></argument>, <argument><expr><name>text</name></expr></argument>, <argument><expr><name>false</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
<return>return <expr><name>BSDDIALOG_ERROR</name></expr>;</return></block_content></block></if></if_stmt>

<expr_stmt><expr><call><name>pnoutrefresh</name><argument_list>(<argument><expr><name>textpad</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>y</name><operator>+</operator><literal type="number">1</literal></expr></argument>, <argument><expr><name>x</name><operator>+</operator><literal type="number">1</literal><operator>+</operator><name><name>t</name><operator>.</operator><name>text</name><operator>.</operator><name>hmargin</name></name></expr></argument>, <argument><expr><name>y</name><operator>+</operator><name>h</name><operator>-</operator><literal type="number">2</literal></expr></argument>, <argument><expr><name>x</name><operator>+</operator><name>w</name><operator>-</operator><name><name>t</name><operator>.</operator><name>text</name><operator>.</operator><name>hmargin</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>doupdate</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>end_widget_withtextpad</name><argument_list>(<argument><expr><name>conf</name></expr></argument>, <argument><expr><name>widget</name></expr></argument>, <argument><expr><name>h</name></expr></argument>, <argument><expr><name>w</name></expr></argument>, <argument><expr><name>textpad</name></expr></argument>, <argument><expr><name>shadow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><operator>(</operator><name>BSDDIALOG_OK</name><operator>)</operator></expr>;</return>
</block_content>}</block></function>

</unit>
