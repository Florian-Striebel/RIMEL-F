<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats/redis/deps/hiredis/hiredis_ssl.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<struct_decl>struct <name>ssl_st</name>;</struct_decl>
<typedef>typedef <type><name><name>struct</name> <name>redisSSLContext</name></name></type> <name>redisSSLContext</name>;</typedef>
<typedef>typedef <type><enum>enum <block>{
<decl><name>REDIS_SSL_CTX_NONE</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>REDIS_SSL_CTX_CREATE_FAILED</name></decl>,
<decl><name>REDIS_SSL_CTX_CERT_KEY_REQUIRED</name></decl>,
<decl><name>REDIS_SSL_CTX_CA_CERT_LOAD_FAILED</name></decl>,
<decl><name>REDIS_SSL_CTX_CLIENT_CERT_LOAD_FAILED</name></decl>,
<decl><name>REDIS_SSL_CTX_PRIVATE_KEY_LOAD_FAILED</name></decl>
}</block></enum></type> <name>redisSSLContextError</name>;</typedef>
<function_decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>redisSSLContextGetError</name><parameter_list>(<parameter><decl><type><name>redisSSLContextError</name></type> <name>error</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>redisInitOpenSSL</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>redisSSLContext</name> <modifier>*</modifier></type><name>redisCreateSSLContext</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cacert_filename</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>capath</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>cert_filename</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>private_key_filename</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>server_name</name></decl></parameter>, <parameter><decl><type><name>redisSSLContextError</name> <modifier>*</modifier></type><name>error</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>redisFreeSSLContext</name><parameter_list>(<parameter><decl><type><name>redisSSLContext</name> <modifier>*</modifier></type><name>redis_ssl_ctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>redisInitiateSSLWithContext</name><parameter_list>(<parameter><decl><type><name>redisContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>redisSSLContext</name> <modifier>*</modifier></type><name>redis_ssl_ctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>redisInitiateSSL</name><parameter_list>(<parameter><decl><type><name>redisContext</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name><name>struct</name> <name>ssl_st</name></name> <modifier>*</modifier></type><name>ssl</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
