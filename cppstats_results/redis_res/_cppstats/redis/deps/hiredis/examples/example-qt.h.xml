<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats/redis/deps/hiredis/examples/example-qt.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;adapters/qt.h&gt;</cpp:file></cpp:include>
<decl_stmt><decl><type><name>class</name></type> <name>ExampleQt</name> <range>: <expr><name>public</name> <name>QObject</name> <block>{
<expr><name>Q_OBJECT</name>
<name>public</name><operator>:</operator>
<call><name>ExampleQt</name><argument_list>(<argument><expr><specifier>const</specifier> <name>char</name> <operator>*</operator> <name>value</name></expr></argument>, <argument><expr><name>QObject</name> <operator>*</operator> <name>parent</name> <operator>=</operator> <literal type="number">0</literal></expr></argument>)</argument_list></call>
<operator>:</operator> <call><name>QObject</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr>, <macro><name>m_value</name><argument_list>(<argument>value</argument>)</argument_list></macro> <expr><block>{}</block>
<name>signals</name><operator>:</operator>
<name>void</name> <call><name>finished</name><argument_list>()</argument_list></call></expr>;
<expr><name>public</name> <name>slots</name><operator>:</operator>
<name>void</name> <call><name>run</name><argument_list>()</argument_list></call></expr>;
<expr><name>private</name><operator>:</operator>
<name>void</name> <macro><name>finish</name><argument_list>()</argument_list></macro> <block>{ <expr><name>emit</name> <call><name>finished</name><argument_list>()</argument_list></call></expr>; }</block>
<name>private</name><operator>:</operator>
<specifier>const</specifier> <name>char</name> <operator>*</operator> <name>m_value</name></expr>;
<expr><name>redisAsyncContext</name> <operator>*</operator> <name>m_ctx</name></expr>;
<expr><name>RedisQtAdapter</name> <name>m_adapter</name></expr>;
<expr><name>friend</name>
<name>void</name> <call><name>getCallback</name><argument_list>(<argument><expr><name>redisAsyncContext</name> <operator>*</operator></expr></argument>, <argument><expr><name>void</name> <operator>*</operator></expr></argument>, <argument><expr><name>void</name> <operator>*</operator></expr></argument>)</argument_list></call></expr>;
}</block></expr></range></decl>;</decl_stmt>
</unit>
