<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats/redis/deps/jemalloc/test/src/mq.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"test/jemalloc_test.h"</cpp:file></cpp:include>
<function><type><name>void</name></type>
<name>mq_nanosleep</name><parameter_list>(<parameter><decl><type><name>unsigned</name></type> <name>ns</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>assert</name><argument_list>(<argument><expr><name>ns</name> <operator>&lt;=</operator> <literal type="number">1000</literal><operator>*</operator><literal type="number">1000</literal><operator>*</operator><literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>
<expr_stmt><expr><call><name>Sleep</name><argument_list>(<argument><expr><name>ns</name> <operator>/</operator> <literal type="number">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<block>{<block_content>
<decl_stmt><decl><type><name><name>struct</name> <name>timespec</name></name></type> <name>timeout</name></decl>;</decl_stmt>
<if_stmt><if>if <condition>(<expr><name>ns</name> <operator>&lt;</operator> <literal type="number">1000</literal><operator>*</operator><literal type="number">1000</literal><operator>*</operator><literal type="number">1000</literal></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><name><name>timeout</name><operator>.</operator><name>tv_sec</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>timeout</name><operator>.</operator><name>tv_nsec</name></name> <operator>=</operator> <name>ns</name></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><name><name>timeout</name><operator>.</operator><name>tv_sec</name></name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt>
<expr_stmt><expr><name><name>timeout</name><operator>.</operator><name>tv_nsec</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
<expr_stmt><expr><call><name>nanosleep</name><argument_list>(<argument><expr><operator>&amp;</operator><name>timeout</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</block_content>}</block></function>
</unit>
