<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats/redis/deps/jemalloc/include/jemalloc/internal/arena_structs_b.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/arena_stats.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/atomic.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/bin.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/bitmap.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/extent_dss.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/jemalloc_internal_types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/mutex.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/nstime.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/ql.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/sc.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/smoothstep.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/ticker.h"</cpp:file></cpp:include>
<struct>struct <name>arena_decay_s</name> <block>{
<decl_stmt><decl><type><name>malloc_mutex_t</name></type> <name>mtx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>purging</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>atomic_zd_t</name></type> <name>time_ms</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>nstime_t</name></type> <name>interval</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>nstime_t</name></type> <name>epoch</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>jitter_state</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>nstime_t</name></type> <name>deadline</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>nunpurged</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name><name>backlog</name><index>[<expr><name>SMOOTHSTEP_NSTEPS</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>arena_stats_decay_t</name> <modifier>*</modifier></type><name>stats</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>ceil_npages</name></decl>;</decl_stmt>
}</block>;</struct>
<struct>struct <name>arena_s</name> <block>{
<decl_stmt><decl><type><name>atomic_u_t</name></type> <name><name>nthreads</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>atomic_u_t</name></type> <name>binshard_next</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>tsdn_t</name> <modifier>*</modifier></type><name>last_thd</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>arena_stats_t</name></type> <name>stats</name></decl>;</decl_stmt>
<macro><name>ql_head</name><argument_list>(<argument>tcache_t</argument>)</argument_list></macro> <expr_stmt><expr><name>tcache_ql</name></expr>;</expr_stmt>
<macro><name>ql_head</name><argument_list>(<argument>cache_bin_array_descriptor_t</argument>)</argument_list></macro> <expr_stmt><expr><name>cache_bin_array_descriptor_ql</name></expr>;</expr_stmt>
<decl_stmt><decl><type><name>malloc_mutex_t</name></type> <name>tcache_ql_mtx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>prof_accum_t</name></type> <name>prof_accum</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>atomic_zu_t</name></type> <name>offset_state</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>atomic_zu_t</name></type> <name>extent_sn_next</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>atomic_u_t</name></type> <name>dss_prec</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>atomic_zu_t</name></type> <name>nactive</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>extent_list_t</name></type> <name>large</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>malloc_mutex_t</name></type> <name>large_mtx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>extents_t</name></type> <name>extents_dirty</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>extents_t</name></type> <name>extents_muzzy</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>extents_t</name></type> <name>extents_retained</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>arena_decay_t</name></type> <name>decay_dirty</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>arena_decay_t</name></type> <name>decay_muzzy</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>pszind_t</name></type> <name>extent_grow_next</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>pszind_t</name></type> <name>retain_grow_limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>malloc_mutex_t</name></type> <name>extent_grow_mtx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>extent_tree_t</name></type> <name>extent_avail</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>atomic_zu_t</name></type> <name>extent_avail_cnt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>malloc_mutex_t</name></type> <name>extent_avail_mtx</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bins_t</name></type> <name><name>bins</name><index>[<expr><name>SC_NBINS</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>base_t</name> <modifier>*</modifier></type><name>base</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>nstime_t</name></type> <name>create_time</name></decl>;</decl_stmt>
}</block>;</struct>
<struct>struct <name>arena_tdata_s</name> <block>{
<decl_stmt><decl><type><name>ticker_t</name></type> <name>decay_ticker</name></decl>;</decl_stmt>
}</block>;</struct>
<struct>struct <name>alloc_ctx_s</name> <block>{
<decl_stmt><decl><type><name>szind_t</name></type> <name>szind</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>bool</name></type> <name>slab</name></decl>;</decl_stmt>
}</block>;</struct>
</unit>
