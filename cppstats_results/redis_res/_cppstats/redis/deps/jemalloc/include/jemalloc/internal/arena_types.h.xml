<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats/redis/deps/jemalloc/include/jemalloc/internal/arena_types.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/sc.h"</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LG_SLAB_MAXREGS</name></cpp:macro> <cpp:value>(LG_PAGE - SC_LG_TINY_MIN)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SLAB_MAXREGS</name></cpp:macro> <cpp:value>(1U &lt;&lt; LG_SLAB_MAXREGS)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DIRTY_DECAY_MS_DEFAULT</name></cpp:macro> <cpp:value>ZD(10 * 1000)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>MUZZY_DECAY_MS_DEFAULT</name></cpp:macro> <cpp:value>(0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>DECAY_NTICKS_PER_UPDATE</name></cpp:macro> <cpp:value>1000</cpp:value></cpp:define>
<typedef>typedef <type><name><name>struct</name> <name>arena_slab_data_s</name></name></type> <name>arena_slab_data_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>arena_decay_s</name></name></type> <name>arena_decay_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>arena_s</name></name></type> <name>arena_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>arena_tdata_s</name></name></type> <name>arena_tdata_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>alloc_ctx_s</name></name></type> <name>alloc_ctx_t</name>;</typedef>
<typedef>typedef <type><enum>enum <block>{
<decl><name>percpu_arena_mode_names_base</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>percpu_arena_uninit</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>per_phycpu_arena_uninit</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>,
<decl><name>percpu_arena_disabled</name> <init>= <expr><literal type="number">2</literal></expr></init></decl>,
<decl><name>percpu_arena_mode_names_limit</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
<decl><name>percpu_arena_mode_enabled_base</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
<decl><name>percpu_arena</name> <init>= <expr><literal type="number">3</literal></expr></init></decl>,
<decl><name>per_phycpu_arena</name> <init>= <expr><literal type="number">4</literal></expr></init></decl>
}</block></enum></type> <name>percpu_arena_mode_t</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PERCPU_ARENA_ENABLED</name><parameter_list>(<parameter><type><name>m</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((m) &gt;= percpu_arena_mode_enabled_base)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PERCPU_ARENA_DEFAULT</name></cpp:macro> <cpp:value>percpu_arena_disabled</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>OVERSIZE_THRESHOLD_DEFAULT</name></cpp:macro> <cpp:value>(8 &lt;&lt; 20)</cpp:value></cpp:define>
</unit>
