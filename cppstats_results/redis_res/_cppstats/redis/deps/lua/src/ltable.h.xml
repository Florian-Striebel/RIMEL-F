<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats/redis/deps/lua/src/ltable.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lobject.h"</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>gnode</name><parameter_list>(<parameter><type><name>t</name></type></parameter>,<parameter><type><name>i</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(&amp;(t)-&gt;node[i])</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>gkey</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(&amp;(n)-&gt;i_key.nk)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>gval</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(&amp;(n)-&gt;i_val)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>gnext</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((n)-&gt;i_key.nk.next)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>key2tval</name><parameter_list>(<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(&amp;(n)-&gt;i_key.tvk)</cpp:value></cpp:define>
<function_decl><type><name>LUAI_FUNC</name> <specifier>const</specifier> <name>TValue</name> <modifier>*</modifier></type><name>luaH_getnum</name> <parameter_list>(<parameter><decl><type><name>Table</name> <modifier>*</modifier></type><name>t</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>key</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <name>TValue</name> <modifier>*</modifier></type><name>luaH_setnum</name> <parameter_list>(<parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter>, <parameter><decl><type><name>Table</name> <modifier>*</modifier></type><name>t</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>key</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <specifier>const</specifier> <name>TValue</name> <modifier>*</modifier></type><name>luaH_getstr</name> <parameter_list>(<parameter><decl><type><name>Table</name> <modifier>*</modifier></type><name>t</name></decl></parameter>, <parameter><decl><type><name>TString</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <name>TValue</name> <modifier>*</modifier></type><name>luaH_setstr</name> <parameter_list>(<parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter>, <parameter><decl><type><name>Table</name> <modifier>*</modifier></type><name>t</name></decl></parameter>, <parameter><decl><type><name>TString</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <specifier>const</specifier> <name>TValue</name> <modifier>*</modifier></type><name>luaH_get</name> <parameter_list>(<parameter><decl><type><name>Table</name> <modifier>*</modifier></type><name>t</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>TValue</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <name>TValue</name> <modifier>*</modifier></type><name>luaH_set</name> <parameter_list>(<parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter>, <parameter><decl><type><name>Table</name> <modifier>*</modifier></type><name>t</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>TValue</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <name>Table</name> <modifier>*</modifier></type><name>luaH_new</name> <parameter_list>(<parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>narray</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>lnhash</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <name>void</name></type> <name>luaH_resizearray</name> <parameter_list>(<parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter>, <parameter><decl><type><name>Table</name> <modifier>*</modifier></type><name>t</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nasize</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <name>void</name></type> <name>luaH_free</name> <parameter_list>(<parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter>, <parameter><decl><type><name>Table</name> <modifier>*</modifier></type><name>t</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <name>int</name></type> <name>luaH_next</name> <parameter_list>(<parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter>, <parameter><decl><type><name>Table</name> <modifier>*</modifier></type><name>t</name></decl></parameter>, <parameter><decl><type><name>StkId</name></type> <name>key</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <name>int</name></type> <name>luaH_getn</name> <parameter_list>(<parameter><decl><type><name>Table</name> <modifier>*</modifier></type><name>t</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>LUA_DEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>
<function_decl><type><name>LUAI_FUNC</name> <name>Node</name> <modifier>*</modifier></type><name>luaH_mainposition</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>Table</name> <modifier>*</modifier></type><name>t</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>TValue</name> <modifier>*</modifier></type><name>key</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <name>int</name></type> <name>luaH_isdummy</name> <parameter_list>(<parameter><decl><type><name>Node</name> <modifier>*</modifier></type><name>n</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
