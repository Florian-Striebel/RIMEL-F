<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats/redis/deps/lua/src/ltm.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lobject.h"</cpp:file></cpp:include>
<typedef>typedef <type><enum>enum <block>{
<decl><name>TM_INDEX</name></decl>,
<decl><name>TM_NEWINDEX</name></decl>,
<decl><name>TM_GC</name></decl>,
<decl><name>TM_MODE</name></decl>,
<decl><name>TM_EQ</name></decl>,
<decl><name>TM_ADD</name></decl>,
<decl><name>TM_SUB</name></decl>,
<decl><name>TM_MUL</name></decl>,
<decl><name>TM_DIV</name></decl>,
<decl><name>TM_MOD</name></decl>,
<decl><name>TM_POW</name></decl>,
<decl><name>TM_UNM</name></decl>,
<decl><name>TM_LEN</name></decl>,
<decl><name>TM_LT</name></decl>,
<decl><name>TM_LE</name></decl>,
<decl><name>TM_CONCAT</name></decl>,
<decl><name>TM_CALL</name></decl>,
<decl><name>TM_N</name></decl>
}</block></enum></type> <name>TMS</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>gfasttm</name><parameter_list>(<parameter><type><name>g</name></type></parameter>,<parameter><type><name>et</name></type></parameter>,<parameter><type><name>e</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((et) == NULL ? NULL : ((et)-&gt;flags &amp; (1u&lt;&lt;(e))) ? NULL : luaT_gettm(et, e, (g)-&gt;tmname[e]))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>fasttm</name><parameter_list>(<parameter><type><name>l</name></type></parameter>,<parameter><type><name>et</name></type></parameter>,<parameter><type><name>e</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>gfasttm(G(l), et, e)</cpp:value></cpp:define>
<decl_stmt><decl><type><name>LUAI_DATA</name> <specifier>const</specifier> <name>char</name> <modifier>*</modifier><specifier>const</specifier></type> <name><name>luaT_typenames</name><index>[]</index></name></decl>;</decl_stmt>
<function_decl><type><name>LUAI_FUNC</name> <specifier>const</specifier> <name>TValue</name> <modifier>*</modifier></type><name>luaT_gettm</name> <parameter_list>(<parameter><decl><type><name>Table</name> <modifier>*</modifier></type><name>events</name></decl></parameter>, <parameter><decl><type><name>TMS</name></type> <name>event</name></decl></parameter>, <parameter><decl><type><name>TString</name> <modifier>*</modifier></type><name>ename</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <specifier>const</specifier> <name>TValue</name> <modifier>*</modifier></type><name>luaT_gettmbyobj</name> <parameter_list>(<parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>TValue</name> <modifier>*</modifier></type><name>o</name></decl></parameter>,
<parameter><decl><type><name>TMS</name></type> <name>event</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <name>void</name></type> <name>luaT_init</name> <parameter_list>(<parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter>)</parameter_list>;</function_decl>
</unit>
