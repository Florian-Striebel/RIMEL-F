<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats/redis/src/script.h"><cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCRIPT_KILL</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCRIPT_CONTINUE</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCRIPT_WRITE_DIRTY</name></cpp:macro> <cpp:value>(1ULL&lt;&lt;0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCRIPT_TIMEDOUT</name></cpp:macro> <cpp:value>(1ULL&lt;&lt;3)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCRIPT_KILLED</name></cpp:macro> <cpp:value>(1ULL&lt;&lt;4)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCRIPT_READ_ONLY</name></cpp:macro> <cpp:value>(1ULL&lt;&lt;5)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCRIPT_ALLOW_OOM</name></cpp:macro> <cpp:value>(1ULL&lt;&lt;6)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCRIPT_EVAL_MODE</name></cpp:macro> <cpp:value>(1ULL&lt;&lt;7)</cpp:value></cpp:define>
<typedef>typedef <type><name><name>struct</name> <name>scriptRunCtx</name></name></type> <name>scriptRunCtx</name>;</typedef>
<struct>struct <name>scriptRunCtx</name> <block>{
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>funcname</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>client</name> <modifier>*</modifier></type><name>c</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>client</name> <modifier>*</modifier></type><name>original_client</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>repl_flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>monotime</name></type> <name>start_time</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>mstime_t</name></type> <name>snapshot_time</name></decl>;</decl_stmt>
}</block>;</struct>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCRIPT_FLAG_NO_WRITES</name></cpp:macro> <cpp:value>(1ULL&lt;&lt;0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCRIPT_FLAG_ALLOW_OOM</name></cpp:macro> <cpp:value>(1ULL&lt;&lt;1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCRIPT_FLAG_ALLOW_STALE</name></cpp:macro> <cpp:value>(1ULL&lt;&lt;2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCRIPT_FLAG_NO_CLUSTER</name></cpp:macro> <cpp:value>(1ULL&lt;&lt;3)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCRIPT_FLAG_EVAL_COMPAT_MODE</name></cpp:macro> <cpp:value>(1ULL&lt;&lt;4)</cpp:value></cpp:define>
<typedef>typedef <type><struct>struct <name>scriptFlag</name> <block>{
<decl_stmt><decl><type><name>uint64_t</name></type> <name>flag</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>str</name></decl>;</decl_stmt>
}</block></struct></type> <name>scriptFlag</name>;</typedef>
<decl_stmt><decl><type><specifier>extern</specifier> <name>scriptFlag</name></type> <name><name>scripts_flags_def</name><index>[]</index></name></decl>;</decl_stmt>
<function_decl><type><name>int</name></type> <name>scriptPrepareForRun</name><parameter_list>(<parameter><decl><type><name>scriptRunCtx</name> <modifier>*</modifier></type><name>r_ctx</name></decl></parameter>, <parameter><decl><type><name>client</name> <modifier>*</modifier></type><name>engine_client</name></decl></parameter>, <parameter><decl><type><name>client</name> <modifier>*</modifier></type><name>caller</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>funcname</name></decl></parameter>, <parameter><decl><type><name>uint64_t</name></type> <name>script_flags</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>ro</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>scriptResetRun</name><parameter_list>(<parameter><decl><type><name>scriptRunCtx</name> <modifier>*</modifier></type><name>r_ctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>scriptSetResp</name><parameter_list>(<parameter><decl><type><name>scriptRunCtx</name> <modifier>*</modifier></type><name>r_ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>resp</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>scriptSetRepl</name><parameter_list>(<parameter><decl><type><name>scriptRunCtx</name> <modifier>*</modifier></type><name>r_ctx</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>repl</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>scriptCall</name><parameter_list>(<parameter><decl><type><name>scriptRunCtx</name> <modifier>*</modifier></type><name>r_ctx</name></decl></parameter>, <parameter><decl><type><name>robj</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name>sds</name> <modifier>*</modifier></type><name>err</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>scriptInterrupt</name><parameter_list>(<parameter><decl><type><name>scriptRunCtx</name> <modifier>*</modifier></type><name>r_ctx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>scriptKill</name><parameter_list>(<parameter><decl><type><name>client</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>is_eval</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>scriptIsRunning</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>scriptCurrFunction</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>scriptIsEval</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>scriptIsTimedout</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>client</name><modifier>*</modifier></type> <name>scriptGetClient</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>client</name><modifier>*</modifier></type> <name>scriptGetCaller</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>mstime_t</name></type> <name>scriptTimeSnapshot</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>long</name> <name>long</name></type> <name>scriptRunDuration</name><parameter_list>()</parameter_list>;</function_decl>
</unit>
