<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats/redis/src/connhelpers.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"connection.h"</cpp:file></cpp:include>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>connIncrRefs</name><parameter_list>(<parameter><decl><type><name>connection</name> <modifier>*</modifier></type><name>conn</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name><name>conn</name><operator>-&gt;</operator><name>refs</name></name><operator>++</operator></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>void</name></type> <name>connDecrRefs</name><parameter_list>(<parameter><decl><type><name>connection</name> <modifier>*</modifier></type><name>conn</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><name><name>conn</name><operator>-&gt;</operator><name>refs</name></name><operator>--</operator></expr>;</expr_stmt>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>connHasRefs</name><parameter_list>(<parameter><decl><type><name>connection</name> <modifier>*</modifier></type><name>conn</name></decl></parameter>)</parameter_list> <block>{<block_content>
<return>return <expr><name><name>conn</name><operator>-&gt;</operator><name>refs</name></name></expr>;</return>
</block_content>}</block></function>
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>callHandler</name><parameter_list>(<parameter><decl><type><name>connection</name> <modifier>*</modifier></type><name>conn</name></decl></parameter>, <parameter><decl><type><name>ConnectionCallbackFunc</name></type> <name>handler</name></decl></parameter>)</parameter_list> <block>{<block_content>
<expr_stmt><expr><call><name>connIncrRefs</name><argument_list>(<argument><expr><name>conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name>handler</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>handler</name><argument_list>(<argument><expr><name>conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<expr_stmt><expr><call><name>connDecrRefs</name><argument_list>(<argument><expr><name>conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>conn</name><operator>-&gt;</operator><name>flags</name></name> <operator>&amp;</operator> <name>CONN_FLAG_CLOSE_SCHEDULED</name></expr>)</condition> <block>{<block_content>
<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>connHasRefs</name><argument_list>(<argument><expr><name>conn</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name>connClose</name><argument_list>(<argument><expr><name>conn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
<return>return <expr><literal type="number">0</literal></expr>;</return>
</block_content>}</block></if></if_stmt>
<return>return <expr><literal type="number">1</literal></expr>;</return>
</block_content>}</block></function>
</unit>
