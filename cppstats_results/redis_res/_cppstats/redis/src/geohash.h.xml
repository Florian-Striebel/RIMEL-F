<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats/redis/src/geohash.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
<extern>extern <literal type="string">"C"</literal> <block>{<block_content>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HASHISZERO</name><parameter_list>(<parameter><type><name>r</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(!(r).bits &amp;&amp; !(r).step)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RANGEISZERO</name><parameter_list>(<parameter><type><name>r</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(!(r).max &amp;&amp; !(r).min)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RANGEPISZERO</name><parameter_list>(<parameter><type><name>r</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(r == NULL || RANGEISZERO(*r))</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GEO_STEP_MAX</name></cpp:macro> <cpp:value>26</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GEO_LAT_MIN</name></cpp:macro> <cpp:value>-85.05112878</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GEO_LAT_MAX</name></cpp:macro> <cpp:value>85.05112878</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GEO_LONG_MIN</name></cpp:macro> <cpp:value>-180</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>GEO_LONG_MAX</name></cpp:macro> <cpp:value>180</cpp:value></cpp:define>
<typedef>typedef <type><enum>enum <block>{
<decl><name>GEOHASH_NORTH</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>,
<decl><name>GEOHASH_EAST</name></decl>,
<decl><name>GEOHASH_WEST</name></decl>,
<decl><name>GEOHASH_SOUTH</name></decl>,
<decl><name>GEOHASH_SOUTH_WEST</name></decl>,
<decl><name>GEOHASH_SOUTH_EAST</name></decl>,
<decl><name>GEOHASH_NORT_WEST</name></decl>,
<decl><name>GEOHASH_NORT_EAST</name></decl>
}</block></enum></type> <name>GeoDirection</name>;</typedef>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>uint64_t</name></type> <name>bits</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint8_t</name></type> <name>step</name></decl>;</decl_stmt>
}</block></struct></type> <name>GeoHashBits</name>;</typedef>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>double</name></type> <name>min</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name>max</name></decl>;</decl_stmt>
}</block></struct></type> <name>GeoHashRange</name>;</typedef>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>GeoHashBits</name></type> <name>hash</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GeoHashRange</name></type> <name>longitude</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GeoHashRange</name></type> <name>latitude</name></decl>;</decl_stmt>
}</block></struct></type> <name>GeoHashArea</name>;</typedef>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>GeoHashBits</name></type> <name>north</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GeoHashBits</name></type> <name>east</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GeoHashBits</name></type> <name>west</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GeoHashBits</name></type> <name>south</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GeoHashBits</name></type> <name>north_east</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GeoHashBits</name></type> <name>south_east</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GeoHashBits</name></type> <name>north_west</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GeoHashBits</name></type> <name>south_west</name></decl>;</decl_stmt>
}</block></struct></type> <name>GeoHashNeighbors</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>CIRCULAR_TYPE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RECTANGLE_TYPE</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<typedef>typedef <type><struct>struct <block>{
<decl_stmt><decl><type><name>int</name></type> <name>type</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name><name>xy</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name>conversion</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name><name>bounds</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
<union>union <block>{
<decl_stmt><decl><type><name>double</name></type> <name>radius</name></decl>;</decl_stmt>
<struct>struct <block>{
<decl_stmt><decl><type><name>double</name></type> <name>height</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>double</name></type> <name>width</name></decl>;</decl_stmt>
}</block> <decl><name>r</name></decl>;</struct>
}</block> <decl><name>t</name></decl>;</union>
}</block></struct></type> <name>GeoShape</name>;</typedef>
<function_decl><type><name>void</name></type> <name>geohashGetCoordRange</name><parameter_list>(<parameter><decl><type><name>GeoHashRange</name> <modifier>*</modifier></type><name>long_range</name></decl></parameter>, <parameter><decl><type><name>GeoHashRange</name> <modifier>*</modifier></type><name>lat_range</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>geohashEncode</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>GeoHashRange</name> <modifier>*</modifier></type><name>long_range</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>GeoHashRange</name> <modifier>*</modifier></type><name>lat_range</name></decl></parameter>,
<parameter><decl><type><name>double</name></type> <name>longitude</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>latitude</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>step</name></decl></parameter>,
<parameter><decl><type><name>GeoHashBits</name> <modifier>*</modifier></type><name>hash</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>geohashEncodeType</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>longitude</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>latitude</name></decl></parameter>,
<parameter><decl><type><name>uint8_t</name></type> <name>step</name></decl></parameter>, <parameter><decl><type><name>GeoHashBits</name> <modifier>*</modifier></type><name>hash</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>geohashEncodeWGS84</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>longitude</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>latitude</name></decl></parameter>, <parameter><decl><type><name>uint8_t</name></type> <name>step</name></decl></parameter>,
<parameter><decl><type><name>GeoHashBits</name> <modifier>*</modifier></type><name>hash</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>geohashDecode</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>GeoHashRange</name></type> <name>long_range</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>GeoHashRange</name></type> <name>lat_range</name></decl></parameter>,
<parameter><decl><type><specifier>const</specifier> <name>GeoHashBits</name></type> <name>hash</name></decl></parameter>, <parameter><decl><type><name>GeoHashArea</name> <modifier>*</modifier></type><name>area</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>geohashDecodeType</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>GeoHashBits</name></type> <name>hash</name></decl></parameter>, <parameter><decl><type><name>GeoHashArea</name> <modifier>*</modifier></type><name>area</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>geohashDecodeWGS84</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>GeoHashBits</name></type> <name>hash</name></decl></parameter>, <parameter><decl><type><name>GeoHashArea</name> <modifier>*</modifier></type><name>area</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>geohashDecodeAreaToLongLat</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>GeoHashArea</name> <modifier>*</modifier></type><name>area</name></decl></parameter>, <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>xy</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>geohashDecodeToLongLatType</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>GeoHashBits</name></type> <name>hash</name></decl></parameter>, <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>xy</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>geohashDecodeToLongLatWGS84</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>GeoHashBits</name></type> <name>hash</name></decl></parameter>, <parameter><decl><type><name>double</name> <modifier>*</modifier></type><name>xy</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>geohashNeighbors</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>GeoHashBits</name> <modifier>*</modifier></type><name>hash</name></decl></parameter>, <parameter><decl><type><name>GeoHashNeighbors</name> <modifier>*</modifier></type><name>neighbors</name></decl></parameter>)</parameter_list>;</function_decl>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>__cplusplus</name></expr></argument>)</argument_list></call></expr></cpp:if>
</block_content>}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
