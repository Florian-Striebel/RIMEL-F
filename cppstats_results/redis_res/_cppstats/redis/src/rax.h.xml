<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats/redis/src/rax.h"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdint.h&gt;</cpp:file></cpp:include>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RAX_NODE_MAX_SIZE</name></cpp:macro> <cpp:value>((1&lt;&lt;29)-1)</cpp:value></cpp:define>
<typedef>typedef <type><struct>struct <name>raxNode</name> <block>{
<decl_stmt><decl><type><name>uint32_t</name></type> <name>iskey</name><range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>isnull</name><range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>iscompr</name><range>:<expr><literal type="number">1</literal></expr></range></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint32_t</name></type> <name>size</name><range>:<expr><literal type="number">29</literal></expr></range></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>data</name><index>[]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>raxNode</name>;</typedef>
<typedef>typedef <type><struct>struct <name>rax</name> <block>{
<decl_stmt><decl><type><name>raxNode</name> <modifier>*</modifier></type><name>head</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>numele</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>numnodes</name></decl>;</decl_stmt>
}</block></struct></type> <name>rax</name>;</typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RAX_STACK_STATIC_ITEMS</name></cpp:macro> <cpp:value>32</cpp:value></cpp:define>
<typedef>typedef <type><struct>struct <name>raxStack</name> <block>{
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>stack</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>items</name></decl>, <name>maxitems</name>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name><name>static_items</name><index>[<expr><name>RAX_STACK_STATIC_ITEMS</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>oom</name></decl>;</decl_stmt>
}</block></struct></type> <name>raxStack</name>;</typedef>
<typedef>typedef <function_decl><type><name>int</name></type> (<modifier>*</modifier><name>raxNodeCallback</name>)<parameter_list>(<parameter><decl><type><name>raxNode</name> <modifier>*</modifier><modifier>*</modifier></type><name>noderef</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RAX_ITER_STATIC_LEN</name></cpp:macro> <cpp:value>128</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RAX_ITER_JUST_SEEKED</name></cpp:macro> <cpp:value>(1&lt;&lt;0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RAX_ITER_EOF</name></cpp:macro> <cpp:value>(1&lt;&lt;1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RAX_ITER_SAFE</name></cpp:macro> <cpp:value>(1&lt;&lt;2)</cpp:value></cpp:define>
<typedef>typedef <type><struct>struct <name>raxIterator</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>rax</name> <modifier>*</modifier></type><name>rt</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>key</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>key_len</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>key_max</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>key_static_string</name><index>[<expr><name>RAX_ITER_STATIC_LEN</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>raxNode</name> <modifier>*</modifier></type><name>node</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>raxStack</name></type> <name>stack</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>raxNodeCallback</name></type> <name>node_cb</name></decl>;</decl_stmt>
}</block></struct></type> <name>raxIterator</name>;</typedef>
<decl_stmt><decl><type><specifier>extern</specifier> <name>void</name> <modifier>*</modifier></type><name>raxNotFound</name></decl>;</decl_stmt>
<function_decl><type><name>rax</name> <modifier>*</modifier></type><name>raxNew</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>raxInsert</name><parameter_list>(<parameter><decl><type><name>rax</name> <modifier>*</modifier></type><name>rax</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>old</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>raxTryInsert</name><parameter_list>(<parameter><decl><type><name>rax</name> <modifier>*</modifier></type><name>rax</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>old</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>raxRemove</name><parameter_list>(<parameter><decl><type><name>rax</name> <modifier>*</modifier></type><name>rax</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier><modifier>*</modifier></type><name>old</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name> <modifier>*</modifier></type><name>raxFind</name><parameter_list>(<parameter><decl><type><name>rax</name> <modifier>*</modifier></type><name>rax</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>raxFree</name><parameter_list>(<parameter><decl><type><name>rax</name> <modifier>*</modifier></type><name>rax</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>raxFreeWithCallback</name><parameter_list>(<parameter><decl><type><name>rax</name> <modifier>*</modifier></type><name>rax</name></decl></parameter>, <parameter><function_decl><type><name>void</name></type> (<modifier>*</modifier><name>free_callback</name>)<parameter_list>(<parameter><decl><type><name>void</name><modifier>*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>raxStart</name><parameter_list>(<parameter><decl><type><name>raxIterator</name> <modifier>*</modifier></type><name>it</name></decl></parameter>, <parameter><decl><type><name>rax</name> <modifier>*</modifier></type><name>rt</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>raxSeek</name><parameter_list>(<parameter><decl><type><name>raxIterator</name> <modifier>*</modifier></type><name>it</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>op</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>ele</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>raxNext</name><parameter_list>(<parameter><decl><type><name>raxIterator</name> <modifier>*</modifier></type><name>it</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>raxPrev</name><parameter_list>(<parameter><decl><type><name>raxIterator</name> <modifier>*</modifier></type><name>it</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>raxRandomWalk</name><parameter_list>(<parameter><decl><type><name>raxIterator</name> <modifier>*</modifier></type><name>it</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>steps</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>raxCompare</name><parameter_list>(<parameter><decl><type><name>raxIterator</name> <modifier>*</modifier></type><name>iter</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type><name>op</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>key_len</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>raxStop</name><parameter_list>(<parameter><decl><type><name>raxIterator</name> <modifier>*</modifier></type><name>it</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>raxEOF</name><parameter_list>(<parameter><decl><type><name>raxIterator</name> <modifier>*</modifier></type><name>it</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>raxShow</name><parameter_list>(<parameter><decl><type><name>rax</name> <modifier>*</modifier></type><name>rax</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>uint64_t</name></type> <name>raxSize</name><parameter_list>(<parameter><decl><type><name>rax</name> <modifier>*</modifier></type><name>rax</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>unsigned</name> <name>long</name></type> <name>raxTouch</name><parameter_list>(<parameter><decl><type><name>raxNode</name> <modifier>*</modifier></type><name>n</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>raxSetDebugMsg</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>onoff</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>raxSetData</name><parameter_list>(<parameter><decl><type><name>raxNode</name> <modifier>*</modifier></type><name>n</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>data</name></decl></parameter>)</parameter_list>;</function_decl>
</unit>
