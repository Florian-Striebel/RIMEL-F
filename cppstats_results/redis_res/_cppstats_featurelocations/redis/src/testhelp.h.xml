<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats_featurelocations/redis/src/testhelp.h">





































<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__TESTHELP_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__TESTHELP_H</name></cpp:macro></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REDIS_TEST_ACCURATE</name></cpp:macro> <cpp:value>(1&lt;&lt;0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>REDIS_TEST_LARGE_MEMORY</name></cpp:macro> <cpp:value>(1&lt;&lt;1)</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>__failed_tests</name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier>extern</specifier> <name>int</name></type> <name>__test_num</name></decl>;</decl_stmt>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>test_cond</name><parameter_list>(<parameter><type><name>descr</name></type></parameter>,<parameter><type><name>_c</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>do { __test_num++; printf("%d - %s: ", __test_num, descr); if(_c) printf("PASSED\n"); else {printf("FAILED\n"); __failed_tests++;} } while(0)</cpp:value></cpp:define>



<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>test_report</name><parameter_list>()</parameter_list></cpp:macro> <cpp:value>do { printf("%d tests, %d passed, %d failed\n", __test_num, __test_num-__failed_tests, __failed_tests); if (__failed_tests) { printf("=== WARNING === We have failed tests here...\n"); exit(1); } } while(0)</cpp:value></cpp:define>








<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
