<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats_featurelocations/redis/src/stream.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>STREAM_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>STREAM_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"rax.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"listpack.h"</cpp:file></cpp:include>





<typedef>typedef <type><struct>struct <name>streamID</name> <block>{
<decl_stmt><decl><type><name>uint64_t</name></type> <name>ms</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>seq</name></decl>;</decl_stmt>
}</block></struct></type> <name>streamID</name>;</typedef>

<typedef>typedef <type><struct>struct <name>stream</name> <block>{
<decl_stmt><decl><type><name>rax</name> <modifier>*</modifier></type><name>rax</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>length</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>streamID</name></type> <name>last_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>rax</name> <modifier>*</modifier></type><name>cgroups</name></decl>;</decl_stmt>
}</block></struct></type> <name>stream</name>;</typedef>







<typedef>typedef <type><struct>struct <name>streamIterator</name> <block>{
<decl_stmt><decl><type><name>stream</name> <modifier>*</modifier></type><name>stream</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>streamID</name></type> <name>master_id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>master_fields_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>master_fields_start</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>master_fields_ptr</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>entry_flags</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>rev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name><name>start_key</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name><name>end_key</name><index>[<expr><literal type="number">2</literal></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>raxIterator</name></type> <name>ri</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>lp</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>lp_ele</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>lp_flags</name></decl>;</decl_stmt>



<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>field_buf</name><index>[<expr><name>LP_INTBUF_SIZE</name></expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>unsigned</name> <name>char</name></type> <name><name>value_buf</name><index>[<expr><name>LP_INTBUF_SIZE</name></expr>]</index></name></decl>;</decl_stmt>
}</block></struct></type> <name>streamIterator</name>;</typedef>


<typedef>typedef <type><struct>struct <name>streamCG</name> <block>{
<decl_stmt><decl><type><name>streamID</name></type> <name>last_id</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>rax</name> <modifier>*</modifier></type><name>pel</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>rax</name> <modifier>*</modifier></type><name>consumers</name></decl>;</decl_stmt>


}</block></struct></type> <name>streamCG</name>;</typedef>


<typedef>typedef <type><struct>struct <name>streamConsumer</name> <block>{
<decl_stmt><decl><type><name>mstime_t</name></type> <name>seen_time</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>sds</name></type> <name>name</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>rax</name> <modifier>*</modifier></type><name>pel</name></decl>;</decl_stmt>






}</block></struct></type> <name>streamConsumer</name>;</typedef>


<typedef>typedef <type><struct>struct <name>streamNACK</name> <block>{
<decl_stmt><decl><type><name>mstime_t</name></type> <name>delivery_time</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>uint64_t</name></type> <name>delivery_count</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>streamConsumer</name> <modifier>*</modifier></type><name>consumer</name></decl>;</decl_stmt>

}</block></struct></type> <name>streamNACK</name>;</typedef>



<typedef>typedef <type><struct>struct <name>streamPropInfo</name> <block>{
<decl_stmt><decl><type><name>robj</name> <modifier>*</modifier></type><name>keyname</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>robj</name> <modifier>*</modifier></type><name>groupname</name></decl>;</decl_stmt>
}</block></struct></type> <name>streamPropInfo</name>;</typedef>


<struct_decl>struct <name>client</name>;</struct_decl>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SLC_DEFAULT</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SLC_NO_REFRESH</name></cpp:macro> <cpp:value>(1&lt;&lt;0)</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCC_DEFAULT</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCC_NO_NOTIFY</name></cpp:macro> <cpp:value>(1&lt;&lt;0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SCC_NO_DIRTIFY</name></cpp:macro> <cpp:value>(1&lt;&lt;1)</cpp:value></cpp:define>

<function_decl><type><name>stream</name> <modifier>*</modifier></type><name>streamNew</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>freeStream</name><parameter_list>(<parameter><decl><type><name>stream</name> <modifier>*</modifier></type><name>s</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>unsigned</name> <name>long</name></type> <name>streamLength</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>robj</name> <modifier>*</modifier></type><name>subject</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>size_t</name></type> <name>streamReplyWithRange</name><parameter_list>(<parameter><decl><type><name>client</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>stream</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>streamID</name> <modifier>*</modifier></type><name>start</name></decl></parameter>, <parameter><decl><type><name>streamID</name> <modifier>*</modifier></type><name>end</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>count</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rev</name></decl></parameter>, <parameter><decl><type><name>streamCG</name> <modifier>*</modifier></type><name>group</name></decl></parameter>, <parameter><decl><type><name>streamConsumer</name> <modifier>*</modifier></type><name>consumer</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>, <parameter><decl><type><name>streamPropInfo</name> <modifier>*</modifier></type><name>spi</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>streamIteratorStart</name><parameter_list>(<parameter><decl><type><name>streamIterator</name> <modifier>*</modifier></type><name>si</name></decl></parameter>, <parameter><decl><type><name>stream</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>streamID</name> <modifier>*</modifier></type><name>start</name></decl></parameter>, <parameter><decl><type><name>streamID</name> <modifier>*</modifier></type><name>end</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rev</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>streamIteratorGetID</name><parameter_list>(<parameter><decl><type><name>streamIterator</name> <modifier>*</modifier></type><name>si</name></decl></parameter>, <parameter><decl><type><name>streamID</name> <modifier>*</modifier></type><name>id</name></decl></parameter>, <parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>numfields</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>streamIteratorGetField</name><parameter_list>(<parameter><decl><type><name>streamIterator</name> <modifier>*</modifier></type><name>si</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>fieldptr</name></decl></parameter>, <parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier><modifier>*</modifier></type><name>valueptr</name></decl></parameter>, <parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>fieldlen</name></decl></parameter>, <parameter><decl><type><name>int64_t</name> <modifier>*</modifier></type><name>valuelen</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>streamIteratorRemoveEntry</name><parameter_list>(<parameter><decl><type><name>streamIterator</name> <modifier>*</modifier></type><name>si</name></decl></parameter>, <parameter><decl><type><name>streamID</name> <modifier>*</modifier></type><name>current</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>streamIteratorStop</name><parameter_list>(<parameter><decl><type><name>streamIterator</name> <modifier>*</modifier></type><name>si</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>streamCG</name> <modifier>*</modifier></type><name>streamLookupCG</name><parameter_list>(<parameter><decl><type><name>stream</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>sds</name></type> <name>groupname</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>streamConsumer</name> <modifier>*</modifier></type><name>streamLookupConsumer</name><parameter_list>(<parameter><decl><type><name>streamCG</name> <modifier>*</modifier></type><name>cg</name></decl></parameter>, <parameter><decl><type><name>sds</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>streamConsumer</name> <modifier>*</modifier></type><name>streamCreateConsumer</name><parameter_list>(<parameter><decl><type><name>streamCG</name> <modifier>*</modifier></type><name>cg</name></decl></parameter>, <parameter><decl><type><name>sds</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>robj</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>dbid</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>streamCG</name> <modifier>*</modifier></type><name>streamCreateCG</name><parameter_list>(<parameter><decl><type><name>stream</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>char</name> <modifier>*</modifier></type><name>name</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>namelen</name></decl></parameter>, <parameter><decl><type><name>streamID</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>streamNACK</name> <modifier>*</modifier></type><name>streamCreateNACK</name><parameter_list>(<parameter><decl><type><name>streamConsumer</name> <modifier>*</modifier></type><name>consumer</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>streamDecodeID</name><parameter_list>(<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>buf</name></decl></parameter>, <parameter><decl><type><name>streamID</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>streamCompareID</name><parameter_list>(<parameter><decl><type><name>streamID</name> <modifier>*</modifier></type><name>a</name></decl></parameter>, <parameter><decl><type><name>streamID</name> <modifier>*</modifier></type><name>b</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>streamFreeNACK</name><parameter_list>(<parameter><decl><type><name>streamNACK</name> <modifier>*</modifier></type><name>na</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>streamIncrID</name><parameter_list>(<parameter><decl><type><name>streamID</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>streamDecrID</name><parameter_list>(<parameter><decl><type><name>streamID</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>streamPropagateConsumerCreation</name><parameter_list>(<parameter><decl><type><name>client</name> <modifier>*</modifier></type><name>c</name></decl></parameter>, <parameter><decl><type><name>robj</name> <modifier>*</modifier></type><name>key</name></decl></parameter>, <parameter><decl><type><name>robj</name> <modifier>*</modifier></type><name>groupname</name></decl></parameter>, <parameter><decl><type><name>sds</name></type> <name>consumername</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>robj</name> <modifier>*</modifier></type><name>streamDup</name><parameter_list>(<parameter><decl><type><name>robj</name> <modifier>*</modifier></type><name>o</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>streamValidateListpackIntegrity</name><parameter_list>(<parameter><decl><type><name>unsigned</name> <name>char</name> <modifier>*</modifier></type><name>lp</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>size</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>deep</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>streamParseID</name><parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>robj</name> <modifier>*</modifier></type><name>o</name></decl></parameter>, <parameter><decl><type><name>streamID</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>robj</name> <modifier>*</modifier></type><name>createObjectFromStreamID</name><parameter_list>(<parameter><decl><type><name>streamID</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>streamAppendItem</name><parameter_list>(<parameter><decl><type><name>stream</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>robj</name> <modifier>*</modifier><modifier>*</modifier></type><name>argv</name></decl></parameter>, <parameter><decl><type><name>int64_t</name></type> <name>numfields</name></decl></parameter>, <parameter><decl><type><name>streamID</name> <modifier>*</modifier></type><name>added_id</name></decl></parameter>, <parameter><decl><type><name>streamID</name> <modifier>*</modifier></type><name>use_id</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>seq_given</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>streamDeleteItem</name><parameter_list>(<parameter><decl><type><name>stream</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>streamID</name> <modifier>*</modifier></type><name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int64_t</name></type> <name>streamTrimByLength</name><parameter_list>(<parameter><decl><type><name>stream</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>maxlen</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>approx</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int64_t</name></type> <name>streamTrimByID</name><parameter_list>(<parameter><decl><type><name>stream</name> <modifier>*</modifier></type><name>s</name></decl></parameter>, <parameter><decl><type><name>streamID</name></type> <name>minid</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>approx</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
