<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats_featurelocations/redis/src/ae.h">































<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__AE_H__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__AE_H__</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"monotonic.h"</cpp:file></cpp:include>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AE_OK</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AE_ERR</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AE_NONE</name></cpp:macro> <cpp:value>0</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AE_READABLE</name></cpp:macro> <cpp:value>1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AE_WRITABLE</name></cpp:macro> <cpp:value>2</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AE_BARRIER</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AE_FILE_EVENTS</name></cpp:macro> <cpp:value>(1&lt;&lt;0)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AE_TIME_EVENTS</name></cpp:macro> <cpp:value>(1&lt;&lt;1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AE_ALL_EVENTS</name></cpp:macro> <cpp:value>(AE_FILE_EVENTS|AE_TIME_EVENTS)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AE_DONT_WAIT</name></cpp:macro> <cpp:value>(1&lt;&lt;2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AE_CALL_BEFORE_SLEEP</name></cpp:macro> <cpp:value>(1&lt;&lt;3)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AE_CALL_AFTER_SLEEP</name></cpp:macro> <cpp:value>(1&lt;&lt;4)</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AE_NOMORE</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AE_DELETED_EVENT_ID</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>AE_NOTUSED</name><parameter_list>(<parameter><type><name>V</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((void) V)</cpp:value></cpp:define>

<struct_decl>struct <name>aeEventLoop</name>;</struct_decl>


<typedef>typedef <function_decl><type><name>void</name></type> <name>aeFileProc</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>aeEventLoop</name></name> <modifier>*</modifier></type><name>eventLoop</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>clientData</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mask</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>int</name></type> <name>aeTimeProc</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>aeEventLoop</name></name> <modifier>*</modifier></type><name>eventLoop</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>clientData</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type> <name>aeEventFinalizerProc</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>aeEventLoop</name></name> <modifier>*</modifier></type><name>eventLoop</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>clientData</name></decl></parameter>)</parameter_list>;</function_decl></typedef>
<typedef>typedef <function_decl><type><name>void</name></type> <name>aeBeforeSleepProc</name><parameter_list>(<parameter><decl><type><name><name>struct</name> <name>aeEventLoop</name></name> <modifier>*</modifier></type><name>eventLoop</name></decl></parameter>)</parameter_list>;</function_decl></typedef>


<typedef>typedef <type><struct>struct <name>aeFileEvent</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>mask</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>aeFileProc</name> <modifier>*</modifier></type><name>rfileProc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>aeFileProc</name> <modifier>*</modifier></type><name>wfileProc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>clientData</name></decl>;</decl_stmt>
}</block></struct></type> <name>aeFileEvent</name>;</typedef>


<typedef>typedef <type><struct>struct <name>aeTimeEvent</name> <block>{
<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>id</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>monotime</name></type> <name>when</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>aeTimeProc</name> <modifier>*</modifier></type><name>timeProc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>aeEventFinalizerProc</name> <modifier>*</modifier></type><name>finalizerProc</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>clientData</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>aeTimeEvent</name></name> <modifier>*</modifier></type><name>prev</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name><name>struct</name> <name>aeTimeEvent</name></name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>refcount</name></decl>;</decl_stmt>

}</block></struct></type> <name>aeTimeEvent</name>;</typedef>


<typedef>typedef <type><struct>struct <name>aeFiredEvent</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>fd</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>mask</name></decl>;</decl_stmt>
}</block></struct></type> <name>aeFiredEvent</name>;</typedef>


<typedef>typedef <type><struct>struct <name>aeEventLoop</name> <block>{
<decl_stmt><decl><type><name>int</name></type> <name>maxfd</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>setsize</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>long</name> <name>long</name></type> <name>timeEventNextId</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>aeFileEvent</name> <modifier>*</modifier></type><name>events</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>aeFiredEvent</name> <modifier>*</modifier></type><name>fired</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>aeTimeEvent</name> <modifier>*</modifier></type><name>timeEventHead</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>stop</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>apidata</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>aeBeforeSleepProc</name> <modifier>*</modifier></type><name>beforesleep</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>aeBeforeSleepProc</name> <modifier>*</modifier></type><name>aftersleep</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>int</name></type> <name>flags</name></decl>;</decl_stmt>
}</block></struct></type> <name>aeEventLoop</name>;</typedef>


<function_decl><type><name>aeEventLoop</name> <modifier>*</modifier></type><name>aeCreateEventLoop</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>setsize</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aeDeleteEventLoop</name><parameter_list>(<parameter><decl><type><name>aeEventLoop</name> <modifier>*</modifier></type><name>eventLoop</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aeStop</name><parameter_list>(<parameter><decl><type><name>aeEventLoop</name> <modifier>*</modifier></type><name>eventLoop</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>aeCreateFileEvent</name><parameter_list>(<parameter><decl><type><name>aeEventLoop</name> <modifier>*</modifier></type><name>eventLoop</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mask</name></decl></parameter>,
<parameter><decl><type><name>aeFileProc</name> <modifier>*</modifier></type><name>proc</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>clientData</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aeDeleteFileEvent</name><parameter_list>(<parameter><decl><type><name>aeEventLoop</name> <modifier>*</modifier></type><name>eventLoop</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mask</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>aeGetFileEvents</name><parameter_list>(<parameter><decl><type><name>aeEventLoop</name> <modifier>*</modifier></type><name>eventLoop</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name> <modifier>*</modifier></type><name>aeGetFileClientData</name><parameter_list>(<parameter><decl><type><name>aeEventLoop</name> <modifier>*</modifier></type><name>eventLoop</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>long</name> <name>long</name></type> <name>aeCreateTimeEvent</name><parameter_list>(<parameter><decl><type><name>aeEventLoop</name> <modifier>*</modifier></type><name>eventLoop</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>milliseconds</name></decl></parameter>,
<parameter><decl><type><name>aeTimeProc</name> <modifier>*</modifier></type><name>proc</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>clientData</name></decl></parameter>,
<parameter><decl><type><name>aeEventFinalizerProc</name> <modifier>*</modifier></type><name>finalizerProc</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>aeDeleteTimeEvent</name><parameter_list>(<parameter><decl><type><name>aeEventLoop</name> <modifier>*</modifier></type><name>eventLoop</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>id</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>aeProcessEvents</name><parameter_list>(<parameter><decl><type><name>aeEventLoop</name> <modifier>*</modifier></type><name>eventLoop</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>flags</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>aeWait</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>fd</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>mask</name></decl></parameter>, <parameter><decl><type><name>long</name> <name>long</name></type> <name>milliseconds</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aeMain</name><parameter_list>(<parameter><decl><type><name>aeEventLoop</name> <modifier>*</modifier></type><name>eventLoop</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>char</name> <modifier>*</modifier></type><name>aeGetApiName</name><parameter_list>(<parameter><decl><type><name>void</name></type></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aeSetBeforeSleepProc</name><parameter_list>(<parameter><decl><type><name>aeEventLoop</name> <modifier>*</modifier></type><name>eventLoop</name></decl></parameter>, <parameter><decl><type><name>aeBeforeSleepProc</name> <modifier>*</modifier></type><name>beforesleep</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aeSetAfterSleepProc</name><parameter_list>(<parameter><decl><type><name>aeEventLoop</name> <modifier>*</modifier></type><name>eventLoop</name></decl></parameter>, <parameter><decl><type><name>aeBeforeSleepProc</name> <modifier>*</modifier></type><name>aftersleep</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>aeGetSetSize</name><parameter_list>(<parameter><decl><type><name>aeEventLoop</name> <modifier>*</modifier></type><name>eventLoop</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>int</name></type> <name>aeResizeSetSize</name><parameter_list>(<parameter><decl><type><name>aeEventLoop</name> <modifier>*</modifier></type><name>eventLoop</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>setsize</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>void</name></type> <name>aeSetDontWait</name><parameter_list>(<parameter><decl><type><name>aeEventLoop</name> <modifier>*</modifier></type><name>eventLoop</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>noWait</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
