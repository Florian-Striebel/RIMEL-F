<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats_featurelocations/redis/deps/jemalloc/include/jemalloc/internal/hook.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_INTERNAL_HOOK_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JEMALLOC_INTERNAL_HOOK_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/tsd.h"</cpp:file></cpp:include>












































<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>HOOK_MAX</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>

<enum>enum <name>hook_alloc_e</name> <block>{
<decl><name>hook_alloc_malloc</name></decl>,
<decl><name>hook_alloc_posix_memalign</name></decl>,
<decl><name>hook_alloc_aligned_alloc</name></decl>,
<decl><name>hook_alloc_calloc</name></decl>,
<decl><name>hook_alloc_memalign</name></decl>,
<decl><name>hook_alloc_valloc</name></decl>,
<decl><name>hook_alloc_mallocx</name></decl>,


<decl><name>hook_alloc_realloc</name></decl>,
<decl><name>hook_alloc_rallocx</name></decl>,
}</block>;</enum>




<typedef>typedef <type><name><name>enum</name> <name>hook_alloc_e</name></name></type> <name>hook_alloc_t</name>;</typedef>

<enum>enum <name>hook_dalloc_e</name> <block>{
<decl><name>hook_dalloc_free</name></decl>,
<decl><name>hook_dalloc_dallocx</name></decl>,
<decl><name>hook_dalloc_sdallocx</name></decl>,





<decl><name>hook_dalloc_realloc</name></decl>,
<decl><name>hook_dalloc_rallocx</name></decl>,
}</block>;</enum>
<typedef>typedef <type><name><name>enum</name> <name>hook_dalloc_e</name></name></type> <name>hook_dalloc_t</name>;</typedef>


<enum>enum <name>hook_expand_e</name> <block>{
<decl><name>hook_expand_realloc</name></decl>,
<decl><name>hook_expand_rallocx</name></decl>,
<decl><name>hook_expand_xallocx</name></decl>,
}</block>;</enum>
<typedef>typedef <type><name><name>enum</name> <name>hook_expand_e</name></name></type> <name>hook_expand_t</name>;</typedef>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>hook_alloc</name>)<parameter_list>(
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>extra</name></decl></parameter>, <parameter><decl><type><name>hook_alloc_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>result</name></decl></parameter>, <parameter><decl><type><name>uintptr_t</name></type> <name>result_raw</name></decl></parameter>,
<parameter><decl><type><name>uintptr_t</name></type> <name><name>args_raw</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>hook_dalloc</name>)<parameter_list>(
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>extra</name></decl></parameter>, <parameter><decl><type><name>hook_dalloc_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>address</name></decl></parameter>, <parameter><decl><type><name>uintptr_t</name></type> <name><name>args_raw</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <function_decl><type><name>void</name></type> (<modifier>*</modifier><name>hook_expand</name>)<parameter_list>(
<parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>extra</name></decl></parameter>, <parameter><decl><type><name>hook_expand_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>address</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>old_usize</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>new_usize</name></decl></parameter>, <parameter><decl><type><name>uintptr_t</name></type> <name>result_raw</name></decl></parameter>, <parameter><decl><type><name>uintptr_t</name></type> <name><name>args_raw</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl></typedef>

<typedef>typedef <type><name><name>struct</name> <name>hooks_s</name></name></type> <name>hooks_t</name>;</typedef>
<struct>struct <name>hooks_s</name> <block>{
<decl_stmt><decl><type><name>hook_alloc</name></type> <name>alloc_hook</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>hook_dalloc</name></type> <name>dalloc_hook</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>hook_expand</name></type> <name>expand_hook</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>void</name> <modifier>*</modifier></type><name>extra</name></decl>;</decl_stmt>
}</block>;</struct>




















<typedef>typedef <type><name><name>struct</name> <name>hook_ralloc_args_s</name></name></type> <name>hook_ralloc_args_t</name>;</typedef>
<struct>struct <name>hook_ralloc_args_s</name> <block>{

<decl_stmt><decl><type><name>bool</name></type> <name>is_realloc</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>uintptr_t</name></type> <name><name>args</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl>;</decl_stmt>
}</block>;</struct>





<function_decl><type><name>bool</name></type> <name>hook_boot</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>void</name> <modifier>*</modifier></type><name>hook_install</name><parameter_list>(<parameter><decl><type><name>tsdn_t</name> <modifier>*</modifier></type><name>tsdn</name></decl></parameter>, <parameter><decl><type><name>hooks_t</name> <modifier>*</modifier></type><name>hooks</name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>hook_remove</name><parameter_list>(<parameter><decl><type><name>tsdn_t</name> <modifier>*</modifier></type><name>tsdn</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>opaque</name></decl></parameter>)</parameter_list>;</function_decl>



<function_decl><type><name>void</name></type> <name>hook_invoke_alloc</name><parameter_list>(<parameter><decl><type><name>hook_alloc_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>result</name></decl></parameter>, <parameter><decl><type><name>uintptr_t</name></type> <name>result_raw</name></decl></parameter>,
<parameter><decl><type><name>uintptr_t</name></type> <name><name>args_raw</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>hook_invoke_dalloc</name><parameter_list>(<parameter><decl><type><name>hook_dalloc_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>address</name></decl></parameter>,
<parameter><decl><type><name>uintptr_t</name></type> <name><name>args_raw</name><index>[<expr><literal type="number">3</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<function_decl><type><name>void</name></type> <name>hook_invoke_expand</name><parameter_list>(<parameter><decl><type><name>hook_expand_t</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>void</name> <modifier>*</modifier></type><name>address</name></decl></parameter>, <parameter><decl><type><name>size_t</name></type> <name>old_usize</name></decl></parameter>,
<parameter><decl><type><name>size_t</name></type> <name>new_usize</name></decl></parameter>, <parameter><decl><type><name>uintptr_t</name></type> <name>result_raw</name></decl></parameter>, <parameter><decl><type><name>uintptr_t</name></type> <name><name>args_raw</name><index>[<expr><literal type="number">4</literal></expr>]</index></name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
