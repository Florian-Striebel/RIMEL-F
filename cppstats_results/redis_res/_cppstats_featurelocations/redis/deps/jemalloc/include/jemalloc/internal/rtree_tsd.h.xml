<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats_featurelocations/redis/deps/jemalloc/include/jemalloc/internal/rtree_tsd.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_INTERNAL_RTREE_CTX_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JEMALLOC_INTERNAL_RTREE_CTX_H</name></cpp:macro></cpp:define>


















<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTREE_CTX_LG_NCACHE</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTREE_CTX_NCACHE</name></cpp:macro> <cpp:value>(1 &lt;&lt; RTREE_CTX_LG_NCACHE)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTREE_CTX_NCACHE_L2</name></cpp:macro> <cpp:value>8</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>RTREE_CTX_ZERO_INITIALIZER</name></cpp:macro> <cpp:value>{{{0, 0}}, {{0, 0}}}</cpp:value></cpp:define>


<typedef>typedef <type><name><name>struct</name> <name>rtree_leaf_elm_s</name></name></type> <name>rtree_leaf_elm_t</name>;</typedef>

<typedef>typedef <type><name><name>struct</name> <name>rtree_ctx_cache_elm_s</name></name></type> <name>rtree_ctx_cache_elm_t</name>;</typedef>
<struct>struct <name>rtree_ctx_cache_elm_s</name> <block>{
<decl_stmt><decl><type><name>uintptr_t</name></type> <name>leafkey</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>rtree_leaf_elm_t</name> <modifier>*</modifier></type><name>leaf</name></decl>;</decl_stmt>
}</block>;</struct>

<typedef>typedef <type><name><name>struct</name> <name>rtree_ctx_s</name></name></type> <name>rtree_ctx_t</name>;</typedef>
<struct>struct <name>rtree_ctx_s</name> <block>{

<decl_stmt><decl><type><name>rtree_ctx_cache_elm_t</name></type> <name><name>cache</name><index>[<expr><name>RTREE_CTX_NCACHE</name></expr>]</index></name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>rtree_ctx_cache_elm_t</name></type> <name><name>l2_cache</name><index>[<expr><name>RTREE_CTX_NCACHE_L2</name></expr>]</index></name></decl>;</decl_stmt>
}</block>;</struct>

<function_decl><type><name>void</name></type> <name>rtree_ctx_data_init</name><parameter_list>(<parameter><decl><type><name>rtree_ctx_t</name> <modifier>*</modifier></type><name>ctx</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
