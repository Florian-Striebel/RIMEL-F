<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats_featurelocations/redis/deps/jemalloc/include/jemalloc/internal/base_structs.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_INTERNAL_BASE_STRUCTS_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JEMALLOC_INTERNAL_BASE_STRUCTS_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/jemalloc_internal_types.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/mutex.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"jemalloc/internal/sc.h"</cpp:file></cpp:include>


<struct>struct <name>base_block_s</name> <block>{

<decl_stmt><decl><type><name>size_t</name></type> <name>size</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>base_block_t</name> <modifier>*</modifier></type><name>next</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>extent_t</name></type> <name>extent</name></decl>;</decl_stmt>
}</block>;</struct>

<struct>struct <name>base_s</name> <block>{

<decl_stmt><decl><type><name>unsigned</name></type> <name>ind</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>atomic_p_t</name></type> <name>extent_hooks</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>malloc_mutex_t</name></type> <name>mtx</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>bool</name></type> <name>auto_thp_switched</name></decl>;</decl_stmt>





<decl_stmt><decl><type><name>pszind_t</name></type> <name>pind_last</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>size_t</name></type> <name>extent_sn_next</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>base_block_t</name> <modifier>*</modifier></type><name>blocks</name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>extent_heap_t</name></type> <name><name>avail</name><index>[<expr><name>SC_NSIZES</name></expr>]</index></name></decl>;</decl_stmt>


<decl_stmt><decl><type><name>size_t</name></type> <name>allocated</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>resident</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>size_t</name></type> <name>mapped</name></decl>;</decl_stmt>

<decl_stmt><decl><type><name>size_t</name></type> <name>n_thp</name></decl>;</decl_stmt>
}</block>;</struct>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
