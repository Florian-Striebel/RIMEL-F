<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats_featurelocations/redis/deps/jemalloc/include/jemalloc/internal/prof_types.h"><cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_INTERNAL_PROF_TYPES_H</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>JEMALLOC_INTERNAL_PROF_TYPES_H</name></cpp:macro></cpp:define>

<typedef>typedef <type><name><name>struct</name> <name>prof_bt_s</name></name></type> <name>prof_bt_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>prof_accum_s</name></name></type> <name>prof_accum_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>prof_cnt_s</name></name></type> <name>prof_cnt_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>prof_tctx_s</name></name></type> <name>prof_tctx_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>prof_gctx_s</name></name></type> <name>prof_gctx_t</name>;</typedef>
<typedef>typedef <type><name><name>struct</name> <name>prof_tdata_s</name></name></type> <name>prof_tdata_t</name>;</typedef>


<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>JEMALLOC_PROF</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROF_PREFIX_DEFAULT</name></cpp:macro> <cpp:value>"jeprof"</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROF_PREFIX_DEFAULT</name></cpp:macro> <cpp:value>""</cpp:value></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LG_PROF_SAMPLE_DEFAULT</name></cpp:macro> <cpp:value>19</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>LG_PROF_INTERVAL_DEFAULT</name></cpp:macro> <cpp:value>-1</cpp:value></cpp:define>






<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROF_BT_MAX</name></cpp:macro> <cpp:value>128</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROF_CKH_MINITEMS</name></cpp:macro> <cpp:value>64</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROF_DUMP_BUFSIZE</name></cpp:macro> <cpp:value>65536</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROF_PRINTF_BUFSIZE</name></cpp:macro> <cpp:value>128</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROF_NCTX_LOCKS</name></cpp:macro> <cpp:value>1024</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROF_NTDATA_LOCKS</name></cpp:macro> <cpp:value>256</cpp:value></cpp:define>





<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROF_TDATA_STATE_REINCARNATED</name></cpp:macro> <cpp:value>((prof_tdata_t *)(uintptr_t)1)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROF_TDATA_STATE_PURGATORY</name></cpp:macro> <cpp:value>((prof_tdata_t *)(uintptr_t)2)</cpp:value></cpp:define>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>PROF_TDATA_STATE_MAX</name></cpp:macro> <cpp:value>PROF_TDATA_STATE_PURGATORY</cpp:value></cpp:define>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
