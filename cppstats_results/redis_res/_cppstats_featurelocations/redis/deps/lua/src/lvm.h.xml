<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats_featurelocations/redis/deps/lua/src/lvm.h">





<cpp:if>#<cpp:directive>if</cpp:directive> <expr><operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>lvm_h</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>lvm_h</name></cpp:macro></cpp:define>


<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ldo.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"lobject.h"</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>"ltm.h"</cpp:file></cpp:include>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tostring</name><parameter_list>(<parameter><type><name>L</name></type></parameter>,<parameter><type><name>o</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>((ttype(o) == LUA_TSTRING) || (luaV_tostring(L, o)))</cpp:value></cpp:define>

<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>tonumber</name><parameter_list>(<parameter><type><name>o</name></type></parameter>,<parameter><type><name>n</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(ttype(o) == LUA_TNUMBER || (((o) = luaV_tonumber(o,n)) != NULL))</cpp:value></cpp:define>


<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>equalobj</name><parameter_list>(<parameter><type><name>L</name></type></parameter>,<parameter><type><name>o1</name></type></parameter>,<parameter><type><name>o2</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value>(ttype(o1) == ttype(o2) &amp;&amp; luaV_equalval(L, o1, o2))</cpp:value></cpp:define>



<function_decl><type><name>LUAI_FUNC</name> <name>int</name></type> <name>luaV_lessthan</name> <parameter_list>(<parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>TValue</name> <modifier>*</modifier></type><name>l</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>TValue</name> <modifier>*</modifier></type><name>r</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <name>int</name></type> <name>luaV_equalval</name> <parameter_list>(<parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>TValue</name> <modifier>*</modifier></type><name>t1</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>TValue</name> <modifier>*</modifier></type><name>t2</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <specifier>const</specifier> <name>TValue</name> <modifier>*</modifier></type><name>luaV_tonumber</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>TValue</name> <modifier>*</modifier></type><name>obj</name></decl></parameter>, <parameter><decl><type><name>TValue</name> <modifier>*</modifier></type><name>n</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <name>int</name></type> <name>luaV_tostring</name> <parameter_list>(<parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter>, <parameter><decl><type><name>StkId</name></type> <name>obj</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <name>void</name></type> <name>luaV_gettable</name> <parameter_list>(<parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>TValue</name> <modifier>*</modifier></type><name>t</name></decl></parameter>, <parameter><decl><type><name>TValue</name> <modifier>*</modifier></type><name>key</name></decl></parameter>,
<parameter><decl><type><name>StkId</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <name>void</name></type> <name>luaV_settable</name> <parameter_list>(<parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter>, <parameter><decl><type><specifier>const</specifier> <name>TValue</name> <modifier>*</modifier></type><name>t</name></decl></parameter>, <parameter><decl><type><name>TValue</name> <modifier>*</modifier></type><name>key</name></decl></parameter>,
<parameter><decl><type><name>StkId</name></type> <name>val</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <name>void</name></type> <name>luaV_execute</name> <parameter_list>(<parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>nexeccalls</name></decl></parameter>)</parameter_list>;</function_decl>
<function_decl><type><name>LUAI_FUNC</name> <name>void</name></type> <name>luaV_concat</name> <parameter_list>(<parameter><decl><type><name>lua_State</name> <modifier>*</modifier></type><name>L</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>total</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>last</name></decl></parameter>)</parameter_list>;</function_decl>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
