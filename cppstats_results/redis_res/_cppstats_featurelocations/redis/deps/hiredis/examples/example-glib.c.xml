<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="1.0.0" language="C" filename="/home/user/cppstats/results/redis_res/_cppstats_featurelocations/redis/deps/hiredis/examples/example-glib.c"><cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdlib.h&gt;</cpp:file></cpp:include>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;hiredis.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;async.h&gt;</cpp:file></cpp:include>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;adapters/glib.h&gt;</cpp:file></cpp:include>

<decl_stmt><decl><type><specifier>static</specifier> <name>GMainLoop</name> <modifier>*</modifier></type><name>mainloop</name></decl>;</decl_stmt>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>connect_cb</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>redisAsyncContext</name> <modifier>*</modifier><name>ac</name></type> <name>G_GNUC_UNUSED</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>status</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>REDIS_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>g_printerr</name><argument_list>(<argument><expr><literal type="string">"Failed to connect: %s\n"</literal></expr></argument>, <argument><expr><name><name>ac</name><operator>-&gt;</operator><name>errstr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>g_main_loop_quit</name><argument_list>(<argument><expr><name>mainloop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>g_printerr</name><argument_list>(<argument><expr><literal type="string">"Connected...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>disconnect_cb</name> <parameter_list>(<parameter><decl><type><specifier>const</specifier> <name>redisAsyncContext</name> <modifier>*</modifier><name>ac</name></type> <name>G_GNUC_UNUSED</name></decl></parameter>,
<parameter><decl><type><name>int</name></type> <name>status</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<if_stmt><if>if <condition>(<expr><name>status</name> <operator>!=</operator> <name>REDIS_OK</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>g_error</name><argument_list>(<argument><expr><literal type="string">"Failed to disconnect: %s"</literal></expr></argument>, <argument><expr><name><name>ac</name><operator>-&gt;</operator><name>errstr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if> <else>else <block>{<block_content>
<expr_stmt><expr><call><name>g_printerr</name><argument_list>(<argument><expr><literal type="string">"Disconnected...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>g_main_loop_quit</name><argument_list>(<argument><expr><name>mainloop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></else></if_stmt>
</block_content>}</block></function>

<function><type><specifier>static</specifier> <name>void</name></type>
<name>command_cb</name><parameter_list>(<parameter><decl><type><name>redisAsyncContext</name> <modifier>*</modifier></type><name>ac</name></decl></parameter>,
<parameter><decl><type><name>gpointer</name></type> <name>r</name></decl></parameter>,
<parameter><decl><type><name>gpointer</name> <name>user_data</name></type> <name>G_GNUC_UNUSED</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>redisReply</name> <modifier>*</modifier></type><name>reply</name> <init>= <expr><name>r</name></expr></init></decl>;</decl_stmt>

<if_stmt><if>if <condition>(<expr><name>reply</name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>g_print</name><argument_list>(<argument><expr><literal type="string">"REPLY: %s\n"</literal></expr></argument>, <argument><expr><name><name>reply</name><operator>-&gt;</operator><name>str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><call><name>redisAsyncDisconnect</name><argument_list>(<argument><expr><name>ac</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function>

<function><type><name>gint</name></type>
<name>main</name> <parameter_list>(<parameter><decl><type><name>gint</name> <name>argc</name></type> <name>G_GNUC_UNUSED</name></decl></parameter>,
<parameter><decl><type><name>gchar</name> <modifier>*</modifier><name><name>argv</name><index>[]</index></name></type> <name>G_GNUC_UNUSED</name></decl></parameter>)</parameter_list>
<block>{<block_content>
<decl_stmt><decl><type><name>redisAsyncContext</name> <modifier>*</modifier></type><name>ac</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GMainContext</name> <modifier>*</modifier></type><name>context</name> <init>= <expr><name>NULL</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name>GSource</name> <modifier>*</modifier></type><name>source</name></decl>;</decl_stmt>

<expr_stmt><expr><name>ac</name> <operator>=</operator> <call><name>redisAsyncConnect</name><argument_list>(<argument><expr><literal type="string">"127.0.0.1"</literal></expr></argument>, <argument><expr><literal type="number">6379</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<if_stmt><if>if <condition>(<expr><name><name>ac</name><operator>-&gt;</operator><name>err</name></name></expr>)</condition> <block>{<block_content>
<expr_stmt><expr><call><name>g_printerr</name><argument_list>(<argument><expr><literal type="string">"%s\n"</literal></expr></argument>, <argument><expr><name><name>ac</name><operator>-&gt;</operator><name>errstr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>exit</name><argument_list>(<argument><expr><name>EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></if></if_stmt>

<expr_stmt><expr><name>source</name> <operator>=</operator> <call><name>redis_source_new</name><argument_list>(<argument><expr><name>ac</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><name>mainloop</name> <operator>=</operator> <call><name>g_main_loop_new</name><argument_list>(<argument><expr><name>context</name></expr></argument>, <argument><expr><name>FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>g_source_attach</name><argument_list>(<argument><expr><name>source</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>redisAsyncSetConnectCallback</name><argument_list>(<argument><expr><name>ac</name></expr></argument>, <argument><expr><name>connect_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>redisAsyncSetDisconnectCallback</name><argument_list>(<argument><expr><name>ac</name></expr></argument>, <argument><expr><name>disconnect_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>redisAsyncCommand</name><argument_list>(<argument><expr><name>ac</name></expr></argument>, <argument><expr><name>command_cb</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"SET key 1234"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<expr_stmt><expr><call><name>redisAsyncCommand</name><argument_list>(<argument><expr><name>ac</name></expr></argument>, <argument><expr><name>command_cb</name></expr></argument>, <argument><expr><name>NULL</name></expr></argument>, <argument><expr><literal type="string">"GET key"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<expr_stmt><expr><call><name>g_main_loop_run</name><argument_list>(<argument><expr><name>mainloop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<return>return <expr><name>EXIT_SUCCESS</name></expr>;</return>
</block_content>}</block></function>
</unit>
